
NUCLEO_F411RE/dc_motor_controll_new.elf:     file format elf32-littlearm
architecture: arm, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x080063e1


Disassembly of section .text:

08000000 <g_pfnVectors>:
 8000000:	00 00 02 20 e1 63 00 08 15 64 00 08 15 64 00 08     ... .c...d...d..
 8000010:	15 64 00 08 15 64 00 08 15 64 00 08 00 00 00 00     .d...d...d......
	...
 800002c:	a5 62 00 08 15 64 00 08 00 00 00 00 4b 63 00 08     .b...d......Kc..
 800003c:	ab 63 00 08 15 64 00 08 15 64 00 08 15 64 00 08     .c...d...d...d..
 800004c:	15 64 00 08 15 64 00 08 15 64 00 08 15 64 00 08     .d...d...d...d..
 800005c:	15 64 00 08 15 64 00 08 15 64 00 08 15 64 00 08     .d...d...d...d..
 800006c:	15 64 00 08 15 64 00 08 15 64 00 08 15 64 00 08     .d...d...d...d..
 800007c:	15 64 00 08 15 64 00 08 15 64 00 08 15 64 00 08     .d...d...d...d..
	...
 800009c:	15 64 00 08 15 64 00 08 15 64 00 08 15 64 00 08     .d...d...d...d..
 80000ac:	15 64 00 08 15 64 00 08 15 64 00 08 15 64 00 08     .d...d...d...d..
 80000bc:	15 64 00 08 15 64 00 08 15 64 00 08 15 64 00 08     .d...d...d...d..
 80000cc:	15 64 00 08 15 64 00 08 15 64 00 08 15 64 00 08     .d...d...d...d..
 80000dc:	00 00 00 00 15 64 00 08 15 64 00 08 15 64 00 08     .....d...d...d..
	...
 80000fc:	15 64 00 08 00 00 00 00 15 64 00 08 15 64 00 08     .d.......d...d..
 800010c:	15 64 00 08 00 00 00 00 00 00 00 00 00 00 00 00     .d..............
 800011c:	00 00 00 00 15 64 00 08 15 64 00 08 15 64 00 08     .....d...d...d..
 800012c:	15 64 00 08 15 64 00 08 00 00 00 00 00 00 00 00     .d...d..........
	...
 800014c:	15 64 00 08 15 64 00 08 15 64 00 08 15 64 00 08     .d...d...d...d..
 800015c:	15 64 00 08 15 64 00 08 15 64 00 08 00 00 00 00     .d...d...d......
	...
 8000184:	15 64 00 08 00 00 00 00 00 00 00 00 15 64 00 08     .d...........d..
 8000194:	15 64 00 08                                         .d..

08000198 <__do_global_dtors_aux>:
 8000198:	b510      	push	{r4, lr}
 800019a:	4c05      	ldr	r4, [pc, #20]	; (80001b0 <__do_global_dtors_aux+0x18>)
 800019c:	7823      	ldrb	r3, [r4, #0]
 800019e:	b933      	cbnz	r3, 80001ae <__do_global_dtors_aux+0x16>
 80001a0:	4b04      	ldr	r3, [pc, #16]	; (80001b4 <__do_global_dtors_aux+0x1c>)
 80001a2:	b113      	cbz	r3, 80001aa <__do_global_dtors_aux+0x12>
 80001a4:	4804      	ldr	r0, [pc, #16]	; (80001b8 <__do_global_dtors_aux+0x20>)
 80001a6:	f3af 8000 	nop.w
 80001aa:	2301      	movs	r3, #1
 80001ac:	7023      	strb	r3, [r4, #0]
 80001ae:	bd10      	pop	{r4, pc}
 80001b0:	20000238 	.word	0x20000238
 80001b4:	00000000 	.word	0x00000000
 80001b8:	08008820 	.word	0x08008820

080001bc <frame_dummy>:
 80001bc:	4b0c      	ldr	r3, [pc, #48]	; (80001f0 <frame_dummy+0x34>)
 80001be:	b143      	cbz	r3, 80001d2 <frame_dummy+0x16>
 80001c0:	480c      	ldr	r0, [pc, #48]	; (80001f4 <frame_dummy+0x38>)
 80001c2:	490d      	ldr	r1, [pc, #52]	; (80001f8 <frame_dummy+0x3c>)
 80001c4:	b510      	push	{r4, lr}
 80001c6:	f3af 8000 	nop.w
 80001ca:	480c      	ldr	r0, [pc, #48]	; (80001fc <frame_dummy+0x40>)
 80001cc:	6803      	ldr	r3, [r0, #0]
 80001ce:	b923      	cbnz	r3, 80001da <frame_dummy+0x1e>
 80001d0:	bd10      	pop	{r4, pc}
 80001d2:	480a      	ldr	r0, [pc, #40]	; (80001fc <frame_dummy+0x40>)
 80001d4:	6803      	ldr	r3, [r0, #0]
 80001d6:	b933      	cbnz	r3, 80001e6 <frame_dummy+0x2a>
 80001d8:	4770      	bx	lr
 80001da:	4b09      	ldr	r3, [pc, #36]	; (8000200 <frame_dummy+0x44>)
 80001dc:	2b00      	cmp	r3, #0
 80001de:	d0f7      	beq.n	80001d0 <frame_dummy+0x14>
 80001e0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80001e4:	4718      	bx	r3
 80001e6:	4b06      	ldr	r3, [pc, #24]	; (8000200 <frame_dummy+0x44>)
 80001e8:	2b00      	cmp	r3, #0
 80001ea:	d0f5      	beq.n	80001d8 <frame_dummy+0x1c>
 80001ec:	4718      	bx	r3
 80001ee:	bf00      	nop
 80001f0:	00000000 	.word	0x00000000
 80001f4:	08008820 	.word	0x08008820
 80001f8:	2000023c 	.word	0x2000023c
 80001fc:	20000234 	.word	0x20000234
 8000200:	00000000 	.word	0x00000000

08000204 <std_msgs::Time::serialize(unsigned char*) const>:
 8000204:	6843      	ldr	r3, [r0, #4]
 8000206:	700b      	strb	r3, [r1, #0]
 8000208:	6843      	ldr	r3, [r0, #4]
 800020a:	0a1b      	lsrs	r3, r3, #8
 800020c:	704b      	strb	r3, [r1, #1]
 800020e:	88c3      	ldrh	r3, [r0, #6]
 8000210:	708b      	strb	r3, [r1, #2]
 8000212:	79c3      	ldrb	r3, [r0, #7]
 8000214:	70cb      	strb	r3, [r1, #3]
 8000216:	6883      	ldr	r3, [r0, #8]
 8000218:	710b      	strb	r3, [r1, #4]
 800021a:	6883      	ldr	r3, [r0, #8]
 800021c:	0a1b      	lsrs	r3, r3, #8
 800021e:	714b      	strb	r3, [r1, #5]
 8000220:	8943      	ldrh	r3, [r0, #10]
 8000222:	718b      	strb	r3, [r1, #6]
 8000224:	7ac3      	ldrb	r3, [r0, #11]
 8000226:	71cb      	strb	r3, [r1, #7]
 8000228:	2008      	movs	r0, #8
 800022a:	4770      	bx	lr

0800022c <std_msgs::Time::deserialize(unsigned char*)>:
 800022c:	780b      	ldrb	r3, [r1, #0]
 800022e:	6043      	str	r3, [r0, #4]
 8000230:	784a      	ldrb	r2, [r1, #1]
 8000232:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8000236:	6043      	str	r3, [r0, #4]
 8000238:	788a      	ldrb	r2, [r1, #2]
 800023a:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800023e:	6043      	str	r3, [r0, #4]
 8000240:	78ca      	ldrb	r2, [r1, #3]
 8000242:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 8000246:	6043      	str	r3, [r0, #4]
 8000248:	790b      	ldrb	r3, [r1, #4]
 800024a:	6083      	str	r3, [r0, #8]
 800024c:	794a      	ldrb	r2, [r1, #5]
 800024e:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8000252:	6083      	str	r3, [r0, #8]
 8000254:	798a      	ldrb	r2, [r1, #6]
 8000256:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800025a:	6083      	str	r3, [r0, #8]
 800025c:	79ca      	ldrb	r2, [r1, #7]
 800025e:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 8000262:	6083      	str	r3, [r0, #8]
 8000264:	2008      	movs	r0, #8
 8000266:	4770      	bx	lr

08000268 <std_msgs::Time::getType()>:
 8000268:	4800      	ldr	r0, [pc, #0]	; (800026c <std_msgs::Time::getType()+0x4>)
 800026a:	4770      	bx	lr
 800026c:	080080b0 	.word	0x080080b0

08000270 <std_msgs::Time::getMD5()>:
 8000270:	4800      	ldr	r0, [pc, #0]	; (8000274 <std_msgs::Time::getMD5()+0x4>)
 8000272:	4770      	bx	lr
 8000274:	0800808f 	.word	0x0800808f

08000278 <rosserial_msgs::TopicInfo::getType()>:
 8000278:	4800      	ldr	r0, [pc, #0]	; (800027c <rosserial_msgs::TopicInfo::getType()+0x4>)
 800027a:	4770      	bx	lr
 800027c:	08007f6c 	.word	0x08007f6c

08000280 <rosserial_msgs::TopicInfo::getMD5()>:
 8000280:	4800      	ldr	r0, [pc, #0]	; (8000284 <rosserial_msgs::TopicInfo::getMD5()+0x4>)
 8000282:	4770      	bx	lr
 8000284:	08007f4b 	.word	0x08007f4b

08000288 <rosserial_msgs::Log::getType()>:
 8000288:	4800      	ldr	r0, [pc, #0]	; (800028c <rosserial_msgs::Log::getType()+0x4>)
 800028a:	4770      	bx	lr
 800028c:	08007f38 	.word	0x08007f38

08000290 <rosserial_msgs::Log::getMD5()>:
 8000290:	4800      	ldr	r0, [pc, #0]	; (8000294 <rosserial_msgs::Log::getMD5()+0x4>)
 8000292:	4770      	bx	lr
 8000294:	08007f17 	.word	0x08007f17

08000298 <rosserial_msgs::RequestParamResponse::getType()>:
 8000298:	4800      	ldr	r0, [pc, #0]	; (800029c <rosserial_msgs::RequestParamResponse::getType()+0x4>)
 800029a:	4770      	bx	lr
 800029c:	08007f85 	.word	0x08007f85

080002a0 <rosserial_msgs::RequestParamResponse::getMD5()>:
 80002a0:	4800      	ldr	r0, [pc, #0]	; (80002a4 <rosserial_msgs::RequestParamResponse::getMD5()+0x4>)
 80002a2:	4770      	bx	lr
 80002a4:	08007ef6 	.word	0x08007ef6

080002a8 <std_msgs::Empty::serialize(unsigned char*) const>:
 80002a8:	2000      	movs	r0, #0
 80002aa:	4770      	bx	lr

080002ac <std_msgs::Empty::deserialize(unsigned char*)>:
 80002ac:	2000      	movs	r0, #0
 80002ae:	4770      	bx	lr

080002b0 <std_msgs::Empty::getType()>:
 80002b0:	4800      	ldr	r0, [pc, #0]	; (80002b4 <std_msgs::Empty::getType()+0x4>)
 80002b2:	4770      	bx	lr
 80002b4:	080080df 	.word	0x080080df

080002b8 <std_msgs::Empty::getMD5()>:
 80002b8:	4800      	ldr	r0, [pc, #0]	; (80002bc <std_msgs::Empty::getMD5()+0x4>)
 80002ba:	4770      	bx	lr
 80002bc:	080080be 	.word	0x080080be

080002c0 <std_msgs::Float32::serialize(unsigned char*) const>:
 80002c0:	6843      	ldr	r3, [r0, #4]
 80002c2:	700b      	strb	r3, [r1, #0]
 80002c4:	0a1a      	lsrs	r2, r3, #8
 80002c6:	704a      	strb	r2, [r1, #1]
 80002c8:	0c1a      	lsrs	r2, r3, #16
 80002ca:	0e1b      	lsrs	r3, r3, #24
 80002cc:	708a      	strb	r2, [r1, #2]
 80002ce:	70cb      	strb	r3, [r1, #3]
 80002d0:	2004      	movs	r0, #4
 80002d2:	4770      	bx	lr

080002d4 <std_msgs::Float32::deserialize(unsigned char*)>:
 80002d4:	680b      	ldr	r3, [r1, #0]
 80002d6:	6043      	str	r3, [r0, #4]
 80002d8:	2004      	movs	r0, #4
 80002da:	4770      	bx	lr

080002dc <std_msgs::Float32::getType()>:
 80002dc:	4800      	ldr	r0, [pc, #0]	; (80002e0 <std_msgs::Float32::getType()+0x4>)
 80002de:	4770      	bx	lr
 80002e0:	0800810f 	.word	0x0800810f

080002e4 <std_msgs::Float32::getMD5()>:
 80002e4:	4800      	ldr	r0, [pc, #0]	; (80002e8 <std_msgs::Float32::getMD5()+0x4>)
 80002e6:	4770      	bx	lr
 80002e8:	080080ee 	.word	0x080080ee

080002ec <std_msgs::MultiArrayDimension::getType()>:
 80002ec:	4800      	ldr	r0, [pc, #0]	; (80002f0 <std_msgs::MultiArrayDimension::getType()+0x4>)
 80002ee:	4770      	bx	lr
 80002f0:	08008072 	.word	0x08008072

080002f4 <std_msgs::MultiArrayDimension::getMD5()>:
 80002f4:	4800      	ldr	r0, [pc, #0]	; (80002f8 <std_msgs::MultiArrayDimension::getMD5()+0x4>)
 80002f6:	4770      	bx	lr
 80002f8:	08008051 	.word	0x08008051

080002fc <std_msgs::MultiArrayLayout::serialize(unsigned char*) const>:
 80002fc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80002fe:	6843      	ldr	r3, [r0, #4]
 8000300:	700b      	strb	r3, [r1, #0]
 8000302:	6843      	ldr	r3, [r0, #4]
 8000304:	0a1b      	lsrs	r3, r3, #8
 8000306:	704b      	strb	r3, [r1, #1]
 8000308:	88c3      	ldrh	r3, [r0, #6]
 800030a:	708b      	strb	r3, [r1, #2]
 800030c:	79c3      	ldrb	r3, [r0, #7]
 800030e:	70cb      	strb	r3, [r1, #3]
 8000310:	4604      	mov	r4, r0
 8000312:	460d      	mov	r5, r1
 8000314:	2700      	movs	r7, #0
 8000316:	2604      	movs	r6, #4
 8000318:	6863      	ldr	r3, [r4, #4]
 800031a:	429f      	cmp	r7, r3
 800031c:	eb05 0106 	add.w	r1, r5, r6
 8000320:	d208      	bcs.n	8000334 <std_msgs::MultiArrayLayout::serialize(unsigned char*) const+0x38>
 8000322:	013b      	lsls	r3, r7, #4
 8000324:	69a0      	ldr	r0, [r4, #24]
 8000326:	58c2      	ldr	r2, [r0, r3]
 8000328:	4418      	add	r0, r3
 800032a:	6812      	ldr	r2, [r2, #0]
 800032c:	4790      	blx	r2
 800032e:	3701      	adds	r7, #1
 8000330:	4406      	add	r6, r0
 8000332:	e7f1      	b.n	8000318 <std_msgs::MultiArrayLayout::serialize(unsigned char*) const+0x1c>
 8000334:	69e3      	ldr	r3, [r4, #28]
 8000336:	55ab      	strb	r3, [r5, r6]
 8000338:	69e3      	ldr	r3, [r4, #28]
 800033a:	0a1b      	lsrs	r3, r3, #8
 800033c:	704b      	strb	r3, [r1, #1]
 800033e:	8be3      	ldrh	r3, [r4, #30]
 8000340:	708b      	strb	r3, [r1, #2]
 8000342:	7fe3      	ldrb	r3, [r4, #31]
 8000344:	70cb      	strb	r3, [r1, #3]
 8000346:	1d30      	adds	r0, r6, #4
 8000348:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0800034c <std_msgs::MultiArrayLayout::getType()>:
 800034c:	4800      	ldr	r0, [pc, #0]	; (8000350 <std_msgs::MultiArrayLayout::getType()+0x4>)
 800034e:	4770      	bx	lr
 8000350:	08007ffb 	.word	0x08007ffb

08000354 <std_msgs::MultiArrayLayout::getMD5()>:
 8000354:	4800      	ldr	r0, [pc, #0]	; (8000358 <std_msgs::MultiArrayLayout::getMD5()+0x4>)
 8000356:	4770      	bx	lr
 8000358:	08007fda 	.word	0x08007fda

0800035c <std_msgs::Float32MultiArray::serialize(unsigned char*) const>:
 800035c:	b538      	push	{r3, r4, r5, lr}
 800035e:	4604      	mov	r4, r0
 8000360:	3004      	adds	r0, #4
 8000362:	460d      	mov	r5, r1
 8000364:	f7ff ffca 	bl	80002fc <std_msgs::MultiArrayLayout::serialize(unsigned char*) const>
 8000368:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800036a:	542b      	strb	r3, [r5, r0]
 800036c:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800036e:	182b      	adds	r3, r5, r0
 8000370:	0a12      	lsrs	r2, r2, #8
 8000372:	705a      	strb	r2, [r3, #1]
 8000374:	8ce2      	ldrh	r2, [r4, #38]	; 0x26
 8000376:	709a      	strb	r2, [r3, #2]
 8000378:	f894 2027 	ldrb.w	r2, [r4, #39]	; 0x27
 800037c:	70da      	strb	r2, [r3, #3]
 800037e:	3004      	adds	r0, #4
 8000380:	182b      	adds	r3, r5, r0
 8000382:	2100      	movs	r1, #0
 8000384:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8000386:	4291      	cmp	r1, r2
 8000388:	eba3 0005 	sub.w	r0, r3, r5
 800038c:	f103 0304 	add.w	r3, r3, #4
 8000390:	d20f      	bcs.n	80003b2 <std_msgs::Float32MultiArray::serialize(unsigned char*) const+0x56>
 8000392:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8000394:	f852 2021 	ldr.w	r2, [r2, r1, lsl #2]
 8000398:	f803 2c04 	strb.w	r2, [r3, #-4]
 800039c:	0a10      	lsrs	r0, r2, #8
 800039e:	f803 0c03 	strb.w	r0, [r3, #-3]
 80003a2:	0c10      	lsrs	r0, r2, #16
 80003a4:	0e12      	lsrs	r2, r2, #24
 80003a6:	f803 0c02 	strb.w	r0, [r3, #-2]
 80003aa:	f803 2c01 	strb.w	r2, [r3, #-1]
 80003ae:	3101      	adds	r1, #1
 80003b0:	e7e8      	b.n	8000384 <std_msgs::Float32MultiArray::serialize(unsigned char*) const+0x28>
 80003b2:	bd38      	pop	{r3, r4, r5, pc}

080003b4 <std_msgs::Float32MultiArray::getType()>:
 80003b4:	4800      	ldr	r0, [pc, #0]	; (80003b8 <std_msgs::Float32MultiArray::getType()+0x4>)
 80003b6:	4770      	bx	lr
 80003b8:	08008036 	.word	0x08008036

080003bc <std_msgs::Float32MultiArray::getMD5()>:
 80003bc:	4800      	ldr	r0, [pc, #0]	; (80003c0 <std_msgs::Float32MultiArray::getMD5()+0x4>)
 80003be:	4770      	bx	lr
 80003c0:	08008015 	.word	0x08008015

080003c4 <geometry_msgs::Vector3::serialize(unsigned char*) const>:
 80003c4:	6882      	ldr	r2, [r0, #8]
 80003c6:	68c3      	ldr	r3, [r0, #12]
 80003c8:	700a      	strb	r2, [r1, #0]
 80003ca:	b510      	push	{r4, lr}
 80003cc:	0a14      	lsrs	r4, r2, #8
 80003ce:	704c      	strb	r4, [r1, #1]
 80003d0:	0c14      	lsrs	r4, r2, #16
 80003d2:	0e12      	lsrs	r2, r2, #24
 80003d4:	70ca      	strb	r2, [r1, #3]
 80003d6:	0a1a      	lsrs	r2, r3, #8
 80003d8:	710b      	strb	r3, [r1, #4]
 80003da:	714a      	strb	r2, [r1, #5]
 80003dc:	0c1a      	lsrs	r2, r3, #16
 80003de:	0e1b      	lsrs	r3, r3, #24
 80003e0:	708c      	strb	r4, [r1, #2]
 80003e2:	718a      	strb	r2, [r1, #6]
 80003e4:	71cb      	strb	r3, [r1, #7]
 80003e6:	6902      	ldr	r2, [r0, #16]
 80003e8:	6943      	ldr	r3, [r0, #20]
 80003ea:	720a      	strb	r2, [r1, #8]
 80003ec:	0a14      	lsrs	r4, r2, #8
 80003ee:	724c      	strb	r4, [r1, #9]
 80003f0:	0c14      	lsrs	r4, r2, #16
 80003f2:	0e12      	lsrs	r2, r2, #24
 80003f4:	72ca      	strb	r2, [r1, #11]
 80003f6:	0a1a      	lsrs	r2, r3, #8
 80003f8:	730b      	strb	r3, [r1, #12]
 80003fa:	734a      	strb	r2, [r1, #13]
 80003fc:	0c1a      	lsrs	r2, r3, #16
 80003fe:	0e1b      	lsrs	r3, r3, #24
 8000400:	728c      	strb	r4, [r1, #10]
 8000402:	738a      	strb	r2, [r1, #14]
 8000404:	73cb      	strb	r3, [r1, #15]
 8000406:	6982      	ldr	r2, [r0, #24]
 8000408:	69c3      	ldr	r3, [r0, #28]
 800040a:	740a      	strb	r2, [r1, #16]
 800040c:	0a10      	lsrs	r0, r2, #8
 800040e:	7448      	strb	r0, [r1, #17]
 8000410:	0c10      	lsrs	r0, r2, #16
 8000412:	0e12      	lsrs	r2, r2, #24
 8000414:	74ca      	strb	r2, [r1, #19]
 8000416:	0a1a      	lsrs	r2, r3, #8
 8000418:	750b      	strb	r3, [r1, #20]
 800041a:	754a      	strb	r2, [r1, #21]
 800041c:	0c1a      	lsrs	r2, r3, #16
 800041e:	0e1b      	lsrs	r3, r3, #24
 8000420:	7488      	strb	r0, [r1, #18]
 8000422:	758a      	strb	r2, [r1, #22]
 8000424:	75cb      	strb	r3, [r1, #23]
 8000426:	2018      	movs	r0, #24
 8000428:	bd10      	pop	{r4, pc}

0800042a <geometry_msgs::Vector3::deserialize(unsigned char*)>:
 800042a:	680a      	ldr	r2, [r1, #0]
 800042c:	684b      	ldr	r3, [r1, #4]
 800042e:	e9c0 2302 	strd	r2, r3, [r0, #8]
 8000432:	688a      	ldr	r2, [r1, #8]
 8000434:	68cb      	ldr	r3, [r1, #12]
 8000436:	e9c0 2304 	strd	r2, r3, [r0, #16]
 800043a:	690a      	ldr	r2, [r1, #16]
 800043c:	694b      	ldr	r3, [r1, #20]
 800043e:	e9c0 2306 	strd	r2, r3, [r0, #24]
 8000442:	2018      	movs	r0, #24
 8000444:	4770      	bx	lr
	...

08000448 <geometry_msgs::Vector3::getType()>:
 8000448:	4800      	ldr	r0, [pc, #0]	; (800044c <geometry_msgs::Vector3::getType()+0x4>)
 800044a:	4770      	bx	lr
 800044c:	08007ee0 	.word	0x08007ee0

08000450 <geometry_msgs::Vector3::getMD5()>:
 8000450:	4800      	ldr	r0, [pc, #0]	; (8000454 <geometry_msgs::Vector3::getMD5()+0x4>)
 8000452:	4770      	bx	lr
 8000454:	08007ebf 	.word	0x08007ebf

08000458 <void mbed::Callback<void ()>::function_call<void (*)()>(void const*)>:
 8000458:	6803      	ldr	r3, [r0, #0]
 800045a:	4718      	bx	r3

0800045c <void mbed::Callback<void ()>::function_move<void (*)()>(void*, void const*)>:
 800045c:	b108      	cbz	r0, 8000462 <void mbed::Callback<void ()>::function_move<void (*)()>(void*, void const*)+0x6>
 800045e:	680b      	ldr	r3, [r1, #0]
 8000460:	6003      	str	r3, [r0, #0]
 8000462:	4770      	bx	lr

08000464 <void mbed::Callback<void ()>::function_dtor<void (*)()>(void*)>:
 8000464:	4770      	bx	lr

08000466 <ros::Subscriber<geometry_msgs::Vector3, void>::callback(unsigned char*)>:
 8000466:	b570      	push	{r4, r5, r6, lr}
 8000468:	4605      	mov	r5, r0
 800046a:	f100 0410 	add.w	r4, r0, #16
 800046e:	4620      	mov	r0, r4
 8000470:	f7ff ffdb 	bl	800042a <geometry_msgs::Vector3::deserialize(unsigned char*)>
 8000474:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8000476:	4620      	mov	r0, r4
 8000478:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800047c:	4718      	bx	r3

0800047e <ros::Subscriber<geometry_msgs::Vector3, void>::getEndpointType()>:
 800047e:	6b40      	ldr	r0, [r0, #52]	; 0x34
 8000480:	4770      	bx	lr
	...

08000484 <ros::Subscriber<geometry_msgs::Vector3, void>::getMsgType()>:
 8000484:	4800      	ldr	r0, [pc, #0]	; (8000488 <ros::Subscriber<geometry_msgs::Vector3, void>::getMsgType()+0x4>)
 8000486:	4770      	bx	lr
 8000488:	08007ee0 	.word	0x08007ee0

0800048c <ros::Subscriber<geometry_msgs::Vector3, void>::getMsgMD5()>:
 800048c:	4800      	ldr	r0, [pc, #0]	; (8000490 <ros::Subscriber<geometry_msgs::Vector3, void>::getMsgMD5()+0x4>)
 800048e:	4770      	bx	lr
 8000490:	08007ebf 	.word	0x08007ebf

08000494 <ros::Subscriber<std_msgs::Float32, void>::callback(unsigned char*)>:
 8000494:	b570      	push	{r4, r5, r6, lr}
 8000496:	4605      	mov	r5, r0
 8000498:	f100 040c 	add.w	r4, r0, #12
 800049c:	4620      	mov	r0, r4
 800049e:	f7ff ff19 	bl	80002d4 <std_msgs::Float32::deserialize(unsigned char*)>
 80004a2:	696b      	ldr	r3, [r5, #20]
 80004a4:	4620      	mov	r0, r4
 80004a6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80004aa:	4718      	bx	r3

080004ac <ros::Subscriber<std_msgs::Float32, void>::getEndpointType()>:
 80004ac:	6980      	ldr	r0, [r0, #24]
 80004ae:	4770      	bx	lr

080004b0 <ros::Subscriber<std_msgs::Float32, void>::getMsgType()>:
 80004b0:	4800      	ldr	r0, [pc, #0]	; (80004b4 <ros::Subscriber<std_msgs::Float32, void>::getMsgType()+0x4>)
 80004b2:	4770      	bx	lr
 80004b4:	0800810f 	.word	0x0800810f

080004b8 <ros::Subscriber<std_msgs::Float32, void>::getMsgMD5()>:
 80004b8:	4800      	ldr	r0, [pc, #0]	; (80004bc <ros::Subscriber<std_msgs::Float32, void>::getMsgMD5()+0x4>)
 80004ba:	4770      	bx	lr
 80004bc:	080080ee 	.word	0x080080ee

080004c0 <ros::Subscriber<std_msgs::Empty, void>::callback(unsigned char*)>:
 80004c0:	6903      	ldr	r3, [r0, #16]
 80004c2:	300c      	adds	r0, #12
 80004c4:	4718      	bx	r3

080004c6 <ros::Subscriber<std_msgs::Empty, void>::getEndpointType()>:
 80004c6:	6940      	ldr	r0, [r0, #20]
 80004c8:	4770      	bx	lr
	...

080004cc <ros::Subscriber<std_msgs::Empty, void>::getMsgType()>:
 80004cc:	4800      	ldr	r0, [pc, #0]	; (80004d0 <ros::Subscriber<std_msgs::Empty, void>::getMsgType()+0x4>)
 80004ce:	4770      	bx	lr
 80004d0:	080080df 	.word	0x080080df

080004d4 <ros::Subscriber<std_msgs::Empty, void>::getMsgMD5()>:
 80004d4:	4800      	ldr	r0, [pc, #0]	; (80004d8 <ros::Subscriber<std_msgs::Empty, void>::getMsgMD5()+0x4>)
 80004d6:	4770      	bx	lr
 80004d8:	080080be 	.word	0x080080be

080004dc <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::connected()>:
 80004dc:	f890 05e8 	ldrb.w	r0, [r0, #1512]	; 0x5e8
 80004e0:	4770      	bx	lr
	...

080004e4 <stopMotor1(std_msgs::Empty const&)>:
 80004e4:	4b02      	ldr	r3, [pc, #8]	; (80004f0 <stopMotor1(std_msgs::Empty const&)+0xc>)
 80004e6:	4803      	ldr	r0, [pc, #12]	; (80004f4 <stopMotor1(std_msgs::Empty const&)+0x10>)
 80004e8:	2200      	movs	r2, #0
 80004ea:	601a      	str	r2, [r3, #0]
 80004ec:	f001 b93e 	b.w	800176c <DcServo::stop()>
 80004f0:	20000454 	.word	0x20000454
 80004f4:	20000284 	.word	0x20000284

080004f8 <stopMotor2(std_msgs::Empty const&)>:
 80004f8:	4b02      	ldr	r3, [pc, #8]	; (8000504 <stopMotor2(std_msgs::Empty const&)+0xc>)
 80004fa:	4803      	ldr	r0, [pc, #12]	; (8000508 <stopMotor2(std_msgs::Empty const&)+0x10>)
 80004fc:	2200      	movs	r2, #0
 80004fe:	601a      	str	r2, [r3, #0]
 8000500:	f001 b934 	b.w	800176c <DcServo::stop()>
 8000504:	20000628 	.word	0x20000628
 8000508:	20000458 	.word	0x20000458

0800050c <stopMotor3(std_msgs::Empty const&)>:
 800050c:	4b02      	ldr	r3, [pc, #8]	; (8000518 <stopMotor3(std_msgs::Empty const&)+0xc>)
 800050e:	4803      	ldr	r0, [pc, #12]	; (800051c <stopMotor3(std_msgs::Empty const&)+0x10>)
 8000510:	2200      	movs	r2, #0
 8000512:	601a      	str	r2, [r3, #0]
 8000514:	f001 b92a 	b.w	800176c <DcServo::stop()>
 8000518:	200007fc 	.word	0x200007fc
 800051c:	2000062c 	.word	0x2000062c

08000520 <setAngleMotor1(std_msgs::Float32 const&)>:
 8000520:	4b02      	ldr	r3, [pc, #8]	; (800052c <setAngleMotor1(std_msgs::Float32 const&)+0xc>)
 8000522:	6841      	ldr	r1, [r0, #4]
 8000524:	4802      	ldr	r0, [pc, #8]	; (8000530 <setAngleMotor1(std_msgs::Float32 const&)+0x10>)
 8000526:	6019      	str	r1, [r3, #0]
 8000528:	f001 b9f0 	b.w	800190c <DcServo::setAngle(float)>
 800052c:	20000454 	.word	0x20000454
 8000530:	20000284 	.word	0x20000284

08000534 <setAngleMotor2(std_msgs::Float32 const&)>:
 8000534:	4b02      	ldr	r3, [pc, #8]	; (8000540 <setAngleMotor2(std_msgs::Float32 const&)+0xc>)
 8000536:	6841      	ldr	r1, [r0, #4]
 8000538:	4802      	ldr	r0, [pc, #8]	; (8000544 <setAngleMotor2(std_msgs::Float32 const&)+0x10>)
 800053a:	6019      	str	r1, [r3, #0]
 800053c:	f001 b9e6 	b.w	800190c <DcServo::setAngle(float)>
 8000540:	20000628 	.word	0x20000628
 8000544:	20000458 	.word	0x20000458

08000548 <setAngleMotor3(std_msgs::Float32 const&)>:
 8000548:	4b02      	ldr	r3, [pc, #8]	; (8000554 <setAngleMotor3(std_msgs::Float32 const&)+0xc>)
 800054a:	6841      	ldr	r1, [r0, #4]
 800054c:	4802      	ldr	r0, [pc, #8]	; (8000558 <setAngleMotor3(std_msgs::Float32 const&)+0x10>)
 800054e:	6019      	str	r1, [r3, #0]
 8000550:	f001 b9dc 	b.w	800190c <DcServo::setAngle(float)>
 8000554:	200007fc 	.word	0x200007fc
 8000558:	2000062c 	.word	0x2000062c

0800055c <setMotor1PID(geometry_msgs::Vector3 const&)>:
 800055c:	b570      	push	{r4, r5, r6, lr}
 800055e:	4604      	mov	r4, r0
 8000560:	e9d0 0106 	ldrd	r0, r1, [r0, #24]
 8000564:	f006 fb22 	bl	8006bac <__aeabi_d2f>
 8000568:	4606      	mov	r6, r0
 800056a:	e9d4 0104 	ldrd	r0, r1, [r4, #16]
 800056e:	f006 fb1d 	bl	8006bac <__aeabi_d2f>
 8000572:	4605      	mov	r5, r0
 8000574:	e9d4 0102 	ldrd	r0, r1, [r4, #8]
 8000578:	f006 fb18 	bl	8006bac <__aeabi_d2f>
 800057c:	4633      	mov	r3, r6
 800057e:	462a      	mov	r2, r5
 8000580:	4601      	mov	r1, r0
 8000582:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8000586:	4801      	ldr	r0, [pc, #4]	; (800058c <setMotor1PID(geometry_msgs::Vector3 const&)+0x30>)
 8000588:	f001 b91b 	b.w	80017c2 <DcServo::setPid(float, float, float)>
 800058c:	20000284 	.word	0x20000284

08000590 <setMotor2PID(geometry_msgs::Vector3 const&)>:
 8000590:	b570      	push	{r4, r5, r6, lr}
 8000592:	4604      	mov	r4, r0
 8000594:	e9d0 0106 	ldrd	r0, r1, [r0, #24]
 8000598:	f006 fb08 	bl	8006bac <__aeabi_d2f>
 800059c:	4606      	mov	r6, r0
 800059e:	e9d4 0104 	ldrd	r0, r1, [r4, #16]
 80005a2:	f006 fb03 	bl	8006bac <__aeabi_d2f>
 80005a6:	4605      	mov	r5, r0
 80005a8:	e9d4 0102 	ldrd	r0, r1, [r4, #8]
 80005ac:	f006 fafe 	bl	8006bac <__aeabi_d2f>
 80005b0:	4633      	mov	r3, r6
 80005b2:	462a      	mov	r2, r5
 80005b4:	4601      	mov	r1, r0
 80005b6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80005ba:	4801      	ldr	r0, [pc, #4]	; (80005c0 <setMotor2PID(geometry_msgs::Vector3 const&)+0x30>)
 80005bc:	f001 b901 	b.w	80017c2 <DcServo::setPid(float, float, float)>
 80005c0:	20000458 	.word	0x20000458

080005c4 <setMotor3PID(geometry_msgs::Vector3 const&)>:
 80005c4:	b570      	push	{r4, r5, r6, lr}
 80005c6:	4604      	mov	r4, r0
 80005c8:	e9d0 0106 	ldrd	r0, r1, [r0, #24]
 80005cc:	f006 faee 	bl	8006bac <__aeabi_d2f>
 80005d0:	4606      	mov	r6, r0
 80005d2:	e9d4 0104 	ldrd	r0, r1, [r4, #16]
 80005d6:	f006 fae9 	bl	8006bac <__aeabi_d2f>
 80005da:	4605      	mov	r5, r0
 80005dc:	e9d4 0102 	ldrd	r0, r1, [r4, #8]
 80005e0:	f006 fae4 	bl	8006bac <__aeabi_d2f>
 80005e4:	4633      	mov	r3, r6
 80005e6:	462a      	mov	r2, r5
 80005e8:	4601      	mov	r1, r0
 80005ea:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80005ee:	4801      	ldr	r0, [pc, #4]	; (80005f4 <setMotor3PID(geometry_msgs::Vector3 const&)+0x30>)
 80005f0:	f001 b8e7 	b.w	80017c2 <DcServo::setPid(float, float, float)>
 80005f4:	2000062c 	.word	0x2000062c

080005f8 <getMotorInfo()>:
 80005f8:	b570      	push	{r4, r5, r6, lr}
 80005fa:	4c23      	ldr	r4, [pc, #140]	; (8000688 <getMotorInfo()+0x90>)
 80005fc:	4b23      	ldr	r3, [pc, #140]	; (800068c <getMotorInfo()+0x94>)
 80005fe:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
 8000600:	681b      	ldr	r3, [r3, #0]
 8000602:	602b      	str	r3, [r5, #0]
 8000604:	4822      	ldr	r0, [pc, #136]	; (8000690 <getMotorInfo()+0x98>)
 8000606:	f001 f83e 	bl	8001686 <DcServo::getAngle()>
 800060a:	6068      	str	r0, [r5, #4]
 800060c:	4820      	ldr	r0, [pc, #128]	; (8000690 <getMotorInfo()+0x98>)
 800060e:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
 8000610:	f001 f836 	bl	8001680 <DcServo::getPWM()>
 8000614:	4b1f      	ldr	r3, [pc, #124]	; (8000694 <getMotorInfo()+0x9c>)
 8000616:	60a8      	str	r0, [r5, #8]
 8000618:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
 800061a:	681b      	ldr	r3, [r3, #0]
 800061c:	60eb      	str	r3, [r5, #12]
 800061e:	481e      	ldr	r0, [pc, #120]	; (8000698 <getMotorInfo()+0xa0>)
 8000620:	f001 f831 	bl	8001686 <DcServo::getAngle()>
 8000624:	6128      	str	r0, [r5, #16]
 8000626:	481c      	ldr	r0, [pc, #112]	; (8000698 <getMotorInfo()+0xa0>)
 8000628:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
 800062a:	f001 f829 	bl	8001680 <DcServo::getPWM()>
 800062e:	4b1b      	ldr	r3, [pc, #108]	; (800069c <getMotorInfo()+0xa4>)
 8000630:	6168      	str	r0, [r5, #20]
 8000632:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
 8000634:	681b      	ldr	r3, [r3, #0]
 8000636:	61ab      	str	r3, [r5, #24]
 8000638:	4819      	ldr	r0, [pc, #100]	; (80006a0 <getMotorInfo()+0xa8>)
 800063a:	f001 f824 	bl	8001686 <DcServo::getAngle()>
 800063e:	61e8      	str	r0, [r5, #28]
 8000640:	4817      	ldr	r0, [pc, #92]	; (80006a0 <getMotorInfo()+0xa8>)
 8000642:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
 8000644:	f001 f81c 	bl	8001680 <DcServo::getPWM()>
 8000648:	6228      	str	r0, [r5, #32]
 800064a:	4816      	ldr	r0, [pc, #88]	; (80006a4 <getMotorInfo()+0xac>)
 800064c:	f005 fa40 	bl	8005ad0 <mbed::Timer::read()>
 8000650:	ee07 0a10 	vmov	s14, r0
 8000654:	eef3 7a0e 	vmov.f32	s15, #62	; 0x41f00000  30.0
 8000658:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800065c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8000660:	dd02      	ble.n	8000668 <getMotorInfo()+0x70>
 8000662:	4810      	ldr	r0, [pc, #64]	; (80006a4 <getMotorInfo()+0xac>)
 8000664:	f005 fa4c 	bl	8005b00 <mbed::Timer::reset()>
 8000668:	480e      	ldr	r0, [pc, #56]	; (80006a4 <getMotorInfo()+0xac>)
 800066a:	6ae4      	ldr	r4, [r4, #44]	; 0x2c
 800066c:	f005 fa30 	bl	8005ad0 <mbed::Timer::read()>
 8000670:	4b0d      	ldr	r3, [pc, #52]	; (80006a8 <getMotorInfo()+0xb0>)
 8000672:	6260      	str	r0, [r4, #36]	; 0x24
 8000674:	68d8      	ldr	r0, [r3, #12]
 8000676:	6899      	ldr	r1, [r3, #8]
 8000678:	6802      	ldr	r2, [r0, #0]
 800067a:	6814      	ldr	r4, [r2, #0]
 800067c:	4a02      	ldr	r2, [pc, #8]	; (8000688 <getMotorInfo()+0x90>)
 800067e:	4623      	mov	r3, r4
 8000680:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8000684:	4718      	bx	r3
 8000686:	bf00      	nop
 8000688:	20000254 	.word	0x20000254
 800068c:	20000454 	.word	0x20000454
 8000690:	20000284 	.word	0x20000284
 8000694:	20000628 	.word	0x20000628
 8000698:	20000458 	.word	0x20000458
 800069c:	200007fc 	.word	0x200007fc
 80006a0:	2000062c 	.word	0x2000062c
 80006a4:	20000fa8 	.word	0x20000fa8
 80006a8:	20000828 	.word	0x20000828

080006ac <mbed::Callback<void ()>::~Callback()>:
 80006ac:	68c3      	ldr	r3, [r0, #12]
 80006ae:	b510      	push	{r4, lr}
 80006b0:	4604      	mov	r4, r0
 80006b2:	b10b      	cbz	r3, 80006b8 <mbed::Callback<void ()>::~Callback()+0xc>
 80006b4:	689b      	ldr	r3, [r3, #8]
 80006b6:	4798      	blx	r3
 80006b8:	4620      	mov	r0, r4
 80006ba:	bd10      	pop	{r4, pc}

080006bc <mbed::Ticker::~Ticker()>:
 80006bc:	b538      	push	{r3, r4, r5, lr}
 80006be:	4605      	mov	r5, r0
 80006c0:	4b06      	ldr	r3, [pc, #24]	; (80006dc <mbed::Ticker::~Ticker()+0x20>)
 80006c2:	f845 3b18 	str.w	r3, [r5], #24
 80006c6:	4604      	mov	r4, r0
 80006c8:	f005 f9b4 	bl	8005a34 <mbed::Ticker::detach()>
 80006cc:	4628      	mov	r0, r5
 80006ce:	f7ff ffed 	bl	80006ac <mbed::Callback<void ()>::~Callback()>
 80006d2:	4620      	mov	r0, r4
 80006d4:	f005 fc22 	bl	8005f1c <mbed::TimerEvent::~TimerEvent()>
 80006d8:	4620      	mov	r0, r4
 80006da:	bd38      	pop	{r3, r4, r5, pc}
 80006dc:	080086e8 	.word	0x080086e8

080006e0 <mbed::Ticker::~Ticker()>:
 80006e0:	b510      	push	{r4, lr}
 80006e2:	4604      	mov	r4, r0
 80006e4:	f7ff ffea 	bl	80006bc <mbed::Ticker::~Ticker()>
 80006e8:	4620      	mov	r0, r4
 80006ea:	f005 fda1 	bl	8006230 <operator delete(void*)>
 80006ee:	4620      	mov	r0, r4
 80006f0:	bd10      	pop	{r4, pc}

080006f2 <mbed::Callback<void ()>::Callback(mbed::Callback<void ()> const&)>:
 80006f2:	b538      	push	{r3, r4, r5, lr}
 80006f4:	68cb      	ldr	r3, [r1, #12]
 80006f6:	4604      	mov	r4, r0
 80006f8:	460d      	mov	r5, r1
 80006fa:	b10b      	cbz	r3, 8000700 <mbed::Callback<void ()>::Callback(mbed::Callback<void ()> const&)+0xe>
 80006fc:	685b      	ldr	r3, [r3, #4]
 80006fe:	4798      	blx	r3
 8000700:	68eb      	ldr	r3, [r5, #12]
 8000702:	60e3      	str	r3, [r4, #12]
 8000704:	4620      	mov	r0, r4
 8000706:	bd38      	pop	{r3, r4, r5, pc}

08000708 <void ros::Msg::varToArr<unsigned char*, unsigned long>(unsigned char*, unsigned long)>:
 8000708:	3801      	subs	r0, #1
 800070a:	2300      	movs	r3, #0
 800070c:	fa21 f203 	lsr.w	r2, r1, r3
 8000710:	3308      	adds	r3, #8
 8000712:	2b20      	cmp	r3, #32
 8000714:	f800 2f01 	strb.w	r2, [r0, #1]!
 8000718:	d1f8      	bne.n	800070c <void ros::Msg::varToArr<unsigned char*, unsigned long>(unsigned char*, unsigned long)+0x4>
 800071a:	4770      	bx	lr

0800071c <std_msgs::MultiArrayDimension::serialize(unsigned char*) const>:
 800071c:	b570      	push	{r4, r5, r6, lr}
 800071e:	4605      	mov	r5, r0
 8000720:	6840      	ldr	r0, [r0, #4]
 8000722:	460c      	mov	r4, r1
 8000724:	f006 ff9d 	bl	8007662 <strlen>
 8000728:	4606      	mov	r6, r0
 800072a:	4601      	mov	r1, r0
 800072c:	4620      	mov	r0, r4
 800072e:	f7ff ffeb 	bl	8000708 <void ros::Msg::varToArr<unsigned char*, unsigned long>(unsigned char*, unsigned long)>
 8000732:	6869      	ldr	r1, [r5, #4]
 8000734:	4632      	mov	r2, r6
 8000736:	1d20      	adds	r0, r4, #4
 8000738:	f006 fca2 	bl	8007080 <memcpy>
 800073c:	19a1      	adds	r1, r4, r6
 800073e:	68ab      	ldr	r3, [r5, #8]
 8000740:	710b      	strb	r3, [r1, #4]
 8000742:	68ab      	ldr	r3, [r5, #8]
 8000744:	0a1b      	lsrs	r3, r3, #8
 8000746:	714b      	strb	r3, [r1, #5]
 8000748:	896b      	ldrh	r3, [r5, #10]
 800074a:	718b      	strb	r3, [r1, #6]
 800074c:	7aeb      	ldrb	r3, [r5, #11]
 800074e:	71cb      	strb	r3, [r1, #7]
 8000750:	68eb      	ldr	r3, [r5, #12]
 8000752:	720b      	strb	r3, [r1, #8]
 8000754:	68eb      	ldr	r3, [r5, #12]
 8000756:	0a1b      	lsrs	r3, r3, #8
 8000758:	724b      	strb	r3, [r1, #9]
 800075a:	89eb      	ldrh	r3, [r5, #14]
 800075c:	728b      	strb	r3, [r1, #10]
 800075e:	7beb      	ldrb	r3, [r5, #15]
 8000760:	72cb      	strb	r3, [r1, #11]
 8000762:	f106 000c 	add.w	r0, r6, #12
 8000766:	bd70      	pop	{r4, r5, r6, pc}

08000768 <rosserial_msgs::RequestParamResponse::serialize(unsigned char*) const>:
 8000768:	6843      	ldr	r3, [r0, #4]
 800076a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800076e:	700b      	strb	r3, [r1, #0]
 8000770:	6843      	ldr	r3, [r0, #4]
 8000772:	0a1b      	lsrs	r3, r3, #8
 8000774:	704b      	strb	r3, [r1, #1]
 8000776:	88c3      	ldrh	r3, [r0, #6]
 8000778:	708b      	strb	r3, [r1, #2]
 800077a:	79c3      	ldrb	r3, [r0, #7]
 800077c:	70cb      	strb	r3, [r1, #3]
 800077e:	460d      	mov	r5, r1
 8000780:	1d0a      	adds	r2, r1, #4
 8000782:	4604      	mov	r4, r0
 8000784:	2100      	movs	r1, #0
 8000786:	6860      	ldr	r0, [r4, #4]
 8000788:	4281      	cmp	r1, r0
 800078a:	eba2 0305 	sub.w	r3, r2, r5
 800078e:	f102 0204 	add.w	r2, r2, #4
 8000792:	d20f      	bcs.n	80007b4 <rosserial_msgs::RequestParamResponse::serialize(unsigned char*) const+0x4c>
 8000794:	68e3      	ldr	r3, [r4, #12]
 8000796:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 800079a:	f802 3c04 	strb.w	r3, [r2, #-4]
 800079e:	0a18      	lsrs	r0, r3, #8
 80007a0:	f802 0c03 	strb.w	r0, [r2, #-3]
 80007a4:	0c18      	lsrs	r0, r3, #16
 80007a6:	0e1b      	lsrs	r3, r3, #24
 80007a8:	f802 0c02 	strb.w	r0, [r2, #-2]
 80007ac:	f802 3c01 	strb.w	r3, [r2, #-1]
 80007b0:	3101      	adds	r1, #1
 80007b2:	e7e8      	b.n	8000786 <rosserial_msgs::RequestParamResponse::serialize(unsigned char*) const+0x1e>
 80007b4:	6922      	ldr	r2, [r4, #16]
 80007b6:	54ea      	strb	r2, [r5, r3]
 80007b8:	6921      	ldr	r1, [r4, #16]
 80007ba:	18ea      	adds	r2, r5, r3
 80007bc:	0a09      	lsrs	r1, r1, #8
 80007be:	7051      	strb	r1, [r2, #1]
 80007c0:	8a61      	ldrh	r1, [r4, #18]
 80007c2:	7091      	strb	r1, [r2, #2]
 80007c4:	7ce1      	ldrb	r1, [r4, #19]
 80007c6:	70d1      	strb	r1, [r2, #3]
 80007c8:	3304      	adds	r3, #4
 80007ca:	442b      	add	r3, r5
 80007cc:	2100      	movs	r1, #0
 80007ce:	6922      	ldr	r2, [r4, #16]
 80007d0:	4291      	cmp	r1, r2
 80007d2:	eba3 0605 	sub.w	r6, r3, r5
 80007d6:	f103 0304 	add.w	r3, r3, #4
 80007da:	d20f      	bcs.n	80007fc <rosserial_msgs::RequestParamResponse::serialize(unsigned char*) const+0x94>
 80007dc:	69a2      	ldr	r2, [r4, #24]
 80007de:	f852 2021 	ldr.w	r2, [r2, r1, lsl #2]
 80007e2:	f803 2c04 	strb.w	r2, [r3, #-4]
 80007e6:	0a10      	lsrs	r0, r2, #8
 80007e8:	f803 0c03 	strb.w	r0, [r3, #-3]
 80007ec:	0c10      	lsrs	r0, r2, #16
 80007ee:	0e12      	lsrs	r2, r2, #24
 80007f0:	f803 0c02 	strb.w	r0, [r3, #-2]
 80007f4:	f803 2c01 	strb.w	r2, [r3, #-1]
 80007f8:	3101      	adds	r1, #1
 80007fa:	e7e8      	b.n	80007ce <rosserial_msgs::RequestParamResponse::serialize(unsigned char*) const+0x66>
 80007fc:	69e3      	ldr	r3, [r4, #28]
 80007fe:	55ab      	strb	r3, [r5, r6]
 8000800:	69e2      	ldr	r2, [r4, #28]
 8000802:	19ab      	adds	r3, r5, r6
 8000804:	0a12      	lsrs	r2, r2, #8
 8000806:	705a      	strb	r2, [r3, #1]
 8000808:	8be2      	ldrh	r2, [r4, #30]
 800080a:	709a      	strb	r2, [r3, #2]
 800080c:	7fe2      	ldrb	r2, [r4, #31]
 800080e:	70da      	strb	r2, [r3, #3]
 8000810:	3604      	adds	r6, #4
 8000812:	2700      	movs	r7, #0
 8000814:	69e3      	ldr	r3, [r4, #28]
 8000816:	429f      	cmp	r7, r3
 8000818:	d214      	bcs.n	8000844 <rosserial_msgs::RequestParamResponse::serialize(unsigned char*) const+0xdc>
 800081a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800081c:	f853 0027 	ldr.w	r0, [r3, r7, lsl #2]
 8000820:	f006 ff1f 	bl	8007662 <strlen>
 8000824:	4680      	mov	r8, r0
 8000826:	4601      	mov	r1, r0
 8000828:	19a8      	adds	r0, r5, r6
 800082a:	f7ff ff6d 	bl	8000708 <void ros::Msg::varToArr<unsigned char*, unsigned long>(unsigned char*, unsigned long)>
 800082e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8000830:	3604      	adds	r6, #4
 8000832:	f853 1027 	ldr.w	r1, [r3, r7, lsl #2]
 8000836:	19a8      	adds	r0, r5, r6
 8000838:	4642      	mov	r2, r8
 800083a:	f006 fc21 	bl	8007080 <memcpy>
 800083e:	4446      	add	r6, r8
 8000840:	3701      	adds	r7, #1
 8000842:	e7e7      	b.n	8000814 <rosserial_msgs::RequestParamResponse::serialize(unsigned char*) const+0xac>
 8000844:	4630      	mov	r0, r6
 8000846:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800084a <rosserial_msgs::Log::serialize(unsigned char*) const>:
 800084a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800084c:	460e      	mov	r6, r1
 800084e:	7903      	ldrb	r3, [r0, #4]
 8000850:	f806 3b01 	strb.w	r3, [r6], #1
 8000854:	4605      	mov	r5, r0
 8000856:	6880      	ldr	r0, [r0, #8]
 8000858:	460f      	mov	r7, r1
 800085a:	f006 ff02 	bl	8007662 <strlen>
 800085e:	4604      	mov	r4, r0
 8000860:	4601      	mov	r1, r0
 8000862:	4630      	mov	r0, r6
 8000864:	f7ff ff50 	bl	8000708 <void ros::Msg::varToArr<unsigned char*, unsigned long>(unsigned char*, unsigned long)>
 8000868:	4622      	mov	r2, r4
 800086a:	68a9      	ldr	r1, [r5, #8]
 800086c:	1d78      	adds	r0, r7, #5
 800086e:	f006 fc07 	bl	8007080 <memcpy>
 8000872:	1d60      	adds	r0, r4, #5
 8000874:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08000876 <rosserial_msgs::TopicInfo::serialize(unsigned char*) const>:
 8000876:	8883      	ldrh	r3, [r0, #4]
 8000878:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800087c:	700b      	strb	r3, [r1, #0]
 800087e:	8883      	ldrh	r3, [r0, #4]
 8000880:	0a1b      	lsrs	r3, r3, #8
 8000882:	704b      	strb	r3, [r1, #1]
 8000884:	4605      	mov	r5, r0
 8000886:	6880      	ldr	r0, [r0, #8]
 8000888:	460c      	mov	r4, r1
 800088a:	f006 feea 	bl	8007662 <strlen>
 800088e:	4607      	mov	r7, r0
 8000890:	4601      	mov	r1, r0
 8000892:	1ca0      	adds	r0, r4, #2
 8000894:	f7ff ff38 	bl	8000708 <void ros::Msg::varToArr<unsigned char*, unsigned long>(unsigned char*, unsigned long)>
 8000898:	463a      	mov	r2, r7
 800089a:	68a9      	ldr	r1, [r5, #8]
 800089c:	1da0      	adds	r0, r4, #6
 800089e:	f006 fbef 	bl	8007080 <memcpy>
 80008a2:	68e8      	ldr	r0, [r5, #12]
 80008a4:	f006 fedd 	bl	8007662 <strlen>
 80008a8:	f107 0806 	add.w	r8, r7, #6
 80008ac:	4606      	mov	r6, r0
 80008ae:	4601      	mov	r1, r0
 80008b0:	370a      	adds	r7, #10
 80008b2:	eb04 0008 	add.w	r0, r4, r8
 80008b6:	f7ff ff27 	bl	8000708 <void ros::Msg::varToArr<unsigned char*, unsigned long>(unsigned char*, unsigned long)>
 80008ba:	4632      	mov	r2, r6
 80008bc:	68e9      	ldr	r1, [r5, #12]
 80008be:	19e0      	adds	r0, r4, r7
 80008c0:	f006 fbde 	bl	8007080 <memcpy>
 80008c4:	6928      	ldr	r0, [r5, #16]
 80008c6:	f006 fecc 	bl	8007662 <strlen>
 80008ca:	443e      	add	r6, r7
 80008cc:	4601      	mov	r1, r0
 80008ce:	4607      	mov	r7, r0
 80008d0:	19a0      	adds	r0, r4, r6
 80008d2:	3604      	adds	r6, #4
 80008d4:	f7ff ff18 	bl	8000708 <void ros::Msg::varToArr<unsigned char*, unsigned long>(unsigned char*, unsigned long)>
 80008d8:	463a      	mov	r2, r7
 80008da:	19a0      	adds	r0, r4, r6
 80008dc:	6929      	ldr	r1, [r5, #16]
 80008de:	443e      	add	r6, r7
 80008e0:	f006 fbce 	bl	8007080 <memcpy>
 80008e4:	696b      	ldr	r3, [r5, #20]
 80008e6:	55a3      	strb	r3, [r4, r6]
 80008e8:	4434      	add	r4, r6
 80008ea:	0a1a      	lsrs	r2, r3, #8
 80008ec:	7062      	strb	r2, [r4, #1]
 80008ee:	0c1a      	lsrs	r2, r3, #16
 80008f0:	0e1b      	lsrs	r3, r3, #24
 80008f2:	70a2      	strb	r2, [r4, #2]
 80008f4:	70e3      	strb	r3, [r4, #3]
 80008f6:	1d30      	adds	r0, r6, #4
 80008f8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080008fc <void ros::Msg::arrToVar<unsigned long, unsigned char*>(unsigned long&, unsigned char*)>:
 80008fc:	b510      	push	{r4, lr}
 80008fe:	2300      	movs	r3, #0
 8000900:	6003      	str	r3, [r0, #0]
 8000902:	3901      	subs	r1, #1
 8000904:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 8000908:	fa02 f403 	lsl.w	r4, r2, r3
 800090c:	6802      	ldr	r2, [r0, #0]
 800090e:	3308      	adds	r3, #8
 8000910:	4322      	orrs	r2, r4
 8000912:	2b20      	cmp	r3, #32
 8000914:	6002      	str	r2, [r0, #0]
 8000916:	d1f5      	bne.n	8000904 <void ros::Msg::arrToVar<unsigned long, unsigned char*>(unsigned long&, unsigned char*)+0x8>
 8000918:	bd10      	pop	{r4, pc}

0800091a <rosserial_msgs::Log::deserialize(unsigned char*)>:
 800091a:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800091c:	460c      	mov	r4, r1
 800091e:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000922:	7103      	strb	r3, [r0, #4]
 8000924:	4605      	mov	r5, r0
 8000926:	a801      	add	r0, sp, #4
 8000928:	f7ff ffe8 	bl	80008fc <void ros::Msg::arrToVar<unsigned long, unsigned char*>(unsigned long&, unsigned char*)>
 800092c:	9b01      	ldr	r3, [sp, #4]
 800092e:	1d62      	adds	r2, r4, #5
 8000930:	1d58      	adds	r0, r3, #5
 8000932:	1b11      	subs	r1, r2, r4
 8000934:	4288      	cmp	r0, r1
 8000936:	d904      	bls.n	8000942 <rosserial_msgs::Log::deserialize(unsigned char*)+0x28>
 8000938:	f812 1b01 	ldrb.w	r1, [r2], #1
 800093c:	f802 1c02 	strb.w	r1, [r2, #-2]
 8000940:	e7f7      	b.n	8000932 <rosserial_msgs::Log::deserialize(unsigned char*)+0x18>
 8000942:	4423      	add	r3, r4
 8000944:	2200      	movs	r2, #0
 8000946:	3404      	adds	r4, #4
 8000948:	711a      	strb	r2, [r3, #4]
 800094a:	60ac      	str	r4, [r5, #8]
 800094c:	b003      	add	sp, #12
 800094e:	bd30      	pop	{r4, r5, pc}

08000950 <rosserial_msgs::TopicInfo::deserialize(unsigned char*)>:
 8000950:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000952:	780b      	ldrb	r3, [r1, #0]
 8000954:	8083      	strh	r3, [r0, #4]
 8000956:	784a      	ldrb	r2, [r1, #1]
 8000958:	b085      	sub	sp, #20
 800095a:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 800095e:	8083      	strh	r3, [r0, #4]
 8000960:	460c      	mov	r4, r1
 8000962:	4606      	mov	r6, r0
 8000964:	3102      	adds	r1, #2
 8000966:	a801      	add	r0, sp, #4
 8000968:	f7ff ffc8 	bl	80008fc <void ros::Msg::arrToVar<unsigned long, unsigned char*>(unsigned long&, unsigned char*)>
 800096c:	9f01      	ldr	r7, [sp, #4]
 800096e:	1da3      	adds	r3, r4, #6
 8000970:	1dbd      	adds	r5, r7, #6
 8000972:	1b1a      	subs	r2, r3, r4
 8000974:	4295      	cmp	r5, r2
 8000976:	d904      	bls.n	8000982 <rosserial_msgs::TopicInfo::deserialize(unsigned char*)+0x32>
 8000978:	f813 2b01 	ldrb.w	r2, [r3], #1
 800097c:	f803 2c02 	strb.w	r2, [r3, #-2]
 8000980:	e7f7      	b.n	8000972 <rosserial_msgs::TopicInfo::deserialize(unsigned char*)+0x22>
 8000982:	19e3      	adds	r3, r4, r7
 8000984:	2200      	movs	r2, #0
 8000986:	715a      	strb	r2, [r3, #5]
 8000988:	1d63      	adds	r3, r4, #5
 800098a:	60b3      	str	r3, [r6, #8]
 800098c:	1961      	adds	r1, r4, r5
 800098e:	a802      	add	r0, sp, #8
 8000990:	f7ff ffb4 	bl	80008fc <void ros::Msg::arrToVar<unsigned long, unsigned char*>(unsigned long&, unsigned char*)>
 8000994:	1d2b      	adds	r3, r5, #4
 8000996:	9d02      	ldr	r5, [sp, #8]
 8000998:	f107 020a 	add.w	r2, r7, #10
 800099c:	441d      	add	r5, r3
 800099e:	4422      	add	r2, r4
 80009a0:	1b11      	subs	r1, r2, r4
 80009a2:	428d      	cmp	r5, r1
 80009a4:	d904      	bls.n	80009b0 <rosserial_msgs::TopicInfo::deserialize(unsigned char*)+0x60>
 80009a6:	f812 1b01 	ldrb.w	r1, [r2], #1
 80009aa:	f802 1c02 	strb.w	r1, [r2, #-2]
 80009ae:	e7f7      	b.n	80009a0 <rosserial_msgs::TopicInfo::deserialize(unsigned char*)+0x50>
 80009b0:	1961      	adds	r1, r4, r5
 80009b2:	3b01      	subs	r3, #1
 80009b4:	4423      	add	r3, r4
 80009b6:	2200      	movs	r2, #0
 80009b8:	f801 2c01 	strb.w	r2, [r1, #-1]
 80009bc:	a803      	add	r0, sp, #12
 80009be:	60f3      	str	r3, [r6, #12]
 80009c0:	f7ff ff9c 	bl	80008fc <void ros::Msg::arrToVar<unsigned long, unsigned char*>(unsigned long&, unsigned char*)>
 80009c4:	9803      	ldr	r0, [sp, #12]
 80009c6:	3504      	adds	r5, #4
 80009c8:	4428      	add	r0, r5
 80009ca:	1963      	adds	r3, r4, r5
 80009cc:	1b1a      	subs	r2, r3, r4
 80009ce:	4290      	cmp	r0, r2
 80009d0:	d904      	bls.n	80009dc <rosserial_msgs::TopicInfo::deserialize(unsigned char*)+0x8c>
 80009d2:	f813 2b01 	ldrb.w	r2, [r3], #1
 80009d6:	f803 2c02 	strb.w	r2, [r3, #-2]
 80009da:	e7f7      	b.n	80009cc <rosserial_msgs::TopicInfo::deserialize(unsigned char*)+0x7c>
 80009dc:	1822      	adds	r2, r4, r0
 80009de:	3d01      	subs	r5, #1
 80009e0:	2300      	movs	r3, #0
 80009e2:	4425      	add	r5, r4
 80009e4:	f802 3c01 	strb.w	r3, [r2, #-1]
 80009e8:	6135      	str	r5, [r6, #16]
 80009ea:	7893      	ldrb	r3, [r2, #2]
 80009ec:	7851      	ldrb	r1, [r2, #1]
 80009ee:	78d2      	ldrb	r2, [r2, #3]
 80009f0:	041b      	lsls	r3, r3, #16
 80009f2:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 80009f6:	5c21      	ldrb	r1, [r4, r0]
 80009f8:	430b      	orrs	r3, r1
 80009fa:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 80009fe:	3004      	adds	r0, #4
 8000a00:	6173      	str	r3, [r6, #20]
 8000a02:	b005      	add	sp, #20
 8000a04:	bdf0      	pop	{r4, r5, r6, r7, pc}

08000a06 <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)>:
 8000a06:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8000a0a:	6843      	ldr	r3, [r0, #4]
 8000a0c:	680d      	ldr	r5, [r1, #0]
 8000a0e:	429d      	cmp	r5, r3
 8000a10:	4604      	mov	r4, r0
 8000a12:	460e      	mov	r6, r1
 8000a14:	d904      	bls.n	8000a20 <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0x1a>
 8000a16:	00a9      	lsls	r1, r5, #2
 8000a18:	68c0      	ldr	r0, [r0, #12]
 8000a1a:	f006 fdc7 	bl	80075ac <realloc>
 8000a1e:	60e0      	str	r0, [r4, #12]
 8000a20:	6065      	str	r5, [r4, #4]
 8000a22:	1d32      	adds	r2, r6, #4
 8000a24:	2100      	movs	r1, #0
 8000a26:	6860      	ldr	r0, [r4, #4]
 8000a28:	4281      	cmp	r1, r0
 8000a2a:	eba2 0306 	sub.w	r3, r2, r6
 8000a2e:	f102 0204 	add.w	r2, r2, #4
 8000a32:	d213      	bcs.n	8000a5c <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0x56>
 8000a34:	f812 3c02 	ldrb.w	r3, [r2, #-2]
 8000a38:	f812 0c03 	ldrb.w	r0, [r2, #-3]
 8000a3c:	041b      	lsls	r3, r3, #16
 8000a3e:	ea43 2300 	orr.w	r3, r3, r0, lsl #8
 8000a42:	f812 0c04 	ldrb.w	r0, [r2, #-4]
 8000a46:	4303      	orrs	r3, r0
 8000a48:	f812 0c01 	ldrb.w	r0, [r2, #-1]
 8000a4c:	ea43 6300 	orr.w	r3, r3, r0, lsl #24
 8000a50:	68e0      	ldr	r0, [r4, #12]
 8000a52:	60a3      	str	r3, [r4, #8]
 8000a54:	f840 3021 	str.w	r3, [r0, r1, lsl #2]
 8000a58:	3101      	adds	r1, #1
 8000a5a:	e7e4      	b.n	8000a26 <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0x20>
 8000a5c:	18f2      	adds	r2, r6, r3
 8000a5e:	5cf1      	ldrb	r1, [r6, r3]
 8000a60:	7895      	ldrb	r5, [r2, #2]
 8000a62:	7850      	ldrb	r0, [r2, #1]
 8000a64:	78d2      	ldrb	r2, [r2, #3]
 8000a66:	042d      	lsls	r5, r5, #16
 8000a68:	ea45 2500 	orr.w	r5, r5, r0, lsl #8
 8000a6c:	430d      	orrs	r5, r1
 8000a6e:	1d1f      	adds	r7, r3, #4
 8000a70:	6923      	ldr	r3, [r4, #16]
 8000a72:	ea45 6502 	orr.w	r5, r5, r2, lsl #24
 8000a76:	429d      	cmp	r5, r3
 8000a78:	d904      	bls.n	8000a84 <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0x7e>
 8000a7a:	00a9      	lsls	r1, r5, #2
 8000a7c:	69a0      	ldr	r0, [r4, #24]
 8000a7e:	f006 fd95 	bl	80075ac <realloc>
 8000a82:	61a0      	str	r0, [r4, #24]
 8000a84:	6125      	str	r5, [r4, #16]
 8000a86:	19f3      	adds	r3, r6, r7
 8000a88:	2100      	movs	r1, #0
 8000a8a:	6922      	ldr	r2, [r4, #16]
 8000a8c:	4291      	cmp	r1, r2
 8000a8e:	eba3 0506 	sub.w	r5, r3, r6
 8000a92:	f103 0304 	add.w	r3, r3, #4
 8000a96:	d213      	bcs.n	8000ac0 <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0xba>
 8000a98:	f813 2c02 	ldrb.w	r2, [r3, #-2]
 8000a9c:	f813 0c03 	ldrb.w	r0, [r3, #-3]
 8000aa0:	0412      	lsls	r2, r2, #16
 8000aa2:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 8000aa6:	f813 0c04 	ldrb.w	r0, [r3, #-4]
 8000aaa:	4302      	orrs	r2, r0
 8000aac:	f813 0c01 	ldrb.w	r0, [r3, #-1]
 8000ab0:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
 8000ab4:	69a0      	ldr	r0, [r4, #24]
 8000ab6:	6162      	str	r2, [r4, #20]
 8000ab8:	f840 2021 	str.w	r2, [r0, r1, lsl #2]
 8000abc:	3101      	adds	r1, #1
 8000abe:	e7e4      	b.n	8000a8a <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0x84>
 8000ac0:	1973      	adds	r3, r6, r5
 8000ac2:	5d72      	ldrb	r2, [r6, r5]
 8000ac4:	789f      	ldrb	r7, [r3, #2]
 8000ac6:	7859      	ldrb	r1, [r3, #1]
 8000ac8:	78db      	ldrb	r3, [r3, #3]
 8000aca:	043f      	lsls	r7, r7, #16
 8000acc:	ea47 2701 	orr.w	r7, r7, r1, lsl #8
 8000ad0:	4317      	orrs	r7, r2
 8000ad2:	ea47 6703 	orr.w	r7, r7, r3, lsl #24
 8000ad6:	69e3      	ldr	r3, [r4, #28]
 8000ad8:	429f      	cmp	r7, r3
 8000ada:	f105 0504 	add.w	r5, r5, #4
 8000ade:	d904      	bls.n	8000aea <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0xe4>
 8000ae0:	00b9      	lsls	r1, r7, #2
 8000ae2:	6a60      	ldr	r0, [r4, #36]	; 0x24
 8000ae4:	f006 fd62 	bl	80075ac <realloc>
 8000ae8:	6260      	str	r0, [r4, #36]	; 0x24
 8000aea:	61e7      	str	r7, [r4, #28]
 8000aec:	2700      	movs	r7, #0
 8000aee:	46b8      	mov	r8, r7
 8000af0:	69e3      	ldr	r3, [r4, #28]
 8000af2:	429f      	cmp	r7, r3
 8000af4:	d21a      	bcs.n	8000b2c <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0x126>
 8000af6:	1971      	adds	r1, r6, r5
 8000af8:	a801      	add	r0, sp, #4
 8000afa:	f7ff feff 	bl	80008fc <void ros::Msg::arrToVar<unsigned long, unsigned char*>(unsigned long&, unsigned char*)>
 8000afe:	1d2b      	adds	r3, r5, #4
 8000b00:	9d01      	ldr	r5, [sp, #4]
 8000b02:	18f2      	adds	r2, r6, r3
 8000b04:	441d      	add	r5, r3
 8000b06:	1b91      	subs	r1, r2, r6
 8000b08:	42a9      	cmp	r1, r5
 8000b0a:	d204      	bcs.n	8000b16 <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0x110>
 8000b0c:	f812 1b01 	ldrb.w	r1, [r2], #1
 8000b10:	f802 1c02 	strb.w	r1, [r2, #-2]
 8000b14:	e7f7      	b.n	8000b06 <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0x100>
 8000b16:	1972      	adds	r2, r6, r5
 8000b18:	3b01      	subs	r3, #1
 8000b1a:	f802 8c01 	strb.w	r8, [r2, #-1]
 8000b1e:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8000b20:	4433      	add	r3, r6
 8000b22:	6223      	str	r3, [r4, #32]
 8000b24:	f842 3027 	str.w	r3, [r2, r7, lsl #2]
 8000b28:	3701      	adds	r7, #1
 8000b2a:	e7e1      	b.n	8000af0 <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0xea>
 8000b2c:	4628      	mov	r0, r5
 8000b2e:	b002      	add	sp, #8
 8000b30:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08000b34 <std_msgs::MultiArrayDimension::deserialize(unsigned char*)>:
 8000b34:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8000b36:	4604      	mov	r4, r0
 8000b38:	a801      	add	r0, sp, #4
 8000b3a:	460d      	mov	r5, r1
 8000b3c:	f7ff fede 	bl	80008fc <void ros::Msg::arrToVar<unsigned long, unsigned char*>(unsigned long&, unsigned char*)>
 8000b40:	9801      	ldr	r0, [sp, #4]
 8000b42:	1d2b      	adds	r3, r5, #4
 8000b44:	1d01      	adds	r1, r0, #4
 8000b46:	1b5a      	subs	r2, r3, r5
 8000b48:	4291      	cmp	r1, r2
 8000b4a:	d904      	bls.n	8000b56 <std_msgs::MultiArrayDimension::deserialize(unsigned char*)+0x22>
 8000b4c:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000b50:	f803 2c02 	strb.w	r2, [r3, #-2]
 8000b54:	e7f7      	b.n	8000b46 <std_msgs::MultiArrayDimension::deserialize(unsigned char*)+0x12>
 8000b56:	182a      	adds	r2, r5, r0
 8000b58:	2300      	movs	r3, #0
 8000b5a:	70d3      	strb	r3, [r2, #3]
 8000b5c:	1ceb      	adds	r3, r5, #3
 8000b5e:	6063      	str	r3, [r4, #4]
 8000b60:	5c6b      	ldrb	r3, [r5, r1]
 8000b62:	60a3      	str	r3, [r4, #8]
 8000b64:	7951      	ldrb	r1, [r2, #5]
 8000b66:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 8000b6a:	60a3      	str	r3, [r4, #8]
 8000b6c:	7991      	ldrb	r1, [r2, #6]
 8000b6e:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000b72:	60a3      	str	r3, [r4, #8]
 8000b74:	79d1      	ldrb	r1, [r2, #7]
 8000b76:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
 8000b7a:	60a3      	str	r3, [r4, #8]
 8000b7c:	7a13      	ldrb	r3, [r2, #8]
 8000b7e:	60e3      	str	r3, [r4, #12]
 8000b80:	7a51      	ldrb	r1, [r2, #9]
 8000b82:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 8000b86:	60e3      	str	r3, [r4, #12]
 8000b88:	7a91      	ldrb	r1, [r2, #10]
 8000b8a:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000b8e:	60e3      	str	r3, [r4, #12]
 8000b90:	7ad2      	ldrb	r2, [r2, #11]
 8000b92:	300c      	adds	r0, #12
 8000b94:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 8000b98:	60e3      	str	r3, [r4, #12]
 8000b9a:	b003      	add	sp, #12
 8000b9c:	bd30      	pop	{r4, r5, pc}

08000b9e <std_msgs::MultiArrayLayout::deserialize(unsigned char*)>:
 8000b9e:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000ba2:	6843      	ldr	r3, [r0, #4]
 8000ba4:	680d      	ldr	r5, [r1, #0]
 8000ba6:	429d      	cmp	r5, r3
 8000ba8:	4604      	mov	r4, r0
 8000baa:	460f      	mov	r7, r1
 8000bac:	d904      	bls.n	8000bb8 <std_msgs::MultiArrayLayout::deserialize(unsigned char*)+0x1a>
 8000bae:	0129      	lsls	r1, r5, #4
 8000bb0:	6980      	ldr	r0, [r0, #24]
 8000bb2:	f006 fcfb 	bl	80075ac <realloc>
 8000bb6:	61a0      	str	r0, [r4, #24]
 8000bb8:	6065      	str	r5, [r4, #4]
 8000bba:	2600      	movs	r6, #0
 8000bbc:	2504      	movs	r5, #4
 8000bbe:	f104 0808 	add.w	r8, r4, #8
 8000bc2:	f104 0918 	add.w	r9, r4, #24
 8000bc6:	6863      	ldr	r3, [r4, #4]
 8000bc8:	429e      	cmp	r6, r3
 8000bca:	eb07 0105 	add.w	r1, r7, r5
 8000bce:	d20f      	bcs.n	8000bf0 <std_msgs::MultiArrayLayout::deserialize(unsigned char*)+0x52>
 8000bd0:	4640      	mov	r0, r8
 8000bd2:	f7ff ffaf 	bl	8000b34 <std_msgs::MultiArrayDimension::deserialize(unsigned char*)>
 8000bd6:	69a3      	ldr	r3, [r4, #24]
 8000bd8:	4405      	add	r5, r0
 8000bda:	4642      	mov	r2, r8
 8000bdc:	eb03 1306 	add.w	r3, r3, r6, lsl #4
 8000be0:	f852 1b04 	ldr.w	r1, [r2], #4
 8000be4:	f843 1b04 	str.w	r1, [r3], #4
 8000be8:	454a      	cmp	r2, r9
 8000bea:	d1f9      	bne.n	8000be0 <std_msgs::MultiArrayLayout::deserialize(unsigned char*)+0x42>
 8000bec:	3601      	adds	r6, #1
 8000bee:	e7ea      	b.n	8000bc6 <std_msgs::MultiArrayLayout::deserialize(unsigned char*)+0x28>
 8000bf0:	5d7b      	ldrb	r3, [r7, r5]
 8000bf2:	61e3      	str	r3, [r4, #28]
 8000bf4:	784a      	ldrb	r2, [r1, #1]
 8000bf6:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8000bfa:	61e3      	str	r3, [r4, #28]
 8000bfc:	788a      	ldrb	r2, [r1, #2]
 8000bfe:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8000c02:	61e3      	str	r3, [r4, #28]
 8000c04:	78ca      	ldrb	r2, [r1, #3]
 8000c06:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 8000c0a:	61e3      	str	r3, [r4, #28]
 8000c0c:	1d28      	adds	r0, r5, #4
 8000c0e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

08000c12 <std_msgs::Float32MultiArray::deserialize(unsigned char*)>:
 8000c12:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000c14:	4605      	mov	r5, r0
 8000c16:	3004      	adds	r0, #4
 8000c18:	460e      	mov	r6, r1
 8000c1a:	f7ff ffc0 	bl	8000b9e <std_msgs::MultiArrayLayout::deserialize(unsigned char*)>
 8000c1e:	1833      	adds	r3, r6, r0
 8000c20:	5c32      	ldrb	r2, [r6, r0]
 8000c22:	789c      	ldrb	r4, [r3, #2]
 8000c24:	7859      	ldrb	r1, [r3, #1]
 8000c26:	78db      	ldrb	r3, [r3, #3]
 8000c28:	0424      	lsls	r4, r4, #16
 8000c2a:	ea44 2401 	orr.w	r4, r4, r1, lsl #8
 8000c2e:	4314      	orrs	r4, r2
 8000c30:	ea44 6403 	orr.w	r4, r4, r3, lsl #24
 8000c34:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 8000c36:	429c      	cmp	r4, r3
 8000c38:	f100 0704 	add.w	r7, r0, #4
 8000c3c:	d904      	bls.n	8000c48 <std_msgs::Float32MultiArray::deserialize(unsigned char*)+0x36>
 8000c3e:	00a1      	lsls	r1, r4, #2
 8000c40:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
 8000c42:	f006 fcb3 	bl	80075ac <realloc>
 8000c46:	62e8      	str	r0, [r5, #44]	; 0x2c
 8000c48:	626c      	str	r4, [r5, #36]	; 0x24
 8000c4a:	19f3      	adds	r3, r6, r7
 8000c4c:	2100      	movs	r1, #0
 8000c4e:	6a6a      	ldr	r2, [r5, #36]	; 0x24
 8000c50:	4291      	cmp	r1, r2
 8000c52:	eba3 0006 	sub.w	r0, r3, r6
 8000c56:	f103 0304 	add.w	r3, r3, #4
 8000c5a:	d213      	bcs.n	8000c84 <std_msgs::Float32MultiArray::deserialize(unsigned char*)+0x72>
 8000c5c:	f813 2c02 	ldrb.w	r2, [r3, #-2]
 8000c60:	f813 0c03 	ldrb.w	r0, [r3, #-3]
 8000c64:	0412      	lsls	r2, r2, #16
 8000c66:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 8000c6a:	f813 0c04 	ldrb.w	r0, [r3, #-4]
 8000c6e:	4302      	orrs	r2, r0
 8000c70:	f813 0c01 	ldrb.w	r0, [r3, #-1]
 8000c74:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
 8000c78:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
 8000c7a:	62aa      	str	r2, [r5, #40]	; 0x28
 8000c7c:	f840 2021 	str.w	r2, [r0, r1, lsl #2]
 8000c80:	3101      	adds	r1, #1
 8000c82:	e7e4      	b.n	8000c4e <std_msgs::Float32MultiArray::deserialize(unsigned char*)+0x3c>
 8000c84:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08000c86 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::subscribe(ros::Subscriber_&)>:
 8000c86:	b510      	push	{r4, lr}
 8000c88:	f500 62ae 	add.w	r2, r0, #1392	; 0x570
 8000c8c:	2300      	movs	r3, #0
 8000c8e:	f852 4b04 	ldr.w	r4, [r2], #4
 8000c92:	b93c      	cbnz	r4, 8000ca4 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::subscribe(ros::Subscriber_&)+0x1e>
 8000c94:	f503 72ae 	add.w	r2, r3, #348	; 0x15c
 8000c98:	3364      	adds	r3, #100	; 0x64
 8000c9a:	f840 1022 	str.w	r1, [r0, r2, lsl #2]
 8000c9e:	604b      	str	r3, [r1, #4]
 8000ca0:	2001      	movs	r0, #1
 8000ca2:	bd10      	pop	{r4, pc}
 8000ca4:	3301      	adds	r3, #1
 8000ca6:	2b19      	cmp	r3, #25
 8000ca8:	d1f1      	bne.n	8000c8e <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::subscribe(ros::Subscriber_&)+0x8>
 8000caa:	2000      	movs	r0, #0
 8000cac:	bd10      	pop	{r4, pc}
	...

08000cb0 <initRosTopics()>:
 8000cb0:	4a1c      	ldr	r2, [pc, #112]	; (8000d24 <initRosTopics()+0x74>)
 8000cb2:	b508      	push	{r3, lr}
 8000cb4:	2300      	movs	r3, #0
 8000cb6:	f852 1f04 	ldr.w	r1, [r2, #4]!
 8000cba:	2900      	cmp	r1, #0
 8000cbc:	d12d      	bne.n	8000d1a <initRosTopics()+0x6a>
 8000cbe:	491a      	ldr	r1, [pc, #104]	; (8000d28 <initRosTopics()+0x78>)
 8000cc0:	4a1a      	ldr	r2, [pc, #104]	; (8000d2c <initRosTopics()+0x7c>)
 8000cc2:	eb01 0083 	add.w	r0, r1, r3, lsl #2
 8000cc6:	337d      	adds	r3, #125	; 0x7d
 8000cc8:	f8c0 250c 	str.w	r2, [r0, #1292]	; 0x50c
 8000ccc:	6093      	str	r3, [r2, #8]
 8000cce:	60d1      	str	r1, [r2, #12]
 8000cd0:	4917      	ldr	r1, [pc, #92]	; (8000d30 <initRosTopics()+0x80>)
 8000cd2:	4815      	ldr	r0, [pc, #84]	; (8000d28 <initRosTopics()+0x78>)
 8000cd4:	f7ff ffd7 	bl	8000c86 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::subscribe(ros::Subscriber_&)>
 8000cd8:	4916      	ldr	r1, [pc, #88]	; (8000d34 <initRosTopics()+0x84>)
 8000cda:	4813      	ldr	r0, [pc, #76]	; (8000d28 <initRosTopics()+0x78>)
 8000cdc:	f7ff ffd3 	bl	8000c86 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::subscribe(ros::Subscriber_&)>
 8000ce0:	4915      	ldr	r1, [pc, #84]	; (8000d38 <initRosTopics()+0x88>)
 8000ce2:	4811      	ldr	r0, [pc, #68]	; (8000d28 <initRosTopics()+0x78>)
 8000ce4:	f7ff ffcf 	bl	8000c86 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::subscribe(ros::Subscriber_&)>
 8000ce8:	4914      	ldr	r1, [pc, #80]	; (8000d3c <initRosTopics()+0x8c>)
 8000cea:	480f      	ldr	r0, [pc, #60]	; (8000d28 <initRosTopics()+0x78>)
 8000cec:	f7ff ffcb 	bl	8000c86 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::subscribe(ros::Subscriber_&)>
 8000cf0:	4913      	ldr	r1, [pc, #76]	; (8000d40 <initRosTopics()+0x90>)
 8000cf2:	480d      	ldr	r0, [pc, #52]	; (8000d28 <initRosTopics()+0x78>)
 8000cf4:	f7ff ffc7 	bl	8000c86 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::subscribe(ros::Subscriber_&)>
 8000cf8:	4912      	ldr	r1, [pc, #72]	; (8000d44 <initRosTopics()+0x94>)
 8000cfa:	480b      	ldr	r0, [pc, #44]	; (8000d28 <initRosTopics()+0x78>)
 8000cfc:	f7ff ffc3 	bl	8000c86 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::subscribe(ros::Subscriber_&)>
 8000d00:	4911      	ldr	r1, [pc, #68]	; (8000d48 <initRosTopics()+0x98>)
 8000d02:	4809      	ldr	r0, [pc, #36]	; (8000d28 <initRosTopics()+0x78>)
 8000d04:	f7ff ffbf 	bl	8000c86 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::subscribe(ros::Subscriber_&)>
 8000d08:	4910      	ldr	r1, [pc, #64]	; (8000d4c <initRosTopics()+0x9c>)
 8000d0a:	4807      	ldr	r0, [pc, #28]	; (8000d28 <initRosTopics()+0x78>)
 8000d0c:	f7ff ffbb 	bl	8000c86 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::subscribe(ros::Subscriber_&)>
 8000d10:	490f      	ldr	r1, [pc, #60]	; (8000d50 <initRosTopics()+0xa0>)
 8000d12:	4805      	ldr	r0, [pc, #20]	; (8000d28 <initRosTopics()+0x78>)
 8000d14:	f7ff ffb7 	bl	8000c86 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::subscribe(ros::Subscriber_&)>
 8000d18:	bd08      	pop	{r3, pc}
 8000d1a:	3301      	adds	r3, #1
 8000d1c:	2b19      	cmp	r3, #25
 8000d1e:	d1ca      	bne.n	8000cb6 <initRosTopics()+0x6>
 8000d20:	e7d6      	b.n	8000cd0 <initRosTopics()+0x20>
 8000d22:	bf00      	nop
 8000d24:	20000d44 	.word	0x20000d44
 8000d28:	2000083c 	.word	0x2000083c
 8000d2c:	20000828 	.word	0x20000828
 8000d30:	20000f60 	.word	0x20000f60
 8000d34:	20000f78 	.word	0x20000f78
 8000d38:	20000f90 	.word	0x20000f90
 8000d3c:	20000e60 	.word	0x20000e60
 8000d40:	20000e7c 	.word	0x20000e7c
 8000d44:	20000e98 	.word	0x20000e98
 8000d48:	20000eb8 	.word	0x20000eb8
 8000d4c:	20000ef0 	.word	0x20000ef0
 8000d50:	20000f28 	.word	0x20000f28

08000d54 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::requestSyncTime()>:
 8000d54:	b530      	push	{r4, r5, lr}
 8000d56:	b085      	sub	sp, #20
 8000d58:	4604      	mov	r4, r0
 8000d5a:	4b09      	ldr	r3, [pc, #36]	; (8000d80 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::requestSyncTime()+0x2c>)
 8000d5c:	9301      	str	r3, [sp, #4]
 8000d5e:	2300      	movs	r3, #0
 8000d60:	9302      	str	r3, [sp, #8]
 8000d62:	9303      	str	r3, [sp, #12]
 8000d64:	f854 3bec 	ldr.w	r3, [r4], #236
 8000d68:	aa01      	add	r2, sp, #4
 8000d6a:	681b      	ldr	r3, [r3, #0]
 8000d6c:	210a      	movs	r1, #10
 8000d6e:	4605      	mov	r5, r0
 8000d70:	4798      	blx	r3
 8000d72:	4620      	mov	r0, r4
 8000d74:	f004 febc 	bl	8005af0 <mbed::Timer::read_ms()>
 8000d78:	f8c5 00fc 	str.w	r0, [r5, #252]	; 0xfc
 8000d7c:	b005      	add	sp, #20
 8000d7e:	bd30      	pop	{r4, r5, pc}
 8000d80:	08007ce0 	.word	0x08007ce0

08000d84 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::negotiateTopics()>:
 8000d84:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000d88:	b086      	sub	sp, #24
 8000d8a:	4b2b      	ldr	r3, [pc, #172]	; (8000e38 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::negotiateTopics()+0xb4>)
 8000d8c:	9300      	str	r3, [sp, #0]
 8000d8e:	2200      	movs	r2, #0
 8000d90:	4b2a      	ldr	r3, [pc, #168]	; (8000e3c <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::negotiateTopics()+0xb8>)
 8000d92:	f8ad 2004 	strh.w	r2, [sp, #4]
 8000d96:	4605      	mov	r5, r0
 8000d98:	9302      	str	r3, [sp, #8]
 8000d9a:	9303      	str	r3, [sp, #12]
 8000d9c:	9304      	str	r3, [sp, #16]
 8000d9e:	9205      	str	r2, [sp, #20]
 8000da0:	f200 540c 	addw	r4, r0, #1292	; 0x50c
 8000da4:	f500 66ae 	add.w	r6, r0, #1392	; 0x570
 8000da8:	f44f 7700 	mov.w	r7, #512	; 0x200
 8000dac:	6823      	ldr	r3, [r4, #0]
 8000dae:	b1bb      	cbz	r3, 8000de0 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::negotiateTopics()+0x5c>
 8000db0:	6858      	ldr	r0, [r3, #4]
 8000db2:	689a      	ldr	r2, [r3, #8]
 8000db4:	f8ad 2004 	strh.w	r2, [sp, #4]
 8000db8:	681a      	ldr	r2, [r3, #0]
 8000dba:	6803      	ldr	r3, [r0, #0]
 8000dbc:	9202      	str	r2, [sp, #8]
 8000dbe:	689b      	ldr	r3, [r3, #8]
 8000dc0:	4798      	blx	r3
 8000dc2:	6823      	ldr	r3, [r4, #0]
 8000dc4:	9003      	str	r0, [sp, #12]
 8000dc6:	6858      	ldr	r0, [r3, #4]
 8000dc8:	6803      	ldr	r3, [r0, #0]
 8000dca:	68db      	ldr	r3, [r3, #12]
 8000dcc:	4798      	blx	r3
 8000dce:	6821      	ldr	r1, [r4, #0]
 8000dd0:	682b      	ldr	r3, [r5, #0]
 8000dd2:	9004      	str	r0, [sp, #16]
 8000dd4:	9705      	str	r7, [sp, #20]
 8000dd6:	681b      	ldr	r3, [r3, #0]
 8000dd8:	6909      	ldr	r1, [r1, #16]
 8000dda:	466a      	mov	r2, sp
 8000ddc:	4628      	mov	r0, r5
 8000dde:	4798      	blx	r3
 8000de0:	3404      	adds	r4, #4
 8000de2:	42b4      	cmp	r4, r6
 8000de4:	d1e2      	bne.n	8000dac <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::negotiateTopics()+0x28>
 8000de6:	f205 56d4 	addw	r6, r5, #1492	; 0x5d4
 8000dea:	f44f 7700 	mov.w	r7, #512	; 0x200
 8000dee:	6820      	ldr	r0, [r4, #0]
 8000df0:	b1c8      	cbz	r0, 8000e26 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::negotiateTopics()+0xa2>
 8000df2:	6843      	ldr	r3, [r0, #4]
 8000df4:	f8ad 3004 	strh.w	r3, [sp, #4]
 8000df8:	6883      	ldr	r3, [r0, #8]
 8000dfa:	9302      	str	r3, [sp, #8]
 8000dfc:	6803      	ldr	r3, [r0, #0]
 8000dfe:	689b      	ldr	r3, [r3, #8]
 8000e00:	4798      	blx	r3
 8000e02:	9003      	str	r0, [sp, #12]
 8000e04:	6820      	ldr	r0, [r4, #0]
 8000e06:	6803      	ldr	r3, [r0, #0]
 8000e08:	68db      	ldr	r3, [r3, #12]
 8000e0a:	4798      	blx	r3
 8000e0c:	682b      	ldr	r3, [r5, #0]
 8000e0e:	9004      	str	r0, [sp, #16]
 8000e10:	6820      	ldr	r0, [r4, #0]
 8000e12:	f8d3 8000 	ldr.w	r8, [r3]
 8000e16:	6803      	ldr	r3, [r0, #0]
 8000e18:	9705      	str	r7, [sp, #20]
 8000e1a:	685b      	ldr	r3, [r3, #4]
 8000e1c:	4798      	blx	r3
 8000e1e:	466a      	mov	r2, sp
 8000e20:	4601      	mov	r1, r0
 8000e22:	4628      	mov	r0, r5
 8000e24:	47c0      	blx	r8
 8000e26:	3404      	adds	r4, #4
 8000e28:	42a6      	cmp	r6, r4
 8000e2a:	d1e0      	bne.n	8000dee <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::negotiateTopics()+0x6a>
 8000e2c:	2301      	movs	r3, #1
 8000e2e:	f885 35e8 	strb.w	r3, [r5, #1512]	; 0x5e8
 8000e32:	b006      	add	sp, #24
 8000e34:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000e38:	08007cf8 	.word	0x08007cf8
 8000e3c:	080081cc 	.word	0x080081cc

08000e40 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::syncTime(unsigned char*)>:
 8000e40:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000e42:	b085      	sub	sp, #20
 8000e44:	f100 05ec 	add.w	r5, r0, #236	; 0xec
 8000e48:	4b1f      	ldr	r3, [pc, #124]	; (8000ec8 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::syncTime(unsigned char*)+0x88>)
 8000e4a:	9301      	str	r3, [sp, #4]
 8000e4c:	4604      	mov	r4, r0
 8000e4e:	2300      	movs	r3, #0
 8000e50:	4628      	mov	r0, r5
 8000e52:	9302      	str	r3, [sp, #8]
 8000e54:	9303      	str	r3, [sp, #12]
 8000e56:	460e      	mov	r6, r1
 8000e58:	f004 fe4a 	bl	8005af0 <mbed::Timer::read_ms()>
 8000e5c:	f8d4 20fc 	ldr.w	r2, [r4, #252]	; 0xfc
 8000e60:	4631      	mov	r1, r6
 8000e62:	1a87      	subs	r7, r0, r2
 8000e64:	a801      	add	r0, sp, #4
 8000e66:	f7ff f9e1 	bl	800022c <std_msgs::Time::deserialize(unsigned char*)>
 8000e6a:	9b02      	ldr	r3, [sp, #8]
 8000e6c:	f44f 767a 	mov.w	r6, #1000	; 0x3e8
 8000e70:	fbb7 f2f6 	udiv	r2, r7, r6
 8000e74:	4413      	add	r3, r2
 8000e76:	9302      	str	r3, [sp, #8]
 8000e78:	fb06 7212 	mls	r2, r6, r2, r7
 8000e7c:	9b03      	ldr	r3, [sp, #12]
 8000e7e:	4f13      	ldr	r7, [pc, #76]	; (8000ecc <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::syncTime(unsigned char*)+0x8c>)
 8000e80:	4628      	mov	r0, r5
 8000e82:	fb07 3202 	mla	r2, r7, r2, r3
 8000e86:	9203      	str	r2, [sp, #12]
 8000e88:	f004 fe32 	bl	8005af0 <mbed::Timer::read_ms()>
 8000e8c:	9a02      	ldr	r2, [sp, #8]
 8000e8e:	fbb0 f3f6 	udiv	r3, r0, r6
 8000e92:	3a01      	subs	r2, #1
 8000e94:	1ad2      	subs	r2, r2, r3
 8000e96:	9903      	ldr	r1, [sp, #12]
 8000e98:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 8000e9c:	4a0c      	ldr	r2, [pc, #48]	; (8000ed0 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::syncTime(unsigned char*)+0x90>)
 8000e9e:	fb06 0313 	mls	r3, r6, r3, r0
 8000ea2:	440a      	add	r2, r1
 8000ea4:	fb07 2313 	mls	r3, r7, r3, r2
 8000ea8:	f8c4 3104 	str.w	r3, [r4, #260]	; 0x104
 8000eac:	f504 7182 	add.w	r1, r4, #260	; 0x104
 8000eb0:	f504 7080 	add.w	r0, r4, #256	; 0x100
 8000eb4:	f001 f8ec 	bl	8002090 <ros::normalizeSecNSec(unsigned long&, unsigned long&)>
 8000eb8:	4628      	mov	r0, r5
 8000eba:	f004 fe19 	bl	8005af0 <mbed::Timer::read_ms()>
 8000ebe:	f8c4 05f0 	str.w	r0, [r4, #1520]	; 0x5f0
 8000ec2:	b005      	add	sp, #20
 8000ec4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000ec6:	bf00      	nop
 8000ec8:	08007ce0 	.word	0x08007ce0
 8000ecc:	000f4240 	.word	0x000f4240
 8000ed0:	3b9aca00 	.word	0x3b9aca00

08000ed4 <_GLOBAL__sub_I_motor1_setpoint>:
 8000ed4:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, r10, r11, lr}
 8000ed8:	4db5      	ldr	r5, [pc, #724]	; (80011b0 <_GLOBAL__sub_I_motor1_setpoint+0x2dc>)
 8000eda:	4fb6      	ldr	r7, [pc, #728]	; (80011b4 <_GLOBAL__sub_I_motor1_setpoint+0x2e0>)
 8000edc:	f8df 938c 	ldr.w	r9, [pc, #908]	; 800126c <_GLOBAL__sub_I_motor1_setpoint+0x398>
 8000ee0:	f8df 838c 	ldr.w	r8, [pc, #908]	; 8001270 <_GLOBAL__sub_I_motor1_setpoint+0x39c>
 8000ee4:	f8df b38c 	ldr.w	r11, [pc, #908]	; 8001274 <_GLOBAL__sub_I_motor1_setpoint+0x3a0>
 8000ee8:	4628      	mov	r0, r5
 8000eea:	2400      	movs	r4, #0
 8000eec:	f004 fff8 	bl	8005ee0 <mbed::TimerEvent::TimerEvent()>
 8000ef0:	4bb1      	ldr	r3, [pc, #708]	; (80011b8 <_GLOBAL__sub_I_motor1_setpoint+0x2e4>)
 8000ef2:	602b      	str	r3, [r5, #0]
 8000ef4:	463a      	mov	r2, r7
 8000ef6:	626c      	str	r4, [r5, #36]	; 0x24
 8000ef8:	49b0      	ldr	r1, [pc, #704]	; (80011bc <_GLOBAL__sub_I_motor1_setpoint+0x2e8>)
 8000efa:	4628      	mov	r0, r5
 8000efc:	4db0      	ldr	r5, [pc, #704]	; (80011c0 <_GLOBAL__sub_I_motor1_setpoint+0x2ec>)
 8000efe:	2601      	movs	r6, #1
 8000f00:	f005 f978 	bl	80061f4 <__aeabi_atexit>
 8000f04:	f04f 0a11 	mov.w	r10, #17
 8000f08:	48ae      	ldr	r0, [pc, #696]	; (80011c4 <_GLOBAL__sub_I_motor1_setpoint+0x2f0>)
 8000f0a:	f004 fe07 	bl	8005b1c <mbed::Timer::Timer()>
 8000f0e:	2364      	movs	r3, #100	; 0x64
 8000f10:	9601      	str	r6, [sp, #4]
 8000f12:	f8cd a000 	str.w	r10, [sp]
 8000f16:	2228      	movs	r2, #40	; 0x28
 8000f18:	210c      	movs	r1, #12
 8000f1a:	4628      	mov	r0, r5
 8000f1c:	f000 fd9c 	bl	8001a58 <Encoder::Encoder(PinName, PinName, int, int, bool)>
 8000f20:	463a      	mov	r2, r7
 8000f22:	4649      	mov	r1, r9
 8000f24:	4628      	mov	r0, r5
 8000f26:	f005 f965 	bl	80061f4 <__aeabi_atexit>
 8000f2a:	9500      	str	r5, [sp, #0]
 8000f2c:	2313      	movs	r3, #19
 8000f2e:	4da6      	ldr	r5, [pc, #664]	; (80011c8 <_GLOBAL__sub_I_motor1_setpoint+0x2f4>)
 8000f30:	2218      	movs	r2, #24
 8000f32:	2129      	movs	r1, #41	; 0x29
 8000f34:	4640      	mov	r0, r8
 8000f36:	f000 fc97 	bl	8001868 <DcServo::DcServo(PinName, PinName, PinName, Encoder*)>
 8000f3a:	4640      	mov	r0, r8
 8000f3c:	f8df 8338 	ldr.w	r8, [pc, #824]	; 8001278 <_GLOBAL__sub_I_motor1_setpoint+0x3a4>
 8000f40:	463a      	mov	r2, r7
 8000f42:	4629      	mov	r1, r5
 8000f44:	f005 f956 	bl	80061f4 <__aeabi_atexit>
 8000f48:	2364      	movs	r3, #100	; 0x64
 8000f4a:	9601      	str	r6, [sp, #4]
 8000f4c:	f8cd a000 	str.w	r10, [sp]
 8000f50:	2219      	movs	r2, #25
 8000f52:	2105      	movs	r1, #5
 8000f54:	4640      	mov	r0, r8
 8000f56:	f000 fd7f 	bl	8001a58 <Encoder::Encoder(PinName, PinName, int, int, bool)>
 8000f5a:	463a      	mov	r2, r7
 8000f5c:	4649      	mov	r1, r9
 8000f5e:	4640      	mov	r0, r8
 8000f60:	f005 f948 	bl	80061f4 <__aeabi_atexit>
 8000f64:	f8cd 8000 	str.w	r8, [sp]
 8000f68:	2314      	movs	r3, #20
 8000f6a:	f8df 8310 	ldr.w	r8, [pc, #784]	; 800127c <_GLOBAL__sub_I_motor1_setpoint+0x3a8>
 8000f6e:	2209      	movs	r2, #9
 8000f70:	2108      	movs	r1, #8
 8000f72:	4658      	mov	r0, r11
 8000f74:	f000 fc78 	bl	8001868 <DcServo::DcServo(PinName, PinName, PinName, Encoder*)>
 8000f78:	463a      	mov	r2, r7
 8000f7a:	4629      	mov	r1, r5
 8000f7c:	4658      	mov	r0, r11
 8000f7e:	f005 f939 	bl	80061f4 <__aeabi_atexit>
 8000f82:	2364      	movs	r3, #100	; 0x64
 8000f84:	9601      	str	r6, [sp, #4]
 8000f86:	f8cd a000 	str.w	r10, [sp]
 8000f8a:	2216      	movs	r2, #22
 8000f8c:	2127      	movs	r1, #39	; 0x27
 8000f8e:	4640      	mov	r0, r8
 8000f90:	f000 fd62 	bl	8001a58 <Encoder::Encoder(PinName, PinName, int, int, bool)>
 8000f94:	4649      	mov	r1, r9
 8000f96:	f8df 92e8 	ldr.w	r9, [pc, #744]	; 8001280 <_GLOBAL__sub_I_motor1_setpoint+0x3ac>
 8000f9a:	463a      	mov	r2, r7
 8000f9c:	4640      	mov	r0, r8
 8000f9e:	f005 f929 	bl	80061f4 <__aeabi_atexit>
 8000fa2:	f8cd 8000 	str.w	r8, [sp]
 8000fa6:	231a      	movs	r3, #26
 8000fa8:	220a      	movs	r2, #10
 8000faa:	2115      	movs	r1, #21
 8000fac:	4648      	mov	r0, r9
 8000fae:	f000 fc5b 	bl	8001868 <DcServo::DcServo(PinName, PinName, PinName, Encoder*)>
 8000fb2:	4629      	mov	r1, r5
 8000fb4:	4d85      	ldr	r5, [pc, #532]	; (80011cc <_GLOBAL__sub_I_motor1_setpoint+0x2f8>)
 8000fb6:	463a      	mov	r2, r7
 8000fb8:	4648      	mov	r0, r9
 8000fba:	f005 f91b 	bl	80061f4 <__aeabi_atexit>
 8000fbe:	4628      	mov	r0, r5
 8000fc0:	4b83      	ldr	r3, [pc, #524]	; (80011d0 <_GLOBAL__sub_I_motor1_setpoint+0x2fc>)
 8000fc2:	f840 3b04 	str.w	r3, [r0], #4
 8000fc6:	2304      	movs	r3, #4
 8000fc8:	2203      	movs	r2, #3
 8000fca:	2102      	movs	r1, #2
 8000fcc:	f105 08ec 	add.w	r8, r5, #236	; 0xec
 8000fd0:	9300      	str	r3, [sp, #0]
 8000fd2:	9401      	str	r4, [sp, #4]
 8000fd4:	f44f 7380 	mov.w	r3, #256	; 0x100
 8000fd8:	f001 f948 	bl	800226c <BufferedSerial::BufferedSerial(PinName, PinName, unsigned long, unsigned long, char const*)>
 8000fdc:	4640      	mov	r0, r8
 8000fde:	f004 fd9d 	bl	8005b1c <mbed::Timer::Timer()>
 8000fe2:	f44f 4361 	mov.w	r3, #57600	; 0xe100
 8000fe6:	f8c5 30e8 	str.w	r3, [r5, #232]	; 0xe8
 8000fea:	4640      	mov	r0, r8
 8000fec:	f44f 7800 	mov.w	r8, #512	; 0x200
 8000ff0:	f004 fd41 	bl	8005a76 <mbed::Timer::start()>
 8000ff4:	4642      	mov	r2, r8
 8000ff6:	4621      	mov	r1, r4
 8000ff8:	f505 7086 	add.w	r0, r5, #268	; 0x10c
 8000ffc:	f8c5 40fc 	str.w	r4, [r5, #252]	; 0xfc
 8001000:	f8c5 4100 	str.w	r4, [r5, #256]	; 0x100
 8001004:	f8c5 4104 	str.w	r4, [r5, #260]	; 0x104
 8001008:	f8c5 4108 	str.w	r4, [r5, #264]	; 0x108
 800100c:	f006 f85d 	bl	80070ca <memset>
 8001010:	4642      	mov	r2, r8
 8001012:	4621      	mov	r1, r4
 8001014:	f04f 0864 	mov.w	r8, #100	; 0x64
 8001018:	f505 7043 	add.w	r0, r5, #780	; 0x30c
 800101c:	f006 f855 	bl	80070ca <memset>
 8001020:	4642      	mov	r2, r8
 8001022:	4621      	mov	r1, r4
 8001024:	f205 500c 	addw	r0, r5, #1292	; 0x50c
 8001028:	f006 f84f 	bl	80070ca <memset>
 800102c:	4642      	mov	r2, r8
 800102e:	4621      	mov	r1, r4
 8001030:	f505 60ae 	add.w	r0, r5, #1392	; 0x570
 8001034:	f006 f849 	bl	80070ca <memset>
 8001038:	4b66      	ldr	r3, [pc, #408]	; (80011d4 <_GLOBAL__sub_I_motor1_setpoint+0x300>)
 800103a:	f8c5 35fc 	str.w	r3, [r5, #1532]	; 0x5fc
 800103e:	f505 63c2 	add.w	r3, r5, #1552	; 0x610
 8001042:	f04f 0800 	mov.w	r8, #0
 8001046:	f8c5 4600 	str.w	r4, [r5, #1536]	; 0x600
 800104a:	f8c5 4604 	str.w	r4, [r5, #1540]	; 0x604
 800104e:	f8c5 4608 	str.w	r4, [r5, #1544]	; 0x608
 8001052:	f8c5 460c 	str.w	r4, [r5, #1548]	; 0x60c
 8001056:	f8c3 8000 	str.w	r8, [r3]
 800105a:	f8c5 4614 	str.w	r4, [r5, #1556]	; 0x614
 800105e:	f8c5 4618 	str.w	r4, [r5, #1560]	; 0x618
 8001062:	f8c5 461c 	str.w	r4, [r5, #1564]	; 0x61c
 8001066:	f8c5 4620 	str.w	r4, [r5, #1568]	; 0x620
 800106a:	463a      	mov	r2, r7
 800106c:	495a      	ldr	r1, [pc, #360]	; (80011d8 <_GLOBAL__sub_I_motor1_setpoint+0x304>)
 800106e:	f8c5 45d4 	str.w	r4, [r5, #1492]	; 0x5d4
 8001072:	4628      	mov	r0, r5
 8001074:	f8c5 45d8 	str.w	r4, [r5, #1496]	; 0x5d8
 8001078:	f8c5 45dc 	str.w	r4, [r5, #1500]	; 0x5dc
 800107c:	f8c5 45e0 	str.w	r4, [r5, #1504]	; 0x5e0
 8001080:	f8c5 45e4 	str.w	r4, [r5, #1508]	; 0x5e4
 8001084:	f885 45e8 	strb.w	r4, [r5, #1512]	; 0x5e8
 8001088:	f8c5 45ec 	str.w	r4, [r5, #1516]	; 0x5ec
 800108c:	f8c5 45f0 	str.w	r4, [r5, #1520]	; 0x5f0
 8001090:	f8c5 45f4 	str.w	r4, [r5, #1524]	; 0x5f4
 8001094:	f885 45f8 	strb.w	r4, [r5, #1528]	; 0x5f8
 8001098:	f005 f8ac 	bl	80061f4 <__aeabi_atexit>
 800109c:	4b4f      	ldr	r3, [pc, #316]	; (80011dc <_GLOBAL__sub_I_motor1_setpoint+0x308>)
 800109e:	4a50      	ldr	r2, [pc, #320]	; (80011e0 <_GLOBAL__sub_I_motor1_setpoint+0x30c>)
 80010a0:	601a      	str	r2, [r3, #0]
 80010a2:	4a50      	ldr	r2, [pc, #320]	; (80011e4 <_GLOBAL__sub_I_motor1_setpoint+0x310>)
 80010a4:	605a      	str	r2, [r3, #4]
 80010a6:	4a50      	ldr	r2, [pc, #320]	; (80011e8 <_GLOBAL__sub_I_motor1_setpoint+0x314>)
 80010a8:	60da      	str	r2, [r3, #12]
 80010aa:	4a50      	ldr	r2, [pc, #320]	; (80011ec <_GLOBAL__sub_I_motor1_setpoint+0x318>)
 80010ac:	611a      	str	r2, [r3, #16]
 80010ae:	4a50      	ldr	r2, [pc, #320]	; (80011f0 <_GLOBAL__sub_I_motor1_setpoint+0x31c>)
 80010b0:	4d50      	ldr	r5, [pc, #320]	; (80011f4 <_GLOBAL__sub_I_motor1_setpoint+0x320>)
 80010b2:	6115      	str	r5, [r2, #16]
 80010b4:	4850      	ldr	r0, [pc, #320]	; (80011f8 <_GLOBAL__sub_I_motor1_setpoint+0x324>)
 80010b6:	4951      	ldr	r1, [pc, #324]	; (80011fc <_GLOBAL__sub_I_motor1_setpoint+0x328>)
 80010b8:	4d51      	ldr	r5, [pc, #324]	; (8001200 <_GLOBAL__sub_I_motor1_setpoint+0x32c>)
 80010ba:	6010      	str	r0, [r2, #0]
 80010bc:	60d1      	str	r1, [r2, #12]
 80010be:	6156      	str	r6, [r2, #20]
 80010c0:	6095      	str	r5, [r2, #8]
 80010c2:	4a50      	ldr	r2, [pc, #320]	; (8001204 <_GLOBAL__sub_I_motor1_setpoint+0x330>)
 80010c4:	4d50      	ldr	r5, [pc, #320]	; (8001208 <_GLOBAL__sub_I_motor1_setpoint+0x334>)
 80010c6:	6115      	str	r5, [r2, #16]
 80010c8:	4d50      	ldr	r5, [pc, #320]	; (800120c <_GLOBAL__sub_I_motor1_setpoint+0x338>)
 80010ca:	6010      	str	r0, [r2, #0]
 80010cc:	60d1      	str	r1, [r2, #12]
 80010ce:	6156      	str	r6, [r2, #20]
 80010d0:	6095      	str	r5, [r2, #8]
 80010d2:	4a4f      	ldr	r2, [pc, #316]	; (8001210 <_GLOBAL__sub_I_motor1_setpoint+0x33c>)
 80010d4:	4d4f      	ldr	r5, [pc, #316]	; (8001214 <_GLOBAL__sub_I_motor1_setpoint+0x340>)
 80010d6:	60d1      	str	r1, [r2, #12]
 80010d8:	494f      	ldr	r1, [pc, #316]	; (8001218 <_GLOBAL__sub_I_motor1_setpoint+0x344>)
 80010da:	6111      	str	r1, [r2, #16]
 80010dc:	494f      	ldr	r1, [pc, #316]	; (800121c <_GLOBAL__sub_I_motor1_setpoint+0x348>)
 80010de:	6010      	str	r0, [r2, #0]
 80010e0:	6156      	str	r6, [r2, #20]
 80010e2:	6091      	str	r1, [r2, #8]
 80010e4:	4a4e      	ldr	r2, [pc, #312]	; (8001220 <_GLOBAL__sub_I_motor1_setpoint+0x34c>)
 80010e6:	484f      	ldr	r0, [pc, #316]	; (8001224 <_GLOBAL__sub_I_motor1_setpoint+0x350>)
 80010e8:	494f      	ldr	r1, [pc, #316]	; (8001228 <_GLOBAL__sub_I_motor1_setpoint+0x354>)
 80010ea:	6155      	str	r5, [r2, #20]
 80010ec:	4d4f      	ldr	r5, [pc, #316]	; (800122c <_GLOBAL__sub_I_motor1_setpoint+0x358>)
 80010ee:	6010      	str	r0, [r2, #0]
 80010f0:	60d1      	str	r1, [r2, #12]
 80010f2:	f8c2 8010 	str.w	r8, [r2, #16]
 80010f6:	6196      	str	r6, [r2, #24]
 80010f8:	609c      	str	r4, [r3, #8]
 80010fa:	615c      	str	r4, [r3, #20]
 80010fc:	619c      	str	r4, [r3, #24]
 80010fe:	61dc      	str	r4, [r3, #28]
 8001100:	621c      	str	r4, [r3, #32]
 8001102:	625c      	str	r4, [r3, #36]	; 0x24
 8001104:	f8c3 8028 	str.w	r8, [r3, #40]	; 0x28
 8001108:	62dc      	str	r4, [r3, #44]	; 0x2c
 800110a:	6095      	str	r5, [r2, #8]
 800110c:	4a48      	ldr	r2, [pc, #288]	; (8001230 <_GLOBAL__sub_I_motor1_setpoint+0x35c>)
 800110e:	4d49      	ldr	r5, [pc, #292]	; (8001234 <_GLOBAL__sub_I_motor1_setpoint+0x360>)
 8001110:	6155      	str	r5, [r2, #20]
 8001112:	4d49      	ldr	r5, [pc, #292]	; (8001238 <_GLOBAL__sub_I_motor1_setpoint+0x364>)
 8001114:	6010      	str	r0, [r2, #0]
 8001116:	f8c2 8010 	str.w	r8, [r2, #16]
 800111a:	6196      	str	r6, [r2, #24]
 800111c:	6095      	str	r5, [r2, #8]
 800111e:	60d1      	str	r1, [r2, #12]
 8001120:	4a46      	ldr	r2, [pc, #280]	; (800123c <_GLOBAL__sub_I_motor1_setpoint+0x368>)
 8001122:	f8df e160 	ldr.w	lr, [pc, #352]	; 8001284 <_GLOBAL__sub_I_motor1_setpoint+0x3b0>
 8001126:	60d1      	str	r1, [r2, #12]
 8001128:	4945      	ldr	r1, [pc, #276]	; (8001240 <_GLOBAL__sub_I_motor1_setpoint+0x36c>)
 800112a:	6151      	str	r1, [r2, #20]
 800112c:	4945      	ldr	r1, [pc, #276]	; (8001244 <_GLOBAL__sub_I_motor1_setpoint+0x370>)
 800112e:	6010      	str	r0, [r2, #0]
 8001130:	f8c2 8010 	str.w	r8, [r2, #16]
 8001134:	6196      	str	r6, [r2, #24]
 8001136:	6091      	str	r1, [r2, #8]
 8001138:	4a43      	ldr	r2, [pc, #268]	; (8001248 <_GLOBAL__sub_I_motor1_setpoint+0x374>)
 800113a:	4f44      	ldr	r7, [pc, #272]	; (800124c <_GLOBAL__sub_I_motor1_setpoint+0x378>)
 800113c:	4d44      	ldr	r5, [pc, #272]	; (8001250 <_GLOBAL__sub_I_motor1_setpoint+0x37c>)
 800113e:	f8c2 e030 	str.w	lr, [r2, #48]	; 0x30
 8001142:	2000      	movs	r0, #0
 8001144:	2100      	movs	r1, #0
 8001146:	f8df e140 	ldr.w	lr, [pc, #320]	; 8001288 <_GLOBAL__sub_I_motor1_setpoint+0x3b4>
 800114a:	6017      	str	r7, [r2, #0]
 800114c:	e9c2 0106 	strd	r0, r1, [r2, #24]
 8001150:	e9c2 0108 	strd	r0, r1, [r2, #32]
 8001154:	6115      	str	r5, [r2, #16]
 8001156:	e9c2 010a 	strd	r0, r1, [r2, #40]	; 0x28
 800115a:	6356      	str	r6, [r2, #52]	; 0x34
 800115c:	f8c2 e008 	str.w	lr, [r2, #8]
 8001160:	4a3c      	ldr	r2, [pc, #240]	; (8001254 <_GLOBAL__sub_I_motor1_setpoint+0x380>)
 8001162:	f8df e128 	ldr.w	lr, [pc, #296]	; 800128c <_GLOBAL__sub_I_motor1_setpoint+0x3b8>
 8001166:	f8c2 e030 	str.w	lr, [r2, #48]	; 0x30
 800116a:	f8df e124 	ldr.w	lr, [pc, #292]	; 8001290 <_GLOBAL__sub_I_motor1_setpoint+0x3bc>
 800116e:	6017      	str	r7, [r2, #0]
 8001170:	e9c2 0106 	strd	r0, r1, [r2, #24]
 8001174:	e9c2 0108 	strd	r0, r1, [r2, #32]
 8001178:	6115      	str	r5, [r2, #16]
 800117a:	e9c2 010a 	strd	r0, r1, [r2, #40]	; 0x28
 800117e:	6356      	str	r6, [r2, #52]	; 0x34
 8001180:	f8c2 e008 	str.w	lr, [r2, #8]
 8001184:	4a34      	ldr	r2, [pc, #208]	; (8001258 <_GLOBAL__sub_I_motor1_setpoint+0x384>)
 8001186:	e9c2 0106 	strd	r0, r1, [r2, #24]
 800118a:	e9c2 0108 	strd	r0, r1, [r2, #32]
 800118e:	6017      	str	r7, [r2, #0]
 8001190:	6115      	str	r5, [r2, #16]
 8001192:	e9c2 010a 	strd	r0, r1, [r2, #40]	; 0x28
 8001196:	4931      	ldr	r1, [pc, #196]	; (800125c <_GLOBAL__sub_I_motor1_setpoint+0x388>)
 8001198:	6311      	str	r1, [r2, #48]	; 0x30
 800119a:	4931      	ldr	r1, [pc, #196]	; (8001260 <_GLOBAL__sub_I_motor1_setpoint+0x38c>)
 800119c:	6091      	str	r1, [r2, #8]
 800119e:	6356      	str	r6, [r2, #52]	; 0x34
 80011a0:	4930      	ldr	r1, [pc, #192]	; (8001264 <_GLOBAL__sub_I_motor1_setpoint+0x390>)
 80011a2:	4a31      	ldr	r2, [pc, #196]	; (8001268 <_GLOBAL__sub_I_motor1_setpoint+0x394>)
 80011a4:	e882 000a 	stmia.w	r2, {r1, r3}
 80011a8:	6114      	str	r4, [r2, #16]
 80011aa:	b003      	add	sp, #12
 80011ac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, pc}
 80011b0:	20000800 	.word	0x20000800
 80011b4:	20000198 	.word	0x20000198
 80011b8:	080086e8 	.word	0x080086e8
 80011bc:	080006bd 	.word	0x080006bd
 80011c0:	20000394 	.word	0x20000394
 80011c4:	20000fa8 	.word	0x20000fa8
 80011c8:	08001631 	.word	0x08001631
 80011cc:	2000083c 	.word	0x2000083c
 80011d0:	08007dd0 	.word	0x08007dd0
 80011d4:	08007d28 	.word	0x08007d28
 80011d8:	08001619 	.word	0x08001619
 80011dc:	20000254 	.word	0x20000254
 80011e0:	08007da0 	.word	0x08007da0
 80011e4:	08007d88 	.word	0x08007d88
 80011e8:	08007d70 	.word	0x08007d70
 80011ec:	080081cc 	.word	0x080081cc
 80011f0:	20000f60 	.word	0x20000f60
 80011f4:	080004e5 	.word	0x080004e5
 80011f8:	08007de4 	.word	0x08007de4
 80011fc:	08007d40 	.word	0x08007d40
 8001200:	08007e30 	.word	0x08007e30
 8001204:	20000f78 	.word	0x20000f78
 8001208:	080004f9 	.word	0x080004f9
 800120c:	08007e3c 	.word	0x08007e3c
 8001210:	20000f90 	.word	0x20000f90
 8001214:	08000521 	.word	0x08000521
 8001218:	0800050d 	.word	0x0800050d
 800121c:	08007e48 	.word	0x08007e48
 8001220:	20000e60 	.word	0x20000e60
 8001224:	08007dfc 	.word	0x08007dfc
 8001228:	08007d58 	.word	0x08007d58
 800122c:	08007e54 	.word	0x08007e54
 8001230:	20000e7c 	.word	0x20000e7c
 8001234:	08000535 	.word	0x08000535
 8001238:	08007e65 	.word	0x08007e65
 800123c:	20000e98 	.word	0x20000e98
 8001240:	08000549 	.word	0x08000549
 8001244:	08007e76 	.word	0x08007e76
 8001248:	20000eb8 	.word	0x20000eb8
 800124c:	08007e14 	.word	0x08007e14
 8001250:	08007db8 	.word	0x08007db8
 8001254:	20000ef0 	.word	0x20000ef0
 8001258:	20000f28 	.word	0x20000f28
 800125c:	080005c5 	.word	0x080005c5
 8001260:	08007ea5 	.word	0x08007ea5
 8001264:	08007eb4 	.word	0x08007eb4
 8001268:	20000828 	.word	0x20000828
 800126c:	08001647 	.word	0x08001647
 8001270:	20000284 	.word	0x20000284
 8001274:	20000458 	.word	0x20000458
 8001278:	20000568 	.word	0x20000568
 800127c:	2000073c 	.word	0x2000073c
 8001280:	2000062c 	.word	0x2000062c
 8001284:	0800055d 	.word	0x0800055d
 8001288:	08007e87 	.word	0x08007e87
 800128c:	08000591 	.word	0x08000591
 8001290:	08007e96 	.word	0x08007e96

08001294 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()>:
 8001294:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, r10, r11, lr}
 8001298:	f100 09ec 	add.w	r9, r0, #236	; 0xec
 800129c:	4604      	mov	r4, r0
 800129e:	4648      	mov	r0, r9
 80012a0:	f004 fc26 	bl	8005af0 <mbed::Timer::read_ms()>
 80012a4:	f8d4 35f0 	ldr.w	r3, [r4, #1520]	; 0x5f0
 80012a8:	f642 22f8 	movw	r2, #11000	; 0x2af8
 80012ac:	1ac3      	subs	r3, r0, r3
 80012ae:	4293      	cmp	r3, r2
 80012b0:	bf84      	itt	hi
 80012b2:	2300      	movhi	r3, #0
 80012b4:	f884 35e8 	strbhi.w	r3, [r4, #1512]	; 0x5e8
 80012b8:	f8d4 35d4 	ldr.w	r3, [r4, #1492]	; 0x5d4
 80012bc:	4605      	mov	r5, r0
 80012be:	b133      	cbz	r3, 80012ce <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x3a>
 80012c0:	f8d4 35f4 	ldr.w	r3, [r4, #1524]	; 0x5f4
 80012c4:	4283      	cmp	r3, r0
 80012c6:	bf3c      	itt	cc
 80012c8:	2300      	movcc	r3, #0
 80012ca:	f8c4 35d4 	strcc.w	r3, [r4, #1492]	; 0x5d4
 80012ce:	2700      	movs	r7, #0
 80012d0:	46ba      	mov	r10, r7
 80012d2:	f104 0b04 	add.w	r11, r4, #4
 80012d6:	463e      	mov	r6, r7
 80012d8:	f504 7886 	add.w	r8, r4, #268	; 0x10c
 80012dc:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 80012e0:	b9e3      	cbnz	r3, 800131c <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x88>
 80012e2:	4658      	mov	r0, r11
 80012e4:	f000 fee2 	bl	80020ac <BufferedSerial::readable()>
 80012e8:	bb18      	cbnz	r0, 8001332 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x9e>
 80012ea:	f894 35e8 	ldrb.w	r3, [r4, #1512]	; 0x5e8
 80012ee:	b15b      	cbz	r3, 8001308 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x74>
 80012f0:	f8d4 35ec 	ldr.w	r3, [r4, #1516]	; 0x5ec
 80012f4:	f640 12c4 	movw	r2, #2500	; 0x9c4
 80012f8:	1aeb      	subs	r3, r5, r3
 80012fa:	4293      	cmp	r3, r2
 80012fc:	d904      	bls.n	8001308 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x74>
 80012fe:	4620      	mov	r0, r4
 8001300:	f7ff fd28 	bl	8000d54 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::requestSyncTime()>
 8001304:	f8c4 55ec 	str.w	r5, [r4, #1516]	; 0x5ec
 8001308:	2f00      	cmp	r7, #0
 800130a:	f040 80d7 	bne.w	80014bc <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x228>
 800130e:	f1ba 0f00 	cmp.w	r10, #0
 8001312:	bf14      	ite	ne
 8001314:	f06f 0002 	mvnne.w	r0, #2
 8001318:	2000      	moveq	r0, #0
 800131a:	e0a7      	b.n	800146c <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x1d8>
 800131c:	4648      	mov	r0, r9
 800131e:	f004 fbe7 	bl	8005af0 <mbed::Timer::read_ms()>
 8001322:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8001326:	1b40      	subs	r0, r0, r5
 8001328:	4298      	cmp	r0, r3
 800132a:	d9da      	bls.n	80012e2 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x4e>
 800132c:	f06f 0001 	mvn.w	r0, #1
 8001330:	e09c      	b.n	800146c <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x1d8>
 8001332:	4658      	mov	r0, r11
 8001334:	f000 fec4 	bl	80020c0 <BufferedSerial::getc()>
 8001338:	2800      	cmp	r0, #0
 800133a:	dbd6      	blt.n	80012ea <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x56>
 800133c:	f8d4 35e4 	ldr.w	r3, [r4, #1508]	; 0x5e4
 8001340:	f8d4 25d4 	ldr.w	r2, [r4, #1492]	; 0x5d4
 8001344:	4403      	add	r3, r0
 8001346:	2a07      	cmp	r2, #7
 8001348:	f8c4 35e4 	str.w	r3, [r4, #1508]	; 0x5e4
 800134c:	d110      	bne.n	8001370 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0xdc>
 800134e:	f8d4 35e0 	ldr.w	r3, [r4, #1504]	; 0x5e0
 8001352:	1c5a      	adds	r2, r3, #1
 8001354:	4423      	add	r3, r4
 8001356:	f8c4 25e0 	str.w	r2, [r4, #1504]	; 0x5e0
 800135a:	f883 010c 	strb.w	r0, [r3, #268]	; 0x10c
 800135e:	f8d4 35d8 	ldr.w	r3, [r4, #1496]	; 0x5d8
 8001362:	3b01      	subs	r3, #1
 8001364:	f8c4 35d8 	str.w	r3, [r4, #1496]	; 0x5d8
 8001368:	2b00      	cmp	r3, #0
 800136a:	d1b7      	bne.n	80012dc <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x48>
 800136c:	2308      	movs	r3, #8
 800136e:	e01c      	b.n	80013aa <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x116>
 8001370:	b9b2      	cbnz	r2, 80013a0 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x10c>
 8001372:	28ff      	cmp	r0, #255	; 0xff
 8001374:	d107      	bne.n	8001386 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0xf2>
 8001376:	2301      	movs	r3, #1
 8001378:	f8c4 35d4 	str.w	r3, [r4, #1492]	; 0x5d4
 800137c:	f105 0314 	add.w	r3, r5, #20
 8001380:	f8c4 35f4 	str.w	r3, [r4, #1524]	; 0x5f4
 8001384:	e7aa      	b.n	80012dc <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x48>
 8001386:	4648      	mov	r0, r9
 8001388:	9201      	str	r2, [sp, #4]
 800138a:	f004 fbb1 	bl	8005af0 <mbed::Timer::read_ms()>
 800138e:	f241 3388 	movw	r3, #5000	; 0x1388
 8001392:	1b40      	subs	r0, r0, r5
 8001394:	4298      	cmp	r0, r3
 8001396:	9a01      	ldr	r2, [sp, #4]
 8001398:	d9a0      	bls.n	80012dc <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x48>
 800139a:	f884 25e8 	strb.w	r2, [r4, #1512]	; 0x5e8
 800139e:	e7c5      	b.n	800132c <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x98>
 80013a0:	2a01      	cmp	r2, #1
 80013a2:	d10f      	bne.n	80013c4 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x130>
 80013a4:	28fe      	cmp	r0, #254	; 0xfe
 80013a6:	d103      	bne.n	80013b0 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x11c>
 80013a8:	2302      	movs	r3, #2
 80013aa:	f8c4 35d4 	str.w	r3, [r4, #1492]	; 0x5d4
 80013ae:	e795      	b.n	80012dc <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x48>
 80013b0:	f894 35e8 	ldrb.w	r3, [r4, #1512]	; 0x5e8
 80013b4:	f8c4 65d4 	str.w	r6, [r4, #1492]	; 0x5d4
 80013b8:	2b00      	cmp	r3, #0
 80013ba:	d18f      	bne.n	80012dc <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x48>
 80013bc:	4620      	mov	r0, r4
 80013be:	f7ff fcc9 	bl	8000d54 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::requestSyncTime()>
 80013c2:	e78b      	b.n	80012dc <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x48>
 80013c4:	2a02      	cmp	r2, #2
 80013c6:	d109      	bne.n	80013dc <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x148>
 80013c8:	f8c4 05d8 	str.w	r0, [r4, #1496]	; 0x5d8
 80013cc:	f8c4 65e0 	str.w	r6, [r4, #1504]	; 0x5e0
 80013d0:	2303      	movs	r3, #3
 80013d2:	f8c4 35d4 	str.w	r3, [r4, #1492]	; 0x5d4
 80013d6:	f8c4 05e4 	str.w	r0, [r4, #1508]	; 0x5e4
 80013da:	e77f      	b.n	80012dc <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x48>
 80013dc:	2a03      	cmp	r2, #3
 80013de:	d107      	bne.n	80013f0 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x15c>
 80013e0:	f8d4 35d8 	ldr.w	r3, [r4, #1496]	; 0x5d8
 80013e4:	eb03 2000 	add.w	r0, r3, r0, lsl #8
 80013e8:	f8c4 05d8 	str.w	r0, [r4, #1496]	; 0x5d8
 80013ec:	2304      	movs	r3, #4
 80013ee:	e7dc      	b.n	80013aa <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x116>
 80013f0:	2a04      	cmp	r2, #4
 80013f2:	d10b      	bne.n	800140c <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x178>
 80013f4:	425a      	negs	r2, r3
 80013f6:	b2d2      	uxtb	r2, r2
 80013f8:	b2db      	uxtb	r3, r3
 80013fa:	bf58      	it	pl
 80013fc:	4253      	negpl	r3, r2
 80013fe:	2bff      	cmp	r3, #255	; 0xff
 8001400:	d101      	bne.n	8001406 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x172>
 8001402:	2305      	movs	r3, #5
 8001404:	e7d1      	b.n	80013aa <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x116>
 8001406:	f8c4 65d4 	str.w	r6, [r4, #1492]	; 0x5d4
 800140a:	e767      	b.n	80012dc <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x48>
 800140c:	2a05      	cmp	r2, #5
 800140e:	d103      	bne.n	8001418 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x184>
 8001410:	f8c4 05dc 	str.w	r0, [r4, #1500]	; 0x5dc
 8001414:	2306      	movs	r3, #6
 8001416:	e7dc      	b.n	80013d2 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x13e>
 8001418:	2a06      	cmp	r2, #6
 800141a:	d10b      	bne.n	8001434 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x1a0>
 800141c:	f8d4 35dc 	ldr.w	r3, [r4, #1500]	; 0x5dc
 8001420:	eb03 2000 	add.w	r0, r3, r0, lsl #8
 8001424:	2307      	movs	r3, #7
 8001426:	f8c4 35d4 	str.w	r3, [r4, #1492]	; 0x5d4
 800142a:	f8c4 05dc 	str.w	r0, [r4, #1500]	; 0x5dc
 800142e:	f8d4 35d8 	ldr.w	r3, [r4, #1496]	; 0x5d8
 8001432:	e799      	b.n	8001368 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0xd4>
 8001434:	2a08      	cmp	r2, #8
 8001436:	f47f af51 	bne.w	80012dc <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x48>
 800143a:	425a      	negs	r2, r3
 800143c:	b2d2      	uxtb	r2, r2
 800143e:	b2db      	uxtb	r3, r3
 8001440:	bf58      	it	pl
 8001442:	4253      	negpl	r3, r2
 8001444:	2bff      	cmp	r3, #255	; 0xff
 8001446:	f8c4 65d4 	str.w	r6, [r4, #1492]	; 0x5d4
 800144a:	f47f af47 	bne.w	80012dc <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x48>
 800144e:	f8d4 35dc 	ldr.w	r3, [r4, #1500]	; 0x5dc
 8001452:	b973      	cbnz	r3, 8001472 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x1de>
 8001454:	4620      	mov	r0, r4
 8001456:	f7ff fc7d 	bl	8000d54 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::requestSyncTime()>
 800145a:	4620      	mov	r0, r4
 800145c:	f7ff fc92 	bl	8000d84 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::negotiateTopics()>
 8001460:	f8c4 55ec 	str.w	r5, [r4, #1516]	; 0x5ec
 8001464:	f8c4 55f0 	str.w	r5, [r4, #1520]	; 0x5f0
 8001468:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800146c:	b003      	add	sp, #12
 800146e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, pc}
 8001472:	2b0a      	cmp	r3, #10
 8001474:	d105      	bne.n	8001482 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x1ee>
 8001476:	4641      	mov	r1, r8
 8001478:	4620      	mov	r0, r4
 800147a:	f7ff fce1 	bl	8000e40 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::syncTime(unsigned char*)>
 800147e:	2701      	movs	r7, #1
 8001480:	e72c      	b.n	80012dc <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x48>
 8001482:	2b06      	cmp	r3, #6
 8001484:	d108      	bne.n	8001498 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x204>
 8001486:	4641      	mov	r1, r8
 8001488:	f204 50fc 	addw	r0, r4, #1532	; 0x5fc
 800148c:	f7ff fabb 	bl	8000a06 <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)>
 8001490:	2301      	movs	r3, #1
 8001492:	f884 35f8 	strb.w	r3, [r4, #1528]	; 0x5f8
 8001496:	e721      	b.n	80012dc <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x48>
 8001498:	2b0b      	cmp	r3, #11
 800149a:	d104      	bne.n	80014a6 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x212>
 800149c:	f884 65e8 	strb.w	r6, [r4, #1512]	; 0x5e8
 80014a0:	f04f 0a01 	mov.w	r10, #1
 80014a4:	e71a      	b.n	80012dc <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x48>
 80014a6:	33f8      	adds	r3, #248	; 0xf8
 80014a8:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 80014ac:	2800      	cmp	r0, #0
 80014ae:	f43f af15 	beq.w	80012dc <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x48>
 80014b2:	6803      	ldr	r3, [r0, #0]
 80014b4:	4641      	mov	r1, r8
 80014b6:	681b      	ldr	r3, [r3, #0]
 80014b8:	4798      	blx	r3
 80014ba:	e70f      	b.n	80012dc <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x48>
 80014bc:	f06f 0003 	mvn.w	r0, #3
 80014c0:	e7d4      	b.n	800146c <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x1d8>
	...

080014c4 <main>:
 80014c4:	b500      	push	{lr}
 80014c6:	4c1c      	ldr	r4, [pc, #112]	; (8001538 <main+0x74>)
 80014c8:	b089      	sub	sp, #36	; 0x24
 80014ca:	230a      	movs	r3, #10
 80014cc:	2028      	movs	r0, #40	; 0x28
 80014ce:	6263      	str	r3, [r4, #36]	; 0x24
 80014d0:	f005 fd74 	bl	8006fbc <malloc>
 80014d4:	62e0      	str	r0, [r4, #44]	; 0x2c
 80014d6:	4c19      	ldr	r4, [pc, #100]	; (800153c <main+0x78>)
 80014d8:	f8d4 10e8 	ldr.w	r1, [r4, #232]	; 0xe8
 80014dc:	1d20      	adds	r0, r4, #4
 80014de:	f004 fc49 	bl	8005d74 <mbed::SerialBase::baud(int)>
 80014e2:	2300      	movs	r3, #0
 80014e4:	f8c4 35d4 	str.w	r3, [r4, #1492]	; 0x5d4
 80014e8:	f8c4 35d8 	str.w	r3, [r4, #1496]	; 0x5d8
 80014ec:	f8c4 35e0 	str.w	r3, [r4, #1504]	; 0x5e0
 80014f0:	f8c4 35dc 	str.w	r3, [r4, #1500]	; 0x5dc
 80014f4:	f7ff fbdc 	bl	8000cb0 <initRosTopics()>
 80014f8:	4811      	ldr	r0, [pc, #68]	; (8001540 <main+0x7c>)
 80014fa:	f004 fabc 	bl	8005a76 <mbed::Timer::start()>
 80014fe:	4b11      	ldr	r3, [pc, #68]	; (8001544 <main+0x80>)
 8001500:	9300      	str	r3, [sp, #0]
 8001502:	4669      	mov	r1, sp
 8001504:	4b10      	ldr	r3, [pc, #64]	; (8001548 <main+0x84>)
 8001506:	9303      	str	r3, [sp, #12]
 8001508:	a804      	add	r0, sp, #16
 800150a:	f7ff f8f2 	bl	80006f2 <mbed::Callback<void ()>::Callback(mbed::Callback<void ()> const&)>
 800150e:	480f      	ldr	r0, [pc, #60]	; (800154c <main+0x88>)
 8001510:	f7ff f8cc 	bl	80006ac <mbed::Callback<void ()>::~Callback()>
 8001514:	a904      	add	r1, sp, #16
 8001516:	480d      	ldr	r0, [pc, #52]	; (800154c <main+0x88>)
 8001518:	f7ff f8eb 	bl	80006f2 <mbed::Callback<void ()>::Callback(mbed::Callback<void ()> const&)>
 800151c:	490c      	ldr	r1, [pc, #48]	; (8001550 <main+0x8c>)
 800151e:	480d      	ldr	r0, [pc, #52]	; (8001554 <main+0x90>)
 8001520:	f004 fa74 	bl	8005a0c <mbed::Ticker::setup(unsigned long)>
 8001524:	a804      	add	r0, sp, #16
 8001526:	f7ff f8c1 	bl	80006ac <mbed::Callback<void ()>::~Callback()>
 800152a:	4668      	mov	r0, sp
 800152c:	f7ff f8be 	bl	80006ac <mbed::Callback<void ()>::~Callback()>
 8001530:	4620      	mov	r0, r4
 8001532:	f7ff feaf 	bl	8001294 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()>
 8001536:	e7fb      	b.n	8001530 <main+0x6c>
 8001538:	20000254 	.word	0x20000254
 800153c:	2000083c 	.word	0x2000083c
 8001540:	20000fa8 	.word	0x20000fa8
 8001544:	080005f9 	.word	0x080005f9
 8001548:	08007e24 	.word	0x08007e24
 800154c:	20000818 	.word	0x20000818
 8001550:	000186a0 	.word	0x000186a0
 8001554:	20000800 	.word	0x20000800

08001558 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)>:
 8001558:	b5f0      	push	{r4, r5, r6, r7, lr}
 800155a:	2963      	cmp	r1, #99	; 0x63
 800155c:	b085      	sub	sp, #20
 800155e:	4604      	mov	r4, r0
 8001560:	460e      	mov	r6, r1
 8001562:	dd03      	ble.n	800156c <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0x14>
 8001564:	f890 55e8 	ldrb.w	r5, [r0, #1512]	; 0x5e8
 8001568:	2d00      	cmp	r5, #0
 800156a:	d04d      	beq.n	8001608 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0xb0>
 800156c:	6813      	ldr	r3, [r2, #0]
 800156e:	f204 3113 	addw	r1, r4, #787	; 0x313
 8001572:	681b      	ldr	r3, [r3, #0]
 8001574:	4610      	mov	r0, r2
 8001576:	4798      	blx	r3
 8001578:	23ff      	movs	r3, #255	; 0xff
 800157a:	f884 330c 	strb.w	r3, [r4, #780]	; 0x30c
 800157e:	23fe      	movs	r3, #254	; 0xfe
 8001580:	f3c0 2207 	ubfx	r2, r0, #8, #8
 8001584:	f884 330d 	strb.w	r3, [r4, #781]	; 0x30d
 8001588:	b2c3      	uxtb	r3, r0
 800158a:	f884 330e 	strb.w	r3, [r4, #782]	; 0x30e
 800158e:	4413      	add	r3, r2
 8001590:	43db      	mvns	r3, r3
 8001592:	f884 6311 	strb.w	r6, [r4, #785]	; 0x311
 8001596:	f346 2607 	sbfx	r6, r6, #8, #8
 800159a:	f884 230f 	strb.w	r2, [r4, #783]	; 0x30f
 800159e:	f884 3310 	strb.w	r3, [r4, #784]	; 0x310
 80015a2:	f884 6312 	strb.w	r6, [r4, #786]	; 0x312
 80015a6:	f204 3111 	addw	r1, r4, #785	; 0x311
 80015aa:	2205      	movs	r2, #5
 80015ac:	2300      	movs	r3, #0
 80015ae:	1d86      	adds	r6, r0, #6
 80015b0:	42b2      	cmp	r2, r6
 80015b2:	dc04      	bgt.n	80015be <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0x66>
 80015b4:	f811 5b01 	ldrb.w	r5, [r1], #1
 80015b8:	3201      	adds	r2, #1
 80015ba:	442b      	add	r3, r5
 80015bc:	e7f8      	b.n	80015b0 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0x58>
 80015be:	f100 0508 	add.w	r5, r0, #8
 80015c2:	4420      	add	r0, r4
 80015c4:	43db      	mvns	r3, r3
 80015c6:	f5b5 7f00 	cmp.w	r5, #512	; 0x200
 80015ca:	f880 3313 	strb.w	r3, [r0, #787]	; 0x313
 80015ce:	dc0c      	bgt.n	80015ea <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0x92>
 80015d0:	f504 7743 	add.w	r7, r4, #780	; 0x30c
 80015d4:	463e      	mov	r6, r7
 80015d6:	3404      	adds	r4, #4
 80015d8:	1bf3      	subs	r3, r6, r7
 80015da:	429d      	cmp	r5, r3
 80015dc:	dd14      	ble.n	8001608 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0xb0>
 80015de:	f816 1b01 	ldrb.w	r1, [r6], #1
 80015e2:	4620      	mov	r0, r4
 80015e4:	f000 feb2 	bl	800234c <BufferedSerial::putc(int)>
 80015e8:	e7f6      	b.n	80015d8 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0x80>
 80015ea:	4b09      	ldr	r3, [pc, #36]	; (8001610 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0xb8>)
 80015ec:	9301      	str	r3, [sp, #4]
 80015ee:	2303      	movs	r3, #3
 80015f0:	f88d 3008 	strb.w	r3, [sp, #8]
 80015f4:	4b07      	ldr	r3, [pc, #28]	; (8001614 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0xbc>)
 80015f6:	9303      	str	r3, [sp, #12]
 80015f8:	6823      	ldr	r3, [r4, #0]
 80015fa:	aa01      	add	r2, sp, #4
 80015fc:	681b      	ldr	r3, [r3, #0]
 80015fe:	2107      	movs	r1, #7
 8001600:	4620      	mov	r0, r4
 8001602:	4798      	blx	r3
 8001604:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
 8001608:	4628      	mov	r0, r5
 800160a:	b005      	add	sp, #20
 800160c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800160e:	bf00      	nop
 8001610:	08007d10 	.word	0x08007d10
 8001614:	08007fa1 	.word	0x08007fa1

08001618 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::~NodeHandle_()>:
 8001618:	b510      	push	{r4, lr}
 800161a:	4b04      	ldr	r3, [pc, #16]	; (800162c <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::~NodeHandle_()+0x14>)
 800161c:	4604      	mov	r4, r0
 800161e:	f840 3b04 	str.w	r3, [r0], #4
 8001622:	f000 fdd7 	bl	80021d4 <BufferedSerial::~BufferedSerial()>
 8001626:	4620      	mov	r0, r4
 8001628:	bd10      	pop	{r4, pc}
 800162a:	bf00      	nop
 800162c:	08007dd0 	.word	0x08007dd0

08001630 <DcServo::~DcServo()>:
 8001630:	b510      	push	{r4, lr}
 8001632:	4604      	mov	r4, r0
 8001634:	30d8      	adds	r0, #216	; 0xd8
 8001636:	f7ff f841 	bl	80006bc <mbed::Ticker::~Ticker()>
 800163a:	f104 00ac 	add.w	r0, r4, #172	; 0xac
 800163e:	f000 fa75 	bl	8001b2c <LowpassFilter::~LowpassFilter()>
 8001642:	4620      	mov	r0, r4
 8001644:	bd10      	pop	{r4, pc}

08001646 <Encoder::~Encoder()>:
 8001646:	b510      	push	{r4, lr}
 8001648:	4604      	mov	r4, r0
 800164a:	3050      	adds	r0, #80	; 0x50
 800164c:	f004 fa9c 	bl	8005b88 <mbed::InterruptIn::~InterruptIn()>
 8001650:	4620      	mov	r0, r4
 8001652:	f004 fa99 	bl	8005b88 <mbed::InterruptIn::~InterruptIn()>
 8001656:	4620      	mov	r0, r4
 8001658:	bd10      	pop	{r4, pc}

0800165a <void mbed::Callback<void ()>::function_move<mbed::Callback<void ()>::method_context<DcServo, void (DcServo::*)()> >(void*, void const*)>:
 800165a:	4603      	mov	r3, r0
 800165c:	b110      	cbz	r0, 8001664 <void mbed::Callback<void ()>::function_move<mbed::Callback<void ()>::method_context<DcServo, void (DcServo::*)()> >(void*, void const*)+0xa>
 800165e:	c907      	ldmia	r1, {r0, r1, r2}
 8001660:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8001664:	4770      	bx	lr

08001666 <void mbed::Callback<void ()>::function_dtor<mbed::Callback<void ()>::method_context<DcServo, void (DcServo::*)()> >(void*)>:
 8001666:	4770      	bx	lr

08001668 <void mbed::Callback<void ()>::function_call<mbed::Callback<void ()>::method_context<DcServo, void (DcServo::*)()> >(void const*)>:
 8001668:	6842      	ldr	r2, [r0, #4]
 800166a:	6881      	ldr	r1, [r0, #8]
 800166c:	6803      	ldr	r3, [r0, #0]
 800166e:	f012 0f01 	tst.w	r2, #1
 8001672:	ea4f 0262 	mov.w	r2, r2, asr #1
 8001676:	bf1c      	itt	ne
 8001678:	5888      	ldrne	r0, [r1, r2]
 800167a:	58c3      	ldrne	r3, [r0, r3]
 800167c:	1888      	adds	r0, r1, r2
 800167e:	4718      	bx	r3

08001680 <DcServo::getPWM()>:
 8001680:	f8d0 010c 	ldr.w	r0, [r0, #268]	; 0x10c
 8001684:	4770      	bx	lr

08001686 <DcServo::getAngle()>:
 8001686:	b508      	push	{r3, lr}
 8001688:	6d00      	ldr	r0, [r0, #80]	; 0x50
 800168a:	f000 f9c5 	bl	8001a18 <Encoder::getCurAngle()>
 800168e:	f080 4000 	eor.w	r0, r0, #2147483648	; 0x80000000
 8001692:	bd08      	pop	{r3, pc}

08001694 <DcServo::directRevolute(float)>:
 8001694:	b538      	push	{r3, r4, r5, lr}
 8001696:	6883      	ldr	r3, [r0, #8]
 8001698:	6802      	ldr	r2, [r0, #0]
 800169a:	601a      	str	r2, [r3, #0]
 800169c:	69c3      	ldr	r3, [r0, #28]
 800169e:	6a82      	ldr	r2, [r0, #40]	; 0x28
 80016a0:	041b      	lsls	r3, r3, #16
 80016a2:	4604      	mov	r4, r0
 80016a4:	460d      	mov	r5, r1
 80016a6:	6013      	str	r3, [r2, #0]
 80016a8:	f001 f82a 	bl	8002700 <core_util_critical_section_enter>
 80016ac:	4629      	mov	r1, r5
 80016ae:	f104 0038 	add.w	r0, r4, #56	; 0x38
 80016b2:	f002 fe11 	bl	80042d8 <pwmout_write>
 80016b6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80016ba:	f001 b837 	b.w	800272c <core_util_critical_section_exit>

080016be <DcServo::inverseRevolute(float)>:
 80016be:	b538      	push	{r3, r4, r5, lr}
 80016c0:	6803      	ldr	r3, [r0, #0]
 80016c2:	68c2      	ldr	r2, [r0, #12]
 80016c4:	041b      	lsls	r3, r3, #16
 80016c6:	6013      	str	r3, [r2, #0]
 80016c8:	6a43      	ldr	r3, [r0, #36]	; 0x24
 80016ca:	69c2      	ldr	r2, [r0, #28]
 80016cc:	601a      	str	r2, [r3, #0]
 80016ce:	4604      	mov	r4, r0
 80016d0:	460d      	mov	r5, r1
 80016d2:	f001 f815 	bl	8002700 <core_util_critical_section_enter>
 80016d6:	4629      	mov	r1, r5
 80016d8:	f104 0038 	add.w	r0, r4, #56	; 0x38
 80016dc:	f002 fdfc 	bl	80042d8 <pwmout_write>
 80016e0:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80016e4:	f001 b822 	b.w	800272c <core_util_critical_section_exit>

080016e8 <DcServo::revolute(float)>:
 80016e8:	ee07 1a90 	vmov	s15, r1
 80016ec:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80016f0:	eef4 7ac7 	vcmpe.f32	s15, s14
 80016f4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80016f8:	f8c0 110c 	str.w	r1, [r0, #268]	; 0x10c
 80016fc:	db03      	blt.n	8001706 <DcServo::revolute(float)+0x1e>
 80016fe:	ee17 1a10 	vmov	r1, s14
 8001702:	f7ff bfc7 	b.w	8001694 <DcServo::directRevolute(float)>
 8001706:	eeff 6a00 	vmov.f32	s13, #240	; 0xbf800000 -1.0
 800170a:	eef4 7ae6 	vcmpe.f32	s15, s13
 800170e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001712:	d803      	bhi.n	800171c <DcServo::revolute(float)+0x34>
 8001714:	ee17 1a10 	vmov	r1, s14
 8001718:	f7ff bfd1 	b.w	80016be <DcServo::inverseRevolute(float)>
 800171c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8001720:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001724:	dced      	bgt.n	8001702 <DcServo::revolute(float)+0x1a>
 8001726:	eef1 7a67 	vneg.f32	s15, s15
 800172a:	ee17 1a90 	vmov	r1, s15
 800172e:	e7f3      	b.n	8001718 <DcServo::revolute(float)+0x30>

08001730 <DcServo::revoluteMotor()>:
 8001730:	b538      	push	{r3, r4, r5, lr}
 8001732:	ed2d 8b02 	vpush	{d8}
 8001736:	f100 0554 	add.w	r5, r0, #84	; 0x54
 800173a:	4604      	mov	r4, r0
 800173c:	ed90 8a42 	vldr	s16, [r0, #264]	; 0x108
 8001740:	f7ff ffa1 	bl	8001686 <DcServo::getAngle()>
 8001744:	ee07 0a90 	vmov	s15, r0
 8001748:	ee78 7a67 	vsub.f32	s15, s16, s15
 800174c:	4628      	mov	r0, r5
 800174e:	ee17 1a90 	vmov	r1, s15
 8001752:	f000 fbe5 	bl	8001f20 <PID::setProcessValue(float)>
 8001756:	4628      	mov	r0, r5
 8001758:	f000 fbe8 	bl	8001f2c <PID::compute()>
 800175c:	ecbd 8b02 	vpop	{d8}
 8001760:	4601      	mov	r1, r0
 8001762:	4620      	mov	r0, r4
 8001764:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8001768:	f7ff bfbe 	b.w	80016e8 <DcServo::revolute(float)>

0800176c <DcServo::stop()>:
 800176c:	6803      	ldr	r3, [r0, #0]
 800176e:	68c2      	ldr	r2, [r0, #12]
 8001770:	041b      	lsls	r3, r3, #16
 8001772:	b510      	push	{r4, lr}
 8001774:	6013      	str	r3, [r2, #0]
 8001776:	69c3      	ldr	r3, [r0, #28]
 8001778:	6a82      	ldr	r2, [r0, #40]	; 0x28
 800177a:	041b      	lsls	r3, r3, #16
 800177c:	6013      	str	r3, [r2, #0]
 800177e:	4604      	mov	r4, r0
 8001780:	f000 ffbe 	bl	8002700 <core_util_critical_section_enter>
 8001784:	2100      	movs	r1, #0
 8001786:	f104 0038 	add.w	r0, r4, #56	; 0x38
 800178a:	f002 fda5 	bl	80042d8 <pwmout_write>
 800178e:	f000 ffcd 	bl	800272c <core_util_critical_section_exit>
 8001792:	f894 3100 	ldrb.w	r3, [r4, #256]	; 0x100
 8001796:	b133      	cbz	r3, 80017a6 <DcServo::stop()+0x3a>
 8001798:	f104 00d8 	add.w	r0, r4, #216	; 0xd8
 800179c:	f004 f94a 	bl	8005a34 <mbed::Ticker::detach()>
 80017a0:	2300      	movs	r3, #0
 80017a2:	f884 3100 	strb.w	r3, [r4, #256]	; 0x100
 80017a6:	f04f 507c 	mov.w	r0, #1056964608	; 0x3f000000
 80017aa:	f004 fc13 	bl	8005fd4 <wait>
 80017ae:	2300      	movs	r3, #0
 80017b0:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
 80017b4:	f8c4 3108 	str.w	r3, [r4, #264]	; 0x108
 80017b8:	6d20      	ldr	r0, [r4, #80]	; 0x50
 80017ba:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80017be:	f000 b947 	b.w	8001a50 <Encoder::reset()>

080017c2 <DcServo::setPid(float, float, float)>:
 80017c2:	3054      	adds	r0, #84	; 0x54
 80017c4:	f000 baaa 	b.w	8001d1c <PID::setTunings(float, float, float)>

080017c8 <DcServo::initPid()>:
 80017c8:	b510      	push	{r4, lr}
 80017ca:	f100 0454 	add.w	r4, r0, #84	; 0x54
 80017ce:	4620      	mov	r0, r4
 80017d0:	4a09      	ldr	r2, [pc, #36]	; (80017f8 <DcServo::initPid()+0x30>)
 80017d2:	490a      	ldr	r1, [pc, #40]	; (80017fc <DcServo::initPid()+0x34>)
 80017d4:	f000 fa3c 	bl	8001c50 <PID::setInputLimits(float, float)>
 80017d8:	4620      	mov	r0, r4
 80017da:	f04f 527e 	mov.w	r2, #1065353216	; 0x3f800000
 80017de:	4908      	ldr	r1, [pc, #32]	; (8001800 <DcServo::initPid()+0x38>)
 80017e0:	f000 fa6a 	bl	8001cb8 <PID::setOutputLimits(float, float)>
 80017e4:	4620      	mov	r0, r4
 80017e6:	2100      	movs	r1, #0
 80017e8:	f000 fb9c 	bl	8001f24 <PID::setBias(float)>
 80017ec:	4620      	mov	r0, r4
 80017ee:	2101      	movs	r1, #1
 80017f0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80017f4:	f000 bb88 	b.w	8001f08 <PID::setMode(int)>
 80017f8:	43b40000 	.word	0x43b40000
 80017fc:	c3b40000 	.word	0xc3b40000
 8001800:	bf800000 	.word	0xbf800000

08001804 <DcServo::attachPidTiker()>:
 8001804:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001806:	b089      	sub	sp, #36	; 0x24
 8001808:	4b15      	ldr	r3, [pc, #84]	; (8001860 <DcServo::attachPidTiker()+0x5c>)
 800180a:	9300      	str	r3, [sp, #0]
 800180c:	4604      	mov	r4, r0
 800180e:	2300      	movs	r3, #0
 8001810:	ad04      	add	r5, sp, #16
 8001812:	9301      	str	r3, [sp, #4]
 8001814:	9002      	str	r0, [sp, #8]
 8001816:	4b13      	ldr	r3, [pc, #76]	; (8001864 <DcServo::attachPidTiker()+0x60>)
 8001818:	9303      	str	r3, [sp, #12]
 800181a:	f100 07d8 	add.w	r7, r0, #216	; 0xd8
 800181e:	4669      	mov	r1, sp
 8001820:	4628      	mov	r0, r5
 8001822:	f104 06f0 	add.w	r6, r4, #240	; 0xf0
 8001826:	f7fe ff64 	bl	80006f2 <mbed::Callback<void ()>::Callback(mbed::Callback<void ()> const&)>
 800182a:	42ae      	cmp	r6, r5
 800182c:	d007      	beq.n	800183e <DcServo::attachPidTiker()+0x3a>
 800182e:	4630      	mov	r0, r6
 8001830:	f7fe ff3c 	bl	80006ac <mbed::Callback<void ()>::~Callback()>
 8001834:	b11e      	cbz	r6, 800183e <DcServo::attachPidTiker()+0x3a>
 8001836:	4629      	mov	r1, r5
 8001838:	4630      	mov	r0, r6
 800183a:	f7fe ff5a 	bl	80006f2 <mbed::Callback<void ()>::Callback(mbed::Callback<void ()> const&)>
 800183e:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 8001842:	4638      	mov	r0, r7
 8001844:	f004 f8e2 	bl	8005a0c <mbed::Ticker::setup(unsigned long)>
 8001848:	4628      	mov	r0, r5
 800184a:	f7fe ff2f 	bl	80006ac <mbed::Callback<void ()>::~Callback()>
 800184e:	4668      	mov	r0, sp
 8001850:	f7fe ff2c 	bl	80006ac <mbed::Callback<void ()>::~Callback()>
 8001854:	2301      	movs	r3, #1
 8001856:	f884 3100 	strb.w	r3, [r4, #256]	; 0x100
 800185a:	b009      	add	sp, #36	; 0x24
 800185c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800185e:	bf00      	nop
 8001860:	08001731 	.word	0x08001731
 8001864:	08008120 	.word	0x08008120

08001868 <DcServo::DcServo(PinName, PinName, PinName, Encoder*)>:
 8001868:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800186c:	261c      	movs	r6, #28
 800186e:	4604      	mov	r4, r0
 8001870:	460d      	mov	r5, r1
 8001872:	4690      	mov	r8, r2
 8001874:	2100      	movs	r1, #0
 8001876:	4632      	mov	r2, r6
 8001878:	461f      	mov	r7, r3
 800187a:	f005 fc26 	bl	80070ca <memset>
 800187e:	4629      	mov	r1, r5
 8001880:	4620      	mov	r0, r4
 8001882:	19a5      	adds	r5, r4, r6
 8001884:	f000 fe3a 	bl	80024fc <gpio_init_out>
 8001888:	4632      	mov	r2, r6
 800188a:	2100      	movs	r1, #0
 800188c:	4628      	mov	r0, r5
 800188e:	f005 fc1c 	bl	80070ca <memset>
 8001892:	4641      	mov	r1, r8
 8001894:	4628      	mov	r0, r5
 8001896:	f000 fe31 	bl	80024fc <gpio_init_out>
 800189a:	f000 ff31 	bl	8002700 <core_util_critical_section_enter>
 800189e:	4639      	mov	r1, r7
 80018a0:	f104 0038 	add.w	r0, r4, #56	; 0x38
 80018a4:	f002 fe32 	bl	800450c <pwmout_init>
 80018a8:	f000 ff40 	bl	800272c <core_util_critical_section_exit>
 80018ac:	9b08      	ldr	r3, [sp, #32]
 80018ae:	6523      	str	r3, [r4, #80]	; 0x50
 80018b0:	2500      	movs	r5, #0
 80018b2:	4b14      	ldr	r3, [pc, #80]	; (8001904 <DcServo::DcServo(PinName, PinName, PinName, Encoder*)+0x9c>)
 80018b4:	9300      	str	r3, [sp, #0]
 80018b6:	462a      	mov	r2, r5
 80018b8:	f04f 517e 	mov.w	r1, #1065353216	; 0x3f800000
 80018bc:	462b      	mov	r3, r5
 80018be:	f104 0054 	add.w	r0, r4, #84	; 0x54
 80018c2:	f000 fa95 	bl	8001df0 <PID::PID(float, float, float, float)>
 80018c6:	f104 00ac 	add.w	r0, r4, #172	; 0xac
 80018ca:	f000 f937 	bl	8001b3c <LowpassFilter::LowpassFilter()>
 80018ce:	f104 00d8 	add.w	r0, r4, #216	; 0xd8
 80018d2:	f004 fb05 	bl	8005ee0 <mbed::TimerEvent::TimerEvent()>
 80018d6:	4b0c      	ldr	r3, [pc, #48]	; (8001908 <DcServo::DcServo(PinName, PinName, PinName, Encoder*)+0xa0>)
 80018d8:	f8c4 30d8 	str.w	r3, [r4, #216]	; 0xd8
 80018dc:	2300      	movs	r3, #0
 80018de:	f8c4 30fc 	str.w	r3, [r4, #252]	; 0xfc
 80018e2:	f884 3100 	strb.w	r3, [r4, #256]	; 0x100
 80018e6:	4620      	mov	r0, r4
 80018e8:	f8c4 5108 	str.w	r5, [r4, #264]	; 0x108
 80018ec:	f8c4 510c 	str.w	r5, [r4, #268]	; 0x10c
 80018f0:	f7ff ff6a 	bl	80017c8 <DcServo::initPid()>
 80018f4:	4620      	mov	r0, r4
 80018f6:	f7ff ff85 	bl	8001804 <DcServo::attachPidTiker()>
 80018fa:	4620      	mov	r0, r4
 80018fc:	b002      	add	sp, #8
 80018fe:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001902:	bf00      	nop
 8001904:	3a83126f 	.word	0x3a83126f
 8001908:	080086e8 	.word	0x080086e8

0800190c <DcServo::setAngle(float)>:
 800190c:	b538      	push	{r3, r4, r5, lr}
 800190e:	f890 3100 	ldrb.w	r3, [r0, #256]	; 0x100
 8001912:	4604      	mov	r4, r0
 8001914:	460d      	mov	r5, r1
 8001916:	b90b      	cbnz	r3, 800191c <DcServo::setAngle(float)+0x10>
 8001918:	f7ff ff74 	bl	8001804 <DcServo::attachPidTiker()>
 800191c:	f8c4 5108 	str.w	r5, [r4, #264]	; 0x108
 8001920:	bd38      	pop	{r3, r4, r5, pc}

08001922 <void mbed::Callback<void ()>::function_move<mbed::Callback<void ()>::method_context<Encoder, void (Encoder::*)()> >(void*, void const*)>:
 8001922:	4603      	mov	r3, r0
 8001924:	b110      	cbz	r0, 800192c <void mbed::Callback<void ()>::function_move<mbed::Callback<void ()>::method_context<Encoder, void (Encoder::*)()> >(void*, void const*)+0xa>
 8001926:	c907      	ldmia	r1, {r0, r1, r2}
 8001928:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800192c:	4770      	bx	lr

0800192e <void mbed::Callback<void ()>::function_dtor<mbed::Callback<void ()>::method_context<Encoder, void (Encoder::*)()> >(void*)>:
 800192e:	4770      	bx	lr

08001930 <void mbed::Callback<void ()>::function_call<mbed::Callback<void ()>::method_context<Encoder, void (Encoder::*)()> >(void const*)>:
 8001930:	6842      	ldr	r2, [r0, #4]
 8001932:	6881      	ldr	r1, [r0, #8]
 8001934:	6803      	ldr	r3, [r0, #0]
 8001936:	f012 0f01 	tst.w	r2, #1
 800193a:	ea4f 0262 	mov.w	r2, r2, asr #1
 800193e:	bf1c      	itt	ne
 8001940:	5888      	ldrne	r0, [r1, r2]
 8001942:	58c3      	ldrne	r3, [r0, r3]
 8001944:	1888      	adds	r0, r1, r2
 8001946:	4718      	bx	r3

08001948 <Encoder::incrementEncTicks()>:
 8001948:	b538      	push	{r3, r4, r5, lr}
 800194a:	4604      	mov	r4, r0
 800194c:	f004 f914 	bl	8005b78 <mbed::InterruptIn::read()>
 8001950:	4605      	mov	r5, r0
 8001952:	f104 0050 	add.w	r0, r4, #80	; 0x50
 8001956:	f004 f90f 	bl	8005b78 <mbed::InterruptIn::read()>
 800195a:	f894 30a0 	ldrb.w	r3, [r4, #160]	; 0xa0
 800195e:	ea40 0045 	orr.w	r0, r0, r5, lsl #1
 8001962:	f8c4 00b4 	str.w	r0, [r4, #180]	; 0xb4
 8001966:	b9b3      	cbnz	r3, 8001996 <Encoder::incrementEncTicks()+0x4e>
 8001968:	f8d4 30b8 	ldr.w	r3, [r4, #184]	; 0xb8
 800196c:	2b03      	cmp	r3, #3
 800196e:	d102      	bne.n	8001976 <Encoder::incrementEncTicks()+0x2e>
 8001970:	f8d4 30b4 	ldr.w	r3, [r4, #180]	; 0xb4
 8001974:	b133      	cbz	r3, 8001984 <Encoder::incrementEncTicks()+0x3c>
 8001976:	f8d4 30b8 	ldr.w	r3, [r4, #184]	; 0xb8
 800197a:	bb4b      	cbnz	r3, 80019d0 <Encoder::incrementEncTicks()+0x88>
 800197c:	f8d4 30b4 	ldr.w	r3, [r4, #180]	; 0xb4
 8001980:	2b03      	cmp	r3, #3
 8001982:	d125      	bne.n	80019d0 <Encoder::incrementEncTicks()+0x88>
 8001984:	f8d4 30b0 	ldr.w	r3, [r4, #176]	; 0xb0
 8001988:	3301      	adds	r3, #1
 800198a:	f8c4 30b0 	str.w	r3, [r4, #176]	; 0xb0
 800198e:	2300      	movs	r3, #0
 8001990:	f884 30bd 	strb.w	r3, [r4, #189]	; 0xbd
 8001994:	e00c      	b.n	80019b0 <Encoder::incrementEncTicks()+0x68>
 8001996:	f8d4 30b4 	ldr.w	r3, [r4, #180]	; 0xb4
 800199a:	f8d4 20b8 	ldr.w	r2, [r4, #184]	; 0xb8
 800199e:	4053      	eors	r3, r2
 80019a0:	2b03      	cmp	r3, #3
 80019a2:	d005      	beq.n	80019b0 <Encoder::incrementEncTicks()+0x68>
 80019a4:	f8d4 20b4 	ldr.w	r2, [r4, #180]	; 0xb4
 80019a8:	f8d4 30b8 	ldr.w	r3, [r4, #184]	; 0xb8
 80019ac:	429a      	cmp	r2, r3
 80019ae:	d126      	bne.n	80019fe <Encoder::incrementEncTicks()+0xb6>
 80019b0:	f8d4 30b4 	ldr.w	r3, [r4, #180]	; 0xb4
 80019b4:	f8c4 30b8 	str.w	r3, [r4, #184]	; 0xb8
 80019b8:	bd38      	pop	{r3, r4, r5, pc}
 80019ba:	2301      	movs	r3, #1
 80019bc:	f884 30bd 	strb.w	r3, [r4, #189]	; 0xbd
 80019c0:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 80019c4:	f8d4 20b0 	ldr.w	r2, [r4, #176]	; 0xb0
 80019c8:	1ad3      	subs	r3, r2, r3
 80019ca:	f8c4 30b0 	str.w	r3, [r4, #176]	; 0xb0
 80019ce:	e7ef      	b.n	80019b0 <Encoder::incrementEncTicks()+0x68>
 80019d0:	f8d4 30b8 	ldr.w	r3, [r4, #184]	; 0xb8
 80019d4:	2b02      	cmp	r3, #2
 80019d6:	d103      	bne.n	80019e0 <Encoder::incrementEncTicks()+0x98>
 80019d8:	f8d4 30b4 	ldr.w	r3, [r4, #180]	; 0xb4
 80019dc:	2b01      	cmp	r3, #1
 80019de:	d007      	beq.n	80019f0 <Encoder::incrementEncTicks()+0xa8>
 80019e0:	f8d4 30b8 	ldr.w	r3, [r4, #184]	; 0xb8
 80019e4:	2b01      	cmp	r3, #1
 80019e6:	d1e3      	bne.n	80019b0 <Encoder::incrementEncTicks()+0x68>
 80019e8:	f8d4 30b4 	ldr.w	r3, [r4, #180]	; 0xb4
 80019ec:	2b02      	cmp	r3, #2
 80019ee:	d1df      	bne.n	80019b0 <Encoder::incrementEncTicks()+0x68>
 80019f0:	f8d4 30b0 	ldr.w	r3, [r4, #176]	; 0xb0
 80019f4:	3b01      	subs	r3, #1
 80019f6:	f8c4 30b0 	str.w	r3, [r4, #176]	; 0xb0
 80019fa:	2301      	movs	r3, #1
 80019fc:	e7c8      	b.n	8001990 <Encoder::incrementEncTicks()+0x48>
 80019fe:	f8d4 30b8 	ldr.w	r3, [r4, #184]	; 0xb8
 8001a02:	f8d4 20b4 	ldr.w	r2, [r4, #180]	; 0xb4
 8001a06:	ea83 0362 	eor.w	r3, r3, r2, asr #1
 8001a0a:	f013 0301 	ands.w	r3, r3, #1
 8001a0e:	d0d4      	beq.n	80019ba <Encoder::incrementEncTicks()+0x72>
 8001a10:	2200      	movs	r2, #0
 8001a12:	f884 20bd 	strb.w	r2, [r4, #189]	; 0xbd
 8001a16:	e7d5      	b.n	80019c4 <Encoder::incrementEncTicks()+0x7c>

08001a18 <Encoder::getCurAngle()>:
 8001a18:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 8001a1c:	f8d0 20a8 	ldr.w	r2, [r0, #168]	; 0xa8
 8001a20:	ed90 7a2c 	vldr	s14, [r0, #176]	; 0xb0
 8001a24:	eddf 7a09 	vldr	s15, [pc, #36]	; 8001a4c <Encoder::getCurAngle()+0x34>
 8001a28:	435a      	muls	r2, r3
 8001a2a:	f8d0 30ac 	ldr.w	r3, [r0, #172]	; 0xac
 8001a2e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8001a32:	4353      	muls	r3, r2
 8001a34:	ee27 7a27 	vmul.f32	s14, s14, s15
 8001a38:	ee07 3a90 	vmov	s15, r3
 8001a3c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8001a40:	eec7 6a27 	vdiv.f32	s13, s14, s15
 8001a44:	ee16 0a90 	vmov	r0, s13
 8001a48:	4770      	bx	lr
 8001a4a:	bf00      	nop
 8001a4c:	43b40000 	.word	0x43b40000

08001a50 <Encoder::reset()>:
 8001a50:	2300      	movs	r3, #0
 8001a52:	f8c0 30b0 	str.w	r3, [r0, #176]	; 0xb0
 8001a56:	4770      	bx	lr

08001a58 <Encoder::Encoder(PinName, PinName, int, int, bool)>:
 8001a58:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8001a5c:	4604      	mov	r4, r0
 8001a5e:	4617      	mov	r7, r2
 8001a60:	f104 0550 	add.w	r5, r4, #80	; 0x50
 8001a64:	461e      	mov	r6, r3
 8001a66:	f004 f8bf 	bl	8005be8 <mbed::InterruptIn::InterruptIn(PinName)>
 8001a6a:	4639      	mov	r1, r7
 8001a6c:	4628      	mov	r0, r5
 8001a6e:	f004 f8bb 	bl	8005be8 <mbed::InterruptIn::InterruptIn(PinName)>
 8001a72:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8001a74:	f8c4 30a4 	str.w	r3, [r4, #164]	; 0xa4
 8001a78:	f89d 302c 	ldrb.w	r3, [sp, #44]	; 0x2c
 8001a7c:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
 8001a80:	f8c4 60a8 	str.w	r6, [r4, #168]	; 0xa8
 8001a84:	4620      	mov	r0, r4
 8001a86:	f004 f877 	bl	8005b78 <mbed::InterruptIn::read()>
 8001a8a:	4606      	mov	r6, r0
 8001a8c:	4628      	mov	r0, r5
 8001a8e:	f004 f873 	bl	8005b78 <mbed::InterruptIn::read()>
 8001a92:	ea40 0046 	orr.w	r0, r0, r6, lsl #1
 8001a96:	f8c4 00b4 	str.w	r0, [r4, #180]	; 0xb4
 8001a9a:	f8d4 30b4 	ldr.w	r3, [r4, #180]	; 0xb4
 8001a9e:	f8c4 30b8 	str.w	r3, [r4, #184]	; 0xb8
 8001aa2:	4669      	mov	r1, sp
 8001aa4:	f8df 8080 	ldr.w	r8, [pc, #128]	; 8001b28 <Encoder::Encoder(PinName, PinName, int, int, bool)+0xd0>
 8001aa8:	4e1e      	ldr	r6, [pc, #120]	; (8001b24 <Encoder::Encoder(PinName, PinName, int, int, bool)+0xcc>)
 8001aaa:	f8cd 8000 	str.w	r8, [sp]
 8001aae:	2700      	movs	r7, #0
 8001ab0:	4620      	mov	r0, r4
 8001ab2:	9701      	str	r7, [sp, #4]
 8001ab4:	9402      	str	r4, [sp, #8]
 8001ab6:	9603      	str	r6, [sp, #12]
 8001ab8:	f004 f8e0 	bl	8005c7c <mbed::InterruptIn::rise(mbed::Callback<void ()>)>
 8001abc:	4668      	mov	r0, sp
 8001abe:	f7fe fdf5 	bl	80006ac <mbed::Callback<void ()>::~Callback()>
 8001ac2:	4669      	mov	r1, sp
 8001ac4:	4620      	mov	r0, r4
 8001ac6:	f8cd 8000 	str.w	r8, [sp]
 8001aca:	9701      	str	r7, [sp, #4]
 8001acc:	9402      	str	r4, [sp, #8]
 8001ace:	9603      	str	r6, [sp, #12]
 8001ad0:	f004 f8fa 	bl	8005cc8 <mbed::InterruptIn::fall(mbed::Callback<void ()>)>
 8001ad4:	4668      	mov	r0, sp
 8001ad6:	f7fe fde9 	bl	80006ac <mbed::Callback<void ()>::~Callback()>
 8001ada:	f894 30a0 	ldrb.w	r3, [r4, #160]	; 0xa0
 8001ade:	b1f3      	cbz	r3, 8001b1e <Encoder::Encoder(PinName, PinName, int, int, bool)+0xc6>
 8001ae0:	4669      	mov	r1, sp
 8001ae2:	4628      	mov	r0, r5
 8001ae4:	f8cd 8000 	str.w	r8, [sp]
 8001ae8:	9701      	str	r7, [sp, #4]
 8001aea:	9402      	str	r4, [sp, #8]
 8001aec:	9603      	str	r6, [sp, #12]
 8001aee:	f004 f8c5 	bl	8005c7c <mbed::InterruptIn::rise(mbed::Callback<void ()>)>
 8001af2:	4668      	mov	r0, sp
 8001af4:	f7fe fdda 	bl	80006ac <mbed::Callback<void ()>::~Callback()>
 8001af8:	4669      	mov	r1, sp
 8001afa:	4628      	mov	r0, r5
 8001afc:	f8cd 8000 	str.w	r8, [sp]
 8001b00:	9701      	str	r7, [sp, #4]
 8001b02:	9402      	str	r4, [sp, #8]
 8001b04:	9603      	str	r6, [sp, #12]
 8001b06:	f004 f8df 	bl	8005cc8 <mbed::InterruptIn::fall(mbed::Callback<void ()>)>
 8001b0a:	4668      	mov	r0, sp
 8001b0c:	f7fe fdce 	bl	80006ac <mbed::Callback<void ()>::~Callback()>
 8001b10:	2304      	movs	r3, #4
 8001b12:	4620      	mov	r0, r4
 8001b14:	f8c4 30ac 	str.w	r3, [r4, #172]	; 0xac
 8001b18:	b004      	add	sp, #16
 8001b1a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001b1e:	2302      	movs	r3, #2
 8001b20:	e7f7      	b.n	8001b12 <Encoder::Encoder(PinName, PinName, int, int, bool)+0xba>
 8001b22:	bf00      	nop
 8001b24:	0800812c 	.word	0x0800812c
 8001b28:	08001949 	.word	0x08001949

08001b2c <LowpassFilter::~LowpassFilter()>:
 8001b2c:	4770      	bx	lr

08001b2e <LowpassFilter::~LowpassFilter()>:
 8001b2e:	b510      	push	{r4, lr}
 8001b30:	4604      	mov	r4, r0
 8001b32:	f004 fb7d 	bl	8006230 <operator delete(void*)>
 8001b36:	4620      	mov	r0, r4
 8001b38:	bd10      	pop	{r4, pc}
	...

08001b3c <LowpassFilter::LowpassFilter()>:
 8001b3c:	b510      	push	{r4, lr}
 8001b3e:	4b40      	ldr	r3, [pc, #256]	; (8001c40 <LowpassFilter::LowpassFilter()+0x104>)
 8001b40:	ed2d 8b04 	vpush	{d8-d9}
 8001b44:	eef7 8a00 	vmov.f32	s17, #112	; 0x3f800000  1.0
 8001b48:	6003      	str	r3, [r0, #0]
 8001b4a:	4b3e      	ldr	r3, [pc, #248]	; (8001c44 <LowpassFilter::LowpassFilter()+0x108>)
 8001b4c:	6083      	str	r3, [r0, #8]
 8001b4e:	4604      	mov	r4, r0
 8001b50:	edc0 8a01 	vstr	s17, [r0, #4]
 8001b54:	483c      	ldr	r0, [pc, #240]	; (8001c48 <LowpassFilter::LowpassFilter()+0x10c>)
 8001b56:	f005 ff4d 	bl	80079f4 <expf>
 8001b5a:	eddf 7a3c 	vldr	s15, [pc, #240]	; 8001c4c <LowpassFilter::LowpassFilter()+0x110>
 8001b5e:	ed94 8a01 	vldr	s16, [r4, #4]
 8001b62:	ee07 0a10 	vmov	s14, r0
 8001b66:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001b6a:	edc4 7a03 	vstr	s15, [r4, #12]
 8001b6e:	edd4 7a02 	vldr	s15, [r4, #8]
 8001b72:	ee67 7ac8 	vnmul.f32	s15, s15, s16
 8001b76:	ee17 0a90 	vmov	r0, s15
 8001b7a:	f005 ff3b 	bl	80079f4 <expf>
 8001b7e:	ee07 0a90 	vmov	s15, r0
 8001b82:	ee28 8a27 	vmul.f32	s16, s16, s15
 8001b86:	ed94 9a01 	vldr	s18, [r4, #4]
 8001b8a:	ed84 8a04 	vstr	s16, [r4, #16]
 8001b8e:	ed94 8a02 	vldr	s16, [r4, #8]
 8001b92:	eef1 9a48 	vneg.f32	s19, s16
 8001b96:	ee69 7a89 	vmul.f32	s15, s19, s18
 8001b9a:	ee17 0a90 	vmov	r0, s15
 8001b9e:	f005 ff29 	bl	80079f4 <expf>
 8001ba2:	ee28 8a29 	vmul.f32	s16, s16, s19
 8001ba6:	ee07 0a90 	vmov	s15, r0
 8001baa:	ee28 8a09 	vmul.f32	s16, s16, s18
 8001bae:	ed94 9a01 	vldr	s18, [r4, #4]
 8001bb2:	ee28 8a27 	vmul.f32	s16, s16, s15
 8001bb6:	ed84 8a05 	vstr	s16, [r4, #20]
 8001bba:	ed94 8a02 	vldr	s16, [r4, #8]
 8001bbe:	eeb1 8a48 	vneg.f32	s16, s16
 8001bc2:	ee68 7a09 	vmul.f32	s15, s16, s18
 8001bc6:	ee17 0a90 	vmov	r0, s15
 8001bca:	f005 ff13 	bl	80079f4 <expf>
 8001bce:	eef0 7a68 	vmov.f32	s15, s17
 8001bd2:	eee8 7a09 	vfma.f32	s15, s16, s18
 8001bd6:	ee07 0a10 	vmov	s14, r0
 8001bda:	ed94 9a02 	vldr	s18, [r4, #8]
 8001bde:	ed94 8a01 	vldr	s16, [r4, #4]
 8001be2:	ee67 7a87 	vmul.f32	s15, s15, s14
 8001be6:	edc4 7a06 	vstr	s15, [r4, #24]
 8001bea:	ee69 7a48 	vnmul.f32	s15, s18, s16
 8001bee:	ee17 0a90 	vmov	r0, s15
 8001bf2:	f005 feff 	bl	80079f4 <expf>
 8001bf6:	eeb0 7a68 	vmov.f32	s14, s17
 8001bfa:	eea9 7a08 	vfma.f32	s14, s18, s16
 8001bfe:	ee06 0a90 	vmov	s13, r0
 8001c02:	eee7 8a66 	vfms.f32	s17, s14, s13
 8001c06:	edd4 7a02 	vldr	s15, [r4, #8]
 8001c0a:	ed94 8a01 	vldr	s16, [r4, #4]
 8001c0e:	eec8 6aa7 	vdiv.f32	s13, s17, s15
 8001c12:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8001c16:	ee67 7ac8 	vnmul.f32	s15, s15, s16
 8001c1a:	ed84 7a07 	vstr	s14, [r4, #28]
 8001c1e:	ee17 0a90 	vmov	r0, s15
 8001c22:	f005 fee7 	bl	80079f4 <expf>
 8001c26:	ee07 0a90 	vmov	s15, r0
 8001c2a:	ee28 8a27 	vmul.f32	s16, s16, s15
 8001c2e:	2300      	movs	r3, #0
 8001c30:	ed84 8a08 	vstr	s16, [r4, #32]
 8001c34:	ecbd 8b04 	vpop	{d8-d9}
 8001c38:	4620      	mov	r0, r4
 8001c3a:	6263      	str	r3, [r4, #36]	; 0x24
 8001c3c:	62a3      	str	r3, [r4, #40]	; 0x28
 8001c3e:	bd10      	pop	{r4, pc}
 8001c40:	08008140 	.word	0x08008140
 8001c44:	447a0000 	.word	0x447a0000
 8001c48:	c47a0000 	.word	0xc47a0000
 8001c4c:	447a4000 	.word	0x447a4000

08001c50 <PID::setInputLimits(float, float)>:
 8001c50:	ee06 1a90 	vmov	s13, r1
 8001c54:	ee07 2a10 	vmov	s14, r2
 8001c58:	eef4 6ac7 	vcmpe.f32	s13, s14
 8001c5c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001c60:	da20      	bge.n	8001ca4 <PID::setInputLimits(float, float)+0x54>
 8001c62:	edd0 7a0e 	vldr	s15, [r0, #56]	; 0x38
 8001c66:	ed90 6a12 	vldr	s12, [r0, #72]	; 0x48
 8001c6a:	ee77 5a66 	vsub.f32	s11, s14, s13
 8001c6e:	ee85 5aa7 	vdiv.f32	s10, s11, s15
 8001c72:	edd0 7a09 	vldr	s15, [r0, #36]	; 0x24
 8001c76:	ee26 6a05 	vmul.f32	s12, s12, s10
 8001c7a:	ee65 7a27 	vmul.f32	s15, s10, s15
 8001c7e:	ed80 6a12 	vstr	s12, [r0, #72]	; 0x48
 8001c82:	eeb7 6a00 	vmov.f32	s12, #112	; 0x3f800000  1.0
 8001c86:	eef4 7ac6 	vcmpe.f32	s15, s12
 8001c8a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001c8e:	edc0 7a09 	vstr	s15, [r0, #36]	; 0x24
 8001c92:	dd08      	ble.n	8001ca6 <PID::setInputLimits(float, float)+0x56>
 8001c94:	ed80 6a09 	vstr	s12, [r0, #36]	; 0x24
 8001c98:	edc0 6a0c 	vstr	s13, [r0, #48]	; 0x30
 8001c9c:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 8001ca0:	edc0 5a0e 	vstr	s11, [r0, #56]	; 0x38
 8001ca4:	4770      	bx	lr
 8001ca6:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8001caa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001cae:	bf44      	itt	mi
 8001cb0:	2300      	movmi	r3, #0
 8001cb2:	6243      	strmi	r3, [r0, #36]	; 0x24
 8001cb4:	e7f0      	b.n	8001c98 <PID::setInputLimits(float, float)+0x48>
	...

08001cb8 <PID::setOutputLimits(float, float)>:
 8001cb8:	ee06 1a90 	vmov	s13, r1
 8001cbc:	ee07 2a10 	vmov	s14, r2
 8001cc0:	eef4 6ac7 	vcmpe.f32	s13, s14
 8001cc4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001cc8:	da18      	bge.n	8001cfc <PID::setOutputLimits(float, float)+0x44>
 8001cca:	ed90 6a11 	vldr	s12, [r0, #68]	; 0x44
 8001cce:	ee77 5a66 	vsub.f32	s11, s14, s13
 8001cd2:	eec5 7a86 	vdiv.f32	s15, s11, s12
 8001cd6:	ed90 6a0b 	vldr	s12, [r0, #44]	; 0x2c
 8001cda:	ee67 7a86 	vmul.f32	s15, s15, s12
 8001cde:	eeb7 6a00 	vmov.f32	s12, #112	; 0x3f800000  1.0
 8001ce2:	eef4 7ac6 	vcmpe.f32	s15, s12
 8001ce6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001cea:	dd08      	ble.n	8001cfe <PID::setOutputLimits(float, float)+0x46>
 8001cec:	ed80 6a0b 	vstr	s12, [r0, #44]	; 0x2c
 8001cf0:	edc0 6a0f 	vstr	s13, [r0, #60]	; 0x3c
 8001cf4:	ed80 7a10 	vstr	s14, [r0, #64]	; 0x40
 8001cf8:	edc0 5a11 	vstr	s11, [r0, #68]	; 0x44
 8001cfc:	4770      	bx	lr
 8001cfe:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8001d02:	ed9f 6a05 	vldr	s12, [pc, #20]	; 8001d18 <PID::setOutputLimits(float, float)+0x60>
 8001d06:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001d0a:	bf48      	it	mi
 8001d0c:	eef0 7a46 	vmovmi.f32	s15, s12
 8001d10:	edc0 7a0b 	vstr	s15, [r0, #44]	; 0x2c
 8001d14:	e7ec      	b.n	8001cf0 <PID::setOutputLimits(float, float)+0x38>
 8001d16:	bf00      	nop
 8001d18:	00000000 	.word	0x00000000

08001d1c <PID::setTunings(float, float, float)>:
 8001d1c:	b5d0      	push	{r4, r6, r7, lr}
 8001d1e:	ed2d 8b04 	vpush	{d8-d9}
 8001d22:	ee08 1a10 	vmov	s16, r1
 8001d26:	eeb5 8a40 	vcmp.f32	s16, #0.0
 8001d2a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001d2e:	4604      	mov	r4, r0
 8001d30:	ee07 2a90 	vmov	s15, r2
 8001d34:	ee08 3a90 	vmov	s17, r3
 8001d38:	ed9f 9a2b 	vldr	s18, [pc, #172]	; 8001de8 <PID::setTunings(float, float, float)+0xcc>
 8001d3c:	d03c      	beq.n	8001db8 <PID::setTunings(float, float, float)+0x9c>
 8001d3e:	eef4 7ac9 	vcmpe.f32	s15, s18
 8001d42:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001d46:	d437      	bmi.n	8001db8 <PID::setTunings(float, float, float)+0x9c>
 8001d48:	eef4 8ac9 	vcmpe.f32	s17, s18
 8001d4c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001d50:	d432      	bmi.n	8001db8 <PID::setTunings(float, float, float)+0x9c>
 8001d52:	eef4 7a49 	vcmp.f32	s15, s18
 8001d56:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001d5a:	6121      	str	r1, [r4, #16]
 8001d5c:	6162      	str	r2, [r4, #20]
 8001d5e:	61a3      	str	r3, [r4, #24]
 8001d60:	d02d      	beq.n	8001dbe <PID::setTunings(float, float, float)+0xa2>
 8001d62:	4610      	mov	r0, r2
 8001d64:	f004 fcbc 	bl	80066e0 <__aeabi_f2d>
 8001d68:	4602      	mov	r2, r0
 8001d6a:	460b      	mov	r3, r1
 8001d6c:	2000      	movs	r0, #0
 8001d6e:	491f      	ldr	r1, [pc, #124]	; (8001dec <PID::setTunings(float, float, float)+0xd0>)
 8001d70:	f004 fe34 	bl	80069dc <__aeabi_ddiv>
 8001d74:	4606      	mov	r6, r0
 8001d76:	6d20      	ldr	r0, [r4, #80]	; 0x50
 8001d78:	460f      	mov	r7, r1
 8001d7a:	f004 fcb1 	bl	80066e0 <__aeabi_f2d>
 8001d7e:	4602      	mov	r2, r0
 8001d80:	460b      	mov	r3, r1
 8001d82:	4630      	mov	r0, r6
 8001d84:	4639      	mov	r1, r7
 8001d86:	f004 fcff 	bl	8006788 <__aeabi_dmul>
 8001d8a:	f004 ff0f 	bl	8006bac <__aeabi_d2f>
 8001d8e:	ee07 0a90 	vmov	s15, r0
 8001d92:	7863      	ldrb	r3, [r4, #1]
 8001d94:	b133      	cbz	r3, 8001da4 <PID::setTunings(float, float, float)+0x88>
 8001d96:	eef5 7a40 	vcmp.f32	s15, #0.0
 8001d9a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001d9e:	d111      	bne.n	8001dc4 <PID::setTunings(float, float, float)+0xa8>
 8001da0:	ed84 9a12 	vstr	s18, [r4, #72]	; 0x48
 8001da4:	ed94 7a14 	vldr	s14, [r4, #80]	; 0x50
 8001da8:	edc4 7a02 	vstr	s15, [r4, #8]
 8001dac:	eec8 7a87 	vdiv.f32	s15, s17, s14
 8001db0:	ed84 8a01 	vstr	s16, [r4, #4]
 8001db4:	edc4 7a03 	vstr	s15, [r4, #12]
 8001db8:	ecbd 8b04 	vpop	{d8-d9}
 8001dbc:	bdd0      	pop	{r4, r6, r7, pc}
 8001dbe:	eef0 7a49 	vmov.f32	s15, s18
 8001dc2:	e7e6      	b.n	8001d92 <PID::setTunings(float, float, float)+0x76>
 8001dc4:	ed94 7a02 	vldr	s14, [r4, #8]
 8001dc8:	edd4 6a01 	vldr	s13, [r4, #4]
 8001dcc:	ee66 6a87 	vmul.f32	s13, s13, s14
 8001dd0:	ee28 7a27 	vmul.f32	s14, s16, s15
 8001dd4:	ee86 6a87 	vdiv.f32	s12, s13, s14
 8001dd8:	ed94 7a12 	vldr	s14, [r4, #72]	; 0x48
 8001ddc:	ee27 7a06 	vmul.f32	s14, s14, s12
 8001de0:	ed84 7a12 	vstr	s14, [r4, #72]	; 0x48
 8001de4:	e7de      	b.n	8001da4 <PID::setTunings(float, float, float)+0x88>
 8001de6:	bf00      	nop
 8001de8:	00000000 	.word	0x00000000
 8001dec:	3ff00000 	.word	0x3ff00000

08001df0 <PID::PID(float, float, float, float)>:
 8001df0:	b510      	push	{r4, lr}
 8001df2:	4604      	mov	r4, r0
 8001df4:	ed94 7a0e 	vldr	s14, [r4, #56]	; 0x38
 8001df8:	edd4 6a12 	vldr	s13, [r4, #72]	; 0x48
 8001dfc:	eef2 7a08 	vmov.f32	s15, #40	; 0x41400000  12.0
 8001e00:	ee87 6a87 	vdiv.f32	s12, s15, s14
 8001e04:	2000      	movs	r0, #0
 8001e06:	7020      	strb	r0, [r4, #0]
 8001e08:	7060      	strb	r0, [r4, #1]
 8001e0a:	ed94 7a09 	vldr	s14, [r4, #36]	; 0x24
 8001e0e:	ee66 6a86 	vmul.f32	s13, s13, s12
 8001e12:	ee26 7a07 	vmul.f32	s14, s12, s14
 8001e16:	edc4 6a12 	vstr	s13, [r4, #72]	; 0x48
 8001e1a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8001e1e:	eeb4 7ae6 	vcmpe.f32	s14, s13
 8001e22:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001e26:	ed2d 8b02 	vpush	{d8}
 8001e2a:	ed84 7a09 	vstr	s14, [r4, #36]	; 0x24
 8001e2e:	ed9f 8a25 	vldr	s16, [pc, #148]	; 8001ec4 <PID::PID(float, float, float, float)+0xd4>
 8001e32:	dd35      	ble.n	8001ea0 <PID::PID(float, float, float, float)+0xb0>
 8001e34:	edc4 6a09 	vstr	s13, [r4, #36]	; 0x24
 8001e38:	ed94 6a11 	vldr	s12, [r4, #68]	; 0x44
 8001e3c:	ed84 8a0c 	vstr	s16, [r4, #48]	; 0x30
 8001e40:	ee87 7a86 	vdiv.f32	s14, s15, s12
 8001e44:	ed94 6a0b 	vldr	s12, [r4, #44]	; 0x2c
 8001e48:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 8001e4c:	ee27 7a06 	vmul.f32	s14, s14, s12
 8001e50:	edc4 7a0e 	vstr	s15, [r4, #56]	; 0x38
 8001e54:	eeb4 7ae6 	vcmpe.f32	s14, s13
 8001e58:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001e5c:	dd28      	ble.n	8001eb0 <PID::PID(float, float, float, float)+0xc0>
 8001e5e:	edc4 6a0b 	vstr	s13, [r4, #44]	; 0x2c
 8001e62:	9804      	ldr	r0, [sp, #16]
 8001e64:	ed84 8a0f 	vstr	s16, [r4, #60]	; 0x3c
 8001e68:	6520      	str	r0, [r4, #80]	; 0x50
 8001e6a:	edc4 7a10 	vstr	s15, [r4, #64]	; 0x40
 8001e6e:	4620      	mov	r0, r4
 8001e70:	edc4 7a11 	vstr	s15, [r4, #68]	; 0x44
 8001e74:	f7ff ff52 	bl	8001d1c <PID::setTunings(float, float, float)>
 8001e78:	ed84 8a07 	vstr	s16, [r4, #28]
 8001e7c:	ed84 8a08 	vstr	s16, [r4, #32]
 8001e80:	ed84 8a09 	vstr	s16, [r4, #36]	; 0x24
 8001e84:	ed84 8a0a 	vstr	s16, [r4, #40]	; 0x28
 8001e88:	ed84 8a0b 	vstr	s16, [r4, #44]	; 0x2c
 8001e8c:	ed84 8a12 	vstr	s16, [r4, #72]	; 0x48
 8001e90:	ed84 8a13 	vstr	s16, [r4, #76]	; 0x4c
 8001e94:	ed84 8a15 	vstr	s16, [r4, #84]	; 0x54
 8001e98:	ecbd 8b02 	vpop	{d8}
 8001e9c:	4620      	mov	r0, r4
 8001e9e:	bd10      	pop	{r4, pc}
 8001ea0:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8001ea4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001ea8:	bf48      	it	mi
 8001eaa:	ed84 8a09 	vstrmi	s16, [r4, #36]	; 0x24
 8001eae:	e7c3      	b.n	8001e38 <PID::PID(float, float, float, float)+0x48>
 8001eb0:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8001eb4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001eb8:	bf48      	it	mi
 8001eba:	eeb0 7a48 	vmovmi.f32	s14, s16
 8001ebe:	ed84 7a0b 	vstr	s14, [r4, #44]	; 0x2c
 8001ec2:	e7ce      	b.n	8001e62 <PID::PID(float, float, float, float)+0x72>
 8001ec4:	00000000 	.word	0x00000000

08001ec8 <PID::reset()>:
 8001ec8:	7803      	ldrb	r3, [r0, #0]
 8001eca:	ed90 7a0f 	vldr	s14, [r0, #60]	; 0x3c
 8001ece:	edd0 6a11 	vldr	s13, [r0, #68]	; 0x44
 8001ed2:	b1b3      	cbz	r3, 8001f02 <PID::reset()+0x3a>
 8001ed4:	edd0 7a13 	vldr	s15, [r0, #76]	; 0x4c
 8001ed8:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8001edc:	2300      	movs	r3, #0
 8001ede:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 8001ee2:	6483      	str	r3, [r0, #72]	; 0x48
 8001ee4:	edd0 7a08 	vldr	s15, [r0, #32]
 8001ee8:	ed80 7a0b 	vstr	s14, [r0, #44]	; 0x2c
 8001eec:	ed90 7a0c 	vldr	s14, [r0, #48]	; 0x30
 8001ef0:	edd0 6a0e 	vldr	s13, [r0, #56]	; 0x38
 8001ef4:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8001ef8:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 8001efc:	ed80 7a09 	vstr	s14, [r0, #36]	; 0x24
 8001f00:	4770      	bx	lr
 8001f02:	edd0 7a15 	vldr	s15, [r0, #84]	; 0x54
 8001f06:	e7e7      	b.n	8001ed8 <PID::reset()+0x10>

08001f08 <PID::setMode(int)>:
 8001f08:	b508      	push	{r3, lr}
 8001f0a:	4602      	mov	r2, r0
 8001f0c:	b119      	cbz	r1, 8001f16 <PID::setMode(int)+0xe>
 8001f0e:	7843      	ldrb	r3, [r0, #1]
 8001f10:	b90b      	cbnz	r3, 8001f16 <PID::setMode(int)+0xe>
 8001f12:	f7ff ffd9 	bl	8001ec8 <PID::reset()>
 8001f16:	3100      	adds	r1, #0
 8001f18:	bf18      	it	ne
 8001f1a:	2101      	movne	r1, #1
 8001f1c:	7051      	strb	r1, [r2, #1]
 8001f1e:	bd08      	pop	{r3, pc}

08001f20 <PID::setProcessValue(float)>:
 8001f20:	6201      	str	r1, [r0, #32]
 8001f22:	4770      	bx	lr

08001f24 <PID::setBias(float)>:
 8001f24:	2301      	movs	r3, #1
 8001f26:	64c1      	str	r1, [r0, #76]	; 0x4c
 8001f28:	7003      	strb	r3, [r0, #0]
 8001f2a:	4770      	bx	lr

08001f2c <PID::compute()>:
 8001f2c:	ed90 5a0c 	vldr	s10, [r0, #48]	; 0x30
 8001f30:	edd0 7a08 	vldr	s15, [r0, #32]
 8001f34:	edd0 5a0e 	vldr	s11, [r0, #56]	; 0x38
 8001f38:	ed9f 4a46 	vldr	s8, [pc, #280]	; 8002054 <PID::compute()+0x128>
 8001f3c:	ee77 7ac5 	vsub.f32	s15, s15, s10
 8001f40:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8001f44:	eec7 6aa5 	vdiv.f32	s13, s15, s11
 8001f48:	eef4 6ac7 	vcmpe.f32	s13, s14
 8001f4c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001f50:	dc6c      	bgt.n	800202c <PID::compute()+0x100>
 8001f52:	eef4 6a44 	vcmp.f32	s13, s8
 8001f56:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001f5a:	bf48      	it	mi
 8001f5c:	eef0 6a44 	vmovmi.f32	s13, s8
 8001f60:	ed90 6a07 	vldr	s12, [r0, #28]
 8001f64:	ee36 6a45 	vsub.f32	s12, s12, s10
 8001f68:	eec6 7a25 	vdiv.f32	s15, s12, s11
 8001f6c:	eef4 7ac7 	vcmpe.f32	s15, s14
 8001f70:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001f74:	dc5d      	bgt.n	8002032 <PID::compute()+0x106>
 8001f76:	eef5 7a40 	vcmp.f32	s15, #0.0
 8001f7a:	ed9f 6a36 	vldr	s12, [pc, #216]	; 8002054 <PID::compute()+0x128>
 8001f7e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001f82:	bf48      	it	mi
 8001f84:	eef0 7a46 	vmovmi.f32	s15, s12
 8001f88:	ed90 6a0b 	vldr	s12, [r0, #44]	; 0x2c
 8001f8c:	eeb4 6ac7 	vcmpe.f32	s12, s14
 8001f90:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001f94:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8001f98:	db04      	blt.n	8001fa4 <PID::compute()+0x78>
 8001f9a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8001f9e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001fa2:	dc0f      	bgt.n	8001fc4 <PID::compute()+0x98>
 8001fa4:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 8001fa8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001fac:	d804      	bhi.n	8001fb8 <PID::compute()+0x8c>
 8001fae:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8001fb2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001fb6:	d405      	bmi.n	8001fc4 <PID::compute()+0x98>
 8001fb8:	ed90 6a12 	vldr	s12, [r0, #72]	; 0x48
 8001fbc:	ee36 6a27 	vadd.f32	s12, s12, s15
 8001fc0:	ed80 6a12 	vstr	s12, [r0, #72]	; 0x48
 8001fc4:	ed90 6a09 	vldr	s12, [r0, #36]	; 0x24
 8001fc8:	edd0 5a14 	vldr	s11, [r0, #80]	; 0x50
 8001fcc:	7803      	ldrb	r3, [r0, #0]
 8001fce:	ed90 5a0f 	vldr	s10, [r0, #60]	; 0x3c
 8001fd2:	edd0 4a11 	vldr	s9, [r0, #68]	; 0x44
 8001fd6:	ee36 6ac6 	vsub.f32	s12, s13, s12
 8001fda:	eec6 3a25 	vdiv.f32	s7, s12, s11
 8001fde:	b35b      	cbz	r3, 8002038 <PID::compute()+0x10c>
 8001fe0:	edd0 5a13 	vldr	s11, [r0, #76]	; 0x4c
 8001fe4:	ee75 5ac5 	vsub.f32	s11, s11, s10
 8001fe8:	ee85 6aa4 	vdiv.f32	s12, s11, s9
 8001fec:	edd0 5a12 	vldr	s11, [r0, #72]	; 0x48
 8001ff0:	ed90 3a02 	vldr	s6, [r0, #8]
 8001ff4:	eee3 7a25 	vfma.f32	s15, s6, s11
 8001ff8:	edd0 5a03 	vldr	s11, [r0, #12]
 8001ffc:	eee3 7ae5 	vfms.f32	s15, s7, s11
 8002000:	edd0 5a01 	vldr	s11, [r0, #4]
 8002004:	eea5 6aa7 	vfma.f32	s12, s11, s15
 8002008:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 800200c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8002010:	d515      	bpl.n	800203e <PID::compute()+0x112>
 8002012:	ed80 4a0a 	vstr	s8, [r0, #40]	; 0x28
 8002016:	edd0 7a0a 	vldr	s15, [r0, #40]	; 0x28
 800201a:	edc0 6a09 	vstr	s13, [r0, #36]	; 0x24
 800201e:	eea7 5aa4 	vfma.f32	s10, s15, s9
 8002022:	edc0 7a0b 	vstr	s15, [r0, #44]	; 0x2c
 8002026:	ee15 0a10 	vmov	r0, s10
 800202a:	4770      	bx	lr
 800202c:	eef0 6a47 	vmov.f32	s13, s14
 8002030:	e796      	b.n	8001f60 <PID::compute()+0x34>
 8002032:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 8002036:	e7a7      	b.n	8001f88 <PID::compute()+0x5c>
 8002038:	ed9f 6a06 	vldr	s12, [pc, #24]	; 8002054 <PID::compute()+0x128>
 800203c:	e7d6      	b.n	8001fec <PID::compute()+0xc0>
 800203e:	eeb4 6ac7 	vcmpe.f32	s12, s14
 8002042:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8002046:	bfd8      	it	le
 8002048:	eeb0 7a46 	vmovle.f32	s14, s12
 800204c:	ed80 7a0a 	vstr	s14, [r0, #40]	; 0x28
 8002050:	e7e1      	b.n	8002016 <PID::compute()+0xea>
 8002052:	bf00      	nop
 8002054:	00000000 	.word	0x00000000

08002058 <_start>:
 8002058:	4807      	ldr	r0, [pc, #28]	; (8002078 <_start+0x20>)
 800205a:	4a08      	ldr	r2, [pc, #32]	; (800207c <_start+0x24>)
 800205c:	b508      	push	{r3, lr}
 800205e:	1a12      	subs	r2, r2, r0
 8002060:	2100      	movs	r1, #0
 8002062:	f005 f832 	bl	80070ca <memset>
 8002066:	f004 f883 	bl	8006170 <software_init_hook>
 800206a:	f004 ff83 	bl	8006f74 <__libc_init_array>
 800206e:	f004 f886 	bl	800617e <__wrap_main>
 8002072:	f004 f8c1 	bl	80061f8 <__wrap_exit>
 8002076:	bf00      	nop
 8002078:	20000238 	.word	0x20000238
 800207c:	20003130 	.word	0x20003130

08002080 <abort>:
 8002080:	b508      	push	{r3, lr}
 8002082:	2001      	movs	r0, #1
 8002084:	f004 f8b8 	bl	80061f8 <__wrap_exit>

08002088 <__cxa_pure_virtual>:
 8002088:	b508      	push	{r3, lr}
 800208a:	f7ff fff9 	bl	8002080 <abort>
	...

08002090 <ros::normalizeSecNSec(unsigned long&, unsigned long&)>:
 8002090:	b530      	push	{r4, r5, lr}
 8002092:	6802      	ldr	r2, [r0, #0]
 8002094:	680d      	ldr	r5, [r1, #0]
 8002096:	4c04      	ldr	r4, [pc, #16]	; (80020a8 <ros::normalizeSecNSec(unsigned long&, unsigned long&)+0x18>)
 8002098:	fbb5 f3f4 	udiv	r3, r5, r4
 800209c:	441a      	add	r2, r3
 800209e:	fb04 5313 	mls	r3, r4, r3, r5
 80020a2:	6002      	str	r2, [r0, #0]
 80020a4:	600b      	str	r3, [r1, #0]
 80020a6:	bd30      	pop	{r4, r5, pc}
 80020a8:	3b9aca00 	.word	0x3b9aca00

080020ac <BufferedSerial::readable()>:
 80020ac:	f8d0 20c0 	ldr.w	r2, [r0, #192]	; 0xc0
 80020b0:	f8d0 00c4 	ldr.w	r0, [r0, #196]	; 0xc4
 80020b4:	1a10      	subs	r0, r2, r0
 80020b6:	bf18      	it	ne
 80020b8:	2001      	movne	r0, #1
 80020ba:	4770      	bx	lr

080020bc <BufferedSerial::writeable()>:
 80020bc:	2001      	movs	r0, #1
 80020be:	4770      	bx	lr

080020c0 <BufferedSerial::getc()>:
 80020c0:	b510      	push	{r4, lr}
 80020c2:	f8d0 20c4 	ldr.w	r2, [r0, #196]	; 0xc4
 80020c6:	f8d0 10bc 	ldr.w	r1, [r0, #188]	; 0xbc
 80020ca:	4603      	mov	r3, r0
 80020cc:	1c50      	adds	r0, r2, #1
 80020ce:	f8c3 00c4 	str.w	r0, [r3, #196]	; 0xc4
 80020d2:	5c88      	ldrb	r0, [r1, r2]
 80020d4:	f8d3 20c8 	ldr.w	r2, [r3, #200]	; 0xc8
 80020d8:	f8d3 40c4 	ldr.w	r4, [r3, #196]	; 0xc4
 80020dc:	3a01      	subs	r2, #1
 80020de:	fbb4 f1f2 	udiv	r1, r4, r2
 80020e2:	fb02 4211 	mls	r2, r2, r1, r4
 80020e6:	f8c3 20c4 	str.w	r2, [r3, #196]	; 0xc4
 80020ea:	bd10      	pop	{r4, pc}

080020ec <void mbed::Callback<void ()>::function_move<mbed::Callback<void ()>::method_context<BufferedSerial, void (BufferedSerial::*)()> >(void*, void const*)>:
 80020ec:	4603      	mov	r3, r0
 80020ee:	b110      	cbz	r0, 80020f6 <void mbed::Callback<void ()>::function_move<mbed::Callback<void ()>::method_context<BufferedSerial, void (BufferedSerial::*)()> >(void*, void const*)+0xa>
 80020f0:	c907      	ldmia	r1, {r0, r1, r2}
 80020f2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80020f6:	4770      	bx	lr

080020f8 <void mbed::Callback<void ()>::function_dtor<mbed::Callback<void ()>::method_context<BufferedSerial, void (BufferedSerial::*)()> >(void*)>:
 80020f8:	4770      	bx	lr

080020fa <void mbed::Callback<void ()>::function_call<mbed::Callback<void ()>::method_context<BufferedSerial, void (BufferedSerial::*)()> >(void const*)>:
 80020fa:	6842      	ldr	r2, [r0, #4]
 80020fc:	6881      	ldr	r1, [r0, #8]
 80020fe:	6803      	ldr	r3, [r0, #0]
 8002100:	f012 0f01 	tst.w	r2, #1
 8002104:	ea4f 0262 	mov.w	r2, r2, asr #1
 8002108:	bf1c      	itt	ne
 800210a:	5888      	ldrne	r0, [r1, r2]
 800210c:	58c3      	ldrne	r3, [r0, r3]
 800210e:	1888      	adds	r0, r1, r2
 8002110:	4718      	bx	r3

08002112 <BufferedSerial::txIrq()>:
 8002112:	b530      	push	{r4, r5, lr}
 8002114:	4604      	mov	r4, r0
 8002116:	b085      	sub	sp, #20
 8002118:	f100 054c 	add.w	r5, r0, #76	; 0x4c
 800211c:	4628      	mov	r0, r5
 800211e:	f002 fd1d 	bl	8004b5c <serial_writable>
 8002122:	b330      	cbz	r0, 8002172 <BufferedSerial::txIrq()+0x60>
 8002124:	f8d4 20d0 	ldr.w	r2, [r4, #208]	; 0xd0
 8002128:	f8d4 30d4 	ldr.w	r3, [r4, #212]	; 0xd4
 800212c:	429a      	cmp	r2, r3
 800212e:	d016      	beq.n	800215e <BufferedSerial::txIrq()+0x4c>
 8002130:	f8d4 30d4 	ldr.w	r3, [r4, #212]	; 0xd4
 8002134:	f8d4 20cc 	ldr.w	r2, [r4, #204]	; 0xcc
 8002138:	1c59      	adds	r1, r3, #1
 800213a:	f8c4 10d4 	str.w	r1, [r4, #212]	; 0xd4
 800213e:	5cd1      	ldrb	r1, [r2, r3]
 8002140:	f8d4 30d8 	ldr.w	r3, [r4, #216]	; 0xd8
 8002144:	f8d4 00d4 	ldr.w	r0, [r4, #212]	; 0xd4
 8002148:	3b01      	subs	r3, #1
 800214a:	fbb0 f2f3 	udiv	r2, r0, r3
 800214e:	fb03 0312 	mls	r3, r3, r2, r0
 8002152:	f8c4 30d4 	str.w	r3, [r4, #212]	; 0xd4
 8002156:	4628      	mov	r0, r5
 8002158:	f002 fd0a 	bl	8004b70 <serial_putc>
 800215c:	e7de      	b.n	800211c <BufferedSerial::txIrq()+0xa>
 800215e:	2300      	movs	r3, #0
 8002160:	4620      	mov	r0, r4
 8002162:	2201      	movs	r2, #1
 8002164:	4669      	mov	r1, sp
 8002166:	9303      	str	r3, [sp, #12]
 8002168:	f003 fe80 	bl	8005e6c <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)>
 800216c:	4668      	mov	r0, sp
 800216e:	f7fe fa9d 	bl	80006ac <mbed::Callback<void ()>::~Callback()>
 8002172:	b005      	add	sp, #20
 8002174:	bd30      	pop	{r4, r5, pc}

08002176 <mbed::Callback<void (int)>::~Callback()>:
 8002176:	68c3      	ldr	r3, [r0, #12]
 8002178:	b510      	push	{r4, lr}
 800217a:	4604      	mov	r4, r0
 800217c:	b10b      	cbz	r3, 8002182 <mbed::Callback<void (int)>::~Callback()+0xc>
 800217e:	689b      	ldr	r3, [r3, #8]
 8002180:	4798      	blx	r3
 8002182:	4620      	mov	r0, r4
 8002184:	bd10      	pop	{r4, pc}
	...

08002188 <mbed::SerialBase::~SerialBase()>:
 8002188:	b570      	push	{r4, r5, r6, lr}
 800218a:	4606      	mov	r6, r0
 800218c:	4b0b      	ldr	r3, [pc, #44]	; (80021bc <mbed::SerialBase::~SerialBase()+0x34>)
 800218e:	f846 3b98 	str.w	r3, [r6], #152
 8002192:	4604      	mov	r4, r0
 8002194:	b146      	cbz	r6, 80021a8 <mbed::SerialBase::~SerialBase()+0x20>
 8002196:	f100 05b8 	add.w	r5, r0, #184	; 0xb8
 800219a:	42b5      	cmp	r5, r6
 800219c:	d004      	beq.n	80021a8 <mbed::SerialBase::~SerialBase()+0x20>
 800219e:	3d10      	subs	r5, #16
 80021a0:	4628      	mov	r0, r5
 80021a2:	f7fe fa83 	bl	80006ac <mbed::Callback<void ()>::~Callback()>
 80021a6:	e7f8      	b.n	800219a <mbed::SerialBase::~SerialBase()+0x12>
 80021a8:	f104 0038 	add.w	r0, r4, #56	; 0x38
 80021ac:	f7ff ffe3 	bl	8002176 <mbed::Callback<void (int)>::~Callback()>
 80021b0:	f104 0028 	add.w	r0, r4, #40	; 0x28
 80021b4:	f7ff ffdf 	bl	8002176 <mbed::Callback<void (int)>::~Callback()>
 80021b8:	4620      	mov	r0, r4
 80021ba:	bd70      	pop	{r4, r5, r6, pc}
 80021bc:	08008724 	.word	0x08008724

080021c0 <mbed::SerialBase::~SerialBase()>:
 80021c0:	b510      	push	{r4, lr}
 80021c2:	4604      	mov	r4, r0
 80021c4:	f7ff ffe0 	bl	8002188 <mbed::SerialBase::~SerialBase()>
 80021c8:	4620      	mov	r0, r4
 80021ca:	f004 f831 	bl	8006230 <operator delete(void*)>
 80021ce:	4620      	mov	r0, r4
 80021d0:	bd10      	pop	{r4, pc}
	...

080021d4 <BufferedSerial::~BufferedSerial()>:
 80021d4:	b530      	push	{r4, r5, lr}
 80021d6:	4b13      	ldr	r3, [pc, #76]	; (8002224 <BufferedSerial::~BufferedSerial()+0x50>)
 80021d8:	6003      	str	r3, [r0, #0]
 80021da:	b085      	sub	sp, #20
 80021dc:	2500      	movs	r5, #0
 80021de:	462a      	mov	r2, r5
 80021e0:	4669      	mov	r1, sp
 80021e2:	4604      	mov	r4, r0
 80021e4:	9503      	str	r5, [sp, #12]
 80021e6:	f003 fe41 	bl	8005e6c <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)>
 80021ea:	4668      	mov	r0, sp
 80021ec:	f7fe fa5e 	bl	80006ac <mbed::Callback<void ()>::~Callback()>
 80021f0:	2201      	movs	r2, #1
 80021f2:	4669      	mov	r1, sp
 80021f4:	4620      	mov	r0, r4
 80021f6:	9503      	str	r5, [sp, #12]
 80021f8:	f003 fe38 	bl	8005e6c <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)>
 80021fc:	4668      	mov	r0, sp
 80021fe:	f7fe fa55 	bl	80006ac <mbed::Callback<void ()>::~Callback()>
 8002202:	f104 00cc 	add.w	r0, r4, #204	; 0xcc
 8002206:	f000 f923 	bl	8002450 <Buffer<char>::~Buffer()>
 800220a:	f104 00bc 	add.w	r0, r4, #188	; 0xbc
 800220e:	f000 f91f 	bl	8002450 <Buffer<char>::~Buffer()>
 8002212:	4b05      	ldr	r3, [pc, #20]	; (8002228 <BufferedSerial::~BufferedSerial()+0x54>)
 8002214:	6023      	str	r3, [r4, #0]
 8002216:	4620      	mov	r0, r4
 8002218:	f7ff ffb6 	bl	8002188 <mbed::SerialBase::~SerialBase()>
 800221c:	4620      	mov	r0, r4
 800221e:	b005      	add	sp, #20
 8002220:	bd30      	pop	{r4, r5, pc}
 8002222:	bf00      	nop
 8002224:	080081d8 	.word	0x080081d8
 8002228:	080086fc 	.word	0x080086fc

0800222c <BufferedSerial::~BufferedSerial()>:
 800222c:	b510      	push	{r4, lr}
 800222e:	4604      	mov	r4, r0
 8002230:	f7ff ffd0 	bl	80021d4 <BufferedSerial::~BufferedSerial()>
 8002234:	4620      	mov	r0, r4
 8002236:	f003 fffb 	bl	8006230 <operator delete(void*)>
 800223a:	4620      	mov	r0, r4
 800223c:	bd10      	pop	{r4, pc}
	...

08002240 <void mbed::SerialBase::attach<BufferedSerial>(BufferedSerial*, void (BufferedSerial::*)(), mbed::SerialBase::IrqType)>:
 8002240:	b510      	push	{r4, lr}
 8002242:	b086      	sub	sp, #24
 8002244:	e88d 000c 	stmia.w	sp, {r2, r3}
 8002248:	9b01      	ldr	r3, [sp, #4]
 800224a:	9202      	str	r2, [sp, #8]
 800224c:	9303      	str	r3, [sp, #12]
 800224e:	9104      	str	r1, [sp, #16]
 8002250:	4b05      	ldr	r3, [pc, #20]	; (8002268 <void mbed::SerialBase::attach<BufferedSerial>(BufferedSerial*, void (BufferedSerial::*)(), mbed::SerialBase::IrqType)+0x28>)
 8002252:	f89d 2020 	ldrb.w	r2, [sp, #32]
 8002256:	9305      	str	r3, [sp, #20]
 8002258:	a902      	add	r1, sp, #8
 800225a:	f003 fe07 	bl	8005e6c <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)>
 800225e:	a802      	add	r0, sp, #8
 8002260:	f7fe fa24 	bl	80006ac <mbed::Callback<void ()>::~Callback()>
 8002264:	b006      	add	sp, #24
 8002266:	bd10      	pop	{r4, pc}
 8002268:	08008148 	.word	0x08008148

0800226c <BufferedSerial::BufferedSerial(PinName, PinName, unsigned long, unsigned long, char const*)>:
 800226c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800226e:	4604      	mov	r4, r0
 8002270:	461d      	mov	r5, r3
 8002272:	f44f 5316 	mov.w	r3, #9600	; 0x2580
 8002276:	9e08      	ldr	r6, [sp, #32]
 8002278:	f003 fc60 	bl	8005b3c <mbed::RawSerial::RawSerial(PinName, PinName, int)>
 800227c:	4620      	mov	r0, r4
 800227e:	4b0f      	ldr	r3, [pc, #60]	; (80022bc <BufferedSerial::BufferedSerial(PinName, PinName, unsigned long, unsigned long, char const*)+0x50>)
 8002280:	f840 3bbc 	str.w	r3, [r0], #188
 8002284:	4629      	mov	r1, r5
 8002286:	f000 f8f2 	bl	800246e <Buffer<char>::Buffer(unsigned long)>
 800228a:	fb06 f105 	mul.w	r1, r6, r5
 800228e:	f104 00cc 	add.w	r0, r4, #204	; 0xcc
 8002292:	f000 f8ec 	bl	800246e <Buffer<char>::Buffer(unsigned long)>
 8002296:	4b0a      	ldr	r3, [pc, #40]	; (80022c0 <BufferedSerial::BufferedSerial(PinName, PinName, unsigned long, unsigned long, char const*)+0x54>)
 8002298:	9302      	str	r3, [sp, #8]
 800229a:	2300      	movs	r3, #0
 800229c:	9303      	str	r3, [sp, #12]
 800229e:	9300      	str	r3, [sp, #0]
 80022a0:	ab04      	add	r3, sp, #16
 80022a2:	4620      	mov	r0, r4
 80022a4:	e913 000c 	ldmdb	r3, {r2, r3}
 80022a8:	4621      	mov	r1, r4
 80022aa:	f7ff ffc9 	bl	8002240 <void mbed::SerialBase::attach<BufferedSerial>(BufferedSerial*, void (BufferedSerial::*)(), mbed::SerialBase::IrqType)>
 80022ae:	4620      	mov	r0, r4
 80022b0:	f8c4 50dc 	str.w	r5, [r4, #220]	; 0xdc
 80022b4:	f8c4 60e0 	str.w	r6, [r4, #224]	; 0xe0
 80022b8:	b004      	add	sp, #16
 80022ba:	bd70      	pop	{r4, r5, r6, pc}
 80022bc:	080081d8 	.word	0x080081d8
 80022c0:	0800232b 	.word	0x0800232b

080022c4 <BufferedSerial::prime()>:
 80022c4:	b570      	push	{r4, r5, r6, lr}
 80022c6:	4604      	mov	r4, r0
 80022c8:	b086      	sub	sp, #24
 80022ca:	304c      	adds	r0, #76	; 0x4c
 80022cc:	f002 fc46 	bl	8004b5c <serial_writable>
 80022d0:	b1c0      	cbz	r0, 8002304 <BufferedSerial::prime()+0x40>
 80022d2:	ad02      	add	r5, sp, #8
 80022d4:	2201      	movs	r2, #1
 80022d6:	4629      	mov	r1, r5
 80022d8:	2600      	movs	r6, #0
 80022da:	4620      	mov	r0, r4
 80022dc:	9605      	str	r6, [sp, #20]
 80022de:	f003 fdc5 	bl	8005e6c <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)>
 80022e2:	4628      	mov	r0, r5
 80022e4:	f7fe f9e2 	bl	80006ac <mbed::Callback<void ()>::~Callback()>
 80022e8:	4620      	mov	r0, r4
 80022ea:	f7ff ff12 	bl	8002112 <BufferedSerial::txIrq()>
 80022ee:	4b06      	ldr	r3, [pc, #24]	; (8002308 <BufferedSerial::prime()+0x44>)
 80022f0:	9302      	str	r3, [sp, #8]
 80022f2:	2301      	movs	r3, #1
 80022f4:	9603      	str	r6, [sp, #12]
 80022f6:	9300      	str	r3, [sp, #0]
 80022f8:	e895 000c 	ldmia.w	r5, {r2, r3}
 80022fc:	4621      	mov	r1, r4
 80022fe:	4620      	mov	r0, r4
 8002300:	f7ff ff9e 	bl	8002240 <void mbed::SerialBase::attach<BufferedSerial>(BufferedSerial*, void (BufferedSerial::*)(), mbed::SerialBase::IrqType)>
 8002304:	b006      	add	sp, #24
 8002306:	bd70      	pop	{r4, r5, r6, pc}
 8002308:	08002113 	.word	0x08002113

0800230c <Buffer<char>::put(char)>:
 800230c:	6843      	ldr	r3, [r0, #4]
 800230e:	6802      	ldr	r2, [r0, #0]
 8002310:	b510      	push	{r4, lr}
 8002312:	1c5c      	adds	r4, r3, #1
 8002314:	6044      	str	r4, [r0, #4]
 8002316:	54d1      	strb	r1, [r2, r3]
 8002318:	68c3      	ldr	r3, [r0, #12]
 800231a:	6841      	ldr	r1, [r0, #4]
 800231c:	3b01      	subs	r3, #1
 800231e:	fbb1 f2f3 	udiv	r2, r1, r3
 8002322:	fb03 1312 	mls	r3, r3, r2, r1
 8002326:	6043      	str	r3, [r0, #4]
 8002328:	bd10      	pop	{r4, pc}

0800232a <BufferedSerial::rxIrq()>:
 800232a:	b538      	push	{r3, r4, r5, lr}
 800232c:	f100 054c 	add.w	r5, r0, #76	; 0x4c
 8002330:	4604      	mov	r4, r0
 8002332:	4628      	mov	r0, r5
 8002334:	f002 fbf6 	bl	8004b24 <serial_readable>
 8002338:	b138      	cbz	r0, 800234a <BufferedSerial::rxIrq()+0x20>
 800233a:	4628      	mov	r0, r5
 800233c:	f002 fbfc 	bl	8004b38 <serial_getc>
 8002340:	b2c1      	uxtb	r1, r0
 8002342:	f104 00bc 	add.w	r0, r4, #188	; 0xbc
 8002346:	f7ff ffe1 	bl	800230c <Buffer<char>::put(char)>
 800234a:	bd38      	pop	{r3, r4, r5, pc}

0800234c <BufferedSerial::putc(int)>:
 800234c:	b538      	push	{r3, r4, r5, lr}
 800234e:	4605      	mov	r5, r0
 8002350:	460c      	mov	r4, r1
 8002352:	30cc      	adds	r0, #204	; 0xcc
 8002354:	b2c9      	uxtb	r1, r1
 8002356:	f7ff ffd9 	bl	800230c <Buffer<char>::put(char)>
 800235a:	4628      	mov	r0, r5
 800235c:	f7ff ffb2 	bl	80022c4 <BufferedSerial::prime()>
 8002360:	4620      	mov	r0, r4
 8002362:	bd38      	pop	{r3, r4, r5, pc}

08002364 <BufferedSerial::puts(char const*)>:
 8002364:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8002368:	4607      	mov	r7, r0
 800236a:	460c      	mov	r4, r1
 800236c:	b1b1      	cbz	r1, 800239c <BufferedSerial::puts(char const*)+0x38>
 800236e:	460d      	mov	r5, r1
 8002370:	f100 08cc 	add.w	r8, r0, #204	; 0xcc
 8002374:	462e      	mov	r6, r5
 8002376:	f816 1b01 	ldrb.w	r1, [r6], #1
 800237a:	b121      	cbz	r1, 8002386 <BufferedSerial::puts(char const*)+0x22>
 800237c:	4640      	mov	r0, r8
 800237e:	f7ff ffc5 	bl	800230c <Buffer<char>::put(char)>
 8002382:	4635      	mov	r5, r6
 8002384:	e7f6      	b.n	8002374 <BufferedSerial::puts(char const*)+0x10>
 8002386:	210a      	movs	r1, #10
 8002388:	4640      	mov	r0, r8
 800238a:	f7ff ffbf 	bl	800230c <Buffer<char>::put(char)>
 800238e:	1b2c      	subs	r4, r5, r4
 8002390:	4638      	mov	r0, r7
 8002392:	f7ff ff97 	bl	80022c4 <BufferedSerial::prime()>
 8002396:	1c60      	adds	r0, r4, #1
 8002398:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800239c:	4608      	mov	r0, r1
 800239e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080023a2 <BufferedSerial::write(void const*, unsigned int)>:
 80023a2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80023a6:	4607      	mov	r7, r0
 80023a8:	460d      	mov	r5, r1
 80023aa:	b191      	cbz	r1, 80023d2 <BufferedSerial::write(void const*, unsigned int)+0x30>
 80023ac:	b1a2      	cbz	r2, 80023d8 <BufferedSerial::write(void const*, unsigned int)+0x36>
 80023ae:	188c      	adds	r4, r1, r2
 80023b0:	460e      	mov	r6, r1
 80023b2:	f100 08cc 	add.w	r8, r0, #204	; 0xcc
 80023b6:	42b4      	cmp	r4, r6
 80023b8:	d005      	beq.n	80023c6 <BufferedSerial::write(void const*, unsigned int)+0x24>
 80023ba:	f816 1b01 	ldrb.w	r1, [r6], #1
 80023be:	4640      	mov	r0, r8
 80023c0:	f7ff ffa4 	bl	800230c <Buffer<char>::put(char)>
 80023c4:	e7f7      	b.n	80023b6 <BufferedSerial::write(void const*, unsigned int)+0x14>
 80023c6:	4638      	mov	r0, r7
 80023c8:	f7ff ff7c 	bl	80022c4 <BufferedSerial::prime()>
 80023cc:	1b60      	subs	r0, r4, r5
 80023ce:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80023d2:	4608      	mov	r0, r1
 80023d4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80023d8:	4610      	mov	r0, r2
 80023da:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

080023e0 <BufferedSerial::printf(char const*, ...)>:
 80023e0:	b40e      	push	{r1, r2, r3}
 80023e2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80023e6:	b085      	sub	sp, #20
 80023e8:	f8d0 20dc 	ldr.w	r2, [r0, #220]	; 0xdc
 80023ec:	af02      	add	r7, sp, #8
 80023ee:	1dd3      	adds	r3, r2, #7
 80023f0:	f023 0307 	bic.w	r3, r3, #7
 80023f4:	f107 0424 	add.w	r4, r7, #36	; 0x24
 80023f8:	ebad 0d03 	sub.w	sp, sp, r3
 80023fc:	f854 8b04 	ldr.w	r8, [r4], #4
 8002400:	ae02      	add	r6, sp, #8
 8002402:	4605      	mov	r5, r0
 8002404:	2100      	movs	r1, #0
 8002406:	4630      	mov	r0, r6
 8002408:	f004 fe5f 	bl	80070ca <memset>
 800240c:	4622      	mov	r2, r4
 800240e:	4641      	mov	r1, r8
 8002410:	4630      	mov	r0, r6
 8002412:	607c      	str	r4, [r7, #4]
 8002414:	f005 f946 	bl	80076a4 <vsiprintf>
 8002418:	f8d5 30dc 	ldr.w	r3, [r5, #220]	; 0xdc
 800241c:	4283      	cmp	r3, r0
 800241e:	4602      	mov	r2, r0
 8002420:	d20c      	bcs.n	800243c <BufferedSerial::printf(char const*, ...)+0x5c>
 8002422:	9000      	str	r0, [sp, #0]
 8002424:	225d      	movs	r2, #93	; 0x5d
 8002426:	4808      	ldr	r0, [pc, #32]	; (8002448 <BufferedSerial::printf(char const*, ...)+0x68>)
 8002428:	4908      	ldr	r1, [pc, #32]	; (800244c <BufferedSerial::printf(char const*, ...)+0x6c>)
 800242a:	f000 f993 	bl	8002754 <error>
 800242e:	2000      	movs	r0, #0
 8002430:	370c      	adds	r7, #12
 8002432:	46bd      	mov	sp, r7
 8002434:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8002438:	b003      	add	sp, #12
 800243a:	4770      	bx	lr
 800243c:	4631      	mov	r1, r6
 800243e:	4628      	mov	r0, r5
 8002440:	f7ff ffaf 	bl	80023a2 <BufferedSerial::write(void const*, unsigned int)>
 8002444:	e7f4      	b.n	8002430 <BufferedSerial::printf(char const*, ...)+0x50>
 8002446:	bf00      	nop
 8002448:	08008193 	.word	0x08008193
 800244c:	08008154 	.word	0x08008154

08002450 <Buffer<char>::~Buffer()>:
 8002450:	b510      	push	{r4, lr}
 8002452:	4604      	mov	r4, r0
 8002454:	6800      	ldr	r0, [r0, #0]
 8002456:	b108      	cbz	r0, 800245c <Buffer<char>::~Buffer()+0xc>
 8002458:	f003 fee6 	bl	8006228 <operator delete[](void*)>
 800245c:	4620      	mov	r0, r4
 800245e:	bd10      	pop	{r4, pc}

08002460 <Buffer<char>::clear()>:
 8002460:	2100      	movs	r1, #0
 8002462:	6041      	str	r1, [r0, #4]
 8002464:	68c2      	ldr	r2, [r0, #12]
 8002466:	6081      	str	r1, [r0, #8]
 8002468:	6800      	ldr	r0, [r0, #0]
 800246a:	f004 be2e 	b.w	80070ca <memset>

0800246e <Buffer<char>::Buffer(unsigned long)>:
 800246e:	b538      	push	{r3, r4, r5, lr}
 8002470:	4604      	mov	r4, r0
 8002472:	4608      	mov	r0, r1
 8002474:	460d      	mov	r5, r1
 8002476:	f003 fecb 	bl	8006210 <operator new[](unsigned int)>
 800247a:	60e5      	str	r5, [r4, #12]
 800247c:	6020      	str	r0, [r4, #0]
 800247e:	4620      	mov	r0, r4
 8002480:	f7ff ffee 	bl	8002460 <Buffer<char>::clear()>
 8002484:	4620      	mov	r0, r4
 8002486:	bd38      	pop	{r3, r4, r5, pc}

08002488 <_gpio_init_in>:
 8002488:	b570      	push	{r4, r5, r6, lr}
 800248a:	460e      	mov	r6, r1
 800248c:	4604      	mov	r4, r0
 800248e:	4615      	mov	r5, r2
 8002490:	f001 fe84 	bl	800419c <gpio_init>
 8002494:	3601      	adds	r6, #1
 8002496:	d009      	beq.n	80024ac <_gpio_init_in+0x24>
 8002498:	4620      	mov	r0, r4
 800249a:	2100      	movs	r1, #0
 800249c:	f001 fea2 	bl	80041e4 <gpio_dir>
 80024a0:	4629      	mov	r1, r5
 80024a2:	4620      	mov	r0, r4
 80024a4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80024a8:	f001 be98 	b.w	80041dc <gpio_mode>
 80024ac:	bd70      	pop	{r4, r5, r6, pc}

080024ae <_gpio_init_out.part.2>:
 80024ae:	b538      	push	{r3, r4, r5, lr}
 80024b0:	4604      	mov	r4, r0
 80024b2:	460d      	mov	r5, r1
 80024b4:	6803      	ldr	r3, [r0, #0]
 80024b6:	b15a      	cbz	r2, 80024d0 <_gpio_init_out.part.2+0x22>
 80024b8:	6882      	ldr	r2, [r0, #8]
 80024ba:	6013      	str	r3, [r2, #0]
 80024bc:	4620      	mov	r0, r4
 80024be:	2101      	movs	r1, #1
 80024c0:	f001 fe90 	bl	80041e4 <gpio_dir>
 80024c4:	4629      	mov	r1, r5
 80024c6:	4620      	mov	r0, r4
 80024c8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80024cc:	f001 be86 	b.w	80041dc <gpio_mode>
 80024d0:	68c2      	ldr	r2, [r0, #12]
 80024d2:	041b      	lsls	r3, r3, #16
 80024d4:	e7f1      	b.n	80024ba <_gpio_init_out.part.2+0xc>

080024d6 <gpio_init_in>:
 80024d6:	2200      	movs	r2, #0
 80024d8:	f7ff bfd6 	b.w	8002488 <_gpio_init_in>

080024dc <gpio_init_out_ex>:
 80024dc:	b570      	push	{r4, r5, r6, lr}
 80024de:	460e      	mov	r6, r1
 80024e0:	4604      	mov	r4, r0
 80024e2:	4615      	mov	r5, r2
 80024e4:	f001 fe5a 	bl	800419c <gpio_init>
 80024e8:	3601      	adds	r6, #1
 80024ea:	d006      	beq.n	80024fa <gpio_init_out_ex+0x1e>
 80024ec:	462a      	mov	r2, r5
 80024ee:	4620      	mov	r0, r4
 80024f0:	2100      	movs	r1, #0
 80024f2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80024f6:	f7ff bfda 	b.w	80024ae <_gpio_init_out.part.2>
 80024fa:	bd70      	pop	{r4, r5, r6, pc}

080024fc <gpio_init_out>:
 80024fc:	2200      	movs	r2, #0
 80024fe:	f7ff bfed 	b.w	80024dc <gpio_init_out_ex>
	...

08002504 <get_us_ticker_data>:
 8002504:	4800      	ldr	r0, [pc, #0]	; (8002508 <get_us_ticker_data+0x4>)
 8002506:	4770      	bx	lr
 8002508:	08008204 	.word	0x08008204

0800250c <us_ticker_irq_handler>:
 800250c:	4801      	ldr	r0, [pc, #4]	; (8002514 <us_ticker_irq_handler+0x8>)
 800250e:	f000 b80c 	b.w	800252a <ticker_irq_handler>
 8002512:	bf00      	nop
 8002514:	08008204 	.word	0x08008204

08002518 <ticker_set_handler>:
 8002518:	b538      	push	{r3, r4, r5, lr}
 800251a:	6803      	ldr	r3, [r0, #0]
 800251c:	4604      	mov	r4, r0
 800251e:	681b      	ldr	r3, [r3, #0]
 8002520:	460d      	mov	r5, r1
 8002522:	4798      	blx	r3
 8002524:	6863      	ldr	r3, [r4, #4]
 8002526:	601d      	str	r5, [r3, #0]
 8002528:	bd38      	pop	{r3, r4, r5, pc}

0800252a <ticker_irq_handler>:
 800252a:	6803      	ldr	r3, [r0, #0]
 800252c:	b570      	push	{r4, r5, r6, lr}
 800252e:	68db      	ldr	r3, [r3, #12]
 8002530:	4604      	mov	r4, r0
 8002532:	4798      	blx	r3
 8002534:	6863      	ldr	r3, [r4, #4]
 8002536:	685a      	ldr	r2, [r3, #4]
 8002538:	6823      	ldr	r3, [r4, #0]
 800253a:	b91a      	cbnz	r2, 8002544 <ticker_irq_handler+0x1a>
 800253c:	689b      	ldr	r3, [r3, #8]
 800253e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8002542:	4718      	bx	r3
 8002544:	685b      	ldr	r3, [r3, #4]
 8002546:	6815      	ldr	r5, [r2, #0]
 8002548:	4798      	blx	r3
 800254a:	6863      	ldr	r3, [r4, #4]
 800254c:	1a28      	subs	r0, r5, r0
 800254e:	2800      	cmp	r0, #0
 8002550:	685a      	ldr	r2, [r3, #4]
 8002552:	dc07      	bgt.n	8002564 <ticker_irq_handler+0x3a>
 8002554:	6891      	ldr	r1, [r2, #8]
 8002556:	6059      	str	r1, [r3, #4]
 8002558:	681b      	ldr	r3, [r3, #0]
 800255a:	2b00      	cmp	r3, #0
 800255c:	d0ea      	beq.n	8002534 <ticker_irq_handler+0xa>
 800255e:	6850      	ldr	r0, [r2, #4]
 8002560:	4798      	blx	r3
 8002562:	e7e7      	b.n	8002534 <ticker_irq_handler+0xa>
 8002564:	6823      	ldr	r3, [r4, #0]
 8002566:	6810      	ldr	r0, [r2, #0]
 8002568:	691b      	ldr	r3, [r3, #16]
 800256a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800256e:	4718      	bx	r3

08002570 <ticker_insert_event>:
 8002570:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002572:	4606      	mov	r6, r0
 8002574:	460c      	mov	r4, r1
 8002576:	461f      	mov	r7, r3
 8002578:	4615      	mov	r5, r2
 800257a:	f000 f8c1 	bl	8002700 <core_util_critical_section_enter>
 800257e:	6870      	ldr	r0, [r6, #4]
 8002580:	e884 00a0 	stmia.w	r4, {r5, r7}
 8002584:	6843      	ldr	r3, [r0, #4]
 8002586:	2100      	movs	r1, #0
 8002588:	b953      	cbnz	r3, 80025a0 <ticker_insert_event+0x30>
 800258a:	60a3      	str	r3, [r4, #8]
 800258c:	b979      	cbnz	r1, 80025ae <ticker_insert_event+0x3e>
 800258e:	6833      	ldr	r3, [r6, #0]
 8002590:	6044      	str	r4, [r0, #4]
 8002592:	691b      	ldr	r3, [r3, #16]
 8002594:	4628      	mov	r0, r5
 8002596:	4798      	blx	r3
 8002598:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 800259c:	f000 b8c6 	b.w	800272c <core_util_critical_section_exit>
 80025a0:	681a      	ldr	r2, [r3, #0]
 80025a2:	1aaa      	subs	r2, r5, r2
 80025a4:	2a00      	cmp	r2, #0
 80025a6:	dbf0      	blt.n	800258a <ticker_insert_event+0x1a>
 80025a8:	4619      	mov	r1, r3
 80025aa:	689b      	ldr	r3, [r3, #8]
 80025ac:	e7ec      	b.n	8002588 <ticker_insert_event+0x18>
 80025ae:	608c      	str	r4, [r1, #8]
 80025b0:	e7f2      	b.n	8002598 <ticker_insert_event+0x28>

080025b2 <ticker_remove_event>:
 80025b2:	b538      	push	{r3, r4, r5, lr}
 80025b4:	4605      	mov	r5, r0
 80025b6:	460c      	mov	r4, r1
 80025b8:	f000 f8a2 	bl	8002700 <core_util_critical_section_enter>
 80025bc:	686a      	ldr	r2, [r5, #4]
 80025be:	6853      	ldr	r3, [r2, #4]
 80025c0:	42a3      	cmp	r3, r4
 80025c2:	d10e      	bne.n	80025e2 <ticker_remove_event+0x30>
 80025c4:	689b      	ldr	r3, [r3, #8]
 80025c6:	6053      	str	r3, [r2, #4]
 80025c8:	682a      	ldr	r2, [r5, #0]
 80025ca:	b92b      	cbnz	r3, 80025d8 <ticker_remove_event+0x26>
 80025cc:	6893      	ldr	r3, [r2, #8]
 80025ce:	4798      	blx	r3
 80025d0:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80025d4:	f000 b8aa 	b.w	800272c <core_util_critical_section_exit>
 80025d8:	6912      	ldr	r2, [r2, #16]
 80025da:	6818      	ldr	r0, [r3, #0]
 80025dc:	4790      	blx	r2
 80025de:	e7f7      	b.n	80025d0 <ticker_remove_event+0x1e>
 80025e0:	4613      	mov	r3, r2
 80025e2:	2b00      	cmp	r3, #0
 80025e4:	d0f4      	beq.n	80025d0 <ticker_remove_event+0x1e>
 80025e6:	689a      	ldr	r2, [r3, #8]
 80025e8:	4294      	cmp	r4, r2
 80025ea:	d1f9      	bne.n	80025e0 <ticker_remove_event+0x2e>
 80025ec:	68a2      	ldr	r2, [r4, #8]
 80025ee:	609a      	str	r2, [r3, #8]
 80025f0:	e7ee      	b.n	80025d0 <ticker_remove_event+0x1e>

080025f2 <ticker_read>:
 80025f2:	6803      	ldr	r3, [r0, #0]
 80025f4:	685b      	ldr	r3, [r3, #4]
 80025f6:	4718      	bx	r3

080025f8 <pinmap_pinout>:
 80025f8:	b510      	push	{r4, lr}
 80025fa:	4604      	mov	r4, r0
 80025fc:	3001      	adds	r0, #1
 80025fe:	d10d      	bne.n	800261c <pinmap_pinout+0x24>
 8002600:	bd10      	pop	{r4, pc}
 8002602:	429c      	cmp	r4, r3
 8002604:	d109      	bne.n	800261a <pinmap_pinout+0x22>
 8002606:	4620      	mov	r0, r4
 8002608:	6889      	ldr	r1, [r1, #8]
 800260a:	f002 f84d 	bl	80046a8 <pin_function>
 800260e:	4620      	mov	r0, r4
 8002610:	2100      	movs	r1, #0
 8002612:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8002616:	f002 b8cb 	b.w	80047b0 <pin_mode>
 800261a:	310c      	adds	r1, #12
 800261c:	f9b1 3000 	ldrsh.w	r3, [r1]
 8002620:	1c5a      	adds	r2, r3, #1
 8002622:	d1ee      	bne.n	8002602 <pinmap_pinout+0xa>
 8002624:	4802      	ldr	r0, [pc, #8]	; (8002630 <pinmap_pinout+0x38>)
 8002626:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800262a:	f000 b893 	b.w	8002754 <error>
 800262e:	bf00      	nop
 8002630:	0800826f 	.word	0x0800826f

08002634 <pinmap_merge>:
 8002634:	4288      	cmp	r0, r1
 8002636:	b508      	push	{r3, lr}
 8002638:	d008      	beq.n	800264c <pinmap_merge+0x18>
 800263a:	1c43      	adds	r3, r0, #1
 800263c:	d006      	beq.n	800264c <pinmap_merge+0x18>
 800263e:	3101      	adds	r1, #1
 8002640:	d006      	beq.n	8002650 <pinmap_merge+0x1c>
 8002642:	4804      	ldr	r0, [pc, #16]	; (8002654 <pinmap_merge+0x20>)
 8002644:	f000 f886 	bl	8002754 <error>
 8002648:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 800264c:	4608      	mov	r0, r1
 800264e:	bd08      	pop	{r3, pc}
 8002650:	4601      	mov	r1, r0
 8002652:	e7fb      	b.n	800264c <pinmap_merge+0x18>
 8002654:	0800823e 	.word	0x0800823e

08002658 <pinmap_find_peripheral>:
 8002658:	f9b1 3000 	ldrsh.w	r3, [r1]
 800265c:	1c5a      	adds	r2, r3, #1
 800265e:	d101      	bne.n	8002664 <pinmap_find_peripheral+0xc>
 8002660:	4618      	mov	r0, r3
 8002662:	4770      	bx	lr
 8002664:	4283      	cmp	r3, r0
 8002666:	d101      	bne.n	800266c <pinmap_find_peripheral+0x14>
 8002668:	6848      	ldr	r0, [r1, #4]
 800266a:	4770      	bx	lr
 800266c:	310c      	adds	r1, #12
 800266e:	e7f3      	b.n	8002658 <pinmap_find_peripheral>

08002670 <pinmap_peripheral>:
 8002670:	1c42      	adds	r2, r0, #1
 8002672:	b510      	push	{r4, lr}
 8002674:	4604      	mov	r4, r0
 8002676:	d007      	beq.n	8002688 <pinmap_peripheral+0x18>
 8002678:	f7ff ffee 	bl	8002658 <pinmap_find_peripheral>
 800267c:	1c43      	adds	r3, r0, #1
 800267e:	4604      	mov	r4, r0
 8002680:	d102      	bne.n	8002688 <pinmap_peripheral+0x18>
 8002682:	4802      	ldr	r0, [pc, #8]	; (800268c <pinmap_peripheral+0x1c>)
 8002684:	f000 f866 	bl	8002754 <error>
 8002688:	4620      	mov	r0, r4
 800268a:	bd10      	pop	{r4, pc}
 800268c:	0800824f 	.word	0x0800824f

08002690 <pinmap_find_function>:
 8002690:	f9b1 3000 	ldrsh.w	r3, [r1]
 8002694:	1c5a      	adds	r2, r3, #1
 8002696:	d101      	bne.n	800269c <pinmap_find_function+0xc>
 8002698:	4618      	mov	r0, r3
 800269a:	4770      	bx	lr
 800269c:	4283      	cmp	r3, r0
 800269e:	d101      	bne.n	80026a4 <pinmap_find_function+0x14>
 80026a0:	6888      	ldr	r0, [r1, #8]
 80026a2:	4770      	bx	lr
 80026a4:	310c      	adds	r1, #12
 80026a6:	e7f3      	b.n	8002690 <pinmap_find_function>

080026a8 <pinmap_function>:
 80026a8:	1c42      	adds	r2, r0, #1
 80026aa:	b510      	push	{r4, lr}
 80026ac:	4604      	mov	r4, r0
 80026ae:	d007      	beq.n	80026c0 <pinmap_function+0x18>
 80026b0:	f7ff ffee 	bl	8002690 <pinmap_find_function>
 80026b4:	1c43      	adds	r3, r0, #1
 80026b6:	4604      	mov	r4, r0
 80026b8:	d102      	bne.n	80026c0 <pinmap_function+0x18>
 80026ba:	4802      	ldr	r0, [pc, #8]	; (80026c4 <pinmap_function+0x1c>)
 80026bc:	f000 f84a 	bl	8002754 <error>
 80026c0:	4620      	mov	r0, r4
 80026c2:	bd10      	pop	{r4, pc}
 80026c4:	08008220 	.word	0x08008220

080026c8 <mbed_die>:
 80026c8:	b500      	push	{lr}
 80026ca:	b089      	sub	sp, #36	; 0x24
 80026cc:	f000 f818 	bl	8002700 <core_util_critical_section_enter>
 80026d0:	2105      	movs	r1, #5
 80026d2:	a801      	add	r0, sp, #4
 80026d4:	f7ff ff12 	bl	80024fc <gpio_init_out>
 80026d8:	9b03      	ldr	r3, [sp, #12]
 80026da:	9a01      	ldr	r2, [sp, #4]
 80026dc:	601a      	str	r2, [r3, #0]
 80026de:	2096      	movs	r0, #150	; 0x96
 80026e0:	f003 fc86 	bl	8005ff0 <wait_ms>
 80026e4:	9b01      	ldr	r3, [sp, #4]
 80026e6:	9a04      	ldr	r2, [sp, #16]
 80026e8:	041b      	lsls	r3, r3, #16
 80026ea:	6013      	str	r3, [r2, #0]
 80026ec:	2096      	movs	r0, #150	; 0x96
 80026ee:	f003 fc7f 	bl	8005ff0 <wait_ms>
 80026f2:	e7f1      	b.n	80026d8 <mbed_die+0x10>

080026f4 <core_util_are_interrupts_enabled>:
 80026f4:	f3ef 8010 	mrs	r0, PRIMASK
 80026f8:	43c0      	mvns	r0, r0
 80026fa:	f000 0001 	and.w	r0, r0, #1
 80026fe:	4770      	bx	lr

08002700 <core_util_critical_section_enter>:
 8002700:	b508      	push	{r3, lr}
 8002702:	f7ff fff7 	bl	80026f4 <core_util_are_interrupts_enabled>
 8002706:	b672      	cpsid	i
 8002708:	4b06      	ldr	r3, [pc, #24]	; (8002724 <core_util_critical_section_enter+0x24>)
 800270a:	681a      	ldr	r2, [r3, #0]
 800270c:	b922      	cbnz	r2, 8002718 <core_util_critical_section_enter+0x18>
 800270e:	f080 0001 	eor.w	r0, r0, #1
 8002712:	4a05      	ldr	r2, [pc, #20]	; (8002728 <core_util_critical_section_enter+0x28>)
 8002714:	b2c0      	uxtb	r0, r0
 8002716:	7010      	strb	r0, [r2, #0]
 8002718:	681a      	ldr	r2, [r3, #0]
 800271a:	681a      	ldr	r2, [r3, #0]
 800271c:	3201      	adds	r2, #1
 800271e:	601a      	str	r2, [r3, #0]
 8002720:	bd08      	pop	{r3, pc}
 8002722:	bf00      	nop
 8002724:	20000fc4 	.word	0x20000fc4
 8002728:	20000fc0 	.word	0x20000fc0

0800272c <core_util_critical_section_exit>:
 800272c:	b508      	push	{r3, lr}
 800272e:	4b07      	ldr	r3, [pc, #28]	; (800274c <core_util_critical_section_exit+0x20>)
 8002730:	681a      	ldr	r2, [r3, #0]
 8002732:	b152      	cbz	r2, 800274a <core_util_critical_section_exit+0x1e>
 8002734:	f7ff ffde 	bl	80026f4 <core_util_are_interrupts_enabled>
 8002738:	681a      	ldr	r2, [r3, #0]
 800273a:	3a01      	subs	r2, #1
 800273c:	601a      	str	r2, [r3, #0]
 800273e:	681b      	ldr	r3, [r3, #0]
 8002740:	b91b      	cbnz	r3, 800274a <core_util_critical_section_exit+0x1e>
 8002742:	4b03      	ldr	r3, [pc, #12]	; (8002750 <core_util_critical_section_exit+0x24>)
 8002744:	781b      	ldrb	r3, [r3, #0]
 8002746:	b903      	cbnz	r3, 800274a <core_util_critical_section_exit+0x1e>
 8002748:	b662      	cpsie	i
 800274a:	bd08      	pop	{r3, pc}
 800274c:	20000fc4 	.word	0x20000fc4
 8002750:	20000fc0 	.word	0x20000fc0

08002754 <error>:
 8002754:	b40f      	push	{r0, r1, r2, r3}
 8002756:	2001      	movs	r0, #1
 8002758:	b508      	push	{r3, lr}
 800275a:	f003 fd4d 	bl	80061f8 <__wrap_exit>

0800275e <default_idle_hook>:
 800275e:	f001 bd6a 	b.w	8004236 <hal_sleep>
	...

08002764 <rtos_idle_loop>:
 8002764:	b508      	push	{r3, lr}
 8002766:	4c02      	ldr	r4, [pc, #8]	; (8002770 <rtos_idle_loop+0xc>)
 8002768:	6823      	ldr	r3, [r4, #0]
 800276a:	4798      	blx	r3
 800276c:	e7fc      	b.n	8002768 <rtos_idle_loop+0x4>
 800276e:	bf00      	nop
 8002770:	2000019c 	.word	0x2000019c

08002774 <pre_main>:
 8002774:	b508      	push	{r3, lr}
 8002776:	480b      	ldr	r0, [pc, #44]	; (80027a4 <pre_main+0x30>)
 8002778:	f000 fd9c 	bl	80032b4 <osMutexCreate>
 800277c:	4b0a      	ldr	r3, [pc, #40]	; (80027a8 <pre_main+0x34>)
 800277e:	6018      	str	r0, [r3, #0]
 8002780:	480a      	ldr	r0, [pc, #40]	; (80027ac <pre_main+0x38>)
 8002782:	f000 fd97 	bl	80032b4 <osMutexCreate>
 8002786:	4b0a      	ldr	r3, [pc, #40]	; (80027b0 <pre_main+0x3c>)
 8002788:	6018      	str	r0, [r3, #0]
 800278a:	480a      	ldr	r0, [pc, #40]	; (80027b4 <pre_main+0x40>)
 800278c:	f000 fd92 	bl	80032b4 <osMutexCreate>
 8002790:	4b09      	ldr	r3, [pc, #36]	; (80027b8 <pre_main+0x44>)
 8002792:	6018      	str	r0, [r3, #0]
 8002794:	f004 fbee 	bl	8006f74 <__libc_init_array>
 8002798:	2100      	movs	r1, #0
 800279a:	4608      	mov	r0, r1
 800279c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80027a0:	f003 bced 	b.w	800617e <__wrap_main>
 80027a4:	080082cc 	.word	0x080082cc
 80027a8:	20002914 	.word	0x20002914
 80027ac:	080082c8 	.word	0x080082c8
 80027b0:	20000fd0 	.word	0x20000fd0
 80027b4:	080082c4 	.word	0x080082c4
 80027b8:	20000fc8 	.word	0x20000fc8

080027bc <os_idle_demon>:
 80027bc:	f7ff bfd2 	b.w	8002764 <rtos_idle_loop>

080027c0 <os_error>:
 80027c0:	b510      	push	{r4, lr}
 80027c2:	4604      	mov	r4, r0
 80027c4:	f000 fce4 	bl	8003190 <svcThreadGetId>
 80027c8:	4621      	mov	r1, r4
 80027ca:	4602      	mov	r2, r0
 80027cc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80027d0:	4801      	ldr	r0, [pc, #4]	; (80027d8 <os_error+0x18>)
 80027d2:	f7ff bfbf 	b.w	8002754 <error>
 80027d6:	bf00      	nop
 80027d8:	0800828c 	.word	0x0800828c

080027dc <sysThreadTerminate>:
 80027dc:	f003 bd2a 	b.w	8006234 <thread_terminate_hook>

080027e0 <set_stack_heap>:
 80027e0:	4a0b      	ldr	r2, [pc, #44]	; (8002810 <set_stack_heap+0x30>)
 80027e2:	4b0c      	ldr	r3, [pc, #48]	; (8002814 <set_stack_heap+0x34>)
 80027e4:	480c      	ldr	r0, [pc, #48]	; (8002818 <set_stack_heap+0x38>)
 80027e6:	b430      	push	{r4, r5}
 80027e8:	601a      	str	r2, [r3, #0]
 80027ea:	f1c2 5300 	rsb	r3, r2, #536870912	; 0x20000000
 80027ee:	f503 3300 	add.w	r3, r3, #131072	; 0x20000
 80027f2:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 80027f6:	4619      	mov	r1, r3
 80027f8:	bf28      	it	cs
 80027fa:	f44f 6180 	movcs.w	r1, #1024	; 0x400
 80027fe:	4d07      	ldr	r5, [pc, #28]	; (800281c <set_stack_heap+0x3c>)
 8002800:	4c07      	ldr	r4, [pc, #28]	; (8002820 <set_stack_heap+0x40>)
 8002802:	6001      	str	r1, [r0, #0]
 8002804:	1a5b      	subs	r3, r3, r1
 8002806:	441a      	add	r2, r3
 8002808:	602a      	str	r2, [r5, #0]
 800280a:	6023      	str	r3, [r4, #0]
 800280c:	bc30      	pop	{r4, r5}
 800280e:	4770      	bx	lr
 8002810:	20003130 	.word	0x20003130
 8002814:	2000262c 	.word	0x2000262c
 8002818:	20000fd4 	.word	0x20000fd4
 800281c:	20000fd8 	.word	0x20000fd8
 8002820:	20002628 	.word	0x20002628

08002824 <software_init_hook_rtos>:
 8002824:	f000 fe1a 	bl	800345c <osKernelInitialize>
 8002828:	f7ff ffda 	bl	80027e0 <set_stack_heap>
 800282c:	4803      	ldr	r0, [pc, #12]	; (800283c <software_init_hook_rtos+0x18>)
 800282e:	2100      	movs	r1, #0
 8002830:	f000 fdc8 	bl	80033c4 <osThreadCreate>
 8002834:	f000 fc2e 	bl	8003094 <osKernelStart>
 8002838:	e7fe      	b.n	8002838 <software_init_hook_rtos+0x14>
 800283a:	0000      	.short	0x0000
 800283c:	200001a0 	.word	0x200001a0

08002840 <__rtos_malloc_lock>:
 8002840:	4b02      	ldr	r3, [pc, #8]	; (800284c <__rtos_malloc_lock+0xc>)
 8002842:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8002846:	6818      	ldr	r0, [r3, #0]
 8002848:	f000 bd52 	b.w	80032f0 <osMutexWait>
 800284c:	20000fd0 	.word	0x20000fd0

08002850 <__rtos_malloc_unlock>:
 8002850:	4b01      	ldr	r3, [pc, #4]	; (8002858 <__rtos_malloc_unlock+0x8>)
 8002852:	6818      	ldr	r0, [r3, #0]
 8002854:	f000 bd74 	b.w	8003340 <osMutexRelease>
 8002858:	20000fd0 	.word	0x20000fd0

0800285c <rt_put_prio>:
 800285c:	b530      	push	{r4, r5, lr}
 800285e:	7802      	ldrb	r2, [r0, #0]
 8002860:	788c      	ldrb	r4, [r1, #2]
 8002862:	6843      	ldr	r3, [r0, #4]
 8002864:	3a01      	subs	r2, #1
 8002866:	b2d2      	uxtb	r2, r2
 8002868:	b113      	cbz	r3, 8002870 <rt_put_prio+0x14>
 800286a:	789d      	ldrb	r5, [r3, #2]
 800286c:	42a5      	cmp	r5, r4
 800286e:	d207      	bcs.n	8002880 <rt_put_prio+0x24>
 8002870:	2a02      	cmp	r2, #2
 8002872:	604b      	str	r3, [r1, #4]
 8002874:	6041      	str	r1, [r0, #4]
 8002876:	d806      	bhi.n	8002886 <rt_put_prio+0x2a>
 8002878:	b103      	cbz	r3, 800287c <rt_put_prio+0x20>
 800287a:	6099      	str	r1, [r3, #8]
 800287c:	6088      	str	r0, [r1, #8]
 800287e:	bd30      	pop	{r4, r5, pc}
 8002880:	4618      	mov	r0, r3
 8002882:	685b      	ldr	r3, [r3, #4]
 8002884:	e7f0      	b.n	8002868 <rt_put_prio+0xc>
 8002886:	2300      	movs	r3, #0
 8002888:	608b      	str	r3, [r1, #8]
 800288a:	bd30      	pop	{r4, r5, pc}

0800288c <rt_get_first>:
 800288c:	7802      	ldrb	r2, [r0, #0]
 800288e:	6843      	ldr	r3, [r0, #4]
 8002890:	3a01      	subs	r2, #1
 8002892:	6859      	ldr	r1, [r3, #4]
 8002894:	6041      	str	r1, [r0, #4]
 8002896:	2a02      	cmp	r2, #2
 8002898:	f04f 0200 	mov.w	r2, #0
 800289c:	d805      	bhi.n	80028aa <rt_get_first+0x1e>
 800289e:	b109      	cbz	r1, 80028a4 <rt_get_first+0x18>
 80028a0:	6088      	str	r0, [r1, #8]
 80028a2:	605a      	str	r2, [r3, #4]
 80028a4:	609a      	str	r2, [r3, #8]
 80028a6:	4618      	mov	r0, r3
 80028a8:	4770      	bx	lr
 80028aa:	605a      	str	r2, [r3, #4]
 80028ac:	e7fb      	b.n	80028a6 <rt_get_first+0x1a>
	...

080028b0 <rt_put_rdy_first>:
 80028b0:	4b03      	ldr	r3, [pc, #12]	; (80028c0 <rt_put_rdy_first+0x10>)
 80028b2:	685a      	ldr	r2, [r3, #4]
 80028b4:	6042      	str	r2, [r0, #4]
 80028b6:	2200      	movs	r2, #0
 80028b8:	6082      	str	r2, [r0, #8]
 80028ba:	6058      	str	r0, [r3, #4]
 80028bc:	4770      	bx	lr
 80028be:	bf00      	nop
 80028c0:	20003008 	.word	0x20003008

080028c4 <rt_put_dly>:
 80028c4:	4b10      	ldr	r3, [pc, #64]	; (8002908 <rt_put_dly+0x44>)
 80028c6:	68da      	ldr	r2, [r3, #12]
 80028c8:	b510      	push	{r4, lr}
 80028ca:	b18a      	cbz	r2, 80028f0 <rt_put_dly+0x2c>
 80028cc:	8a9a      	ldrh	r2, [r3, #20]
 80028ce:	68dc      	ldr	r4, [r3, #12]
 80028d0:	428a      	cmp	r2, r1
 80028d2:	d30c      	bcc.n	80028ee <rt_put_dly+0x2a>
 80028d4:	60c4      	str	r4, [r0, #12]
 80028d6:	60d8      	str	r0, [r3, #12]
 80028d8:	68c4      	ldr	r4, [r0, #12]
 80028da:	6103      	str	r3, [r0, #16]
 80028dc:	b104      	cbz	r4, 80028e0 <rt_put_dly+0x1c>
 80028de:	6120      	str	r0, [r4, #16]
 80028e0:	1a52      	subs	r2, r2, r1
 80028e2:	b292      	uxth	r2, r2
 80028e4:	8282      	strh	r2, [r0, #20]
 80028e6:	8a99      	ldrh	r1, [r3, #20]
 80028e8:	1a8a      	subs	r2, r1, r2
 80028ea:	829a      	strh	r2, [r3, #20]
 80028ec:	bd10      	pop	{r4, pc}
 80028ee:	b93c      	cbnz	r4, 8002900 <rt_put_dly+0x3c>
 80028f0:	2400      	movs	r4, #0
 80028f2:	1a8a      	subs	r2, r1, r2
 80028f4:	60c4      	str	r4, [r0, #12]
 80028f6:	60d8      	str	r0, [r3, #12]
 80028f8:	6103      	str	r3, [r0, #16]
 80028fa:	829a      	strh	r2, [r3, #20]
 80028fc:	8284      	strh	r4, [r0, #20]
 80028fe:	bd10      	pop	{r4, pc}
 8002900:	8aa3      	ldrh	r3, [r4, #20]
 8002902:	441a      	add	r2, r3
 8002904:	4623      	mov	r3, r4
 8002906:	e7e2      	b.n	80028ce <rt_put_dly+0xa>
 8002908:	20003020 	.word	0x20003020

0800290c <rt_dec_dly>:
 800290c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8002910:	4d17      	ldr	r5, [pc, #92]	; (8002970 <rt_dec_dly+0x64>)
 8002912:	68eb      	ldr	r3, [r5, #12]
 8002914:	b153      	cbz	r3, 800292c <rt_dec_dly+0x20>
 8002916:	8aab      	ldrh	r3, [r5, #20]
 8002918:	4f16      	ldr	r7, [pc, #88]	; (8002974 <rt_dec_dly+0x68>)
 800291a:	f8df 805c 	ldr.w	r8, [pc, #92]	; 8002978 <rt_dec_dly+0x6c>
 800291e:	3b01      	subs	r3, #1
 8002920:	82ab      	strh	r3, [r5, #20]
 8002922:	2600      	movs	r6, #0
 8002924:	8aaa      	ldrh	r2, [r5, #20]
 8002926:	b90a      	cbnz	r2, 800292c <rt_dec_dly+0x20>
 8002928:	68ec      	ldr	r4, [r5, #12]
 800292a:	b90c      	cbnz	r4, 8002930 <rt_dec_dly+0x24>
 800292c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8002930:	68a3      	ldr	r3, [r4, #8]
 8002932:	b133      	cbz	r3, 8002942 <rt_dec_dly+0x36>
 8002934:	6861      	ldr	r1, [r4, #4]
 8002936:	6059      	str	r1, [r3, #4]
 8002938:	6861      	ldr	r1, [r4, #4]
 800293a:	b109      	cbz	r1, 8002940 <rt_dec_dly+0x34>
 800293c:	608b      	str	r3, [r1, #8]
 800293e:	6062      	str	r2, [r4, #4]
 8002940:	60a6      	str	r6, [r4, #8]
 8002942:	4621      	mov	r1, r4
 8002944:	4638      	mov	r0, r7
 8002946:	f7ff ff89 	bl	800285c <rt_put_prio>
 800294a:	8aa3      	ldrh	r3, [r4, #20]
 800294c:	82ab      	strh	r3, [r5, #20]
 800294e:	7863      	ldrb	r3, [r4, #1]
 8002950:	2b04      	cmp	r3, #4
 8002952:	bf01      	itttt	eq
 8002954:	f8d8 3000 	ldreq.w	r3, [r8]
 8002958:	8ae2      	ldrheq	r2, [r4, #22]
 800295a:	189b      	addeq	r3, r3, r2
 800295c:	82a3      	strheq	r3, [r4, #20]
 800295e:	2301      	movs	r3, #1
 8002960:	7063      	strb	r3, [r4, #1]
 8002962:	68e3      	ldr	r3, [r4, #12]
 8002964:	60eb      	str	r3, [r5, #12]
 8002966:	b10b      	cbz	r3, 800296c <rt_dec_dly+0x60>
 8002968:	611d      	str	r5, [r3, #16]
 800296a:	60e6      	str	r6, [r4, #12]
 800296c:	6126      	str	r6, [r4, #16]
 800296e:	e7d9      	b.n	8002924 <rt_dec_dly+0x18>
 8002970:	20003020 	.word	0x20003020
 8002974:	20003008 	.word	0x20003008
 8002978:	2000309c 	.word	0x2000309c

0800297c <rt_rmv_list>:
 800297c:	6883      	ldr	r3, [r0, #8]
 800297e:	b12b      	cbz	r3, 800298c <rt_rmv_list+0x10>
 8002980:	6842      	ldr	r2, [r0, #4]
 8002982:	605a      	str	r2, [r3, #4]
 8002984:	6842      	ldr	r2, [r0, #4]
 8002986:	b15a      	cbz	r2, 80029a0 <rt_rmv_list+0x24>
 8002988:	6093      	str	r3, [r2, #8]
 800298a:	4770      	bx	lr
 800298c:	4b05      	ldr	r3, [pc, #20]	; (80029a4 <rt_rmv_list+0x28>)
 800298e:	685a      	ldr	r2, [r3, #4]
 8002990:	4290      	cmp	r0, r2
 8002992:	d102      	bne.n	800299a <rt_rmv_list+0x1e>
 8002994:	6842      	ldr	r2, [r0, #4]
 8002996:	605a      	str	r2, [r3, #4]
 8002998:	4770      	bx	lr
 800299a:	4613      	mov	r3, r2
 800299c:	2a00      	cmp	r2, #0
 800299e:	d1f6      	bne.n	800298e <rt_rmv_list+0x12>
 80029a0:	4770      	bx	lr
 80029a2:	bf00      	nop
 80029a4:	20003008 	.word	0x20003008

080029a8 <rt_resort_prio>:
 80029a8:	b510      	push	{r4, lr}
 80029aa:	6884      	ldr	r4, [r0, #8]
 80029ac:	4601      	mov	r1, r0
 80029ae:	b92c      	cbnz	r4, 80029bc <rt_resort_prio+0x14>
 80029b0:	7843      	ldrb	r3, [r0, #1]
 80029b2:	2b01      	cmp	r3, #1
 80029b4:	d10d      	bne.n	80029d2 <rt_resort_prio+0x2a>
 80029b6:	4c07      	ldr	r4, [pc, #28]	; (80029d4 <rt_resort_prio+0x2c>)
 80029b8:	e003      	b.n	80029c2 <rt_resort_prio+0x1a>
 80029ba:	68a4      	ldr	r4, [r4, #8]
 80029bc:	7823      	ldrb	r3, [r4, #0]
 80029be:	2b00      	cmp	r3, #0
 80029c0:	d0fb      	beq.n	80029ba <rt_resort_prio+0x12>
 80029c2:	4608      	mov	r0, r1
 80029c4:	f7ff ffda 	bl	800297c <rt_rmv_list>
 80029c8:	4620      	mov	r0, r4
 80029ca:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80029ce:	f7ff bf45 	b.w	800285c <rt_put_prio>
 80029d2:	bd10      	pop	{r4, pc}
 80029d4:	20003008 	.word	0x20003008

080029d8 <rt_rmv_dly>:
 80029d8:	6903      	ldr	r3, [r0, #16]
 80029da:	b510      	push	{r4, lr}
 80029dc:	b163      	cbz	r3, 80029f8 <rt_rmv_dly+0x20>
 80029de:	68c2      	ldr	r2, [r0, #12]
 80029e0:	60da      	str	r2, [r3, #12]
 80029e2:	68c2      	ldr	r2, [r0, #12]
 80029e4:	b14a      	cbz	r2, 80029fa <rt_rmv_dly+0x22>
 80029e6:	8a99      	ldrh	r1, [r3, #20]
 80029e8:	8a84      	ldrh	r4, [r0, #20]
 80029ea:	4421      	add	r1, r4
 80029ec:	8299      	strh	r1, [r3, #20]
 80029ee:	6113      	str	r3, [r2, #16]
 80029f0:	2300      	movs	r3, #0
 80029f2:	60c3      	str	r3, [r0, #12]
 80029f4:	2300      	movs	r3, #0
 80029f6:	6103      	str	r3, [r0, #16]
 80029f8:	bd10      	pop	{r4, pc}
 80029fa:	829a      	strh	r2, [r3, #20]
 80029fc:	e7fa      	b.n	80029f4 <rt_rmv_dly+0x1c>
	...

08002a00 <rt_psq_enq>:
 8002a00:	b470      	push	{r4, r5, r6}
 8002a02:	4b11      	ldr	r3, [pc, #68]	; (8002a48 <rt_psq_enq+0x48>)
 8002a04:	78dd      	ldrb	r5, [r3, #3]
 8002a06:	f3ef 8610 	mrs	r6, PRIMASK
 8002a0a:	f3ef 8210 	mrs	r2, PRIMASK
 8002a0e:	b672      	cpsid	i
 8002a10:	789a      	ldrb	r2, [r3, #2]
 8002a12:	4295      	cmp	r5, r2
 8002a14:	d911      	bls.n	8002a3a <rt_psq_enq+0x3a>
 8002a16:	3201      	adds	r2, #1
 8002a18:	709a      	strb	r2, [r3, #2]
 8002a1a:	781a      	ldrb	r2, [r3, #0]
 8002a1c:	1c54      	adds	r4, r2, #1
 8002a1e:	42a5      	cmp	r5, r4
 8002a20:	bf08      	it	eq
 8002a22:	2400      	moveq	r4, #0
 8002a24:	701c      	strb	r4, [r3, #0]
 8002a26:	b906      	cbnz	r6, 8002a2a <rt_psq_enq+0x2a>
 8002a28:	b662      	cpsie	i
 8002a2a:	4295      	cmp	r5, r2
 8002a2c:	d907      	bls.n	8002a3e <rt_psq_enq+0x3e>
 8002a2e:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8002a32:	bc70      	pop	{r4, r5, r6}
 8002a34:	6058      	str	r0, [r3, #4]
 8002a36:	6099      	str	r1, [r3, #8]
 8002a38:	4770      	bx	lr
 8002a3a:	2e00      	cmp	r6, #0
 8002a3c:	d0f4      	beq.n	8002a28 <rt_psq_enq+0x28>
 8002a3e:	2002      	movs	r0, #2
 8002a40:	bc70      	pop	{r4, r5, r6}
 8002a42:	f7ff bebd 	b.w	80027c0 <os_error>
 8002a46:	bf00      	nop
 8002a48:	2000288c 	.word	0x2000288c

08002a4c <rt_init_stack>:
 8002a4c:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8002a4e:	089b      	lsrs	r3, r3, #2
 8002a50:	bf04      	itt	eq
 8002a52:	4b22      	ldreq	r3, [pc, #136]	; (8002adc <rt_init_stack+0x90>)
 8002a54:	881b      	ldrheq	r3, [r3, #0]
 8002a56:	b5f0      	push	{r4, r5, r6, r7, lr}
 8002a58:	6b05      	ldr	r5, [r0, #48]	; 0x30
 8002a5a:	bf08      	it	eq
 8002a5c:	089b      	lsreq	r3, r3, #2
 8002a5e:	eb05 0283 	add.w	r2, r5, r3, lsl #2
 8002a62:	0754      	lsls	r4, r2, #29
 8002a64:	bf48      	it	mi
 8002a66:	3a04      	submi	r2, #4
 8002a68:	f04f 7680 	mov.w	r6, #16777216	; 0x1000000
 8002a6c:	e902 0042 	stmdb	r2, {r1, r6}
 8002a70:	f1a2 0440 	sub.w	r4, r2, #64	; 0x40
 8002a74:	f1a2 0644 	sub.w	r6, r2, #68	; 0x44
 8002a78:	f1a2 070c 	sub.w	r7, r2, #12
 8002a7c:	f04f 0e00 	mov.w	lr, #0
 8002a80:	f846 ef04 	str.w	lr, [r6, #4]!
 8002a84:	42be      	cmp	r6, r7
 8002a86:	d1fb      	bne.n	8002a80 <rt_init_stack+0x34>
 8002a88:	69c6      	ldr	r6, [r0, #28]
 8002a8a:	f842 6c20 	str.w	r6, [r2, #-32]
 8002a8e:	6341      	str	r1, [r0, #52]	; 0x34
 8002a90:	4912      	ldr	r1, [pc, #72]	; (8002adc <rt_init_stack+0x90>)
 8002a92:	62c4      	str	r4, [r0, #44]	; 0x2c
 8002a94:	6809      	ldr	r1, [r1, #0]
 8002a96:	00c9      	lsls	r1, r1, #3
 8002a98:	d517      	bpl.n	8002aca <rt_init_stack+0x7e>
 8002a9a:	2b11      	cmp	r3, #17
 8002a9c:	d915      	bls.n	8002aca <rt_init_stack+0x7e>
 8002a9e:	3b10      	subs	r3, #16
 8002aa0:	f06f 0107 	mvn.w	r1, #7
 8002aa4:	085b      	lsrs	r3, r3, #1
 8002aa6:	434b      	muls	r3, r1
 8002aa8:	f1a3 0138 	sub.w	r1, r3, #56	; 0x38
 8002aac:	440a      	add	r2, r1
 8002aae:	f04f 30cc 	mov.w	r0, #3435973836	; 0xcccccccc
 8002ab2:	4621      	mov	r1, r4
 8002ab4:	4291      	cmp	r1, r2
 8002ab6:	d10b      	bne.n	8002ad0 <rt_init_stack+0x84>
 8002ab8:	3308      	adds	r3, #8
 8002aba:	441c      	add	r4, r3
 8002abc:	1f23      	subs	r3, r4, #4
 8002abe:	429d      	cmp	r5, r3
 8002ac0:	bf3c      	itt	cc
 8002ac2:	f04f 33cc 	movcc.w	r3, #3435973836	; 0xcccccccc
 8002ac6:	f844 3c04 	strcc.w	r3, [r4, #-4]
 8002aca:	4b05      	ldr	r3, [pc, #20]	; (8002ae0 <rt_init_stack+0x94>)
 8002acc:	602b      	str	r3, [r5, #0]
 8002ace:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002ad0:	f841 0c04 	str.w	r0, [r1, #-4]
 8002ad4:	f841 0d08 	str.w	r0, [r1, #-8]!
 8002ad8:	e7ec      	b.n	8002ab4 <rt_init_stack+0x68>
 8002ada:	bf00      	nop
 8002adc:	080082d4 	.word	0x080082d4
 8002ae0:	e25a2ea5 	.word	0xe25a2ea5

08002ae4 <rt_ret_val>:
 8002ae4:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8002ae8:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8002aea:	b112      	cbz	r2, 8002af2 <rt_ret_val+0xe>
 8002aec:	3360      	adds	r3, #96	; 0x60
 8002aee:	6019      	str	r1, [r3, #0]
 8002af0:	4770      	bx	lr
 8002af2:	3320      	adds	r3, #32
 8002af4:	e7fb      	b.n	8002aee <rt_ret_val+0xa>

08002af6 <rt_ret_val2>:
 8002af6:	b510      	push	{r4, lr}
 8002af8:	f890 4025 	ldrb.w	r4, [r0, #37]	; 0x25
 8002afc:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8002afe:	b11c      	cbz	r4, 8002b08 <rt_ret_val2+0x12>
 8002b00:	3360      	adds	r3, #96	; 0x60
 8002b02:	e883 0006 	stmia.w	r3, {r1, r2}
 8002b06:	bd10      	pop	{r4, pc}
 8002b08:	3320      	adds	r3, #32
 8002b0a:	e7fa      	b.n	8002b02 <rt_ret_val2+0xc>

08002b0c <rt_psh_req>:
 8002b0c:	4b05      	ldr	r3, [pc, #20]	; (8002b24 <rt_psh_req+0x18>)
 8002b0e:	781b      	ldrb	r3, [r3, #0]
 8002b10:	b923      	cbnz	r3, 8002b1c <rt_psh_req+0x10>
 8002b12:	4b05      	ldr	r3, [pc, #20]	; (8002b28 <rt_psh_req+0x1c>)
 8002b14:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8002b18:	601a      	str	r2, [r3, #0]
 8002b1a:	4770      	bx	lr
 8002b1c:	4b03      	ldr	r3, [pc, #12]	; (8002b2c <rt_psh_req+0x20>)
 8002b1e:	2201      	movs	r2, #1
 8002b20:	701a      	strb	r2, [r3, #0]
 8002b22:	4770      	bx	lr
 8002b24:	2000202c 	.word	0x2000202c
 8002b28:	e000ed04 	.word	0xe000ed04
 8002b2c:	2000202d 	.word	0x2000202d

08002b30 <rt_pop_req>:
 8002b30:	b538      	push	{r3, r4, r5, lr}
 8002b32:	4b1a      	ldr	r3, [pc, #104]	; (8002b9c <rt_pop_req+0x6c>)
 8002b34:	4c1a      	ldr	r4, [pc, #104]	; (8002ba0 <rt_pop_req+0x70>)
 8002b36:	6818      	ldr	r0, [r3, #0]
 8002b38:	2301      	movs	r3, #1
 8002b3a:	7043      	strb	r3, [r0, #1]
 8002b3c:	f7ff feb8 	bl	80028b0 <rt_put_rdy_first>
 8002b40:	7865      	ldrb	r5, [r4, #1]
 8002b42:	78a3      	ldrb	r3, [r4, #2]
 8002b44:	b93b      	cbnz	r3, 8002b56 <rt_pop_req+0x26>
 8002b46:	4817      	ldr	r0, [pc, #92]	; (8002ba4 <rt_pop_req+0x74>)
 8002b48:	7065      	strb	r5, [r4, #1]
 8002b4a:	f7ff fe9f 	bl	800288c <rt_get_first>
 8002b4e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8002b52:	f000 bd5d 	b.w	8003610 <rt_switch_req>
 8002b56:	eb04 03c5 	add.w	r3, r4, r5, lsl #3
 8002b5a:	6858      	ldr	r0, [r3, #4]
 8002b5c:	7802      	ldrb	r2, [r0, #0]
 8002b5e:	b99a      	cbnz	r2, 8002b88 <rt_pop_req+0x58>
 8002b60:	8919      	ldrh	r1, [r3, #8]
 8002b62:	f000 f9bb 	bl	8002edc <rt_evt_psh>
 8002b66:	78e3      	ldrb	r3, [r4, #3]
 8002b68:	3501      	adds	r5, #1
 8002b6a:	429d      	cmp	r5, r3
 8002b6c:	bf08      	it	eq
 8002b6e:	2500      	moveq	r5, #0
 8002b70:	f3ef 8310 	mrs	r3, PRIMASK
 8002b74:	f3ef 8210 	mrs	r2, PRIMASK
 8002b78:	b672      	cpsid	i
 8002b7a:	78a2      	ldrb	r2, [r4, #2]
 8002b7c:	3a01      	subs	r2, #1
 8002b7e:	70a2      	strb	r2, [r4, #2]
 8002b80:	2b00      	cmp	r3, #0
 8002b82:	d1de      	bne.n	8002b42 <rt_pop_req+0x12>
 8002b84:	b662      	cpsie	i
 8002b86:	e7dc      	b.n	8002b42 <rt_pop_req+0x12>
 8002b88:	2a01      	cmp	r2, #1
 8002b8a:	d103      	bne.n	8002b94 <rt_pop_req+0x64>
 8002b8c:	6899      	ldr	r1, [r3, #8]
 8002b8e:	f000 f933 	bl	8002df8 <rt_mbx_psh>
 8002b92:	e7e8      	b.n	8002b66 <rt_pop_req+0x36>
 8002b94:	f001 f844 	bl	8003c20 <rt_sem_psh>
 8002b98:	e7e5      	b.n	8002b66 <rt_pop_req+0x36>
 8002b9a:	bf00      	nop
 8002b9c:	20003054 	.word	0x20003054
 8002ba0:	2000288c 	.word	0x2000288c
 8002ba4:	20003008 	.word	0x20003008

08002ba8 <os_tick_init>:
 8002ba8:	4b08      	ldr	r3, [pc, #32]	; (8002bcc <os_tick_init+0x24>)
 8002baa:	681a      	ldr	r2, [r3, #0]
 8002bac:	4b08      	ldr	r3, [pc, #32]	; (8002bd0 <os_tick_init+0x28>)
 8002bae:	601a      	str	r2, [r3, #0]
 8002bb0:	2200      	movs	r2, #0
 8002bb2:	605a      	str	r2, [r3, #4]
 8002bb4:	2207      	movs	r2, #7
 8002bb6:	f843 2c04 	str.w	r2, [r3, #-4]
 8002bba:	4a06      	ldr	r2, [pc, #24]	; (8002bd4 <os_tick_init+0x2c>)
 8002bbc:	6813      	ldr	r3, [r2, #0]
 8002bbe:	f043 437f 	orr.w	r3, r3, #4278190080	; 0xff000000
 8002bc2:	6013      	str	r3, [r2, #0]
 8002bc4:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8002bc8:	4770      	bx	lr
 8002bca:	bf00      	nop
 8002bcc:	080082ec 	.word	0x080082ec
 8002bd0:	e000e014 	.word	0xe000e014
 8002bd4:	e000ed20 	.word	0xe000ed20

08002bd8 <os_tick_irqack>:
 8002bd8:	4770      	bx	lr
	...

08002bdc <rt_systick>:
 8002bdc:	b508      	push	{r3, lr}
 8002bde:	4b0b      	ldr	r3, [pc, #44]	; (8002c0c <rt_systick+0x30>)
 8002be0:	6818      	ldr	r0, [r3, #0]
 8002be2:	2301      	movs	r3, #1
 8002be4:	7043      	strb	r3, [r0, #1]
 8002be6:	f7ff fe63 	bl	80028b0 <rt_put_rdy_first>
 8002bea:	f000 f9ad 	bl	8002f48 <rt_chk_robin>
 8002bee:	4a08      	ldr	r2, [pc, #32]	; (8002c10 <rt_systick+0x34>)
 8002bf0:	6813      	ldr	r3, [r2, #0]
 8002bf2:	3301      	adds	r3, #1
 8002bf4:	6013      	str	r3, [r2, #0]
 8002bf6:	f7ff fe89 	bl	800290c <rt_dec_dly>
 8002bfa:	f000 fc91 	bl	8003520 <sysTimerTick>
 8002bfe:	4805      	ldr	r0, [pc, #20]	; (8002c14 <rt_systick+0x38>)
 8002c00:	f7ff fe44 	bl	800288c <rt_get_first>
 8002c04:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8002c08:	f000 bd02 	b.w	8003610 <rt_switch_req>
 8002c0c:	20003054 	.word	0x20003054
 8002c10:	2000309c 	.word	0x2000309c
 8002c14:	20003008 	.word	0x20003008

08002c18 <rt_stk_check>:
 8002c18:	4b06      	ldr	r3, [pc, #24]	; (8002c34 <rt_stk_check+0x1c>)
 8002c1a:	681a      	ldr	r2, [r3, #0]
 8002c1c:	6b13      	ldr	r3, [r2, #48]	; 0x30
 8002c1e:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 8002c20:	4293      	cmp	r3, r2
 8002c22:	d803      	bhi.n	8002c2c <rt_stk_check+0x14>
 8002c24:	681a      	ldr	r2, [r3, #0]
 8002c26:	4b04      	ldr	r3, [pc, #16]	; (8002c38 <rt_stk_check+0x20>)
 8002c28:	429a      	cmp	r2, r3
 8002c2a:	d002      	beq.n	8002c32 <rt_stk_check+0x1a>
 8002c2c:	2001      	movs	r0, #1
 8002c2e:	f7ff bdc7 	b.w	80027c0 <os_error>
 8002c32:	4770      	bx	lr
 8002c34:	20003054 	.word	0x20003054
 8002c38:	e25a2ea5 	.word	0xe25a2ea5

08002c3c <_init_box>:
 8002c3c:	2a00      	cmp	r2, #0
 8002c3e:	bfbb      	ittet	lt
 8002c40:	f022 4200 	biclt.w	r2, r2, #2147483648	; 0x80000000
 8002c44:	3207      	addlt	r2, #7
 8002c46:	3203      	addge	r2, #3
 8002c48:	f022 0207 	biclt.w	r2, r2, #7
 8002c4c:	bfa8      	it	ge
 8002c4e:	f022 0203 	bicge.w	r2, r2, #3
 8002c52:	b510      	push	{r4, lr}
 8002c54:	bfb4      	ite	lt
 8002c56:	2310      	movlt	r3, #16
 8002c58:	230c      	movge	r3, #12
 8002c5a:	b192      	cbz	r2, 8002c82 <_init_box+0x46>
 8002c5c:	18d4      	adds	r4, r2, r3
 8002c5e:	428c      	cmp	r4, r1
 8002c60:	d80f      	bhi.n	8002c82 <_init_box+0x46>
 8002c62:	4401      	add	r1, r0
 8002c64:	4403      	add	r3, r0
 8002c66:	4254      	negs	r4, r2
 8002c68:	6041      	str	r1, [r0, #4]
 8002c6a:	6003      	str	r3, [r0, #0]
 8002c6c:	6082      	str	r2, [r0, #8]
 8002c6e:	4421      	add	r1, r4
 8002c70:	1898      	adds	r0, r3, r2
 8002c72:	4281      	cmp	r1, r0
 8002c74:	d302      	bcc.n	8002c7c <_init_box+0x40>
 8002c76:	5100      	str	r0, [r0, r4]
 8002c78:	4603      	mov	r3, r0
 8002c7a:	e7f9      	b.n	8002c70 <_init_box+0x34>
 8002c7c:	2000      	movs	r0, #0
 8002c7e:	6018      	str	r0, [r3, #0]
 8002c80:	bd10      	pop	{r4, pc}
 8002c82:	2001      	movs	r0, #1
 8002c84:	bd10      	pop	{r4, pc}

08002c86 <rt_alloc_box>:
 8002c86:	f3ef 8310 	mrs	r3, PRIMASK
 8002c8a:	b672      	cpsid	i
 8002c8c:	6802      	ldr	r2, [r0, #0]
 8002c8e:	f003 0301 	and.w	r3, r3, #1
 8002c92:	b10a      	cbz	r2, 8002c98 <rt_alloc_box+0x12>
 8002c94:	6811      	ldr	r1, [r2, #0]
 8002c96:	6001      	str	r1, [r0, #0]
 8002c98:	b903      	cbnz	r3, 8002c9c <rt_alloc_box+0x16>
 8002c9a:	b662      	cpsie	i
 8002c9c:	4610      	mov	r0, r2
 8002c9e:	4770      	bx	lr

08002ca0 <rt_free_box>:
 8002ca0:	4281      	cmp	r1, r0
 8002ca2:	d30d      	bcc.n	8002cc0 <rt_free_box+0x20>
 8002ca4:	6843      	ldr	r3, [r0, #4]
 8002ca6:	4299      	cmp	r1, r3
 8002ca8:	d20a      	bcs.n	8002cc0 <rt_free_box+0x20>
 8002caa:	f3ef 8310 	mrs	r3, PRIMASK
 8002cae:	b672      	cpsid	i
 8002cb0:	6802      	ldr	r2, [r0, #0]
 8002cb2:	600a      	str	r2, [r1, #0]
 8002cb4:	6001      	str	r1, [r0, #0]
 8002cb6:	f013 0001 	ands.w	r0, r3, #1
 8002cba:	d103      	bne.n	8002cc4 <rt_free_box+0x24>
 8002cbc:	b662      	cpsie	i
 8002cbe:	4770      	bx	lr
 8002cc0:	2001      	movs	r0, #1
 8002cc2:	4770      	bx	lr
 8002cc4:	2000      	movs	r0, #0
 8002cc6:	4770      	bx	lr

08002cc8 <rt_mbx_init>:
 8002cc8:	2301      	movs	r3, #1
 8002cca:	3910      	subs	r1, #16
 8002ccc:	7003      	strb	r3, [r0, #0]
 8002cce:	0889      	lsrs	r1, r1, #2
 8002cd0:	2300      	movs	r3, #0
 8002cd2:	7043      	strb	r3, [r0, #1]
 8002cd4:	7083      	strb	r3, [r0, #2]
 8002cd6:	6043      	str	r3, [r0, #4]
 8002cd8:	8103      	strh	r3, [r0, #8]
 8002cda:	8143      	strh	r3, [r0, #10]
 8002cdc:	8183      	strh	r3, [r0, #12]
 8002cde:	81c1      	strh	r1, [r0, #14]
 8002ce0:	4770      	bx	lr
	...

08002ce4 <rt_mbx_wait>:
 8002ce4:	b570      	push	{r4, r5, r6, lr}
 8002ce6:	8985      	ldrh	r5, [r0, #12]
 8002ce8:	4604      	mov	r4, r0
 8002cea:	4616      	mov	r6, r2
 8002cec:	2d00      	cmp	r5, #0
 8002cee:	d038      	beq.n	8002d62 <rt_mbx_wait+0x7e>
 8002cf0:	8943      	ldrh	r3, [r0, #10]
 8002cf2:	1d1a      	adds	r2, r3, #4
 8002cf4:	3301      	adds	r3, #1
 8002cf6:	f850 2022 	ldr.w	r2, [r0, r2, lsl #2]
 8002cfa:	600a      	str	r2, [r1, #0]
 8002cfc:	89c2      	ldrh	r2, [r0, #14]
 8002cfe:	b29b      	uxth	r3, r3
 8002d00:	429a      	cmp	r2, r3
 8002d02:	8143      	strh	r3, [r0, #10]
 8002d04:	bf04      	itt	eq
 8002d06:	2300      	moveq	r3, #0
 8002d08:	8143      	strheq	r3, [r0, #10]
 8002d0a:	6843      	ldr	r3, [r0, #4]
 8002d0c:	b1f3      	cbz	r3, 8002d4c <rt_mbx_wait+0x68>
 8002d0e:	7843      	ldrb	r3, [r0, #1]
 8002d10:	2b02      	cmp	r3, #2
 8002d12:	d11b      	bne.n	8002d4c <rt_mbx_wait+0x68>
 8002d14:	f7ff fdba 	bl	800288c <rt_get_first>
 8002d18:	2100      	movs	r1, #0
 8002d1a:	4605      	mov	r5, r0
 8002d1c:	f7ff fee2 	bl	8002ae4 <rt_ret_val>
 8002d20:	8923      	ldrh	r3, [r4, #8]
 8002d22:	69e9      	ldr	r1, [r5, #28]
 8002d24:	1d1a      	adds	r2, r3, #4
 8002d26:	3301      	adds	r3, #1
 8002d28:	f844 1022 	str.w	r1, [r4, r2, lsl #2]
 8002d2c:	89e2      	ldrh	r2, [r4, #14]
 8002d2e:	b29b      	uxth	r3, r3
 8002d30:	429a      	cmp	r2, r3
 8002d32:	8123      	strh	r3, [r4, #8]
 8002d34:	bf08      	it	eq
 8002d36:	2300      	moveq	r3, #0
 8002d38:	4628      	mov	r0, r5
 8002d3a:	bf08      	it	eq
 8002d3c:	8123      	strheq	r3, [r4, #8]
 8002d3e:	f7ff fe4b 	bl	80029d8 <rt_rmv_dly>
 8002d42:	4628      	mov	r0, r5
 8002d44:	f000 fc7e 	bl	8003644 <rt_dispatch>
 8002d48:	2000      	movs	r0, #0
 8002d4a:	bd70      	pop	{r4, r5, r6, pc}
 8002d4c:	f3ef 8010 	mrs	r0, PRIMASK
 8002d50:	f3ef 8310 	mrs	r3, PRIMASK
 8002d54:	b672      	cpsid	i
 8002d56:	3d01      	subs	r5, #1
 8002d58:	81a5      	strh	r5, [r4, #12]
 8002d5a:	2800      	cmp	r0, #0
 8002d5c:	d1f4      	bne.n	8002d48 <rt_mbx_wait+0x64>
 8002d5e:	b662      	cpsie	i
 8002d60:	bd70      	pop	{r4, r5, r6, pc}
 8002d62:	b14a      	cbz	r2, 8002d78 <rt_mbx_wait+0x94>
 8002d64:	6842      	ldr	r2, [r0, #4]
 8002d66:	4b09      	ldr	r3, [pc, #36]	; (8002d8c <rt_mbx_wait+0xa8>)
 8002d68:	b142      	cbz	r2, 8002d7c <rt_mbx_wait+0x98>
 8002d6a:	6819      	ldr	r1, [r3, #0]
 8002d6c:	f7ff fd76 	bl	800285c <rt_put_prio>
 8002d70:	2108      	movs	r1, #8
 8002d72:	4630      	mov	r0, r6
 8002d74:	f000 fc8a 	bl	800368c <rt_block>
 8002d78:	2001      	movs	r0, #1
 8002d7a:	bd70      	pop	{r4, r5, r6, pc}
 8002d7c:	681b      	ldr	r3, [r3, #0]
 8002d7e:	6043      	str	r3, [r0, #4]
 8002d80:	605a      	str	r2, [r3, #4]
 8002d82:	6098      	str	r0, [r3, #8]
 8002d84:	2301      	movs	r3, #1
 8002d86:	7043      	strb	r3, [r0, #1]
 8002d88:	e7f2      	b.n	8002d70 <rt_mbx_wait+0x8c>
 8002d8a:	bf00      	nop
 8002d8c:	20003054 	.word	0x20003054

08002d90 <rt_mbx_check>:
 8002d90:	89c2      	ldrh	r2, [r0, #14]
 8002d92:	8980      	ldrh	r0, [r0, #12]
 8002d94:	1a10      	subs	r0, r2, r0
 8002d96:	4770      	bx	lr

08002d98 <isr_mbx_send>:
 8002d98:	b508      	push	{r3, lr}
 8002d9a:	f7ff fe31 	bl	8002a00 <rt_psq_enq>
 8002d9e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8002da2:	f7ff beb3 	b.w	8002b0c <rt_psh_req>

08002da6 <isr_mbx_receive>:
 8002da6:	8983      	ldrh	r3, [r0, #12]
 8002da8:	b510      	push	{r4, lr}
 8002daa:	4604      	mov	r4, r0
 8002dac:	b30b      	cbz	r3, 8002df2 <isr_mbx_receive+0x4c>
 8002dae:	8943      	ldrh	r3, [r0, #10]
 8002db0:	3304      	adds	r3, #4
 8002db2:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 8002db6:	600b      	str	r3, [r1, #0]
 8002db8:	7843      	ldrb	r3, [r0, #1]
 8002dba:	2b02      	cmp	r3, #2
 8002dbc:	d104      	bne.n	8002dc8 <isr_mbx_receive+0x22>
 8002dbe:	2100      	movs	r1, #0
 8002dc0:	f7ff fe1e 	bl	8002a00 <rt_psq_enq>
 8002dc4:	f7ff fea2 	bl	8002b0c <rt_psh_req>
 8002dc8:	f3ef 8310 	mrs	r3, PRIMASK
 8002dcc:	f3ef 8210 	mrs	r2, PRIMASK
 8002dd0:	b672      	cpsid	i
 8002dd2:	89a2      	ldrh	r2, [r4, #12]
 8002dd4:	3a01      	subs	r2, #1
 8002dd6:	81a2      	strh	r2, [r4, #12]
 8002dd8:	b903      	cbnz	r3, 8002ddc <isr_mbx_receive+0x36>
 8002dda:	b662      	cpsie	i
 8002ddc:	8963      	ldrh	r3, [r4, #10]
 8002dde:	89e2      	ldrh	r2, [r4, #14]
 8002de0:	3301      	adds	r3, #1
 8002de2:	b29b      	uxth	r3, r3
 8002de4:	429a      	cmp	r2, r3
 8002de6:	8163      	strh	r3, [r4, #10]
 8002de8:	d101      	bne.n	8002dee <isr_mbx_receive+0x48>
 8002dea:	2300      	movs	r3, #0
 8002dec:	8163      	strh	r3, [r4, #10]
 8002dee:	2004      	movs	r0, #4
 8002df0:	bd10      	pop	{r4, pc}
 8002df2:	4618      	mov	r0, r3
 8002df4:	bd10      	pop	{r4, pc}
	...

08002df8 <rt_mbx_psh>:
 8002df8:	6843      	ldr	r3, [r0, #4]
 8002dfa:	b570      	push	{r4, r5, r6, lr}
 8002dfc:	4604      	mov	r4, r0
 8002dfe:	460e      	mov	r6, r1
 8002e00:	2b00      	cmp	r3, #0
 8002e02:	d04b      	beq.n	8002e9c <rt_mbx_psh+0xa4>
 8002e04:	7845      	ldrb	r5, [r0, #1]
 8002e06:	2d02      	cmp	r5, #2
 8002e08:	d020      	beq.n	8002e4c <rt_mbx_psh+0x54>
 8002e0a:	2d03      	cmp	r5, #3
 8002e0c:	d00a      	beq.n	8002e24 <rt_mbx_psh+0x2c>
 8002e0e:	2d01      	cmp	r5, #1
 8002e10:	d161      	bne.n	8002ed6 <rt_mbx_psh+0xde>
 8002e12:	f7ff fd3b 	bl	800288c <rt_get_first>
 8002e16:	4604      	mov	r4, r0
 8002e18:	4632      	mov	r2, r6
 8002e1a:	2110      	movs	r1, #16
 8002e1c:	f7ff fe6b 	bl	8002af6 <rt_ret_val2>
 8002e20:	7065      	strb	r5, [r4, #1]
 8002e22:	e00e      	b.n	8002e42 <rt_mbx_psh+0x4a>
 8002e24:	4608      	mov	r0, r1
 8002e26:	f7ff ff2e 	bl	8002c86 <rt_alloc_box>
 8002e2a:	4605      	mov	r5, r0
 8002e2c:	2800      	cmp	r0, #0
 8002e2e:	d052      	beq.n	8002ed6 <rt_mbx_psh+0xde>
 8002e30:	4620      	mov	r0, r4
 8002e32:	f7ff fd2b 	bl	800288c <rt_get_first>
 8002e36:	4629      	mov	r1, r5
 8002e38:	4604      	mov	r4, r0
 8002e3a:	f7ff fe53 	bl	8002ae4 <rt_ret_val>
 8002e3e:	2301      	movs	r3, #1
 8002e40:	7063      	strb	r3, [r4, #1]
 8002e42:	4620      	mov	r0, r4
 8002e44:	f7ff fdc8 	bl	80029d8 <rt_rmv_dly>
 8002e48:	4621      	mov	r1, r4
 8002e4a:	e022      	b.n	8002e92 <rt_mbx_psh+0x9a>
 8002e4c:	f7ff fd1e 	bl	800288c <rt_get_first>
 8002e50:	2100      	movs	r1, #0
 8002e52:	4605      	mov	r5, r0
 8002e54:	f7ff fe46 	bl	8002ae4 <rt_ret_val>
 8002e58:	8923      	ldrh	r3, [r4, #8]
 8002e5a:	69e9      	ldr	r1, [r5, #28]
 8002e5c:	1d1a      	adds	r2, r3, #4
 8002e5e:	f844 1022 	str.w	r1, [r4, r2, lsl #2]
 8002e62:	f3ef 8210 	mrs	r2, PRIMASK
 8002e66:	f3ef 8110 	mrs	r1, PRIMASK
 8002e6a:	b672      	cpsid	i
 8002e6c:	89a1      	ldrh	r1, [r4, #12]
 8002e6e:	3101      	adds	r1, #1
 8002e70:	81a1      	strh	r1, [r4, #12]
 8002e72:	b902      	cbnz	r2, 8002e76 <rt_mbx_psh+0x7e>
 8002e74:	b662      	cpsie	i
 8002e76:	89e2      	ldrh	r2, [r4, #14]
 8002e78:	3301      	adds	r3, #1
 8002e7a:	b29b      	uxth	r3, r3
 8002e7c:	429a      	cmp	r2, r3
 8002e7e:	8123      	strh	r3, [r4, #8]
 8002e80:	bf04      	itt	eq
 8002e82:	2300      	moveq	r3, #0
 8002e84:	8123      	strheq	r3, [r4, #8]
 8002e86:	2301      	movs	r3, #1
 8002e88:	706b      	strb	r3, [r5, #1]
 8002e8a:	4628      	mov	r0, r5
 8002e8c:	f7ff fda4 	bl	80029d8 <rt_rmv_dly>
 8002e90:	4629      	mov	r1, r5
 8002e92:	4811      	ldr	r0, [pc, #68]	; (8002ed8 <rt_mbx_psh+0xe0>)
 8002e94:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8002e98:	f7ff bce0 	b.w	800285c <rt_put_prio>
 8002e9c:	8980      	ldrh	r0, [r0, #12]
 8002e9e:	89e1      	ldrh	r1, [r4, #14]
 8002ea0:	4288      	cmp	r0, r1
 8002ea2:	d213      	bcs.n	8002ecc <rt_mbx_psh+0xd4>
 8002ea4:	8923      	ldrh	r3, [r4, #8]
 8002ea6:	1d1a      	adds	r2, r3, #4
 8002ea8:	f844 6022 	str.w	r6, [r4, r2, lsl #2]
 8002eac:	f3ef 8210 	mrs	r2, PRIMASK
 8002eb0:	f3ef 8510 	mrs	r5, PRIMASK
 8002eb4:	b672      	cpsid	i
 8002eb6:	3001      	adds	r0, #1
 8002eb8:	81a0      	strh	r0, [r4, #12]
 8002eba:	b902      	cbnz	r2, 8002ebe <rt_mbx_psh+0xc6>
 8002ebc:	b662      	cpsie	i
 8002ebe:	3301      	adds	r3, #1
 8002ec0:	b29b      	uxth	r3, r3
 8002ec2:	4299      	cmp	r1, r3
 8002ec4:	bf08      	it	eq
 8002ec6:	2300      	moveq	r3, #0
 8002ec8:	8123      	strh	r3, [r4, #8]
 8002eca:	bd70      	pop	{r4, r5, r6, pc}
 8002ecc:	2003      	movs	r0, #3
 8002ece:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8002ed2:	f7ff bc75 	b.w	80027c0 <os_error>
 8002ed6:	bd70      	pop	{r4, r5, r6, pc}
 8002ed8:	20003008 	.word	0x20003008

08002edc <rt_evt_psh>:
 8002edc:	b510      	push	{r4, lr}
 8002ede:	8b03      	ldrh	r3, [r0, #24]
 8002ee0:	7842      	ldrb	r2, [r0, #1]
 8002ee2:	4319      	orrs	r1, r3
 8002ee4:	2a06      	cmp	r2, #6
 8002ee6:	4604      	mov	r4, r0
 8002ee8:	8301      	strh	r1, [r0, #24]
 8002eea:	8b43      	ldrh	r3, [r0, #26]
 8002eec:	d115      	bne.n	8002f1a <rt_evt_psh+0x3e>
 8002eee:	ea33 0201 	bics.w	r2, r3, r1
 8002ef2:	d119      	bne.n	8002f28 <rt_evt_psh+0x4c>
 8002ef4:	ea21 0103 	bic.w	r1, r1, r3
 8002ef8:	8321      	strh	r1, [r4, #24]
 8002efa:	4620      	mov	r0, r4
 8002efc:	f7ff fd6c 	bl	80029d8 <rt_rmv_dly>
 8002f00:	2301      	movs	r3, #1
 8002f02:	4620      	mov	r0, r4
 8002f04:	7063      	strb	r3, [r4, #1]
 8002f06:	8b62      	ldrh	r2, [r4, #26]
 8002f08:	2108      	movs	r1, #8
 8002f0a:	f7ff fdf4 	bl	8002af6 <rt_ret_val2>
 8002f0e:	4621      	mov	r1, r4
 8002f10:	4806      	ldr	r0, [pc, #24]	; (8002f2c <rt_evt_psh+0x50>)
 8002f12:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8002f16:	f7ff bca1 	b.w	800285c <rt_put_prio>
 8002f1a:	2a05      	cmp	r2, #5
 8002f1c:	d104      	bne.n	8002f28 <rt_evt_psh+0x4c>
 8002f1e:	ea11 0203 	ands.w	r2, r1, r3
 8002f22:	d001      	beq.n	8002f28 <rt_evt_psh+0x4c>
 8002f24:	8342      	strh	r2, [r0, #26]
 8002f26:	e7e5      	b.n	8002ef4 <rt_evt_psh+0x18>
 8002f28:	bd10      	pop	{r4, pc}
 8002f2a:	bf00      	nop
 8002f2c:	20003008 	.word	0x20003008

08002f30 <rt_init_robin>:
 8002f30:	4b03      	ldr	r3, [pc, #12]	; (8002f40 <rt_init_robin+0x10>)
 8002f32:	2200      	movs	r2, #0
 8002f34:	601a      	str	r2, [r3, #0]
 8002f36:	4a03      	ldr	r2, [pc, #12]	; (8002f44 <rt_init_robin+0x14>)
 8002f38:	6812      	ldr	r2, [r2, #0]
 8002f3a:	80da      	strh	r2, [r3, #6]
 8002f3c:	4770      	bx	lr
 8002f3e:	bf00      	nop
 8002f40:	20003040 	.word	0x20003040
 8002f44:	080082d0 	.word	0x080082d0

08002f48 <rt_chk_robin>:
 8002f48:	b508      	push	{r3, lr}
 8002f4a:	4b0e      	ldr	r3, [pc, #56]	; (8002f84 <rt_chk_robin+0x3c>)
 8002f4c:	685a      	ldr	r2, [r3, #4]
 8002f4e:	4b0e      	ldr	r3, [pc, #56]	; (8002f88 <rt_chk_robin+0x40>)
 8002f50:	6819      	ldr	r1, [r3, #0]
 8002f52:	4291      	cmp	r1, r2
 8002f54:	490d      	ldr	r1, [pc, #52]	; (8002f8c <rt_chk_robin+0x44>)
 8002f56:	d005      	beq.n	8002f64 <rt_chk_robin+0x1c>
 8002f58:	601a      	str	r2, [r3, #0]
 8002f5a:	88da      	ldrh	r2, [r3, #6]
 8002f5c:	6808      	ldr	r0, [r1, #0]
 8002f5e:	3a01      	subs	r2, #1
 8002f60:	4402      	add	r2, r0
 8002f62:	809a      	strh	r2, [r3, #4]
 8002f64:	8898      	ldrh	r0, [r3, #4]
 8002f66:	880a      	ldrh	r2, [r1, #0]
 8002f68:	4290      	cmp	r0, r2
 8002f6a:	d10a      	bne.n	8002f82 <rt_chk_robin+0x3a>
 8002f6c:	2200      	movs	r2, #0
 8002f6e:	4805      	ldr	r0, [pc, #20]	; (8002f84 <rt_chk_robin+0x3c>)
 8002f70:	601a      	str	r2, [r3, #0]
 8002f72:	f7ff fc8b 	bl	800288c <rt_get_first>
 8002f76:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8002f7a:	4601      	mov	r1, r0
 8002f7c:	4801      	ldr	r0, [pc, #4]	; (8002f84 <rt_chk_robin+0x3c>)
 8002f7e:	f7ff bc6d 	b.w	800285c <rt_put_prio>
 8002f82:	bd08      	pop	{r3, pc}
 8002f84:	20003008 	.word	0x20003008
 8002f88:	20003040 	.word	0x20003040
 8002f8c:	2000309c 	.word	0x2000309c

08002f90 <rt_timer_insert>:
 8002f90:	4a0b      	ldr	r2, [pc, #44]	; (8002fc0 <rt_timer_insert+0x30>)
 8002f92:	6813      	ldr	r3, [r2, #0]
 8002f94:	b530      	push	{r4, r5, lr}
 8002f96:	2400      	movs	r4, #0
 8002f98:	b943      	cbnz	r3, 8002fac <rt_timer_insert+0x1c>
 8002f9a:	6003      	str	r3, [r0, #0]
 8002f9c:	6081      	str	r1, [r0, #8]
 8002f9e:	b113      	cbz	r3, 8002fa6 <rt_timer_insert+0x16>
 8002fa0:	689d      	ldr	r5, [r3, #8]
 8002fa2:	1a69      	subs	r1, r5, r1
 8002fa4:	6099      	str	r1, [r3, #8]
 8002fa6:	b144      	cbz	r4, 8002fba <rt_timer_insert+0x2a>
 8002fa8:	6020      	str	r0, [r4, #0]
 8002faa:	bd30      	pop	{r4, r5, pc}
 8002fac:	689d      	ldr	r5, [r3, #8]
 8002fae:	42a9      	cmp	r1, r5
 8002fb0:	d3f3      	bcc.n	8002f9a <rt_timer_insert+0xa>
 8002fb2:	461c      	mov	r4, r3
 8002fb4:	1b49      	subs	r1, r1, r5
 8002fb6:	681b      	ldr	r3, [r3, #0]
 8002fb8:	e7ee      	b.n	8002f98 <rt_timer_insert+0x8>
 8002fba:	6010      	str	r0, [r2, #0]
 8002fbc:	bd30      	pop	{r4, r5, pc}
 8002fbe:	bf00      	nop
 8002fc0:	20003050 	.word	0x20003050

08002fc4 <rt_ms2tick>:
 8002fc4:	b1c0      	cbz	r0, 8002ff8 <rt_ms2tick+0x34>
 8002fc6:	1c43      	adds	r3, r0, #1
 8002fc8:	d011      	beq.n	8002fee <rt_ms2tick+0x2a>
 8002fca:	4b0c      	ldr	r3, [pc, #48]	; (8002ffc <rt_ms2tick+0x38>)
 8002fcc:	4298      	cmp	r0, r3
 8002fce:	d811      	bhi.n	8002ff4 <rt_ms2tick+0x30>
 8002fd0:	4b0b      	ldr	r3, [pc, #44]	; (8003000 <rt_ms2tick+0x3c>)
 8002fd2:	681b      	ldr	r3, [r3, #0]
 8002fd4:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 8002fd8:	1e5a      	subs	r2, r3, #1
 8002fda:	fb01 2000 	mla	r0, r1, r0, r2
 8002fde:	fbb0 f3f3 	udiv	r3, r0, r3
 8002fe2:	f64f 70fe 	movw	r0, #65534	; 0xfffe
 8002fe6:	4283      	cmp	r3, r0
 8002fe8:	d806      	bhi.n	8002ff8 <rt_ms2tick+0x34>
 8002fea:	b298      	uxth	r0, r3
 8002fec:	4770      	bx	lr
 8002fee:	f64f 70ff 	movw	r0, #65535	; 0xffff
 8002ff2:	4770      	bx	lr
 8002ff4:	f64f 70fe 	movw	r0, #65534	; 0xfffe
 8002ff8:	4770      	bx	lr
 8002ffa:	bf00      	nop
 8002ffc:	003d0900 	.word	0x003d0900
 8003000:	08008288 	.word	0x08008288

08003004 <rt_tid2ptcb>:
 8003004:	b138      	cbz	r0, 8003016 <rt_tid2ptcb+0x12>
 8003006:	0783      	lsls	r3, r0, #30
 8003008:	d104      	bne.n	8003014 <rt_tid2ptcb+0x10>
 800300a:	7803      	ldrb	r3, [r0, #0]
 800300c:	2b00      	cmp	r3, #0
 800300e:	bf18      	it	ne
 8003010:	2000      	movne	r0, #0
 8003012:	4770      	bx	lr
 8003014:	2000      	movs	r0, #0
 8003016:	4770      	bx	lr

08003018 <svcKernelStart>:
 8003018:	b5b0      	push	{r4, r5, r7, lr}
 800301a:	4d0e      	ldr	r5, [pc, #56]	; (8003054 <svcKernelStart+0x3c>)
 800301c:	7828      	ldrb	r0, [r5, #0]
 800301e:	af00      	add	r7, sp, #0
 8003020:	b9a8      	cbnz	r0, 800304e <svcKernelStart+0x36>
 8003022:	4c0d      	ldr	r4, [pc, #52]	; (8003058 <svcKernelStart+0x40>)
 8003024:	6823      	ldr	r3, [r4, #0]
 8003026:	f893 1024 	ldrb.w	r1, [r3, #36]	; 0x24
 800302a:	f000 fb51 	bl	80036d0 <rt_tsk_prio>
 800302e:	6823      	ldr	r3, [r4, #0]
 8003030:	78da      	ldrb	r2, [r3, #3]
 8003032:	2aff      	cmp	r2, #255	; 0xff
 8003034:	d103      	bne.n	800303e <svcKernelStart+0x26>
 8003036:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8003038:	3220      	adds	r2, #32
 800303a:	f382 8809 	msr	PSP, r2
 800303e:	6862      	ldr	r2, [r4, #4]
 8003040:	b90a      	cbnz	r2, 8003046 <svcKernelStart+0x2e>
 8003042:	e884 000c 	stmia.w	r4, {r2, r3}
 8003046:	f000 fcfb 	bl	8003a40 <rt_sys_start>
 800304a:	2301      	movs	r3, #1
 800304c:	702b      	strb	r3, [r5, #0]
 800304e:	2000      	movs	r0, #0
 8003050:	bdb0      	pop	{r4, r5, r7, pc}
 8003052:	bf00      	nop
 8003054:	2000304d 	.word	0x2000304d
 8003058:	20003054 	.word	0x20003054

0800305c <svcKernelRunning>:
 800305c:	4b01      	ldr	r3, [pc, #4]	; (8003064 <svcKernelRunning+0x8>)
 800305e:	7818      	ldrb	r0, [r3, #0]
 8003060:	4770      	bx	lr
 8003062:	bf00      	nop
 8003064:	2000304d 	.word	0x2000304d

08003068 <osKernelRunning>:
 8003068:	b510      	push	{r4, lr}
 800306a:	f3ef 8410 	mrs	r4, PRIMASK
 800306e:	b934      	cbnz	r4, 800307e <osKernelRunning+0x16>
 8003070:	f3ef 8405 	mrs	r4, IPSR
 8003074:	b91c      	cbnz	r4, 800307e <osKernelRunning+0x16>
 8003076:	f3ef 8414 	mrs	r4, CONTROL
 800307a:	07e4      	lsls	r4, r4, #31
 800307c:	d402      	bmi.n	8003084 <osKernelRunning+0x1c>
 800307e:	4b03      	ldr	r3, [pc, #12]	; (800308c <osKernelRunning+0x24>)
 8003080:	7818      	ldrb	r0, [r3, #0]
 8003082:	bd10      	pop	{r4, pc}
 8003084:	f8df c008 	ldr.w	r12, [pc, #8]	; 8003090 <osKernelRunning+0x28>
 8003088:	df00      	svc	0
 800308a:	bd10      	pop	{r4, pc}
 800308c:	2000304d 	.word	0x2000304d
 8003090:	0800305d 	.word	0x0800305d

08003094 <osKernelStart>:
 8003094:	b590      	push	{r4, r7, lr}
 8003096:	b089      	sub	sp, #36	; 0x24
 8003098:	af00      	add	r7, sp, #0
 800309a:	f3ef 8310 	mrs	r3, PRIMASK
 800309e:	2b00      	cmp	r3, #0
 80030a0:	d137      	bne.n	8003112 <osKernelStart+0x7e>
 80030a2:	f3ef 8305 	mrs	r3, IPSR
 80030a6:	2b00      	cmp	r3, #0
 80030a8:	d133      	bne.n	8003112 <osKernelStart+0x7e>
 80030aa:	f7ff ffdd 	bl	8003068 <osKernelRunning>
 80030ae:	b928      	cbnz	r0, 80030bc <osKernelStart+0x28>
 80030b0:	4c19      	ldr	r4, [pc, #100]	; (8003118 <osKernelStart+0x84>)
 80030b2:	6824      	ldr	r4, [r4, #0]
 80030b4:	b114      	cbz	r4, 80030bc <osKernelStart+0x28>
 80030b6:	6864      	ldr	r4, [r4, #4]
 80030b8:	b104      	cbz	r4, 80030bc <osKernelStart+0x28>
 80030ba:	47a0      	blx	r4
 80030bc:	f3ef 8414 	mrs	r4, CONTROL
 80030c0:	f004 0403 	and.w	r4, r4, #3
 80030c4:	2c02      	cmp	r4, #2
 80030c6:	d018      	beq.n	80030fa <osKernelStart+0x66>
 80030c8:	2c03      	cmp	r4, #3
 80030ca:	d01c      	beq.n	8003106 <osKernelStart+0x72>
 80030cc:	2c01      	cmp	r4, #1
 80030ce:	d01e      	beq.n	800310e <osKernelStart+0x7a>
 80030d0:	f107 0420 	add.w	r4, r7, #32
 80030d4:	f384 8809 	msr	PSP, r4
 80030d8:	4c10      	ldr	r4, [pc, #64]	; (800311c <osKernelStart+0x88>)
 80030da:	7824      	ldrb	r4, [r4, #0]
 80030dc:	07e4      	lsls	r4, r4, #31
 80030de:	d510      	bpl.n	8003102 <osKernelStart+0x6e>
 80030e0:	2402      	movs	r4, #2
 80030e2:	f384 8814 	msr	CONTROL, r4
 80030e6:	f3bf 8f4f 	dsb	sy
 80030ea:	f3bf 8f6f 	isb	sy
 80030ee:	f8df c030 	ldr.w	r12, [pc, #48]	; 8003120 <osKernelStart+0x8c>
 80030f2:	df00      	svc	0
 80030f4:	3724      	adds	r7, #36	; 0x24
 80030f6:	46bd      	mov	sp, r7
 80030f8:	bd90      	pop	{r4, r7, pc}
 80030fa:	4c08      	ldr	r4, [pc, #32]	; (800311c <osKernelStart+0x88>)
 80030fc:	7824      	ldrb	r4, [r4, #0]
 80030fe:	07e4      	lsls	r4, r4, #31
 8003100:	d4f5      	bmi.n	80030ee <osKernelStart+0x5a>
 8003102:	2403      	movs	r4, #3
 8003104:	e7ed      	b.n	80030e2 <osKernelStart+0x4e>
 8003106:	4c05      	ldr	r4, [pc, #20]	; (800311c <osKernelStart+0x88>)
 8003108:	7824      	ldrb	r4, [r4, #0]
 800310a:	07e4      	lsls	r4, r4, #31
 800310c:	d5ef      	bpl.n	80030ee <osKernelStart+0x5a>
 800310e:	20ff      	movs	r0, #255	; 0xff
 8003110:	e7f0      	b.n	80030f4 <osKernelStart+0x60>
 8003112:	2082      	movs	r0, #130	; 0x82
 8003114:	e7ee      	b.n	80030f4 <osKernelStart+0x60>
 8003116:	bf00      	nop
 8003118:	2000303c 	.word	0x2000303c
 800311c:	080082b6 	.word	0x080082b6
 8003120:	08003019 	.word	0x08003019

08003124 <svcThreadCreate>:
 8003124:	b570      	push	{r4, r5, r6, lr}
 8003126:	460b      	mov	r3, r1
 8003128:	4616      	mov	r6, r2
 800312a:	4602      	mov	r2, r0
 800312c:	b910      	cbnz	r0, 8003134 <svcThreadCreate+0x10>
 800312e:	2400      	movs	r4, #0
 8003130:	4620      	mov	r0, r4
 8003132:	bd70      	pop	{r4, r5, r6, pc}
 8003134:	6800      	ldr	r0, [r0, #0]
 8003136:	2800      	cmp	r0, #0
 8003138:	d0f9      	beq.n	800312e <svcThreadCreate+0xa>
 800313a:	f9b2 4004 	ldrsh.w	r4, [r2, #4]
 800313e:	1ce5      	adds	r5, r4, #3
 8003140:	b2ad      	uxth	r5, r5
 8003142:	2d06      	cmp	r5, #6
 8003144:	d8f3      	bhi.n	800312e <svcThreadCreate+0xa>
 8003146:	68d1      	ldr	r1, [r2, #12]
 8003148:	b1c1      	cbz	r1, 800317c <svcThreadCreate+0x58>
 800314a:	6912      	ldr	r2, [r2, #16]
 800314c:	3404      	adds	r4, #4
 800314e:	ea44 2101 	orr.w	r1, r4, r1, lsl #8
 8003152:	f000 fafb 	bl	800374c <rt_tsk_create>
 8003156:	2800      	cmp	r0, #0
 8003158:	d0e9      	beq.n	800312e <svcThreadCreate+0xa>
 800315a:	4b0a      	ldr	r3, [pc, #40]	; (8003184 <svcThreadCreate+0x60>)
 800315c:	4a0a      	ldr	r2, [pc, #40]	; (8003188 <svcThreadCreate+0x64>)
 800315e:	3801      	subs	r0, #1
 8003160:	f853 4020 	ldr.w	r4, [r3, r0, lsl #2]
 8003164:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8003166:	635a      	str	r2, [r3, #52]	; 0x34
 8003168:	4b08      	ldr	r3, [pc, #32]	; (800318c <svcThreadCreate+0x68>)
 800316a:	681b      	ldr	r3, [r3, #0]
 800316c:	b143      	cbz	r3, 8003180 <svcThreadCreate+0x5c>
 800316e:	689b      	ldr	r3, [r3, #8]
 8003170:	b133      	cbz	r3, 8003180 <svcThreadCreate+0x5c>
 8003172:	4631      	mov	r1, r6
 8003174:	78e0      	ldrb	r0, [r4, #3]
 8003176:	4798      	blx	r3
 8003178:	63e0      	str	r0, [r4, #60]	; 0x3c
 800317a:	e7d9      	b.n	8003130 <svcThreadCreate+0xc>
 800317c:	460a      	mov	r2, r1
 800317e:	e7e5      	b.n	800314c <svcThreadCreate+0x28>
 8003180:	63e6      	str	r6, [r4, #60]	; 0x3c
 8003182:	e7d5      	b.n	8003130 <svcThreadCreate+0xc>
 8003184:	20002850 	.word	0x20002850
 8003188:	08003311 	.word	0x08003311
 800318c:	2000303c 	.word	0x2000303c

08003190 <svcThreadGetId>:
 8003190:	b508      	push	{r3, lr}
 8003192:	f000 fa95 	bl	80036c0 <rt_tsk_self>
 8003196:	b118      	cbz	r0, 80031a0 <svcThreadGetId+0x10>
 8003198:	3801      	subs	r0, #1
 800319a:	4b02      	ldr	r3, [pc, #8]	; (80031a4 <svcThreadGetId+0x14>)
 800319c:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
 80031a0:	bd08      	pop	{r3, pc}
 80031a2:	bf00      	nop
 80031a4:	20002850 	.word	0x20002850

080031a8 <svcThreadTerminate>:
 80031a8:	b510      	push	{r4, lr}
 80031aa:	f7ff ff2b 	bl	8003004 <rt_tid2ptcb>
 80031ae:	4604      	mov	r4, r0
 80031b0:	b170      	cbz	r0, 80031d0 <svcThreadTerminate+0x28>
 80031b2:	4b08      	ldr	r3, [pc, #32]	; (80031d4 <svcThreadTerminate+0x2c>)
 80031b4:	681b      	ldr	r3, [r3, #0]
 80031b6:	b11b      	cbz	r3, 80031c0 <svcThreadTerminate+0x18>
 80031b8:	68db      	ldr	r3, [r3, #12]
 80031ba:	b10b      	cbz	r3, 80031c0 <svcThreadTerminate+0x18>
 80031bc:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 80031be:	4798      	blx	r3
 80031c0:	78e0      	ldrb	r0, [r4, #3]
 80031c2:	f000 fb19 	bl	80037f8 <rt_tsk_delete>
 80031c6:	28ff      	cmp	r0, #255	; 0xff
 80031c8:	bf0c      	ite	eq
 80031ca:	2081      	moveq	r0, #129	; 0x81
 80031cc:	2000      	movne	r0, #0
 80031ce:	bd10      	pop	{r4, pc}
 80031d0:	2080      	movs	r0, #128	; 0x80
 80031d2:	bd10      	pop	{r4, pc}
 80031d4:	2000303c 	.word	0x2000303c

080031d8 <svcDelay>:
 80031d8:	b508      	push	{r3, lr}
 80031da:	b128      	cbz	r0, 80031e8 <svcDelay+0x10>
 80031dc:	f7ff fef2 	bl	8002fc4 <rt_ms2tick>
 80031e0:	f000 fd1a 	bl	8003c18 <rt_dly_wait>
 80031e4:	2040      	movs	r0, #64	; 0x40
 80031e6:	bd08      	pop	{r3, pc}
 80031e8:	bd08      	pop	{r3, pc}
	...

080031ec <osDelay>:
 80031ec:	b510      	push	{r4, lr}
 80031ee:	f3ef 8410 	mrs	r4, PRIMASK
 80031f2:	b934      	cbnz	r4, 8003202 <osDelay+0x16>
 80031f4:	f3ef 8405 	mrs	r4, IPSR
 80031f8:	b91c      	cbnz	r4, 8003202 <osDelay+0x16>
 80031fa:	f8df c00c 	ldr.w	r12, [pc, #12]	; 8003208 <osDelay+0x1c>
 80031fe:	df00      	svc	0
 8003200:	bd10      	pop	{r4, pc}
 8003202:	2082      	movs	r0, #130	; 0x82
 8003204:	bd10      	pop	{r4, pc}
 8003206:	0000      	.short	0x0000
 8003208:	080031d9 	.word	0x080031d9

0800320c <svcTimerCall>:
 800320c:	0783      	lsls	r3, r0, #30
 800320e:	d105      	bne.n	800321c <svcTimerCall+0x10>
 8003210:	b138      	cbz	r0, 8003222 <svcTimerCall+0x16>
 8003212:	6943      	ldr	r3, [r0, #20]
 8003214:	6901      	ldr	r1, [r0, #16]
 8003216:	681b      	ldr	r3, [r3, #0]
 8003218:	4618      	mov	r0, r3
 800321a:	4770      	bx	lr
 800321c:	2300      	movs	r3, #0
 800321e:	4619      	mov	r1, r3
 8003220:	e7fa      	b.n	8003218 <svcTimerCall+0xc>
 8003222:	4603      	mov	r3, r0
 8003224:	e7fb      	b.n	800321e <svcTimerCall+0x12>
	...

08003228 <osTimerCall>:
 8003228:	b510      	push	{r4, lr}
 800322a:	4604      	mov	r4, r0
 800322c:	4608      	mov	r0, r1
 800322e:	f8df c00c 	ldr.w	r12, [pc, #12]	; 800323c <osTimerCall+0x14>
 8003232:	df00      	svc	0
 8003234:	e884 0003 	stmia.w	r4, {r0, r1}
 8003238:	4620      	mov	r0, r4
 800323a:	bd10      	pop	{r4, pc}
 800323c:	0800320d 	.word	0x0800320d

08003240 <svcMutexCreate>:
 8003240:	b510      	push	{r4, lr}
 8003242:	b148      	cbz	r0, 8003258 <svcMutexCreate+0x18>
 8003244:	6804      	ldr	r4, [r0, #0]
 8003246:	b124      	cbz	r4, 8003252 <svcMutexCreate+0x12>
 8003248:	7823      	ldrb	r3, [r4, #0]
 800324a:	b923      	cbnz	r3, 8003256 <svcMutexCreate+0x16>
 800324c:	4620      	mov	r0, r4
 800324e:	f000 fc3d 	bl	8003acc <rt_mut_init>
 8003252:	4620      	mov	r0, r4
 8003254:	bd10      	pop	{r4, pc}
 8003256:	2000      	movs	r0, #0
 8003258:	bd10      	pop	{r4, pc}

0800325a <svcMutexWait>:
 800325a:	b570      	push	{r4, r5, r6, lr}
 800325c:	f010 0403 	ands.w	r4, r0, #3
 8003260:	4605      	mov	r5, r0
 8003262:	460e      	mov	r6, r1
 8003264:	d111      	bne.n	800328a <svcMutexWait+0x30>
 8003266:	b180      	cbz	r0, 800328a <svcMutexWait+0x30>
 8003268:	7803      	ldrb	r3, [r0, #0]
 800326a:	2b03      	cmp	r3, #3
 800326c:	d10d      	bne.n	800328a <svcMutexWait+0x30>
 800326e:	4608      	mov	r0, r1
 8003270:	f7ff fea8 	bl	8002fc4 <rt_ms2tick>
 8003274:	4601      	mov	r1, r0
 8003276:	4628      	mov	r0, r5
 8003278:	f000 fca0 	bl	8003bbc <rt_mut_wait>
 800327c:	2801      	cmp	r0, #1
 800327e:	d106      	bne.n	800328e <svcMutexWait+0x34>
 8003280:	2e00      	cmp	r6, #0
 8003282:	bf14      	ite	ne
 8003284:	20c1      	movne	r0, #193	; 0xc1
 8003286:	2081      	moveq	r0, #129	; 0x81
 8003288:	bd70      	pop	{r4, r5, r6, pc}
 800328a:	2080      	movs	r0, #128	; 0x80
 800328c:	bd70      	pop	{r4, r5, r6, pc}
 800328e:	4620      	mov	r0, r4
 8003290:	bd70      	pop	{r4, r5, r6, pc}

08003292 <svcMutexRelease>:
 8003292:	0782      	lsls	r2, r0, #30
 8003294:	b508      	push	{r3, lr}
 8003296:	d10a      	bne.n	80032ae <svcMutexRelease+0x1c>
 8003298:	b148      	cbz	r0, 80032ae <svcMutexRelease+0x1c>
 800329a:	7803      	ldrb	r3, [r0, #0]
 800329c:	2b03      	cmp	r3, #3
 800329e:	d106      	bne.n	80032ae <svcMutexRelease+0x1c>
 80032a0:	f000 fc1c 	bl	8003adc <rt_mut_release>
 80032a4:	28ff      	cmp	r0, #255	; 0xff
 80032a6:	bf0c      	ite	eq
 80032a8:	2081      	moveq	r0, #129	; 0x81
 80032aa:	2000      	movne	r0, #0
 80032ac:	bd08      	pop	{r3, pc}
 80032ae:	2080      	movs	r0, #128	; 0x80
 80032b0:	bd08      	pop	{r3, pc}
	...

080032b4 <osMutexCreate>:
 80032b4:	b570      	push	{r4, r5, r6, lr}
 80032b6:	4605      	mov	r5, r0
 80032b8:	f3ef 8410 	mrs	r4, PRIMASK
 80032bc:	b994      	cbnz	r4, 80032e4 <osMutexCreate+0x30>
 80032be:	f3ef 8605 	mrs	r6, IPSR
 80032c2:	b97e      	cbnz	r6, 80032e4 <osMutexCreate+0x30>
 80032c4:	f3ef 8414 	mrs	r4, CONTROL
 80032c8:	07e4      	lsls	r4, r4, #31
 80032ca:	d406      	bmi.n	80032da <osMutexCreate+0x26>
 80032cc:	4c06      	ldr	r4, [pc, #24]	; (80032e8 <osMutexCreate+0x34>)
 80032ce:	7824      	ldrb	r4, [r4, #0]
 80032d0:	b91c      	cbnz	r4, 80032da <osMutexCreate+0x26>
 80032d2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80032d6:	f7ff bfb3 	b.w	8003240 <svcMutexCreate>
 80032da:	4628      	mov	r0, r5
 80032dc:	f8df c00c 	ldr.w	r12, [pc, #12]	; 80032ec <osMutexCreate+0x38>
 80032e0:	df00      	svc	0
 80032e2:	bd70      	pop	{r4, r5, r6, pc}
 80032e4:	2000      	movs	r0, #0
 80032e6:	bd70      	pop	{r4, r5, r6, pc}
 80032e8:	2000304d 	.word	0x2000304d
 80032ec:	08003241 	.word	0x08003241

080032f0 <osMutexWait>:
 80032f0:	b510      	push	{r4, lr}
 80032f2:	f3ef 8410 	mrs	r4, PRIMASK
 80032f6:	b934      	cbnz	r4, 8003306 <osMutexWait+0x16>
 80032f8:	f3ef 8405 	mrs	r4, IPSR
 80032fc:	b91c      	cbnz	r4, 8003306 <osMutexWait+0x16>
 80032fe:	f8df c00c 	ldr.w	r12, [pc, #12]	; 800330c <osMutexWait+0x1c>
 8003302:	df00      	svc	0
 8003304:	bd10      	pop	{r4, pc}
 8003306:	2082      	movs	r0, #130	; 0x82
 8003308:	bd10      	pop	{r4, pc}
 800330a:	0000      	.short	0x0000
 800330c:	0800325b 	.word	0x0800325b

08003310 <osThreadExit>:
 8003310:	4808      	ldr	r0, [pc, #32]	; (8003334 <osThreadExit+0x24>)
 8003312:	b508      	push	{r3, lr}
 8003314:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8003318:	6800      	ldr	r0, [r0, #0]
 800331a:	f7ff ffe9 	bl	80032f0 <osMutexWait>
 800331e:	f8df c018 	ldr.w	r12, [pc, #24]	; 8003338 <osThreadExit+0x28>
 8003322:	df00      	svc	0
 8003324:	4604      	mov	r4, r0
 8003326:	f7ff fa59 	bl	80027dc <sysThreadTerminate>
 800332a:	4620      	mov	r0, r4
 800332c:	f8df c00c 	ldr.w	r12, [pc, #12]	; 800333c <osThreadExit+0x2c>
 8003330:	df00      	svc	0
 8003332:	e7fe      	b.n	8003332 <osThreadExit+0x22>
 8003334:	20003048 	.word	0x20003048
 8003338:	08003191 	.word	0x08003191
 800333c:	080031a9 	.word	0x080031a9

08003340 <osMutexRelease>:
 8003340:	b510      	push	{r4, lr}
 8003342:	f3ef 8410 	mrs	r4, PRIMASK
 8003346:	b934      	cbnz	r4, 8003356 <osMutexRelease+0x16>
 8003348:	f3ef 8405 	mrs	r4, IPSR
 800334c:	b91c      	cbnz	r4, 8003356 <osMutexRelease+0x16>
 800334e:	f8df c00c 	ldr.w	r12, [pc, #12]	; 800335c <osMutexRelease+0x1c>
 8003352:	df00      	svc	0
 8003354:	bd10      	pop	{r4, pc}
 8003356:	2082      	movs	r0, #130	; 0x82
 8003358:	bd10      	pop	{r4, pc}
 800335a:	0000      	.short	0x0000
 800335c:	08003293 	.word	0x08003293

08003360 <osThreadContextCreate>:
 8003360:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003364:	4680      	mov	r8, r0
 8003366:	460f      	mov	r7, r1
 8003368:	4616      	mov	r6, r2
 800336a:	f3ef 8410 	mrs	r4, PRIMASK
 800336e:	bb04      	cbnz	r4, 80033b2 <osThreadContextCreate+0x52>
 8003370:	f3ef 8305 	mrs	r3, IPSR
 8003374:	b9d3      	cbnz	r3, 80033ac <osThreadContextCreate+0x4c>
 8003376:	f3ef 8314 	mrs	r3, CONTROL
 800337a:	07db      	lsls	r3, r3, #31
 800337c:	d406      	bmi.n	800338c <osThreadContextCreate+0x2c>
 800337e:	4b0e      	ldr	r3, [pc, #56]	; (80033b8 <osThreadContextCreate+0x58>)
 8003380:	781b      	ldrb	r3, [r3, #0]
 8003382:	b91b      	cbnz	r3, 800338c <osThreadContextCreate+0x2c>
 8003384:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8003388:	f7ff becc 	b.w	8003124 <svcThreadCreate>
 800338c:	4d0b      	ldr	r5, [pc, #44]	; (80033bc <osThreadContextCreate+0x5c>)
 800338e:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8003392:	6828      	ldr	r0, [r5, #0]
 8003394:	f7ff ffac 	bl	80032f0 <osMutexWait>
 8003398:	4640      	mov	r0, r8
 800339a:	4639      	mov	r1, r7
 800339c:	4632      	mov	r2, r6
 800339e:	f8df c020 	ldr.w	r12, [pc, #32]	; 80033c0 <osThreadContextCreate+0x60>
 80033a2:	df00      	svc	0
 80033a4:	4604      	mov	r4, r0
 80033a6:	6828      	ldr	r0, [r5, #0]
 80033a8:	f7ff ffca 	bl	8003340 <osMutexRelease>
 80033ac:	4620      	mov	r0, r4
 80033ae:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80033b2:	2400      	movs	r4, #0
 80033b4:	e7fa      	b.n	80033ac <osThreadContextCreate+0x4c>
 80033b6:	bf00      	nop
 80033b8:	2000304d 	.word	0x2000304d
 80033bc:	20003048 	.word	0x20003048
 80033c0:	08003125 	.word	0x08003125

080033c4 <osThreadCreate>:
 80033c4:	2200      	movs	r2, #0
 80033c6:	f7ff bfcb 	b.w	8003360 <osThreadContextCreate>

080033ca <svcMessageCreate>:
 80033ca:	b510      	push	{r4, lr}
 80033cc:	4604      	mov	r4, r0
 80033ce:	b160      	cbz	r0, 80033ea <svcMessageCreate+0x20>
 80033d0:	6801      	ldr	r1, [r0, #0]
 80033d2:	b151      	cbz	r1, 80033ea <svcMessageCreate+0x20>
 80033d4:	6840      	ldr	r0, [r0, #4]
 80033d6:	b148      	cbz	r0, 80033ec <svcMessageCreate+0x22>
 80033d8:	7803      	ldrb	r3, [r0, #0]
 80033da:	b933      	cbnz	r3, 80033ea <svcMessageCreate+0x20>
 80033dc:	3104      	adds	r1, #4
 80033de:	0089      	lsls	r1, r1, #2
 80033e0:	b289      	uxth	r1, r1
 80033e2:	f7ff fc71 	bl	8002cc8 <rt_mbx_init>
 80033e6:	6860      	ldr	r0, [r4, #4]
 80033e8:	bd10      	pop	{r4, pc}
 80033ea:	2000      	movs	r0, #0
 80033ec:	bd10      	pop	{r4, pc}
	...

080033f0 <svcKernelInitialize>:
 80033f0:	b538      	push	{r3, r4, r5, lr}
 80033f2:	4c11      	ldr	r4, [pc, #68]	; (8003438 <svcKernelInitialize+0x48>)
 80033f4:	7823      	ldrb	r3, [r4, #0]
 80033f6:	b90b      	cbnz	r3, 80033fc <svcKernelInitialize+0xc>
 80033f8:	f000 faa8 	bl	800394c <rt_sys_init>
 80033fc:	4b0f      	ldr	r3, [pc, #60]	; (800343c <svcKernelInitialize+0x4c>)
 80033fe:	7825      	ldrb	r5, [r4, #0]
 8003400:	681b      	ldr	r3, [r3, #0]
 8003402:	22ff      	movs	r2, #255	; 0xff
 8003404:	709a      	strb	r2, [r3, #2]
 8003406:	b98d      	cbnz	r5, 800342c <svcKernelInitialize+0x3c>
 8003408:	4629      	mov	r1, r5
 800340a:	480d      	ldr	r0, [pc, #52]	; (8003440 <svcKernelInitialize+0x50>)
 800340c:	f7ff ffdd 	bl	80033ca <svcMessageCreate>
 8003410:	4b0c      	ldr	r3, [pc, #48]	; (8003444 <svcKernelInitialize+0x54>)
 8003412:	462a      	mov	r2, r5
 8003414:	6018      	str	r0, [r3, #0]
 8003416:	4629      	mov	r1, r5
 8003418:	480b      	ldr	r0, [pc, #44]	; (8003448 <svcKernelInitialize+0x58>)
 800341a:	f7ff fe83 	bl	8003124 <svcThreadCreate>
 800341e:	4b0b      	ldr	r3, [pc, #44]	; (800344c <svcKernelInitialize+0x5c>)
 8003420:	6018      	str	r0, [r3, #0]
 8003422:	480b      	ldr	r0, [pc, #44]	; (8003450 <svcKernelInitialize+0x60>)
 8003424:	f7ff ff46 	bl	80032b4 <osMutexCreate>
 8003428:	4b0a      	ldr	r3, [pc, #40]	; (8003454 <svcKernelInitialize+0x64>)
 800342a:	6018      	str	r0, [r3, #0]
 800342c:	2301      	movs	r3, #1
 800342e:	7023      	strb	r3, [r4, #0]
 8003430:	4b09      	ldr	r3, [pc, #36]	; (8003458 <svcKernelInitialize+0x68>)
 8003432:	2000      	movs	r0, #0
 8003434:	7018      	strb	r0, [r3, #0]
 8003436:	bd38      	pop	{r3, r4, r5, pc}
 8003438:	2000304c 	.word	0x2000304c
 800343c:	20003054 	.word	0x20003054
 8003440:	080082bc 	.word	0x080082bc
 8003444:	20002910 	.word	0x20002910
 8003448:	080082d8 	.word	0x080082d8
 800344c:	20003004 	.word	0x20003004
 8003450:	080082f0 	.word	0x080082f0
 8003454:	20003048 	.word	0x20003048
 8003458:	2000304d 	.word	0x2000304d

0800345c <osKernelInitialize>:
 800345c:	b510      	push	{r4, lr}
 800345e:	f3ef 8410 	mrs	r4, PRIMASK
 8003462:	b974      	cbnz	r4, 8003482 <osKernelInitialize+0x26>
 8003464:	f3ef 8405 	mrs	r4, IPSR
 8003468:	b95c      	cbnz	r4, 8003482 <osKernelInitialize+0x26>
 800346a:	f3ef 8414 	mrs	r4, CONTROL
 800346e:	07e4      	lsls	r4, r4, #31
 8003470:	d403      	bmi.n	800347a <osKernelInitialize+0x1e>
 8003472:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8003476:	f7ff bfbb 	b.w	80033f0 <svcKernelInitialize>
 800347a:	f8df c00c 	ldr.w	r12, [pc, #12]	; 8003488 <osKernelInitialize+0x2c>
 800347e:	df00      	svc	0
 8003480:	bd10      	pop	{r4, pc}
 8003482:	2082      	movs	r0, #130	; 0x82
 8003484:	bd10      	pop	{r4, pc}
 8003486:	0000      	.short	0x0000
 8003488:	080033f1 	.word	0x080033f1

0800348c <svcMessageGet>:
 800348c:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8003490:	460c      	mov	r4, r1
 8003492:	4680      	mov	r8, r0
 8003494:	b318      	cbz	r0, 80034de <svcMessageGet+0x52>
 8003496:	7803      	ldrb	r3, [r0, #0]
 8003498:	2b01      	cmp	r3, #1
 800349a:	d125      	bne.n	80034e8 <svcMessageGet+0x5c>
 800349c:	4608      	mov	r0, r1
 800349e:	f7ff fd91 	bl	8002fc4 <rt_ms2tick>
 80034a2:	a902      	add	r1, sp, #8
 80034a4:	4602      	mov	r2, r0
 80034a6:	4640      	mov	r0, r8
 80034a8:	f7ff fc1c 	bl	8002ce4 <rt_mbx_wait>
 80034ac:	2801      	cmp	r0, #1
 80034ae:	d111      	bne.n	80034d4 <svcMessageGet+0x48>
 80034b0:	2000      	movs	r0, #0
 80034b2:	2c00      	cmp	r4, #0
 80034b4:	4602      	mov	r2, r0
 80034b6:	4603      	mov	r3, r0
 80034b8:	bf18      	it	ne
 80034ba:	2040      	movne	r0, #64	; 0x40
 80034bc:	9902      	ldr	r1, [sp, #8]
 80034be:	4604      	mov	r4, r0
 80034c0:	460d      	mov	r5, r1
 80034c2:	4616      	mov	r6, r2
 80034c4:	461f      	mov	r7, r3
 80034c6:	4620      	mov	r0, r4
 80034c8:	4629      	mov	r1, r5
 80034ca:	4632      	mov	r2, r6
 80034cc:	463b      	mov	r3, r7
 80034ce:	b004      	add	sp, #16
 80034d0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80034d4:	2000      	movs	r0, #0
 80034d6:	4602      	mov	r2, r0
 80034d8:	4603      	mov	r3, r0
 80034da:	2010      	movs	r0, #16
 80034dc:	e7ee      	b.n	80034bc <svcMessageGet+0x30>
 80034de:	2480      	movs	r4, #128	; 0x80
 80034e0:	4605      	mov	r5, r0
 80034e2:	4606      	mov	r6, r0
 80034e4:	4607      	mov	r7, r0
 80034e6:	e7ee      	b.n	80034c6 <svcMessageGet+0x3a>
 80034e8:	2500      	movs	r5, #0
 80034ea:	2480      	movs	r4, #128	; 0x80
 80034ec:	462e      	mov	r6, r5
 80034ee:	462f      	mov	r7, r5
 80034f0:	e7e9      	b.n	80034c6 <svcMessageGet+0x3a>

080034f2 <isrMessagePut>:
 80034f2:	b570      	push	{r4, r5, r6, lr}
 80034f4:	460e      	mov	r6, r1
 80034f6:	4614      	mov	r4, r2
 80034f8:	4605      	mov	r5, r0
 80034fa:	b160      	cbz	r0, 8003516 <isrMessagePut+0x24>
 80034fc:	b95a      	cbnz	r2, 8003516 <isrMessagePut+0x24>
 80034fe:	7803      	ldrb	r3, [r0, #0]
 8003500:	2b01      	cmp	r3, #1
 8003502:	d108      	bne.n	8003516 <isrMessagePut+0x24>
 8003504:	f7ff fc44 	bl	8002d90 <rt_mbx_check>
 8003508:	b138      	cbz	r0, 800351a <isrMessagePut+0x28>
 800350a:	4628      	mov	r0, r5
 800350c:	4631      	mov	r1, r6
 800350e:	f7ff fc43 	bl	8002d98 <isr_mbx_send>
 8003512:	4620      	mov	r0, r4
 8003514:	bd70      	pop	{r4, r5, r6, pc}
 8003516:	2080      	movs	r0, #128	; 0x80
 8003518:	bd70      	pop	{r4, r5, r6, pc}
 800351a:	2081      	movs	r0, #129	; 0x81
 800351c:	bd70      	pop	{r4, r5, r6, pc}
	...

08003520 <sysTimerTick>:
 8003520:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003522:	4e11      	ldr	r6, [pc, #68]	; (8003568 <sysTimerTick+0x48>)
 8003524:	6834      	ldr	r4, [r6, #0]
 8003526:	b12c      	cbz	r4, 8003534 <sysTimerTick+0x14>
 8003528:	68a3      	ldr	r3, [r4, #8]
 800352a:	4f10      	ldr	r7, [pc, #64]	; (800356c <sysTimerTick+0x4c>)
 800352c:	3b01      	subs	r3, #1
 800352e:	60a3      	str	r3, [r4, #8]
 8003530:	68a2      	ldr	r2, [r4, #8]
 8003532:	b102      	cbz	r2, 8003536 <sysTimerTick+0x16>
 8003534:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8003536:	6825      	ldr	r5, [r4, #0]
 8003538:	6838      	ldr	r0, [r7, #0]
 800353a:	6035      	str	r5, [r6, #0]
 800353c:	4621      	mov	r1, r4
 800353e:	f7ff ffd8 	bl	80034f2 <isrMessagePut>
 8003542:	b110      	cbz	r0, 800354a <sysTimerTick+0x2a>
 8003544:	2004      	movs	r0, #4
 8003546:	f7ff f93b 	bl	80027c0 <os_error>
 800354a:	7963      	ldrb	r3, [r4, #5]
 800354c:	2b01      	cmp	r3, #1
 800354e:	d107      	bne.n	8003560 <sysTimerTick+0x40>
 8003550:	68e1      	ldr	r1, [r4, #12]
 8003552:	4620      	mov	r0, r4
 8003554:	f7ff fd1c 	bl	8002f90 <rt_timer_insert>
 8003558:	2d00      	cmp	r5, #0
 800355a:	d0eb      	beq.n	8003534 <sysTimerTick+0x14>
 800355c:	462c      	mov	r4, r5
 800355e:	e7e7      	b.n	8003530 <sysTimerTick+0x10>
 8003560:	2301      	movs	r3, #1
 8003562:	7123      	strb	r3, [r4, #4]
 8003564:	e7f8      	b.n	8003558 <sysTimerTick+0x38>
 8003566:	bf00      	nop
 8003568:	20003050 	.word	0x20003050
 800356c:	20002910 	.word	0x20002910

08003570 <isrMessageGet>:
 8003570:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8003572:	4604      	mov	r4, r0
 8003574:	4616      	mov	r6, r2
 8003576:	4608      	mov	r0, r1
 8003578:	b101      	cbz	r1, 800357c <isrMessageGet+0xc>
 800357a:	b122      	cbz	r2, 8003586 <isrMessageGet+0x16>
 800357c:	2380      	movs	r3, #128	; 0x80
 800357e:	6023      	str	r3, [r4, #0]
 8003580:	4620      	mov	r0, r4
 8003582:	b004      	add	sp, #16
 8003584:	bd70      	pop	{r4, r5, r6, pc}
 8003586:	780b      	ldrb	r3, [r1, #0]
 8003588:	2b01      	cmp	r3, #1
 800358a:	d1f7      	bne.n	800357c <isrMessageGet+0xc>
 800358c:	a902      	add	r1, sp, #8
 800358e:	f7ff fc0a 	bl	8002da6 <isr_mbx_receive>
 8003592:	2804      	cmp	r0, #4
 8003594:	bf08      	it	eq
 8003596:	2310      	moveq	r3, #16
 8003598:	ad01      	add	r5, sp, #4
 800359a:	bf14      	ite	ne
 800359c:	9601      	strne	r6, [sp, #4]
 800359e:	9301      	streq	r3, [sp, #4]
 80035a0:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80035a4:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 80035a8:	e7ea      	b.n	8003580 <isrMessageGet+0x10>
	...

080035ac <osMessageGet>:
 80035ac:	b538      	push	{r3, r4, r5, lr}
 80035ae:	4604      	mov	r4, r0
 80035b0:	4615      	mov	r5, r2
 80035b2:	f3ef 8010 	mrs	r0, PRIMASK
 80035b6:	b910      	cbnz	r0, 80035be <osMessageGet+0x12>
 80035b8:	f3ef 8005 	mrs	r0, IPSR
 80035bc:	b128      	cbz	r0, 80035ca <osMessageGet+0x1e>
 80035be:	462a      	mov	r2, r5
 80035c0:	4620      	mov	r0, r4
 80035c2:	f7ff ffd5 	bl	8003570 <isrMessageGet>
 80035c6:	4620      	mov	r0, r4
 80035c8:	bd38      	pop	{r3, r4, r5, pc}
 80035ca:	4608      	mov	r0, r1
 80035cc:	4611      	mov	r1, r2
 80035ce:	f8df c00c 	ldr.w	r12, [pc, #12]	; 80035dc <osMessageGet+0x30>
 80035d2:	df00      	svc	0
 80035d4:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 80035d8:	e7f5      	b.n	80035c6 <osMessageGet+0x1a>
 80035da:	0000      	.short	0x0000
 80035dc:	0800348d 	.word	0x0800348d

080035e0 <osTimerThread>:
 80035e0:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 80035e2:	4c0a      	ldr	r4, [pc, #40]	; (800360c <osTimerThread+0x2c>)
 80035e4:	6821      	ldr	r1, [r4, #0]
 80035e6:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 80035ea:	a803      	add	r0, sp, #12
 80035ec:	f7ff ffde 	bl	80035ac <osMessageGet>
 80035f0:	9b03      	ldr	r3, [sp, #12]
 80035f2:	2b10      	cmp	r3, #16
 80035f4:	d1f6      	bne.n	80035e4 <osTimerThread+0x4>
 80035f6:	9904      	ldr	r1, [sp, #16]
 80035f8:	a801      	add	r0, sp, #4
 80035fa:	f7ff fe15 	bl	8003228 <osTimerCall>
 80035fe:	9b01      	ldr	r3, [sp, #4]
 8003600:	2b00      	cmp	r3, #0
 8003602:	d0ef      	beq.n	80035e4 <osTimerThread+0x4>
 8003604:	9802      	ldr	r0, [sp, #8]
 8003606:	4798      	blx	r3
 8003608:	e7ec      	b.n	80035e4 <osTimerThread+0x4>
 800360a:	bf00      	nop
 800360c:	20002910 	.word	0x20002910

08003610 <rt_switch_req>:
 8003610:	4b05      	ldr	r3, [pc, #20]	; (8003628 <rt_switch_req+0x18>)
 8003612:	6058      	str	r0, [r3, #4]
 8003614:	2302      	movs	r3, #2
 8003616:	7043      	strb	r3, [r0, #1]
 8003618:	4b04      	ldr	r3, [pc, #16]	; (800362c <rt_switch_req+0x1c>)
 800361a:	681b      	ldr	r3, [r3, #0]
 800361c:	b11b      	cbz	r3, 8003626 <rt_switch_req+0x16>
 800361e:	691b      	ldr	r3, [r3, #16]
 8003620:	b10b      	cbz	r3, 8003626 <rt_switch_req+0x16>
 8003622:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 8003624:	4718      	bx	r3
 8003626:	4770      	bx	lr
 8003628:	20003054 	.word	0x20003054
 800362c:	2000303c 	.word	0x2000303c

08003630 <rt_dispatch.part.0>:
 8003630:	b508      	push	{r3, lr}
 8003632:	4803      	ldr	r0, [pc, #12]	; (8003640 <rt_dispatch.part.0+0x10>)
 8003634:	f7ff f92a 	bl	800288c <rt_get_first>
 8003638:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800363c:	f7ff bfe8 	b.w	8003610 <rt_switch_req>
 8003640:	20003008 	.word	0x20003008

08003644 <rt_dispatch>:
 8003644:	b570      	push	{r4, r5, r6, lr}
 8003646:	4604      	mov	r4, r0
 8003648:	b918      	cbnz	r0, 8003652 <rt_dispatch+0xe>
 800364a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800364e:	f7ff bfef 	b.w	8003630 <rt_dispatch.part.0>
 8003652:	4e0c      	ldr	r6, [pc, #48]	; (8003684 <rt_dispatch+0x40>)
 8003654:	78a2      	ldrb	r2, [r4, #2]
 8003656:	6830      	ldr	r0, [r6, #0]
 8003658:	7883      	ldrb	r3, [r0, #2]
 800365a:	429a      	cmp	r2, r3
 800365c:	f04f 0501 	mov.w	r5, #1
 8003660:	d908      	bls.n	8003674 <rt_dispatch+0x30>
 8003662:	f7ff f925 	bl	80028b0 <rt_put_rdy_first>
 8003666:	6833      	ldr	r3, [r6, #0]
 8003668:	705d      	strb	r5, [r3, #1]
 800366a:	4620      	mov	r0, r4
 800366c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8003670:	f7ff bfce 	b.w	8003610 <rt_switch_req>
 8003674:	7065      	strb	r5, [r4, #1]
 8003676:	4621      	mov	r1, r4
 8003678:	4803      	ldr	r0, [pc, #12]	; (8003688 <rt_dispatch+0x44>)
 800367a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800367e:	f7ff b8ed 	b.w	800285c <rt_put_prio>
 8003682:	bf00      	nop
 8003684:	20003054 	.word	0x20003054
 8003688:	20003008 	.word	0x20003008

0800368c <rt_block>:
 800368c:	b538      	push	{r3, r4, r5, lr}
 800368e:	460d      	mov	r5, r1
 8003690:	4601      	mov	r1, r0
 8003692:	b180      	cbz	r0, 80036b6 <rt_block+0x2a>
 8003694:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8003698:	4298      	cmp	r0, r3
 800369a:	4c07      	ldr	r4, [pc, #28]	; (80036b8 <rt_block+0x2c>)
 800369c:	d002      	beq.n	80036a4 <rt_block+0x18>
 800369e:	6820      	ldr	r0, [r4, #0]
 80036a0:	f7ff f910 	bl	80028c4 <rt_put_dly>
 80036a4:	6823      	ldr	r3, [r4, #0]
 80036a6:	4805      	ldr	r0, [pc, #20]	; (80036bc <rt_block+0x30>)
 80036a8:	705d      	strb	r5, [r3, #1]
 80036aa:	f7ff f8ef 	bl	800288c <rt_get_first>
 80036ae:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80036b2:	f7ff bfad 	b.w	8003610 <rt_switch_req>
 80036b6:	bd38      	pop	{r3, r4, r5, pc}
 80036b8:	20003054 	.word	0x20003054
 80036bc:	20003008 	.word	0x20003008

080036c0 <rt_tsk_self>:
 80036c0:	4b02      	ldr	r3, [pc, #8]	; (80036cc <rt_tsk_self+0xc>)
 80036c2:	6818      	ldr	r0, [r3, #0]
 80036c4:	b100      	cbz	r0, 80036c8 <rt_tsk_self+0x8>
 80036c6:	78c0      	ldrb	r0, [r0, #3]
 80036c8:	4770      	bx	lr
 80036ca:	bf00      	nop
 80036cc:	20003054 	.word	0x20003054

080036d0 <rt_tsk_prio>:
 80036d0:	b510      	push	{r4, lr}
 80036d2:	b9a8      	cbnz	r0, 8003700 <rt_tsk_prio+0x30>
 80036d4:	4b19      	ldr	r3, [pc, #100]	; (800373c <rt_tsk_prio+0x6c>)
 80036d6:	681b      	ldr	r3, [r3, #0]
 80036d8:	7099      	strb	r1, [r3, #2]
 80036da:	f883 1024 	strb.w	r1, [r3, #36]	; 0x24
 80036de:	4818      	ldr	r0, [pc, #96]	; (8003740 <rt_tsk_prio+0x70>)
 80036e0:	6843      	ldr	r3, [r0, #4]
 80036e2:	789b      	ldrb	r3, [r3, #2]
 80036e4:	428b      	cmp	r3, r1
 80036e6:	d801      	bhi.n	80036ec <rt_tsk_prio+0x1c>
 80036e8:	2000      	movs	r0, #0
 80036ea:	bd10      	pop	{r4, pc}
 80036ec:	4c13      	ldr	r4, [pc, #76]	; (800373c <rt_tsk_prio+0x6c>)
 80036ee:	6821      	ldr	r1, [r4, #0]
 80036f0:	f7ff f8b4 	bl	800285c <rt_put_prio>
 80036f4:	6823      	ldr	r3, [r4, #0]
 80036f6:	2201      	movs	r2, #1
 80036f8:	705a      	strb	r2, [r3, #1]
 80036fa:	f7ff ff99 	bl	8003630 <rt_dispatch.part.0>
 80036fe:	e7f3      	b.n	80036e8 <rt_tsk_prio+0x18>
 8003700:	4b10      	ldr	r3, [pc, #64]	; (8003744 <rt_tsk_prio+0x74>)
 8003702:	881b      	ldrh	r3, [r3, #0]
 8003704:	4298      	cmp	r0, r3
 8003706:	d817      	bhi.n	8003738 <rt_tsk_prio+0x68>
 8003708:	3801      	subs	r0, #1
 800370a:	4b0f      	ldr	r3, [pc, #60]	; (8003748 <rt_tsk_prio+0x78>)
 800370c:	f853 4020 	ldr.w	r4, [r3, r0, lsl #2]
 8003710:	b194      	cbz	r4, 8003738 <rt_tsk_prio+0x68>
 8003712:	4b0a      	ldr	r3, [pc, #40]	; (800373c <rt_tsk_prio+0x6c>)
 8003714:	70a1      	strb	r1, [r4, #2]
 8003716:	681b      	ldr	r3, [r3, #0]
 8003718:	f884 1024 	strb.w	r1, [r4, #36]	; 0x24
 800371c:	429c      	cmp	r4, r3
 800371e:	d0de      	beq.n	80036de <rt_tsk_prio+0xe>
 8003720:	4620      	mov	r0, r4
 8003722:	f7ff f941 	bl	80029a8 <rt_resort_prio>
 8003726:	7863      	ldrb	r3, [r4, #1]
 8003728:	2b01      	cmp	r3, #1
 800372a:	d1dd      	bne.n	80036e8 <rt_tsk_prio+0x18>
 800372c:	4804      	ldr	r0, [pc, #16]	; (8003740 <rt_tsk_prio+0x70>)
 800372e:	f7ff f8ad 	bl	800288c <rt_get_first>
 8003732:	f7ff ff87 	bl	8003644 <rt_dispatch>
 8003736:	e7d7      	b.n	80036e8 <rt_tsk_prio+0x18>
 8003738:	20ff      	movs	r0, #255	; 0xff
 800373a:	bd10      	pop	{r4, pc}
 800373c:	20003054 	.word	0x20003054
 8003740:	20003008 	.word	0x20003008
 8003744:	080082b8 	.word	0x080082b8
 8003748:	20002850 	.word	0x20002850

0800374c <rt_tsk_create>:
 800374c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, lr}
 8003750:	f011 0fff 	tst.w	r1, #255	; 0xff
 8003754:	460d      	mov	r5, r1
 8003756:	4680      	mov	r8, r0
 8003758:	4823      	ldr	r0, [pc, #140]	; (80037e8 <rt_tsk_create+0x9c>)
 800375a:	4616      	mov	r6, r2
 800375c:	469a      	mov	r10, r3
 800375e:	bf08      	it	eq
 8003760:	3501      	addeq	r5, #1
 8003762:	f7ff fa90 	bl	8002c86 <rt_alloc_box>
 8003766:	4604      	mov	r4, r0
 8003768:	b920      	cbnz	r0, 8003774 <rt_tsk_create+0x28>
 800376a:	f04f 0900 	mov.w	r9, #0
 800376e:	4648      	mov	r0, r9
 8003770:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 8003774:	4b1d      	ldr	r3, [pc, #116]	; (80037ec <rt_tsk_create+0xa0>)
 8003776:	6306      	str	r6, [r0, #48]	; 0x30
 8003778:	881b      	ldrh	r3, [r3, #0]
 800377a:	4e1d      	ldr	r6, [pc, #116]	; (80037f0 <rt_tsk_create+0xa4>)
 800377c:	0a28      	lsrs	r0, r5, #8
 800377e:	62a0      	str	r0, [r4, #40]	; 0x28
 8003780:	2100      	movs	r1, #0
 8003782:	428b      	cmp	r3, r1
 8003784:	f101 0901 	add.w	r9, r1, #1
 8003788:	d0ef      	beq.n	800376a <rt_tsk_create+0x1e>
 800378a:	eb06 0289 	add.w	r2, r6, r9, lsl #2
 800378e:	460f      	mov	r7, r1
 8003790:	f852 2c04 	ldr.w	r2, [r2, #-4]
 8003794:	4649      	mov	r1, r9
 8003796:	2a00      	cmp	r2, #0
 8003798:	d1f3      	bne.n	8003782 <rt_tsk_create+0x36>
 800379a:	b2ed      	uxtb	r5, r5
 800379c:	2301      	movs	r3, #1
 800379e:	f884 9003 	strb.w	r9, [r4, #3]
 80037a2:	f8c4 a01c 	str.w	r10, [r4, #28]
 80037a6:	f8c4 a038 	str.w	r10, [r4, #56]	; 0x38
 80037aa:	7022      	strb	r2, [r4, #0]
 80037ac:	7063      	strb	r3, [r4, #1]
 80037ae:	70a5      	strb	r5, [r4, #2]
 80037b0:	f884 5024 	strb.w	r5, [r4, #36]	; 0x24
 80037b4:	6062      	str	r2, [r4, #4]
 80037b6:	60a2      	str	r2, [r4, #8]
 80037b8:	60e2      	str	r2, [r4, #12]
 80037ba:	6122      	str	r2, [r4, #16]
 80037bc:	6222      	str	r2, [r4, #32]
 80037be:	82a2      	strh	r2, [r4, #20]
 80037c0:	82e2      	strh	r2, [r4, #22]
 80037c2:	8322      	strh	r2, [r4, #24]
 80037c4:	8362      	strh	r2, [r4, #26]
 80037c6:	f884 2025 	strb.w	r2, [r4, #37]	; 0x25
 80037ca:	b918      	cbnz	r0, 80037d4 <rt_tsk_create+0x88>
 80037cc:	4809      	ldr	r0, [pc, #36]	; (80037f4 <rt_tsk_create+0xa8>)
 80037ce:	f7ff fa5a 	bl	8002c86 <rt_alloc_box>
 80037d2:	6320      	str	r0, [r4, #48]	; 0x30
 80037d4:	4620      	mov	r0, r4
 80037d6:	4641      	mov	r1, r8
 80037d8:	f7ff f938 	bl	8002a4c <rt_init_stack>
 80037dc:	4620      	mov	r0, r4
 80037de:	f846 4027 	str.w	r4, [r6, r7, lsl #2]
 80037e2:	f7ff ff2f 	bl	8003644 <rt_dispatch>
 80037e6:	e7c2      	b.n	800376e <rt_tsk_create+0x22>
 80037e8:	20002c38 	.word	0x20002c38
 80037ec:	080082b8 	.word	0x080082b8
 80037f0:	20002850 	.word	0x20002850
 80037f4:	20002640 	.word	0x20002640

080037f8 <rt_tsk_delete>:
 80037f8:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, r10, r11, lr}
 80037fc:	4d4d      	ldr	r5, [pc, #308]	; (8003934 <rt_tsk_delete+0x13c>)
 80037fe:	b118      	cbz	r0, 8003808 <rt_tsk_delete+0x10>
 8003800:	682b      	ldr	r3, [r5, #0]
 8003802:	78db      	ldrb	r3, [r3, #3]
 8003804:	4298      	cmp	r0, r3
 8003806:	d141      	bne.n	800388c <rt_tsk_delete+0x94>
 8003808:	682c      	ldr	r4, [r5, #0]
 800380a:	f8df 813c 	ldr.w	r8, [pc, #316]	; 8003948 <rt_tsk_delete+0x150>
 800380e:	2300      	movs	r3, #0
 8003810:	7063      	strb	r3, [r4, #1]
 8003812:	f002 fd1c 	bl	800624e <rt_get_PSP>
 8003816:	62e0      	str	r0, [r4, #44]	; 0x2c
 8003818:	f7ff f9fe 	bl	8002c18 <rt_stk_check>
 800381c:	682b      	ldr	r3, [r5, #0]
 800381e:	6a1c      	ldr	r4, [r3, #32]
 8003820:	2701      	movs	r7, #1
 8003822:	b9a4      	cbnz	r4, 800384e <rt_tsk_delete+0x56>
 8003824:	682a      	ldr	r2, [r5, #0]
 8003826:	4944      	ldr	r1, [pc, #272]	; (8003938 <rt_tsk_delete+0x140>)
 8003828:	78d3      	ldrb	r3, [r2, #3]
 800382a:	4844      	ldr	r0, [pc, #272]	; (800393c <rt_tsk_delete+0x144>)
 800382c:	3b01      	subs	r3, #1
 800382e:	f841 4023 	str.w	r4, [r1, r3, lsl #2]
 8003832:	6b11      	ldr	r1, [r2, #48]	; 0x30
 8003834:	f7ff fa34 	bl	8002ca0 <rt_free_box>
 8003838:	6829      	ldr	r1, [r5, #0]
 800383a:	4841      	ldr	r0, [pc, #260]	; (8003940 <rt_tsk_delete+0x148>)
 800383c:	630c      	str	r4, [r1, #48]	; 0x30
 800383e:	f7ff fa2f 	bl	8002ca0 <rt_free_box>
 8003842:	602c      	str	r4, [r5, #0]
 8003844:	f7ff fef4 	bl	8003630 <rt_dispatch.part.0>
 8003848:	4620      	mov	r0, r4
 800384a:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, r10, r11, pc}
 800384e:	6863      	ldr	r3, [r4, #4]
 8003850:	b1b3      	cbz	r3, 8003880 <rt_tsk_delete+0x88>
 8003852:	4620      	mov	r0, r4
 8003854:	f7ff f81a 	bl	800288c <rt_get_first>
 8003858:	2100      	movs	r1, #0
 800385a:	4606      	mov	r6, r0
 800385c:	f7ff f942 	bl	8002ae4 <rt_ret_val>
 8003860:	4630      	mov	r0, r6
 8003862:	f7ff f8b9 	bl	80029d8 <rt_rmv_dly>
 8003866:	7077      	strb	r7, [r6, #1]
 8003868:	4631      	mov	r1, r6
 800386a:	4640      	mov	r0, r8
 800386c:	f7fe fff6 	bl	800285c <rt_put_prio>
 8003870:	68e3      	ldr	r3, [r4, #12]
 8003872:	6a32      	ldr	r2, [r6, #32]
 8003874:	8067      	strh	r7, [r4, #2]
 8003876:	60a6      	str	r6, [r4, #8]
 8003878:	60e2      	str	r2, [r4, #12]
 800387a:	6234      	str	r4, [r6, #32]
 800387c:	461c      	mov	r4, r3
 800387e:	e7d0      	b.n	8003822 <rt_tsk_delete+0x2a>
 8003880:	68e2      	ldr	r2, [r4, #12]
 8003882:	8063      	strh	r3, [r4, #2]
 8003884:	60a3      	str	r3, [r4, #8]
 8003886:	60e3      	str	r3, [r4, #12]
 8003888:	4614      	mov	r4, r2
 800388a:	e7ca      	b.n	8003822 <rt_tsk_delete+0x2a>
 800388c:	4b2d      	ldr	r3, [pc, #180]	; (8003944 <rt_tsk_delete+0x14c>)
 800388e:	881b      	ldrh	r3, [r3, #0]
 8003890:	4298      	cmp	r0, r3
 8003892:	d84d      	bhi.n	8003930 <rt_tsk_delete+0x138>
 8003894:	4b28      	ldr	r3, [pc, #160]	; (8003938 <rt_tsk_delete+0x140>)
 8003896:	1e47      	subs	r7, r0, #1
 8003898:	4699      	mov	r9, r3
 800389a:	f853 6027 	ldr.w	r6, [r3, r7, lsl #2]
 800389e:	2e00      	cmp	r6, #0
 80038a0:	d046      	beq.n	8003930 <rt_tsk_delete+0x138>
 80038a2:	4630      	mov	r0, r6
 80038a4:	f7ff f86a 	bl	800297c <rt_rmv_list>
 80038a8:	4630      	mov	r0, r6
 80038aa:	f7ff f895 	bl	80029d8 <rt_rmv_dly>
 80038ae:	f8df b098 	ldr.w	r11, [pc, #152]	; 8003948 <rt_tsk_delete+0x150>
 80038b2:	6a34      	ldr	r4, [r6, #32]
 80038b4:	f04f 0a01 	mov.w	r10, #1
 80038b8:	b9b4      	cbnz	r4, 80038e8 <rt_tsk_delete+0xf0>
 80038ba:	6b31      	ldr	r1, [r6, #48]	; 0x30
 80038bc:	481f      	ldr	r0, [pc, #124]	; (800393c <rt_tsk_delete+0x144>)
 80038be:	f849 4027 	str.w	r4, [r9, r7, lsl #2]
 80038c2:	f7ff f9ed 	bl	8002ca0 <rt_free_box>
 80038c6:	4631      	mov	r1, r6
 80038c8:	6334      	str	r4, [r6, #48]	; 0x30
 80038ca:	481d      	ldr	r0, [pc, #116]	; (8003940 <rt_tsk_delete+0x148>)
 80038cc:	f7ff f9e8 	bl	8002ca0 <rt_free_box>
 80038d0:	481d      	ldr	r0, [pc, #116]	; (8003948 <rt_tsk_delete+0x150>)
 80038d2:	6829      	ldr	r1, [r5, #0]
 80038d4:	6843      	ldr	r3, [r0, #4]
 80038d6:	789a      	ldrb	r2, [r3, #2]
 80038d8:	788b      	ldrb	r3, [r1, #2]
 80038da:	429a      	cmp	r2, r3
 80038dc:	d9b4      	bls.n	8003848 <rt_tsk_delete+0x50>
 80038de:	2301      	movs	r3, #1
 80038e0:	704b      	strb	r3, [r1, #1]
 80038e2:	f7fe ffbb 	bl	800285c <rt_put_prio>
 80038e6:	e7ad      	b.n	8003844 <rt_tsk_delete+0x4c>
 80038e8:	6863      	ldr	r3, [r4, #4]
 80038ea:	b1db      	cbz	r3, 8003924 <rt_tsk_delete+0x12c>
 80038ec:	4620      	mov	r0, r4
 80038ee:	f7fe ffcd 	bl	800288c <rt_get_first>
 80038f2:	2100      	movs	r1, #0
 80038f4:	4680      	mov	r8, r0
 80038f6:	f7ff f8f5 	bl	8002ae4 <rt_ret_val>
 80038fa:	4640      	mov	r0, r8
 80038fc:	f7ff f86c 	bl	80029d8 <rt_rmv_dly>
 8003900:	f888 a001 	strb.w	r10, [r8, #1]
 8003904:	4641      	mov	r1, r8
 8003906:	4658      	mov	r0, r11
 8003908:	f7fe ffa8 	bl	800285c <rt_put_prio>
 800390c:	68e3      	ldr	r3, [r4, #12]
 800390e:	f8d8 2020 	ldr.w	r2, [r8, #32]
 8003912:	f8a4 a002 	strh.w	r10, [r4, #2]
 8003916:	f8c4 8008 	str.w	r8, [r4, #8]
 800391a:	60e2      	str	r2, [r4, #12]
 800391c:	f8c8 4020 	str.w	r4, [r8, #32]
 8003920:	461c      	mov	r4, r3
 8003922:	e7c9      	b.n	80038b8 <rt_tsk_delete+0xc0>
 8003924:	68e2      	ldr	r2, [r4, #12]
 8003926:	8063      	strh	r3, [r4, #2]
 8003928:	60a3      	str	r3, [r4, #8]
 800392a:	60e3      	str	r3, [r4, #12]
 800392c:	4614      	mov	r4, r2
 800392e:	e7c3      	b.n	80038b8 <rt_tsk_delete+0xc0>
 8003930:	24ff      	movs	r4, #255	; 0xff
 8003932:	e789      	b.n	8003848 <rt_tsk_delete+0x50>
 8003934:	20003054 	.word	0x20003054
 8003938:	20002850 	.word	0x20002850
 800393c:	20002640 	.word	0x20002640
 8003940:	20002c38 	.word	0x20002c38
 8003944:	080082b8 	.word	0x080082b8
 8003948:	20003008 	.word	0x20003008

0800394c <rt_sys_init>:
 800394c:	b538      	push	{r3, r4, r5, lr}
 800394e:	4b2c      	ldr	r3, [pc, #176]	; (8003a00 <rt_sys_init+0xb4>)
 8003950:	492c      	ldr	r1, [pc, #176]	; (8003a04 <rt_sys_init+0xb8>)
 8003952:	881a      	ldrh	r2, [r3, #0]
 8003954:	2300      	movs	r3, #0
 8003956:	4618      	mov	r0, r3
 8003958:	4293      	cmp	r3, r2
 800395a:	d34d      	bcc.n	80039f8 <rt_sys_init+0xac>
 800395c:	4b2a      	ldr	r3, [pc, #168]	; (8003a08 <rt_sys_init+0xbc>)
 800395e:	482b      	ldr	r0, [pc, #172]	; (8003a0c <rt_sys_init+0xc0>)
 8003960:	8819      	ldrh	r1, [r3, #0]
 8003962:	4c2b      	ldr	r4, [pc, #172]	; (8003a10 <rt_sys_init+0xc4>)
 8003964:	2240      	movs	r2, #64	; 0x40
 8003966:	f7ff f969 	bl	8002c3c <_init_box>
 800396a:	4b2a      	ldr	r3, [pc, #168]	; (8003a14 <rt_sys_init+0xc8>)
 800396c:	482a      	ldr	r0, [pc, #168]	; (8003a18 <rt_sys_init+0xcc>)
 800396e:	881a      	ldrh	r2, [r3, #0]
 8003970:	4b2a      	ldr	r3, [pc, #168]	; (8003a1c <rt_sys_init+0xd0>)
 8003972:	f042 4200 	orr.w	r2, r2, #2147483648	; 0x80000000
 8003976:	6819      	ldr	r1, [r3, #0]
 8003978:	f7ff f960 	bl	8002c3c <_init_box>
 800397c:	4b28      	ldr	r3, [pc, #160]	; (8003a20 <rt_sys_init+0xd4>)
 800397e:	8819      	ldrh	r1, [r3, #0]
 8003980:	4b28      	ldr	r3, [pc, #160]	; (8003a24 <rt_sys_init+0xd8>)
 8003982:	2208      	movs	r2, #8
 8003984:	6818      	ldr	r0, [r3, #0]
 8003986:	f7ff f959 	bl	8002c3c <_init_box>
 800398a:	23ff      	movs	r3, #255	; 0xff
 800398c:	2500      	movs	r5, #0
 800398e:	70e3      	strb	r3, [r4, #3]
 8003990:	4821      	ldr	r0, [pc, #132]	; (8003a18 <rt_sys_init+0xcc>)
 8003992:	62a5      	str	r5, [r4, #40]	; 0x28
 8003994:	2301      	movs	r3, #1
 8003996:	7063      	strb	r3, [r4, #1]
 8003998:	7025      	strb	r5, [r4, #0]
 800399a:	70a5      	strb	r5, [r4, #2]
 800399c:	f884 5024 	strb.w	r5, [r4, #36]	; 0x24
 80039a0:	6065      	str	r5, [r4, #4]
 80039a2:	60a5      	str	r5, [r4, #8]
 80039a4:	60e5      	str	r5, [r4, #12]
 80039a6:	6125      	str	r5, [r4, #16]
 80039a8:	6225      	str	r5, [r4, #32]
 80039aa:	82a5      	strh	r5, [r4, #20]
 80039ac:	82e5      	strh	r5, [r4, #22]
 80039ae:	8325      	strh	r5, [r4, #24]
 80039b0:	8365      	strh	r5, [r4, #26]
 80039b2:	f884 5025 	strb.w	r5, [r4, #37]	; 0x25
 80039b6:	f7ff f966 	bl	8002c86 <rt_alloc_box>
 80039ba:	491b      	ldr	r1, [pc, #108]	; (8003a28 <rt_sys_init+0xdc>)
 80039bc:	6320      	str	r0, [r4, #48]	; 0x30
 80039be:	4620      	mov	r0, r4
 80039c0:	f7ff f844 	bl	8002a4c <rt_init_stack>
 80039c4:	4b19      	ldr	r3, [pc, #100]	; (8003a2c <rt_sys_init+0xe0>)
 80039c6:	2204      	movs	r2, #4
 80039c8:	701a      	strb	r2, [r3, #0]
 80039ca:	605d      	str	r5, [r3, #4]
 80039cc:	4b18      	ldr	r3, [pc, #96]	; (8003a30 <rt_sys_init+0xe4>)
 80039ce:	701a      	strb	r2, [r3, #0]
 80039d0:	60dd      	str	r5, [r3, #12]
 80039d2:	611d      	str	r5, [r3, #16]
 80039d4:	829d      	strh	r5, [r3, #20]
 80039d6:	4b17      	ldr	r3, [pc, #92]	; (8003a34 <rt_sys_init+0xe8>)
 80039d8:	4620      	mov	r0, r4
 80039da:	601c      	str	r4, [r3, #0]
 80039dc:	2302      	movs	r3, #2
 80039de:	7063      	strb	r3, [r4, #1]
 80039e0:	f7ff fe16 	bl	8003610 <rt_switch_req>
 80039e4:	4a14      	ldr	r2, [pc, #80]	; (8003a38 <rt_sys_init+0xec>)
 80039e6:	4b15      	ldr	r3, [pc, #84]	; (8003a3c <rt_sys_init+0xf0>)
 80039e8:	7812      	ldrb	r2, [r2, #0]
 80039ea:	701d      	strb	r5, [r3, #0]
 80039ec:	705d      	strb	r5, [r3, #1]
 80039ee:	70da      	strb	r2, [r3, #3]
 80039f0:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80039f4:	f7ff ba9c 	b.w	8002f30 <rt_init_robin>
 80039f8:	f841 0023 	str.w	r0, [r1, r3, lsl #2]
 80039fc:	3301      	adds	r3, #1
 80039fe:	e7ab      	b.n	8003958 <rt_sys_init+0xc>
 8003a00:	080082b8 	.word	0x080082b8
 8003a04:	20002850 	.word	0x20002850
 8003a08:	08008284 	.word	0x08008284
 8003a0c:	20002c38 	.word	0x20002c38
 8003a10:	2000305c 	.word	0x2000305c
 8003a14:	080082d4 	.word	0x080082d4
 8003a18:	20002640 	.word	0x20002640
 8003a1c:	08008280 	.word	0x08008280
 8003a20:	08008286 	.word	0x08008286
 8003a24:	20000fcc 	.word	0x20000fcc
 8003a28:	080027bd 	.word	0x080027bd
 8003a2c:	20003008 	.word	0x20003008
 8003a30:	20003020 	.word	0x20003020
 8003a34:	20003054 	.word	0x20003054
 8003a38:	080082b5 	.word	0x080082b5
 8003a3c:	2000288c 	.word	0x2000288c

08003a40 <rt_sys_start>:
 8003a40:	b508      	push	{r3, lr}
 8003a42:	4b1e      	ldr	r3, [pc, #120]	; (8003abc <rt_sys_start+0x7c>)
 8003a44:	681a      	ldr	r2, [r3, #0]
 8003a46:	f442 027f 	orr.w	r2, r2, #16711680	; 0xff0000
 8003a4a:	601a      	str	r2, [r3, #0]
 8003a4c:	681b      	ldr	r3, [r3, #0]
 8003a4e:	021b      	lsls	r3, r3, #8
 8003a50:	f003 437f 	and.w	r3, r3, #4278190080	; 0xff000000
 8003a54:	43db      	mvns	r3, r3
 8003a56:	fab3 f383 	clz	r3, r3
 8003a5a:	4a19      	ldr	r2, [pc, #100]	; (8003ac0 <rt_sys_start+0x80>)
 8003a5c:	4819      	ldr	r0, [pc, #100]	; (8003ac4 <rt_sys_start+0x84>)
 8003a5e:	6812      	ldr	r2, [r2, #0]
 8003a60:	6801      	ldr	r1, [r0, #0]
 8003a62:	b2db      	uxtb	r3, r3
 8003a64:	f1c3 0308 	rsb	r3, r3, #8
 8003a68:	f3c2 2202 	ubfx	r2, r2, #8, #3
 8003a6c:	4293      	cmp	r3, r2
 8003a6e:	bf98      	it	ls
 8003a70:	1c53      	addls	r3, r2, #1
 8003a72:	f06f 7280 	mvn.w	r2, #16777216	; 0x1000000
 8003a76:	fa02 f303 	lsl.w	r3, r2, r3
 8003a7a:	f003 437f 	and.w	r3, r3, #4278190080	; 0xff000000
 8003a7e:	f021 427f 	bic.w	r2, r1, #4278190080	; 0xff000000
 8003a82:	4313      	orrs	r3, r2
 8003a84:	6003      	str	r3, [r0, #0]
 8003a86:	f7ff f88f 	bl	8002ba8 <os_tick_init>
 8003a8a:	4b0f      	ldr	r3, [pc, #60]	; (8003ac8 <rt_sys_start+0x88>)
 8003a8c:	2800      	cmp	r0, #0
 8003a8e:	6018      	str	r0, [r3, #0]
 8003a90:	db12      	blt.n	8003ab8 <rt_sys_start+0x78>
 8003a92:	f100 4060 	add.w	r0, r0, #3758096384	; 0xe0000000
 8003a96:	f500 4064 	add.w	r0, r0, #58368	; 0xe400
 8003a9a:	22ff      	movs	r2, #255	; 0xff
 8003a9c:	7002      	strb	r2, [r0, #0]
 8003a9e:	681a      	ldr	r2, [r3, #0]
 8003aa0:	0953      	lsrs	r3, r2, #5
 8003aa2:	009b      	lsls	r3, r3, #2
 8003aa4:	f103 4360 	add.w	r3, r3, #3758096384	; 0xe0000000
 8003aa8:	f503 4361 	add.w	r3, r3, #57600	; 0xe100
 8003aac:	f002 021f 	and.w	r2, r2, #31
 8003ab0:	2101      	movs	r1, #1
 8003ab2:	fa01 f202 	lsl.w	r2, r1, r2
 8003ab6:	601a      	str	r2, [r3, #0]
 8003ab8:	bd08      	pop	{r3, pc}
 8003aba:	bf00      	nop
 8003abc:	e000ed20 	.word	0xe000ed20
 8003ac0:	e000ed0c 	.word	0xe000ed0c
 8003ac4:	e000ed1c 	.word	0xe000ed1c
 8003ac8:	20003038 	.word	0x20003038

08003acc <rt_mut_init>:
 8003acc:	2303      	movs	r3, #3
 8003ace:	7003      	strb	r3, [r0, #0]
 8003ad0:	2300      	movs	r3, #0
 8003ad2:	8043      	strh	r3, [r0, #2]
 8003ad4:	6043      	str	r3, [r0, #4]
 8003ad6:	6083      	str	r3, [r0, #8]
 8003ad8:	60c3      	str	r3, [r0, #12]
 8003ada:	4770      	bx	lr

08003adc <rt_mut_release>:
 8003adc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8003ae0:	8843      	ldrh	r3, [r0, #2]
 8003ae2:	4605      	mov	r5, r0
 8003ae4:	2b00      	cmp	r3, #0
 8003ae6:	d063      	beq.n	8003bb0 <rt_mut_release+0xd4>
 8003ae8:	4f32      	ldr	r7, [pc, #200]	; (8003bb4 <rt_mut_release+0xd8>)
 8003aea:	6881      	ldr	r1, [r0, #8]
 8003aec:	683a      	ldr	r2, [r7, #0]
 8003aee:	4291      	cmp	r1, r2
 8003af0:	d15e      	bne.n	8003bb0 <rt_mut_release+0xd4>
 8003af2:	3b01      	subs	r3, #1
 8003af4:	b29b      	uxth	r3, r3
 8003af6:	8043      	strh	r3, [r0, #2]
 8003af8:	b11b      	cbz	r3, 8003b02 <rt_mut_release+0x26>
 8003afa:	2400      	movs	r4, #0
 8003afc:	4620      	mov	r0, r4
 8003afe:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8003b02:	6a0b      	ldr	r3, [r1, #32]
 8003b04:	4298      	cmp	r0, r3
 8003b06:	d129      	bne.n	8003b5c <rt_mut_release+0x80>
 8003b08:	68c3      	ldr	r3, [r0, #12]
 8003b0a:	620b      	str	r3, [r1, #32]
 8003b0c:	f891 3024 	ldrb.w	r3, [r1, #36]	; 0x24
 8003b10:	6a0c      	ldr	r4, [r1, #32]
 8003b12:	bb5c      	cbnz	r4, 8003b6c <rt_mut_release+0x90>
 8003b14:	708b      	strb	r3, [r1, #2]
 8003b16:	686a      	ldr	r2, [r5, #4]
 8003b18:	f8df 809c 	ldr.w	r8, [pc, #156]	; 8003bb8 <rt_mut_release+0xdc>
 8003b1c:	2a00      	cmp	r2, #0
 8003b1e:	d03b      	beq.n	8003b98 <rt_mut_release+0xbc>
 8003b20:	4628      	mov	r0, r5
 8003b22:	f7fe feb3 	bl	800288c <rt_get_first>
 8003b26:	4621      	mov	r1, r4
 8003b28:	4606      	mov	r6, r0
 8003b2a:	f7fe ffdb 	bl	8002ae4 <rt_ret_val>
 8003b2e:	4630      	mov	r0, r6
 8003b30:	f7fe ff52 	bl	80029d8 <rt_rmv_dly>
 8003b34:	6a33      	ldr	r3, [r6, #32]
 8003b36:	60eb      	str	r3, [r5, #12]
 8003b38:	f04f 0901 	mov.w	r9, #1
 8003b3c:	6839      	ldr	r1, [r7, #0]
 8003b3e:	f8d8 3004 	ldr.w	r3, [r8, #4]
 8003b42:	f8a5 9002 	strh.w	r9, [r5, #2]
 8003b46:	60ae      	str	r6, [r5, #8]
 8003b48:	6235      	str	r5, [r6, #32]
 8003b4a:	788a      	ldrb	r2, [r1, #2]
 8003b4c:	789b      	ldrb	r3, [r3, #2]
 8003b4e:	429a      	cmp	r2, r3
 8003b50:	d314      	bcc.n	8003b7c <rt_mut_release+0xa0>
 8003b52:	4630      	mov	r0, r6
 8003b54:	f7ff fd76 	bl	8003644 <rt_dispatch>
 8003b58:	e7d0      	b.n	8003afc <rt_mut_release+0x20>
 8003b5a:	4613      	mov	r3, r2
 8003b5c:	2b00      	cmp	r3, #0
 8003b5e:	d0d5      	beq.n	8003b0c <rt_mut_release+0x30>
 8003b60:	68da      	ldr	r2, [r3, #12]
 8003b62:	4295      	cmp	r5, r2
 8003b64:	d1f9      	bne.n	8003b5a <rt_mut_release+0x7e>
 8003b66:	68ea      	ldr	r2, [r5, #12]
 8003b68:	60da      	str	r2, [r3, #12]
 8003b6a:	e7cf      	b.n	8003b0c <rt_mut_release+0x30>
 8003b6c:	6862      	ldr	r2, [r4, #4]
 8003b6e:	b11a      	cbz	r2, 8003b78 <rt_mut_release+0x9c>
 8003b70:	7892      	ldrb	r2, [r2, #2]
 8003b72:	4293      	cmp	r3, r2
 8003b74:	bf38      	it	cc
 8003b76:	4613      	movcc	r3, r2
 8003b78:	68e4      	ldr	r4, [r4, #12]
 8003b7a:	e7ca      	b.n	8003b12 <rt_mut_release+0x36>
 8003b7c:	4640      	mov	r0, r8
 8003b7e:	f7fe fe6d 	bl	800285c <rt_put_prio>
 8003b82:	4631      	mov	r1, r6
 8003b84:	4640      	mov	r0, r8
 8003b86:	f7fe fe69 	bl	800285c <rt_put_prio>
 8003b8a:	683b      	ldr	r3, [r7, #0]
 8003b8c:	f883 9001 	strb.w	r9, [r3, #1]
 8003b90:	f886 9001 	strb.w	r9, [r6, #1]
 8003b94:	4620      	mov	r0, r4
 8003b96:	e7dd      	b.n	8003b54 <rt_mut_release+0x78>
 8003b98:	f8d8 2004 	ldr.w	r2, [r8, #4]
 8003b9c:	7892      	ldrb	r2, [r2, #2]
 8003b9e:	429a      	cmp	r2, r3
 8003ba0:	d9ab      	bls.n	8003afa <rt_mut_release+0x1e>
 8003ba2:	4640      	mov	r0, r8
 8003ba4:	f7fe fe5a 	bl	800285c <rt_put_prio>
 8003ba8:	683b      	ldr	r3, [r7, #0]
 8003baa:	2201      	movs	r2, #1
 8003bac:	705a      	strb	r2, [r3, #1]
 8003bae:	e7f1      	b.n	8003b94 <rt_mut_release+0xb8>
 8003bb0:	24ff      	movs	r4, #255	; 0xff
 8003bb2:	e7a3      	b.n	8003afc <rt_mut_release+0x20>
 8003bb4:	20003054 	.word	0x20003054
 8003bb8:	20003008 	.word	0x20003008

08003bbc <rt_mut_wait>:
 8003bbc:	8843      	ldrh	r3, [r0, #2]
 8003bbe:	b570      	push	{r4, r5, r6, lr}
 8003bc0:	4604      	mov	r4, r0
 8003bc2:	460e      	mov	r6, r1
 8003bc4:	4d13      	ldr	r5, [pc, #76]	; (8003c14 <rt_mut_wait+0x58>)
 8003bc6:	b943      	cbnz	r3, 8003bda <rt_mut_wait+0x1e>
 8003bc8:	682a      	ldr	r2, [r5, #0]
 8003bca:	6082      	str	r2, [r0, #8]
 8003bcc:	6a11      	ldr	r1, [r2, #32]
 8003bce:	60c1      	str	r1, [r0, #12]
 8003bd0:	6210      	str	r0, [r2, #32]
 8003bd2:	3301      	adds	r3, #1
 8003bd4:	8063      	strh	r3, [r4, #2]
 8003bd6:	2000      	movs	r0, #0
 8003bd8:	bd70      	pop	{r4, r5, r6, pc}
 8003bda:	6880      	ldr	r0, [r0, #8]
 8003bdc:	682a      	ldr	r2, [r5, #0]
 8003bde:	4290      	cmp	r0, r2
 8003be0:	d0f7      	beq.n	8003bd2 <rt_mut_wait+0x16>
 8003be2:	b181      	cbz	r1, 8003c06 <rt_mut_wait+0x4a>
 8003be4:	7893      	ldrb	r3, [r2, #2]
 8003be6:	7882      	ldrb	r2, [r0, #2]
 8003be8:	429a      	cmp	r2, r3
 8003bea:	d202      	bcs.n	8003bf2 <rt_mut_wait+0x36>
 8003bec:	7083      	strb	r3, [r0, #2]
 8003bee:	f7fe fedb 	bl	80029a8 <rt_resort_prio>
 8003bf2:	6862      	ldr	r2, [r4, #4]
 8003bf4:	b14a      	cbz	r2, 8003c0a <rt_mut_wait+0x4e>
 8003bf6:	6829      	ldr	r1, [r5, #0]
 8003bf8:	4620      	mov	r0, r4
 8003bfa:	f7fe fe2f 	bl	800285c <rt_put_prio>
 8003bfe:	2109      	movs	r1, #9
 8003c00:	4630      	mov	r0, r6
 8003c02:	f7ff fd43 	bl	800368c <rt_block>
 8003c06:	2001      	movs	r0, #1
 8003c08:	bd70      	pop	{r4, r5, r6, pc}
 8003c0a:	682b      	ldr	r3, [r5, #0]
 8003c0c:	6063      	str	r3, [r4, #4]
 8003c0e:	605a      	str	r2, [r3, #4]
 8003c10:	609c      	str	r4, [r3, #8]
 8003c12:	e7f4      	b.n	8003bfe <rt_mut_wait+0x42>
 8003c14:	20003054 	.word	0x20003054

08003c18 <rt_dly_wait>:
 8003c18:	2103      	movs	r1, #3
 8003c1a:	f7ff bd37 	b.w	800368c <rt_block>
	...

08003c20 <rt_sem_psh>:
 8003c20:	6842      	ldr	r2, [r0, #4]
 8003c22:	b510      	push	{r4, lr}
 8003c24:	b17a      	cbz	r2, 8003c46 <rt_sem_psh+0x26>
 8003c26:	f7fe fe31 	bl	800288c <rt_get_first>
 8003c2a:	4604      	mov	r4, r0
 8003c2c:	f7fe fed4 	bl	80029d8 <rt_rmv_dly>
 8003c30:	2101      	movs	r1, #1
 8003c32:	7061      	strb	r1, [r4, #1]
 8003c34:	4620      	mov	r0, r4
 8003c36:	f7fe ff55 	bl	8002ae4 <rt_ret_val>
 8003c3a:	4621      	mov	r1, r4
 8003c3c:	4804      	ldr	r0, [pc, #16]	; (8003c50 <rt_sem_psh+0x30>)
 8003c3e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8003c42:	f7fe be0b 	b.w	800285c <rt_put_prio>
 8003c46:	8842      	ldrh	r2, [r0, #2]
 8003c48:	3201      	adds	r2, #1
 8003c4a:	8042      	strh	r2, [r0, #2]
 8003c4c:	bd10      	pop	{r4, pc}
 8003c4e:	bf00      	nop
 8003c50:	20003008 	.word	0x20003008

08003c54 <timer_irq_handler>:
 8003c54:	b570      	push	{r4, r5, r6, lr}
 8003c56:	4c13      	ldr	r4, [pc, #76]	; (8003ca4 <timer_irq_handler+0x50>)
 8003c58:	6823      	ldr	r3, [r4, #0]
 8003c5a:	691a      	ldr	r2, [r3, #16]
 8003c5c:	0795      	lsls	r5, r2, #30
 8003c5e:	d507      	bpl.n	8003c70 <timer_irq_handler+0x1c>
 8003c60:	68da      	ldr	r2, [r3, #12]
 8003c62:	0790      	lsls	r0, r2, #30
 8003c64:	d504      	bpl.n	8003c70 <timer_irq_handler+0x1c>
 8003c66:	f06f 0202 	mvn.w	r2, #2
 8003c6a:	611a      	str	r2, [r3, #16]
 8003c6c:	f7fe fc4e 	bl	800250c <us_ticker_irq_handler>
 8003c70:	6823      	ldr	r3, [r4, #0]
 8003c72:	691a      	ldr	r2, [r3, #16]
 8003c74:	0751      	lsls	r1, r2, #29
 8003c76:	d513      	bpl.n	8003ca0 <timer_irq_handler+0x4c>
 8003c78:	68da      	ldr	r2, [r3, #12]
 8003c7a:	0752      	lsls	r2, r2, #29
 8003c7c:	d510      	bpl.n	8003ca0 <timer_irq_handler+0x4c>
 8003c7e:	f06f 0204 	mvn.w	r2, #4
 8003c82:	4e09      	ldr	r6, [pc, #36]	; (8003ca8 <timer_irq_handler+0x54>)
 8003c84:	611a      	str	r2, [r3, #16]
 8003c86:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 8003c88:	6833      	ldr	r3, [r6, #0]
 8003c8a:	1aeb      	subs	r3, r5, r3
 8003c8c:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 8003c90:	d306      	bcc.n	8003ca0 <timer_irq_handler+0x4c>
 8003c92:	f001 fe9f 	bl	80059d4 <HAL_IncTick>
 8003c96:	6823      	ldr	r3, [r4, #0]
 8003c98:	f505 727a 	add.w	r2, r5, #1000	; 0x3e8
 8003c9c:	639a      	str	r2, [r3, #56]	; 0x38
 8003c9e:	6035      	str	r5, [r6, #0]
 8003ca0:	bd70      	pop	{r4, r5, r6, pc}
 8003ca2:	bf00      	nop
 8003ca4:	200030a0 	.word	0x200030a0
 8003ca8:	20002040 	.word	0x20002040

08003cac <HAL_InitTick>:
 8003cac:	b530      	push	{r4, r5, lr}
 8003cae:	b089      	sub	sp, #36	; 0x24
 8003cb0:	a901      	add	r1, sp, #4
 8003cb2:	a803      	add	r0, sp, #12
 8003cb4:	f001 fe56 	bl	8005964 <HAL_RCC_GetClockConfig>
 8003cb8:	f001 fe24 	bl	8005904 <HAL_RCC_GetPCLK1Freq>
 8003cbc:	2300      	movs	r3, #0
 8003cbe:	9302      	str	r3, [sp, #8]
 8003cc0:	4b24      	ldr	r3, [pc, #144]	; (8003d54 <HAL_InitTick+0xa8>)
 8003cc2:	9001      	str	r0, [sp, #4]
 8003cc4:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8003cc6:	4c24      	ldr	r4, [pc, #144]	; (8003d58 <HAL_InitTick+0xac>)
 8003cc8:	f042 0208 	orr.w	r2, r2, #8
 8003ccc:	641a      	str	r2, [r3, #64]	; 0x40
 8003cce:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8003cd0:	f002 0208 	and.w	r2, r2, #8
 8003cd4:	9202      	str	r2, [sp, #8]
 8003cd6:	9a02      	ldr	r2, [sp, #8]
 8003cd8:	6a1a      	ldr	r2, [r3, #32]
 8003cda:	f042 0208 	orr.w	r2, r2, #8
 8003cde:	621a      	str	r2, [r3, #32]
 8003ce0:	6a1a      	ldr	r2, [r3, #32]
 8003ce2:	f022 0208 	bic.w	r2, r2, #8
 8003ce6:	621a      	str	r2, [r3, #32]
 8003ce8:	9a06      	ldr	r2, [sp, #24]
 8003cea:	f5a3 330b 	sub.w	r3, r3, #142336	; 0x22c00
 8003cee:	6023      	str	r3, [r4, #0]
 8003cf0:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8003cf4:	60e3      	str	r3, [r4, #12]
 8003cf6:	4b19      	ldr	r3, [pc, #100]	; (8003d5c <HAL_InitTick+0xb0>)
 8003cf8:	bb4a      	cbnz	r2, 8003d4e <HAL_InitTick+0xa2>
 8003cfa:	fbb0 f0f3 	udiv	r0, r0, r3
 8003cfe:	3801      	subs	r0, #1
 8003d00:	2500      	movs	r5, #0
 8003d02:	6060      	str	r0, [r4, #4]
 8003d04:	4814      	ldr	r0, [pc, #80]	; (8003d58 <HAL_InitTick+0xac>)
 8003d06:	6125      	str	r5, [r4, #16]
 8003d08:	60a5      	str	r5, [r4, #8]
 8003d0a:	6165      	str	r5, [r4, #20]
 8003d0c:	f001 f93c 	bl	8004f88 <HAL_TIM_OC_Init>
 8003d10:	4913      	ldr	r1, [pc, #76]	; (8003d60 <HAL_InitTick+0xb4>)
 8003d12:	2032      	movs	r0, #50	; 0x32
 8003d14:	f001 f856 	bl	8004dc4 <__NVIC_SetVector>
 8003d18:	4b12      	ldr	r3, [pc, #72]	; (8003d64 <HAL_InitTick+0xb8>)
 8003d1a:	480f      	ldr	r0, [pc, #60]	; (8003d58 <HAL_InitTick+0xac>)
 8003d1c:	f44f 2280 	mov.w	r2, #262144	; 0x40000
 8003d20:	605a      	str	r2, [r3, #4]
 8003d22:	4629      	mov	r1, r5
 8003d24:	f001 fa14 	bl	8005150 <HAL_TIM_OC_Start>
 8003d28:	2104      	movs	r1, #4
 8003d2a:	480b      	ldr	r0, [pc, #44]	; (8003d58 <HAL_InitTick+0xac>)
 8003d2c:	f001 fa10 	bl	8005150 <HAL_TIM_OC_Start>
 8003d30:	6823      	ldr	r3, [r4, #0]
 8003d32:	4a0d      	ldr	r2, [pc, #52]	; (8003d68 <HAL_InitTick+0xbc>)
 8003d34:	6a59      	ldr	r1, [r3, #36]	; 0x24
 8003d36:	6011      	str	r1, [r2, #0]
 8003d38:	6812      	ldr	r2, [r2, #0]
 8003d3a:	f502 727a 	add.w	r2, r2, #1000	; 0x3e8
 8003d3e:	639a      	str	r2, [r3, #56]	; 0x38
 8003d40:	68da      	ldr	r2, [r3, #12]
 8003d42:	4628      	mov	r0, r5
 8003d44:	f042 0204 	orr.w	r2, r2, #4
 8003d48:	60da      	str	r2, [r3, #12]
 8003d4a:	b009      	add	sp, #36	; 0x24
 8003d4c:	bd30      	pop	{r4, r5, pc}
 8003d4e:	0040      	lsls	r0, r0, #1
 8003d50:	e7d3      	b.n	8003cfa <HAL_InitTick+0x4e>
 8003d52:	bf00      	nop
 8003d54:	40023800 	.word	0x40023800
 8003d58:	200030a0 	.word	0x200030a0
 8003d5c:	000f4240 	.word	0x000f4240
 8003d60:	08003c55 	.word	0x08003c55
 8003d64:	e000e100 	.word	0xe000e100
 8003d68:	20002040 	.word	0x20002040

08003d6c <HAL_SuspendTick>:
 8003d6c:	4b03      	ldr	r3, [pc, #12]	; (8003d7c <HAL_SuspendTick+0x10>)
 8003d6e:	4a04      	ldr	r2, [pc, #16]	; (8003d80 <HAL_SuspendTick+0x14>)
 8003d70:	6013      	str	r3, [r2, #0]
 8003d72:	68da      	ldr	r2, [r3, #12]
 8003d74:	f022 0204 	bic.w	r2, r2, #4
 8003d78:	60da      	str	r2, [r3, #12]
 8003d7a:	4770      	bx	lr
 8003d7c:	40000c00 	.word	0x40000c00
 8003d80:	200030a0 	.word	0x200030a0

08003d84 <HAL_ResumeTick>:
 8003d84:	4b03      	ldr	r3, [pc, #12]	; (8003d94 <HAL_ResumeTick+0x10>)
 8003d86:	4a04      	ldr	r2, [pc, #16]	; (8003d98 <HAL_ResumeTick+0x14>)
 8003d88:	6013      	str	r3, [r2, #0]
 8003d8a:	68da      	ldr	r2, [r3, #12]
 8003d8c:	f042 0204 	orr.w	r2, r2, #4
 8003d90:	60da      	str	r2, [r3, #12]
 8003d92:	4770      	bx	lr
 8003d94:	40000c00 	.word	0x40000c00
 8003d98:	200030a0 	.word	0x200030a0

08003d9c <handle_interrupt_in>:
 8003d9c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003d9e:	264c      	movs	r6, #76	; 0x4c
 8003da0:	4b13      	ldr	r3, [pc, #76]	; (8003df0 <handle_interrupt_in+0x54>)
 8003da2:	4346      	muls	r6, r0
 8003da4:	1d34      	adds	r4, r6, #4
 8003da6:	460f      	mov	r7, r1
 8003da8:	441c      	add	r4, r3
 8003daa:	2500      	movs	r5, #0
 8003dac:	441e      	add	r6, r3
 8003dae:	42bd      	cmp	r5, r7
 8003db0:	d100      	bne.n	8003db4 <handle_interrupt_in+0x18>
 8003db2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8003db4:	2101      	movs	r1, #1
 8003db6:	6833      	ldr	r3, [r6, #0]
 8003db8:	fa01 f205 	lsl.w	r2, r1, r5
 8003dbc:	421a      	tst	r2, r3
 8003dbe:	d013      	beq.n	8003de8 <handle_interrupt_in+0x4c>
 8003dc0:	4a0c      	ldr	r2, [pc, #48]	; (8003df4 <handle_interrupt_in+0x58>)
 8003dc2:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8003dc4:	6950      	ldr	r0, [r2, #20]
 8003dc6:	fa01 f303 	lsl.w	r3, r1, r3
 8003dca:	4203      	tst	r3, r0
 8003dcc:	d00c      	beq.n	8003de8 <handle_interrupt_in+0x4c>
 8003dce:	f8d4 e018 	ldr.w	lr, [r4, #24]
 8003dd2:	6153      	str	r3, [r2, #20]
 8003dd4:	6820      	ldr	r0, [r4, #0]
 8003dd6:	b138      	cbz	r0, 8003de8 <handle_interrupt_in+0x4c>
 8003dd8:	f8de 2010 	ldr.w	r2, [lr, #16]
 8003ddc:	4213      	tst	r3, r2
 8003dde:	4b06      	ldr	r3, [pc, #24]	; (8003df8 <handle_interrupt_in+0x5c>)
 8003de0:	bf08      	it	eq
 8003de2:	2102      	moveq	r1, #2
 8003de4:	681b      	ldr	r3, [r3, #0]
 8003de6:	4798      	blx	r3
 8003de8:	3501      	adds	r5, #1
 8003dea:	3404      	adds	r4, #4
 8003dec:	e7df      	b.n	8003dae <handle_interrupt_in+0x12>
 8003dee:	bf00      	nop
 8003df0:	20002044 	.word	0x20002044
 8003df4:	40013c00 	.word	0x40013c00
 8003df8:	20002258 	.word	0x20002258

08003dfc <gpio_irq0>:
 8003dfc:	2101      	movs	r1, #1
 8003dfe:	2000      	movs	r0, #0
 8003e00:	f7ff bfcc 	b.w	8003d9c <handle_interrupt_in>

08003e04 <gpio_irq1>:
 8003e04:	2101      	movs	r1, #1
 8003e06:	4608      	mov	r0, r1
 8003e08:	f7ff bfc8 	b.w	8003d9c <handle_interrupt_in>

08003e0c <gpio_irq2>:
 8003e0c:	2101      	movs	r1, #1
 8003e0e:	2002      	movs	r0, #2
 8003e10:	f7ff bfc4 	b.w	8003d9c <handle_interrupt_in>

08003e14 <gpio_irq3>:
 8003e14:	2101      	movs	r1, #1
 8003e16:	2003      	movs	r0, #3
 8003e18:	f7ff bfc0 	b.w	8003d9c <handle_interrupt_in>

08003e1c <gpio_irq4>:
 8003e1c:	2101      	movs	r1, #1
 8003e1e:	2004      	movs	r0, #4
 8003e20:	f7ff bfbc 	b.w	8003d9c <handle_interrupt_in>

08003e24 <gpio_irq5>:
 8003e24:	2105      	movs	r1, #5
 8003e26:	4608      	mov	r0, r1
 8003e28:	f7ff bfb8 	b.w	8003d9c <handle_interrupt_in>

08003e2c <gpio_irq6>:
 8003e2c:	2106      	movs	r1, #6
 8003e2e:	4608      	mov	r0, r1
 8003e30:	f7ff bfb4 	b.w	8003d9c <handle_interrupt_in>

08003e34 <gpio_irq_set>:
 8003e34:	2901      	cmp	r1, #1
 8003e36:	b510      	push	{r4, lr}
 8003e38:	d110      	bne.n	8003e5c <gpio_irq_set+0x28>
 8003e3a:	4c14      	ldr	r4, [pc, #80]	; (8003e8c <gpio_irq_set+0x58>)
 8003e3c:	8983      	ldrh	r3, [r0, #12]
 8003e3e:	b132      	cbz	r2, 8003e4e <gpio_irq_set+0x1a>
 8003e40:	68a2      	ldr	r2, [r4, #8]
 8003e42:	f003 030f 	and.w	r3, r3, #15
 8003e46:	4099      	lsls	r1, r3
 8003e48:	4311      	orrs	r1, r2
 8003e4a:	60a1      	str	r1, [r4, #8]
 8003e4c:	bd10      	pop	{r4, pc}
 8003e4e:	68a2      	ldr	r2, [r4, #8]
 8003e50:	f003 030f 	and.w	r3, r3, #15
 8003e54:	4099      	lsls	r1, r3
 8003e56:	ea22 0101 	bic.w	r1, r2, r1
 8003e5a:	e7f6      	b.n	8003e4a <gpio_irq_set+0x16>
 8003e5c:	2902      	cmp	r1, #2
 8003e5e:	d10a      	bne.n	8003e76 <gpio_irq_set+0x42>
 8003e60:	490a      	ldr	r1, [pc, #40]	; (8003e8c <gpio_irq_set+0x58>)
 8003e62:	8983      	ldrh	r3, [r0, #12]
 8003e64:	b142      	cbz	r2, 8003e78 <gpio_irq_set+0x44>
 8003e66:	68c8      	ldr	r0, [r1, #12]
 8003e68:	f003 030f 	and.w	r3, r3, #15
 8003e6c:	2201      	movs	r2, #1
 8003e6e:	fa02 f303 	lsl.w	r3, r2, r3
 8003e72:	4303      	orrs	r3, r0
 8003e74:	60cb      	str	r3, [r1, #12]
 8003e76:	bd10      	pop	{r4, pc}
 8003e78:	68ca      	ldr	r2, [r1, #12]
 8003e7a:	f003 030f 	and.w	r3, r3, #15
 8003e7e:	2001      	movs	r0, #1
 8003e80:	fa00 f303 	lsl.w	r3, r0, r3
 8003e84:	ea22 0303 	bic.w	r3, r2, r3
 8003e88:	e7f4      	b.n	8003e74 <gpio_irq_set+0x40>
 8003e8a:	bf00      	nop
 8003e8c:	40013c00 	.word	0x40013c00

08003e90 <gpio_irq_enable>:
 8003e90:	f9b0 300c 	ldrsh.w	r3, [r0, #12]
 8003e94:	b29a      	uxth	r2, r3
 8003e96:	f002 010f 	and.w	r1, r2, #15
 8003e9a:	b570      	push	{r4, r5, r6, lr}
 8003e9c:	f001 040c 	and.w	r4, r1, #12
 8003ea0:	f104 4480 	add.w	r4, r4, #1073741824	; 0x40000000
 8003ea4:	f504 349c 	add.w	r4, r4, #79872	; 0x13800
 8003ea8:	f002 0203 	and.w	r2, r2, #3
 8003eac:	68a5      	ldr	r5, [r4, #8]
 8003eae:	0092      	lsls	r2, r2, #2
 8003eb0:	260f      	movs	r6, #15
 8003eb2:	4096      	lsls	r6, r2
 8003eb4:	f3c3 1303 	ubfx	r3, r3, #4, #4
 8003eb8:	4093      	lsls	r3, r2
 8003eba:	ea25 0506 	bic.w	r5, r5, r6
 8003ebe:	4a09      	ldr	r2, [pc, #36]	; (8003ee4 <gpio_irq_enable+0x54>)
 8003ec0:	432b      	orrs	r3, r5
 8003ec2:	60a3      	str	r3, [r4, #8]
 8003ec4:	6814      	ldr	r4, [r2, #0]
 8003ec6:	2301      	movs	r3, #1
 8003ec8:	fa03 f101 	lsl.w	r1, r3, r1
 8003ecc:	4321      	orrs	r1, r4
 8003ece:	6011      	str	r1, [r2, #0]
 8003ed0:	f990 2000 	ldrsb.w	r2, [r0]
 8003ed4:	0951      	lsrs	r1, r2, #5
 8003ed6:	f002 021f 	and.w	r2, r2, #31
 8003eda:	4093      	lsls	r3, r2
 8003edc:	4a02      	ldr	r2, [pc, #8]	; (8003ee8 <gpio_irq_enable+0x58>)
 8003ede:	f842 3021 	str.w	r3, [r2, r1, lsl #2]
 8003ee2:	bd70      	pop	{r4, r5, r6, pc}
 8003ee4:	40013c00 	.word	0x40013c00
 8003ee8:	e000e100 	.word	0xe000e100

08003eec <gpio_irq_init>:
 8003eec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, lr}
 8003ef0:	469b      	mov	r11, r3
 8003ef2:	1c4b      	adds	r3, r1, #1
 8003ef4:	b085      	sub	sp, #20
 8003ef6:	4607      	mov	r7, r0
 8003ef8:	460c      	mov	r4, r1
 8003efa:	4692      	mov	r10, r2
 8003efc:	d064      	beq.n	8003fc8 <gpio_irq_init+0xdc>
 8003efe:	2300      	movs	r3, #0
 8003f00:	9303      	str	r3, [sp, #12]
 8003f02:	4b32      	ldr	r3, [pc, #200]	; (8003fcc <gpio_irq_init+0xe0>)
 8003f04:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8003f06:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8003f0a:	645a      	str	r2, [r3, #68]	; 0x44
 8003f0c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8003f0e:	4a30      	ldr	r2, [pc, #192]	; (8003fd0 <gpio_irq_init+0xe4>)
 8003f10:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8003f14:	9303      	str	r3, [sp, #12]
 8003f16:	9b03      	ldr	r3, [sp, #12]
 8003f18:	f001 080f 	and.w	r8, r1, #15
 8003f1c:	230c      	movs	r3, #12
 8003f1e:	fb03 2308 	mla	r3, r3, r8, r2
 8003f22:	f3c1 1003 	ubfx	r0, r1, #4, #4
 8003f26:	685d      	ldr	r5, [r3, #4]
 8003f28:	2d06      	cmp	r5, #6
 8003f2a:	d845      	bhi.n	8003fb8 <gpio_irq_init+0xcc>
 8003f2c:	e8df f005 	tbb	[pc, r5]
 8003f30:	3c3a3804 	.word	0x3c3a3804
 8003f34:	403e      	.short	0x403e
 8003f36:	42          	.byte	0x42
 8003f37:	00          	.byte	0x00
 8003f38:	4e26      	ldr	r6, [pc, #152]	; (8003fd4 <gpio_irq_init+0xe8>)
 8003f3a:	9201      	str	r2, [sp, #4]
 8003f3c:	f000 f8b4 	bl	80040a8 <Set_GPIO_Clock>
 8003f40:	210c      	movs	r1, #12
 8003f42:	9a01      	ldr	r2, [sp, #4]
 8003f44:	81bc      	strh	r4, [r7, #12]
 8003f46:	fb01 f108 	mul.w	r1, r1, r8
 8003f4a:	1853      	adds	r3, r2, r1
 8003f4c:	f852 e001 	ldr.w	lr, [r2, r1]
 8003f50:	4921      	ldr	r1, [pc, #132]	; (8003fd8 <gpio_irq_init+0xec>)
 8003f52:	f993 c008 	ldrsb.w	r12, [r3, #8]
 8003f56:	f887 c000 	strb.w	r12, [r7]
 8003f5a:	224c      	movs	r2, #76	; 0x4c
 8003f5c:	436a      	muls	r2, r5
 8003f5e:	2401      	movs	r4, #1
 8003f60:	588b      	ldr	r3, [r1, r2]
 8003f62:	607d      	str	r5, [r7, #4]
 8003f64:	fa04 f40e 	lsl.w	r4, r4, lr
 8003f68:	431c      	orrs	r4, r3
 8003f6a:	f04f 0900 	mov.w	r9, #0
 8003f6e:	f8c7 9008 	str.w	r9, [r7, #8]
 8003f72:	508c      	str	r4, [r1, r2]
 8003f74:	2213      	movs	r2, #19
 8003f76:	fb02 e505 	mla	r5, r2, r5, lr
 8003f7a:	eb01 0285 	add.w	r2, r1, r5, lsl #2
 8003f7e:	4631      	mov	r1, r6
 8003f80:	61d0      	str	r0, [r2, #28]
 8003f82:	f8c2 b004 	str.w	r11, [r2, #4]
 8003f86:	f8c2 8034 	str.w	r8, [r2, #52]	; 0x34
 8003f8a:	4a14      	ldr	r2, [pc, #80]	; (8003fdc <gpio_irq_init+0xf0>)
 8003f8c:	4660      	mov	r0, r12
 8003f8e:	f8c2 a000 	str.w	r10, [r2]
 8003f92:	f000 ff17 	bl	8004dc4 <__NVIC_SetVector>
 8003f96:	4638      	mov	r0, r7
 8003f98:	f7ff ff7a 	bl	8003e90 <gpio_irq_enable>
 8003f9c:	4648      	mov	r0, r9
 8003f9e:	e010      	b.n	8003fc2 <gpio_irq_init+0xd6>
 8003fa0:	4e0f      	ldr	r6, [pc, #60]	; (8003fe0 <gpio_irq_init+0xf4>)
 8003fa2:	e7ca      	b.n	8003f3a <gpio_irq_init+0x4e>
 8003fa4:	4e0f      	ldr	r6, [pc, #60]	; (8003fe4 <gpio_irq_init+0xf8>)
 8003fa6:	e7c8      	b.n	8003f3a <gpio_irq_init+0x4e>
 8003fa8:	4e0f      	ldr	r6, [pc, #60]	; (8003fe8 <gpio_irq_init+0xfc>)
 8003faa:	e7c6      	b.n	8003f3a <gpio_irq_init+0x4e>
 8003fac:	4e0f      	ldr	r6, [pc, #60]	; (8003fec <gpio_irq_init+0x100>)
 8003fae:	e7c4      	b.n	8003f3a <gpio_irq_init+0x4e>
 8003fb0:	4e0f      	ldr	r6, [pc, #60]	; (8003ff0 <gpio_irq_init+0x104>)
 8003fb2:	e7c2      	b.n	8003f3a <gpio_irq_init+0x4e>
 8003fb4:	4e0f      	ldr	r6, [pc, #60]	; (8003ff4 <gpio_irq_init+0x108>)
 8003fb6:	e7c0      	b.n	8003f3a <gpio_irq_init+0x4e>
 8003fb8:	480f      	ldr	r0, [pc, #60]	; (8003ff8 <gpio_irq_init+0x10c>)
 8003fba:	f7fe fbcb 	bl	8002754 <error>
 8003fbe:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8003fc2:	b005      	add	sp, #20
 8003fc4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, pc}
 8003fc8:	4608      	mov	r0, r1
 8003fca:	e7fa      	b.n	8003fc2 <gpio_irq_init+0xd6>
 8003fcc:	40023800 	.word	0x40023800
 8003fd0:	08008408 	.word	0x08008408
 8003fd4:	08003dfd 	.word	0x08003dfd
 8003fd8:	20002044 	.word	0x20002044
 8003fdc:	20002258 	.word	0x20002258
 8003fe0:	08003e05 	.word	0x08003e05
 8003fe4:	08003e0d 	.word	0x08003e0d
 8003fe8:	08003e15 	.word	0x08003e15
 8003fec:	08003e1d 	.word	0x08003e1d
 8003ff0:	08003e25 	.word	0x08003e25
 8003ff4:	08003e2d 	.word	0x08003e2d
 8003ff8:	080082f4 	.word	0x080082f4

08003ffc <gpio_irq_disable>:
 8003ffc:	b510      	push	{r4, lr}
 8003ffe:	8983      	ldrh	r3, [r0, #12]
 8004000:	4c12      	ldr	r4, [pc, #72]	; (800404c <gpio_irq_disable+0x50>)
 8004002:	2201      	movs	r2, #1
 8004004:	6821      	ldr	r1, [r4, #0]
 8004006:	f003 030f 	and.w	r3, r3, #15
 800400a:	fa02 f303 	lsl.w	r3, r2, r3
 800400e:	ea21 0303 	bic.w	r3, r1, r3
 8004012:	6023      	str	r3, [r4, #0]
 8004014:	f990 3000 	ldrsb.w	r3, [r0]
 8004018:	4c0d      	ldr	r4, [pc, #52]	; (8004050 <gpio_irq_disable+0x54>)
 800401a:	0959      	lsrs	r1, r3, #5
 800401c:	3120      	adds	r1, #32
 800401e:	f003 031f 	and.w	r3, r3, #31
 8004022:	fa02 f303 	lsl.w	r3, r2, r3
 8004026:	f844 3021 	str.w	r3, [r4, r1, lsl #2]
 800402a:	f3bf 8f4f 	dsb	sy
 800402e:	f3bf 8f6f 	isb	sy
 8004032:	f990 3000 	ldrsb.w	r3, [r0]
 8004036:	0959      	lsrs	r1, r3, #5
 8004038:	f003 031f 	and.w	r3, r3, #31
 800403c:	409a      	lsls	r2, r3
 800403e:	f101 0360 	add.w	r3, r1, #96	; 0x60
 8004042:	f844 2023 	str.w	r2, [r4, r3, lsl #2]
 8004046:	2300      	movs	r3, #0
 8004048:	6083      	str	r3, [r0, #8]
 800404a:	bd10      	pop	{r4, pc}
 800404c:	40013c00 	.word	0x40013c00
 8004050:	e000e100 	.word	0xe000e100

08004054 <gpio_irq_free>:
 8004054:	8983      	ldrh	r3, [r0, #12]
 8004056:	f003 020f 	and.w	r2, r3, #15
 800405a:	230c      	movs	r3, #12
 800405c:	4353      	muls	r3, r2
 800405e:	4a10      	ldr	r2, [pc, #64]	; (80040a0 <gpio_irq_free+0x4c>)
 8004060:	b570      	push	{r4, r5, r6, lr}
 8004062:	6844      	ldr	r4, [r0, #4]
 8004064:	58d6      	ldr	r6, [r2, r3]
 8004066:	f7ff ffc9 	bl	8003ffc <gpio_irq_disable>
 800406a:	214c      	movs	r1, #76	; 0x4c
 800406c:	4a0d      	ldr	r2, [pc, #52]	; (80040a4 <gpio_irq_free+0x50>)
 800406e:	4361      	muls	r1, r4
 8004070:	2001      	movs	r0, #1
 8004072:	fa00 f506 	lsl.w	r5, r0, r6
 8004076:	5850      	ldr	r0, [r2, r1]
 8004078:	2313      	movs	r3, #19
 800407a:	fb03 6304 	mla	r3, r3, r4, r6
 800407e:	ea20 0005 	bic.w	r0, r0, r5
 8004082:	5050      	str	r0, [r2, r1]
 8004084:	eb02 0083 	add.w	r0, r2, r3, lsl #2
 8004088:	2100      	movs	r1, #0
 800408a:	6041      	str	r1, [r0, #4]
 800408c:	1d98      	adds	r0, r3, #6
 800408e:	330c      	adds	r3, #12
 8004090:	eb02 0080 	add.w	r0, r2, r0, lsl #2
 8004094:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8004098:	6041      	str	r1, [r0, #4]
 800409a:	6059      	str	r1, [r3, #4]
 800409c:	bd70      	pop	{r4, r5, r6, pc}
 800409e:	bf00      	nop
 80040a0:	08008408 	.word	0x08008408
 80040a4:	20002044 	.word	0x20002044

080040a8 <Set_GPIO_Clock>:
 80040a8:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 80040aa:	2300      	movs	r3, #0
 80040ac:	2807      	cmp	r0, #7
 80040ae:	d855      	bhi.n	800415c <Set_GPIO_Clock+0xb4>
 80040b0:	e8df f000 	tbb	[pc, r0]
 80040b4:	2d201304 	.word	0x2d201304
 80040b8:	4754543a 	.word	0x4754543a
 80040bc:	9300      	str	r3, [sp, #0]
 80040be:	4b2a      	ldr	r3, [pc, #168]	; (8004168 <Set_GPIO_Clock+0xc0>)
 80040c0:	482a      	ldr	r0, [pc, #168]	; (800416c <Set_GPIO_Clock+0xc4>)
 80040c2:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80040c4:	f042 0201 	orr.w	r2, r2, #1
 80040c8:	631a      	str	r2, [r3, #48]	; 0x30
 80040ca:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80040cc:	f003 0301 	and.w	r3, r3, #1
 80040d0:	9300      	str	r3, [sp, #0]
 80040d2:	9b00      	ldr	r3, [sp, #0]
 80040d4:	b007      	add	sp, #28
 80040d6:	f85d fb04 	ldr.w	pc, [sp], #4
 80040da:	9301      	str	r3, [sp, #4]
 80040dc:	4b22      	ldr	r3, [pc, #136]	; (8004168 <Set_GPIO_Clock+0xc0>)
 80040de:	4824      	ldr	r0, [pc, #144]	; (8004170 <Set_GPIO_Clock+0xc8>)
 80040e0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80040e2:	f042 0202 	orr.w	r2, r2, #2
 80040e6:	631a      	str	r2, [r3, #48]	; 0x30
 80040e8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80040ea:	f003 0302 	and.w	r3, r3, #2
 80040ee:	9301      	str	r3, [sp, #4]
 80040f0:	9b01      	ldr	r3, [sp, #4]
 80040f2:	e7ef      	b.n	80040d4 <Set_GPIO_Clock+0x2c>
 80040f4:	9302      	str	r3, [sp, #8]
 80040f6:	4b1c      	ldr	r3, [pc, #112]	; (8004168 <Set_GPIO_Clock+0xc0>)
 80040f8:	481e      	ldr	r0, [pc, #120]	; (8004174 <Set_GPIO_Clock+0xcc>)
 80040fa:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80040fc:	f042 0204 	orr.w	r2, r2, #4
 8004100:	631a      	str	r2, [r3, #48]	; 0x30
 8004102:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004104:	f003 0304 	and.w	r3, r3, #4
 8004108:	9302      	str	r3, [sp, #8]
 800410a:	9b02      	ldr	r3, [sp, #8]
 800410c:	e7e2      	b.n	80040d4 <Set_GPIO_Clock+0x2c>
 800410e:	9303      	str	r3, [sp, #12]
 8004110:	4b15      	ldr	r3, [pc, #84]	; (8004168 <Set_GPIO_Clock+0xc0>)
 8004112:	4819      	ldr	r0, [pc, #100]	; (8004178 <Set_GPIO_Clock+0xd0>)
 8004114:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8004116:	f042 0208 	orr.w	r2, r2, #8
 800411a:	631a      	str	r2, [r3, #48]	; 0x30
 800411c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800411e:	f003 0308 	and.w	r3, r3, #8
 8004122:	9303      	str	r3, [sp, #12]
 8004124:	9b03      	ldr	r3, [sp, #12]
 8004126:	e7d5      	b.n	80040d4 <Set_GPIO_Clock+0x2c>
 8004128:	9304      	str	r3, [sp, #16]
 800412a:	4b0f      	ldr	r3, [pc, #60]	; (8004168 <Set_GPIO_Clock+0xc0>)
 800412c:	4813      	ldr	r0, [pc, #76]	; (800417c <Set_GPIO_Clock+0xd4>)
 800412e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8004130:	f042 0210 	orr.w	r2, r2, #16
 8004134:	631a      	str	r2, [r3, #48]	; 0x30
 8004136:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004138:	f003 0310 	and.w	r3, r3, #16
 800413c:	9304      	str	r3, [sp, #16]
 800413e:	9b04      	ldr	r3, [sp, #16]
 8004140:	e7c8      	b.n	80040d4 <Set_GPIO_Clock+0x2c>
 8004142:	9305      	str	r3, [sp, #20]
 8004144:	4b08      	ldr	r3, [pc, #32]	; (8004168 <Set_GPIO_Clock+0xc0>)
 8004146:	480e      	ldr	r0, [pc, #56]	; (8004180 <Set_GPIO_Clock+0xd8>)
 8004148:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800414a:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 800414e:	631a      	str	r2, [r3, #48]	; 0x30
 8004150:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004152:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8004156:	9305      	str	r3, [sp, #20]
 8004158:	9b05      	ldr	r3, [sp, #20]
 800415a:	e7bb      	b.n	80040d4 <Set_GPIO_Clock+0x2c>
 800415c:	4809      	ldr	r0, [pc, #36]	; (8004184 <Set_GPIO_Clock+0xdc>)
 800415e:	f7fe faf9 	bl	8002754 <error>
 8004162:	2000      	movs	r0, #0
 8004164:	e7b6      	b.n	80040d4 <Set_GPIO_Clock+0x2c>
 8004166:	bf00      	nop
 8004168:	40023800 	.word	0x40023800
 800416c:	40020000 	.word	0x40020000
 8004170:	40020400 	.word	0x40020400
 8004174:	40020800 	.word	0x40020800
 8004178:	40020c00 	.word	0x40020c00
 800417c:	40021000 	.word	0x40021000
 8004180:	40021c00 	.word	0x40021c00
 8004184:	0800831b 	.word	0x0800831b

08004188 <gpio_set>:
 8004188:	b510      	push	{r4, lr}
 800418a:	2100      	movs	r1, #0
 800418c:	4604      	mov	r4, r0
 800418e:	f004 040f 	and.w	r4, r4, #15
 8004192:	f000 fa89 	bl	80046a8 <pin_function>
 8004196:	2001      	movs	r0, #1
 8004198:	40a0      	lsls	r0, r4
 800419a:	bd10      	pop	{r4, pc}

0800419c <gpio_init>:
 800419c:	b570      	push	{r4, r5, r6, lr}
 800419e:	4604      	mov	r4, r0
 80041a0:	1c4b      	adds	r3, r1, #1
 80041a2:	460e      	mov	r6, r1
 80041a4:	8221      	strh	r1, [r4, #16]
 80041a6:	d016      	beq.n	80041d6 <gpio_init+0x3a>
 80041a8:	f3c1 1003 	ubfx	r0, r1, #4, #4
 80041ac:	f7ff ff7c 	bl	80040a8 <Set_GPIO_Clock>
 80041b0:	4605      	mov	r5, r0
 80041b2:	4630      	mov	r0, r6
 80041b4:	f7ff ffe8 	bl	8004188 <gpio_set>
 80041b8:	8a23      	ldrh	r3, [r4, #16]
 80041ba:	4a07      	ldr	r2, [pc, #28]	; (80041d8 <gpio_init+0x3c>)
 80041bc:	6165      	str	r5, [r4, #20]
 80041be:	f003 030f 	and.w	r3, r3, #15
 80041c2:	6020      	str	r0, [r4, #0]
 80041c4:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80041c8:	61a3      	str	r3, [r4, #24]
 80041ca:	f105 0310 	add.w	r3, r5, #16
 80041ce:	3518      	adds	r5, #24
 80041d0:	6063      	str	r3, [r4, #4]
 80041d2:	60a5      	str	r5, [r4, #8]
 80041d4:	60e5      	str	r5, [r4, #12]
 80041d6:	bd70      	pop	{r4, r5, r6, pc}
 80041d8:	08008368 	.word	0x08008368

080041dc <gpio_mode>:
 80041dc:	f9b0 0010 	ldrsh.w	r0, [r0, #16]
 80041e0:	f000 bae6 	b.w	80047b0 <pin_mode>

080041e4 <gpio_dir>:
 80041e4:	b510      	push	{r4, lr}
 80041e6:	6983      	ldr	r3, [r0, #24]
 80041e8:	6944      	ldr	r4, [r0, #20]
 80041ea:	b971      	cbnz	r1, 800420a <gpio_dir+0x26>
 80041ec:	6821      	ldr	r1, [r4, #0]
 80041ee:	fa93 f2a3 	rbit	r2, r3
 80041f2:	fab2 f282 	clz	r2, r2
 80041f6:	2003      	movs	r0, #3
 80041f8:	0052      	lsls	r2, r2, #1
 80041fa:	fa00 f202 	lsl.w	r2, r0, r2
 80041fe:	ea21 0202 	bic.w	r2, r1, r2
 8004202:	fa93 f3a3 	rbit	r3, r3
 8004206:	6022      	str	r2, [r4, #0]
 8004208:	bd10      	pop	{r4, pc}
 800420a:	6822      	ldr	r2, [r4, #0]
 800420c:	fa93 f1a3 	rbit	r1, r3
 8004210:	fab1 f181 	clz	r1, r1
 8004214:	fa93 f3a3 	rbit	r3, r3
 8004218:	2003      	movs	r0, #3
 800421a:	0049      	lsls	r1, r1, #1
 800421c:	fa00 f101 	lsl.w	r1, r0, r1
 8004220:	fab3 f383 	clz	r3, r3
 8004224:	ea22 0201 	bic.w	r2, r2, r1
 8004228:	005b      	lsls	r3, r3, #1
 800422a:	2101      	movs	r1, #1
 800422c:	fa01 f303 	lsl.w	r3, r1, r3
 8004230:	4313      	orrs	r3, r2
 8004232:	6023      	str	r3, [r4, #0]
 8004234:	bd10      	pop	{r4, pc}

08004236 <hal_sleep>:
 8004236:	b508      	push	{r3, lr}
 8004238:	f7ff fd98 	bl	8003d6c <HAL_SuspendTick>
 800423c:	2101      	movs	r1, #1
 800423e:	2000      	movs	r0, #0
 8004240:	f001 f8f0 	bl	8005424 <HAL_PWR_EnterSLEEPMode>
 8004244:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8004248:	f7ff bd9c 	b.w	8003d84 <HAL_ResumeTick>

0800424c <us_ticker_init>:
 800424c:	4b05      	ldr	r3, [pc, #20]	; (8004264 <us_ticker_init+0x18>)
 800424e:	6818      	ldr	r0, [r3, #0]
 8004250:	b930      	cbnz	r0, 8004260 <us_ticker_init+0x14>
 8004252:	2201      	movs	r2, #1
 8004254:	601a      	str	r2, [r3, #0]
 8004256:	4b04      	ldr	r3, [pc, #16]	; (8004268 <us_ticker_init+0x1c>)
 8004258:	4a04      	ldr	r2, [pc, #16]	; (800426c <us_ticker_init+0x20>)
 800425a:	601a      	str	r2, [r3, #0]
 800425c:	f7ff bd26 	b.w	8003cac <HAL_InitTick>
 8004260:	4770      	bx	lr
 8004262:	bf00      	nop
 8004264:	2000225c 	.word	0x2000225c
 8004268:	200030a0 	.word	0x200030a0
 800426c:	40000c00 	.word	0x40000c00

08004270 <us_ticker_read>:
 8004270:	b508      	push	{r3, lr}
 8004272:	4b04      	ldr	r3, [pc, #16]	; (8004284 <us_ticker_read+0x14>)
 8004274:	681b      	ldr	r3, [r3, #0]
 8004276:	b90b      	cbnz	r3, 800427c <us_ticker_read+0xc>
 8004278:	f7ff ffe8 	bl	800424c <us_ticker_init>
 800427c:	4b02      	ldr	r3, [pc, #8]	; (8004288 <us_ticker_read+0x18>)
 800427e:	6a58      	ldr	r0, [r3, #36]	; 0x24
 8004280:	bd08      	pop	{r3, pc}
 8004282:	bf00      	nop
 8004284:	2000225c 	.word	0x2000225c
 8004288:	40000c00 	.word	0x40000c00

0800428c <us_ticker_set_interrupt>:
 800428c:	4b04      	ldr	r3, [pc, #16]	; (80042a0 <us_ticker_set_interrupt+0x14>)
 800428e:	4a05      	ldr	r2, [pc, #20]	; (80042a4 <us_ticker_set_interrupt+0x18>)
 8004290:	6013      	str	r3, [r2, #0]
 8004292:	6358      	str	r0, [r3, #52]	; 0x34
 8004294:	68da      	ldr	r2, [r3, #12]
 8004296:	f042 0202 	orr.w	r2, r2, #2
 800429a:	60da      	str	r2, [r3, #12]
 800429c:	4770      	bx	lr
 800429e:	bf00      	nop
 80042a0:	40000c00 	.word	0x40000c00
 80042a4:	200030a0 	.word	0x200030a0

080042a8 <us_ticker_disable_interrupt>:
 80042a8:	4b03      	ldr	r3, [pc, #12]	; (80042b8 <us_ticker_disable_interrupt+0x10>)
 80042aa:	4a04      	ldr	r2, [pc, #16]	; (80042bc <us_ticker_disable_interrupt+0x14>)
 80042ac:	6013      	str	r3, [r2, #0]
 80042ae:	68da      	ldr	r2, [r3, #12]
 80042b0:	f022 0202 	bic.w	r2, r2, #2
 80042b4:	60da      	str	r2, [r3, #12]
 80042b6:	4770      	bx	lr
 80042b8:	40000c00 	.word	0x40000c00
 80042bc:	200030a0 	.word	0x200030a0

080042c0 <us_ticker_clear_interrupt>:
 80042c0:	4a03      	ldr	r2, [pc, #12]	; (80042d0 <us_ticker_clear_interrupt+0x10>)
 80042c2:	4b04      	ldr	r3, [pc, #16]	; (80042d4 <us_ticker_clear_interrupt+0x14>)
 80042c4:	6013      	str	r3, [r2, #0]
 80042c6:	f06f 0202 	mvn.w	r2, #2
 80042ca:	611a      	str	r2, [r3, #16]
 80042cc:	4770      	bx	lr
 80042ce:	bf00      	nop
 80042d0:	200030a0 	.word	0x200030a0
 80042d4:	40000c00 	.word	0x40000c00

080042d8 <pwmout_write>:
 80042d8:	b530      	push	{r4, r5, lr}
 80042da:	ee07 1a10 	vmov	s14, r1
 80042de:	4b28      	ldr	r3, [pc, #160]	; (8004380 <pwmout_write+0xa8>)
 80042e0:	6802      	ldr	r2, [r0, #0]
 80042e2:	601a      	str	r2, [r3, #0]
 80042e4:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 80042e8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80042ec:	b089      	sub	sp, #36	; 0x24
 80042ee:	4605      	mov	r5, r0
 80042f0:	d428      	bmi.n	8004344 <pwmout_write+0x6c>
 80042f2:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 80042f6:	eeb4 7a67 	vcmp.f32	s14, s15
 80042fa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80042fe:	bfc8      	it	gt
 8004300:	eeb0 7a67 	vmovgt.f32	s14, s15
 8004304:	edd5 7a03 	vldr	s15, [r5, #12]
 8004308:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800430c:	2260      	movs	r2, #96	; 0x60
 800430e:	ee67 7a87 	vmul.f32	s15, s15, s14
 8004312:	9201      	str	r2, [sp, #4]
 8004314:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8004318:	68aa      	ldr	r2, [r5, #8]
 800431a:	edc5 7a04 	vstr	s15, [r5, #16]
 800431e:	ee17 3a90 	vmov	r3, s15
 8004322:	fbb3 f3f2 	udiv	r3, r3, r2
 8004326:	9302      	str	r3, [sp, #8]
 8004328:	2300      	movs	r3, #0
 800432a:	9303      	str	r3, [sp, #12]
 800432c:	9305      	str	r3, [sp, #20]
 800432e:	9306      	str	r3, [sp, #24]
 8004330:	9304      	str	r3, [sp, #16]
 8004332:	9307      	str	r3, [sp, #28]
 8004334:	7d2b      	ldrb	r3, [r5, #20]
 8004336:	3b01      	subs	r3, #1
 8004338:	2b03      	cmp	r3, #3
 800433a:	d816      	bhi.n	800436a <pwmout_write+0x92>
 800433c:	e8df f003 	tbb	[pc, r3]
 8004340:	1917051b 	.word	0x1917051b
 8004344:	ed9f 7a0f 	vldr	s14, [pc, #60]	; 8004384 <pwmout_write+0xac>
 8004348:	e7dc      	b.n	8004304 <pwmout_write+0x2c>
 800434a:	2404      	movs	r4, #4
 800434c:	4622      	mov	r2, r4
 800434e:	a901      	add	r1, sp, #4
 8004350:	480b      	ldr	r0, [pc, #44]	; (8004380 <pwmout_write+0xa8>)
 8004352:	f000 fe79 	bl	8005048 <HAL_TIM_PWM_ConfigChannel>
 8004356:	b110      	cbz	r0, 800435e <pwmout_write+0x86>
 8004358:	480b      	ldr	r0, [pc, #44]	; (8004388 <pwmout_write+0xb0>)
 800435a:	f7fe f9fb 	bl	8002754 <error>
 800435e:	7d6b      	ldrb	r3, [r5, #21]
 8004360:	4807      	ldr	r0, [pc, #28]	; (8004380 <pwmout_write+0xa8>)
 8004362:	4621      	mov	r1, r4
 8004364:	b14b      	cbz	r3, 800437a <pwmout_write+0xa2>
 8004366:	f000 ff01 	bl	800516c <HAL_TIMEx_PWMN_Start>
 800436a:	b009      	add	sp, #36	; 0x24
 800436c:	bd30      	pop	{r4, r5, pc}
 800436e:	2408      	movs	r4, #8
 8004370:	e7ec      	b.n	800434c <pwmout_write+0x74>
 8004372:	240c      	movs	r4, #12
 8004374:	e7ea      	b.n	800434c <pwmout_write+0x74>
 8004376:	2400      	movs	r4, #0
 8004378:	e7e8      	b.n	800434c <pwmout_write+0x74>
 800437a:	f000 fed3 	bl	8005124 <HAL_TIM_PWM_Start>
 800437e:	e7f4      	b.n	800436a <pwmout_write+0x92>
 8004380:	20002260 	.word	0x20002260
 8004384:	00000000 	.word	0x00000000
 8004388:	08008351 	.word	0x08008351

0800438c <pwmout_read>:
 800438c:	68c3      	ldr	r3, [r0, #12]
 800438e:	b1ab      	cbz	r3, 80043bc <pwmout_read+0x30>
 8004390:	ee07 3a90 	vmov	s15, r3
 8004394:	edd0 6a04 	vldr	s13, [r0, #16]
 8004398:	eeb8 7a67 	vcvt.f32.u32	s14, s15
 800439c:	eef8 6a66 	vcvt.f32.u32	s13, s13
 80043a0:	eec6 7a87 	vdiv.f32	s15, s13, s14
 80043a4:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80043a8:	eef4 7a47 	vcmp.f32	s15, s14
 80043ac:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80043b0:	bfc8      	it	gt
 80043b2:	eef0 7a47 	vmovgt.f32	s15, s14
 80043b6:	ee17 0a90 	vmov	r0, s15
 80043ba:	4770      	bx	lr
 80043bc:	eddf 7a01 	vldr	s15, [pc, #4]	; 80043c4 <pwmout_read+0x38>
 80043c0:	e7f9      	b.n	80043b6 <pwmout_read+0x2a>
 80043c2:	bf00      	nop
 80043c4:	00000000 	.word	0x00000000

080043c8 <pwmout_period_us>:
 80043c8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, lr}
 80043cc:	4c4a      	ldr	r4, [pc, #296]	; (80044f8 <pwmout_period_us+0x130>)
 80043ce:	6802      	ldr	r2, [r0, #0]
 80043d0:	6022      	str	r2, [r4, #0]
 80043d2:	b086      	sub	sp, #24
 80043d4:	2300      	movs	r3, #0
 80043d6:	460e      	mov	r6, r1
 80043d8:	9300      	str	r3, [sp, #0]
 80043da:	4605      	mov	r5, r0
 80043dc:	f7ff ffd6 	bl	800438c <pwmout_read>
 80043e0:	6a11      	ldr	r1, [r2, #32]
 80043e2:	f241 1311 	movw	r3, #4369	; 0x1111
 80043e6:	4219      	tst	r1, r3
 80043e8:	4607      	mov	r7, r0
 80043ea:	d108      	bne.n	80043fe <pwmout_period_us+0x36>
 80043ec:	6a11      	ldr	r1, [r2, #32]
 80043ee:	f240 4344 	movw	r3, #1092	; 0x444
 80043f2:	4219      	tst	r1, r3
 80043f4:	bf02      	ittt	eq
 80043f6:	6813      	ldreq	r3, [r2, #0]
 80043f8:	f023 0301 	biceq.w	r3, r3, #1
 80043fc:	6013      	streq	r3, [r2, #0]
 80043fe:	4669      	mov	r1, sp
 8004400:	a801      	add	r0, sp, #4
 8004402:	f001 faaf 	bl	8005964 <HAL_RCC_GetClockConfig>
 8004406:	483d      	ldr	r0, [pc, #244]	; (80044fc <pwmout_period_us+0x134>)
 8004408:	6829      	ldr	r1, [r5, #0]
 800440a:	2300      	movs	r3, #0
 800440c:	4680      	mov	r8, r0
 800440e:	fa5f f983 	uxtb.w	r9, r3
 8004412:	3301      	adds	r3, #1
 8004414:	f850 2039 	ldr.w	r2, [r0, r9, lsl #3]
 8004418:	428a      	cmp	r2, r1
 800441a:	d1f8      	bne.n	800440e <pwmout_period_us+0x46>
 800441c:	b911      	cbnz	r1, 8004424 <pwmout_period_us+0x5c>
 800441e:	4838      	ldr	r0, [pc, #224]	; (8004500 <pwmout_period_us+0x138>)
 8004420:	f7fe f998 	bl	8002754 <error>
 8004424:	eb08 08c9 	add.w	r8, r8, r9, lsl #3
 8004428:	f898 3004 	ldrb.w	r3, [r8, #4]
 800442c:	bb53      	cbnz	r3, 8004484 <pwmout_period_us+0xbc>
 800442e:	f001 fa69 	bl	8005904 <HAL_RCC_GetPCLK1Freq>
 8004432:	9000      	str	r0, [sp, #0]
 8004434:	9804      	ldr	r0, [sp, #16]
 8004436:	9900      	ldr	r1, [sp, #0]
 8004438:	2301      	movs	r3, #1
 800443a:	60ab      	str	r3, [r5, #8]
 800443c:	4b31      	ldr	r3, [pc, #196]	; (8004504 <pwmout_period_us+0x13c>)
 800443e:	bb30      	cbnz	r0, 800448e <pwmout_period_us+0xc6>
 8004440:	fbb1 f3f3 	udiv	r3, r1, r3
 8004444:	3b01      	subs	r3, #1
 8004446:	6063      	str	r3, [r4, #4]
 8004448:	f106 3cff 	add.w	r12, r6, #4294967295	; 0xffffffff
 800444c:	4b2d      	ldr	r3, [pc, #180]	; (8004504 <pwmout_period_us+0x13c>)
 800444e:	6862      	ldr	r2, [r4, #4]
 8004450:	fbb1 fef3 	udiv	lr, r1, r3
 8004454:	ea4f 0841 	mov.w	r8, r1, lsl #1
 8004458:	2100      	movs	r1, #0
 800445a:	fbb8 f8f3 	udiv	r8, r8, r3
 800445e:	f8c4 c00c 	str.w	r12, [r4, #12]
 8004462:	4663      	mov	r3, r12
 8004464:	468a      	mov	r10, r1
 8004466:	f64f 79fe 	movw	r9, #65534	; 0xfffe
 800446a:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 800446e:	d212      	bcs.n	8004496 <pwmout_period_us+0xce>
 8004470:	f5b2 3f80 	cmp.w	r2, #65536	; 0x10000
 8004474:	d20f      	bcs.n	8004496 <pwmout_period_us+0xce>
 8004476:	f1ba 0f00 	cmp.w	r10, #0
 800447a:	d000      	beq.n	800447e <pwmout_period_us+0xb6>
 800447c:	6062      	str	r2, [r4, #4]
 800447e:	b1f1      	cbz	r1, 80044be <pwmout_period_us+0xf6>
 8004480:	60e3      	str	r3, [r4, #12]
 8004482:	e01c      	b.n	80044be <pwmout_period_us+0xf6>
 8004484:	f001 fa56 	bl	8005934 <HAL_RCC_GetPCLK2Freq>
 8004488:	9000      	str	r0, [sp, #0]
 800448a:	9805      	ldr	r0, [sp, #20]
 800448c:	e7d3      	b.n	8004436 <pwmout_period_us+0x6e>
 800448e:	004a      	lsls	r2, r1, #1
 8004490:	fbb2 f3f3 	udiv	r3, r2, r3
 8004494:	e7d6      	b.n	8004444 <pwmout_period_us+0x7c>
 8004496:	68ab      	ldr	r3, [r5, #8]
 8004498:	005b      	lsls	r3, r3, #1
 800449a:	60ab      	str	r3, [r5, #8]
 800449c:	bb30      	cbnz	r0, 80044ec <pwmout_period_us+0x124>
 800449e:	fb0e f203 	mul.w	r2, lr, r3
 80044a2:	fbbc f3f3 	udiv	r3, r12, r3
 80044a6:	454b      	cmp	r3, r9
 80044a8:	f102 32ff 	add.w	r2, r2, #4294967295	; 0xffffffff
 80044ac:	d821      	bhi.n	80044f2 <pwmout_period_us+0x12a>
 80044ae:	f5b2 3f80 	cmp.w	r2, #65536	; 0x10000
 80044b2:	d31e      	bcc.n	80044f2 <pwmout_period_us+0x12a>
 80044b4:	4814      	ldr	r0, [pc, #80]	; (8004508 <pwmout_period_us+0x140>)
 80044b6:	6062      	str	r2, [r4, #4]
 80044b8:	60e3      	str	r3, [r4, #12]
 80044ba:	f7fe f94b 	bl	8002754 <error>
 80044be:	2300      	movs	r3, #0
 80044c0:	480d      	ldr	r0, [pc, #52]	; (80044f8 <pwmout_period_us+0x130>)
 80044c2:	6123      	str	r3, [r4, #16]
 80044c4:	60a3      	str	r3, [r4, #8]
 80044c6:	f000 fd79 	bl	8004fbc <HAL_TIM_PWM_Init>
 80044ca:	b110      	cbz	r0, 80044d2 <pwmout_period_us+0x10a>
 80044cc:	480e      	ldr	r0, [pc, #56]	; (8004508 <pwmout_period_us+0x140>)
 80044ce:	f7fe f941 	bl	8002754 <error>
 80044d2:	60ee      	str	r6, [r5, #12]
 80044d4:	4639      	mov	r1, r7
 80044d6:	4628      	mov	r0, r5
 80044d8:	f7ff fefe 	bl	80042d8 <pwmout_write>
 80044dc:	6822      	ldr	r2, [r4, #0]
 80044de:	6813      	ldr	r3, [r2, #0]
 80044e0:	f043 0301 	orr.w	r3, r3, #1
 80044e4:	6013      	str	r3, [r2, #0]
 80044e6:	b006      	add	sp, #24
 80044e8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 80044ec:	fb08 f203 	mul.w	r2, r8, r3
 80044f0:	e7d7      	b.n	80044a2 <pwmout_period_us+0xda>
 80044f2:	2101      	movs	r1, #1
 80044f4:	468a      	mov	r10, r1
 80044f6:	e7b8      	b.n	800446a <pwmout_period_us+0xa2>
 80044f8:	20002260 	.word	0x20002260
 80044fc:	080083a8 	.word	0x080083a8
 8004500:	0800833c 	.word	0x0800833c
 8004504:	000f4240 	.word	0x000f4240
 8004508:	08008351 	.word	0x08008351

0800450c <pwmout_init>:
 800450c:	b530      	push	{r4, r5, lr}
 800450e:	460d      	mov	r5, r1
 8004510:	4604      	mov	r4, r0
 8004512:	b089      	sub	sp, #36	; 0x24
 8004514:	494c      	ldr	r1, [pc, #304]	; (8004648 <pwmout_init+0x13c>)
 8004516:	4628      	mov	r0, r5
 8004518:	f7fe f8aa 	bl	8002670 <pinmap_peripheral>
 800451c:	494a      	ldr	r1, [pc, #296]	; (8004648 <pwmout_init+0x13c>)
 800451e:	6020      	str	r0, [r4, #0]
 8004520:	4628      	mov	r0, r5
 8004522:	f7fe f8c1 	bl	80026a8 <pinmap_function>
 8004526:	f3c0 3304 	ubfx	r3, r0, #12, #5
 800452a:	4a48      	ldr	r2, [pc, #288]	; (800464c <pwmout_init+0x140>)
 800452c:	7523      	strb	r3, [r4, #20]
 800452e:	6823      	ldr	r3, [r4, #0]
 8004530:	f3c0 4040 	ubfx	r0, r0, #17, #1
 8004534:	4293      	cmp	r3, r2
 8004536:	7560      	strb	r0, [r4, #21]
 8004538:	f04f 0200 	mov.w	r2, #0
 800453c:	d11a      	bne.n	8004574 <pwmout_init+0x68>
 800453e:	9200      	str	r2, [sp, #0]
 8004540:	4a43      	ldr	r2, [pc, #268]	; (8004650 <pwmout_init+0x144>)
 8004542:	6c51      	ldr	r1, [r2, #68]	; 0x44
 8004544:	f041 0101 	orr.w	r1, r1, #1
 8004548:	6451      	str	r1, [r2, #68]	; 0x44
 800454a:	6c52      	ldr	r2, [r2, #68]	; 0x44
 800454c:	f002 0201 	and.w	r2, r2, #1
 8004550:	9200      	str	r2, [sp, #0]
 8004552:	9a00      	ldr	r2, [sp, #0]
 8004554:	4a3f      	ldr	r2, [pc, #252]	; (8004654 <pwmout_init+0x148>)
 8004556:	4293      	cmp	r3, r2
 8004558:	d129      	bne.n	80045ae <pwmout_init+0xa2>
 800455a:	2300      	movs	r3, #0
 800455c:	9305      	str	r3, [sp, #20]
 800455e:	4b3c      	ldr	r3, [pc, #240]	; (8004650 <pwmout_init+0x144>)
 8004560:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8004562:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 8004566:	645a      	str	r2, [r3, #68]	; 0x44
 8004568:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800456a:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 800456e:	9305      	str	r3, [sp, #20]
 8004570:	9b05      	ldr	r3, [sp, #20]
 8004572:	e058      	b.n	8004626 <pwmout_init+0x11a>
 8004574:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8004578:	d10b      	bne.n	8004592 <pwmout_init+0x86>
 800457a:	9201      	str	r2, [sp, #4]
 800457c:	4a34      	ldr	r2, [pc, #208]	; (8004650 <pwmout_init+0x144>)
 800457e:	6c11      	ldr	r1, [r2, #64]	; 0x40
 8004580:	f041 0101 	orr.w	r1, r1, #1
 8004584:	6411      	str	r1, [r2, #64]	; 0x40
 8004586:	6c12      	ldr	r2, [r2, #64]	; 0x40
 8004588:	f002 0201 	and.w	r2, r2, #1
 800458c:	9201      	str	r2, [sp, #4]
 800458e:	9a01      	ldr	r2, [sp, #4]
 8004590:	e7e0      	b.n	8004554 <pwmout_init+0x48>
 8004592:	4931      	ldr	r1, [pc, #196]	; (8004658 <pwmout_init+0x14c>)
 8004594:	428b      	cmp	r3, r1
 8004596:	d11a      	bne.n	80045ce <pwmout_init+0xc2>
 8004598:	9202      	str	r2, [sp, #8]
 800459a:	4a2d      	ldr	r2, [pc, #180]	; (8004650 <pwmout_init+0x144>)
 800459c:	6c11      	ldr	r1, [r2, #64]	; 0x40
 800459e:	f041 0102 	orr.w	r1, r1, #2
 80045a2:	6411      	str	r1, [r2, #64]	; 0x40
 80045a4:	6c12      	ldr	r2, [r2, #64]	; 0x40
 80045a6:	f002 0202 	and.w	r2, r2, #2
 80045aa:	9202      	str	r2, [sp, #8]
 80045ac:	9a02      	ldr	r2, [sp, #8]
 80045ae:	4a2b      	ldr	r2, [pc, #172]	; (800465c <pwmout_init+0x150>)
 80045b0:	4293      	cmp	r3, r2
 80045b2:	d11a      	bne.n	80045ea <pwmout_init+0xde>
 80045b4:	2300      	movs	r3, #0
 80045b6:	9306      	str	r3, [sp, #24]
 80045b8:	4b25      	ldr	r3, [pc, #148]	; (8004650 <pwmout_init+0x144>)
 80045ba:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 80045bc:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 80045c0:	645a      	str	r2, [r3, #68]	; 0x44
 80045c2:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80045c4:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80045c8:	9306      	str	r3, [sp, #24]
 80045ca:	9b06      	ldr	r3, [sp, #24]
 80045cc:	e02b      	b.n	8004626 <pwmout_init+0x11a>
 80045ce:	4924      	ldr	r1, [pc, #144]	; (8004660 <pwmout_init+0x154>)
 80045d0:	428b      	cmp	r3, r1
 80045d2:	d11a      	bne.n	800460a <pwmout_init+0xfe>
 80045d4:	9203      	str	r2, [sp, #12]
 80045d6:	4a1e      	ldr	r2, [pc, #120]	; (8004650 <pwmout_init+0x144>)
 80045d8:	6c11      	ldr	r1, [r2, #64]	; 0x40
 80045da:	f041 0104 	orr.w	r1, r1, #4
 80045de:	6411      	str	r1, [r2, #64]	; 0x40
 80045e0:	6c12      	ldr	r2, [r2, #64]	; 0x40
 80045e2:	f002 0204 	and.w	r2, r2, #4
 80045e6:	9203      	str	r2, [sp, #12]
 80045e8:	9a03      	ldr	r2, [sp, #12]
 80045ea:	4a1e      	ldr	r2, [pc, #120]	; (8004664 <pwmout_init+0x158>)
 80045ec:	4293      	cmp	r3, r2
 80045ee:	d11a      	bne.n	8004626 <pwmout_init+0x11a>
 80045f0:	2300      	movs	r3, #0
 80045f2:	9307      	str	r3, [sp, #28]
 80045f4:	4b16      	ldr	r3, [pc, #88]	; (8004650 <pwmout_init+0x144>)
 80045f6:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 80045f8:	f442 2280 	orr.w	r2, r2, #262144	; 0x40000
 80045fc:	645a      	str	r2, [r3, #68]	; 0x44
 80045fe:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8004600:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 8004604:	9307      	str	r3, [sp, #28]
 8004606:	9b07      	ldr	r3, [sp, #28]
 8004608:	e00d      	b.n	8004626 <pwmout_init+0x11a>
 800460a:	4917      	ldr	r1, [pc, #92]	; (8004668 <pwmout_init+0x15c>)
 800460c:	428b      	cmp	r3, r1
 800460e:	d1a1      	bne.n	8004554 <pwmout_init+0x48>
 8004610:	4b0f      	ldr	r3, [pc, #60]	; (8004650 <pwmout_init+0x144>)
 8004612:	9204      	str	r2, [sp, #16]
 8004614:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8004616:	f042 0208 	orr.w	r2, r2, #8
 800461a:	641a      	str	r2, [r3, #64]	; 0x40
 800461c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800461e:	f003 0308 	and.w	r3, r3, #8
 8004622:	9304      	str	r3, [sp, #16]
 8004624:	9b04      	ldr	r3, [sp, #16]
 8004626:	4908      	ldr	r1, [pc, #32]	; (8004648 <pwmout_init+0x13c>)
 8004628:	4628      	mov	r0, r5
 800462a:	f7fd ffe5 	bl	80025f8 <pinmap_pinout>
 800462e:	2300      	movs	r3, #0
 8004630:	60e3      	str	r3, [r4, #12]
 8004632:	6123      	str	r3, [r4, #16]
 8004634:	2301      	movs	r3, #1
 8004636:	80a5      	strh	r5, [r4, #4]
 8004638:	60a3      	str	r3, [r4, #8]
 800463a:	f644 6120 	movw	r1, #20000	; 0x4e20
 800463e:	4620      	mov	r0, r4
 8004640:	f7ff fec2 	bl	80043c8 <pwmout_period_us>
 8004644:	b009      	add	sp, #36	; 0x24
 8004646:	bd30      	pop	{r4, r5, pc}
 8004648:	080084c8 	.word	0x080084c8
 800464c:	40010000 	.word	0x40010000
 8004650:	40023800 	.word	0x40023800
 8004654:	40014000 	.word	0x40014000
 8004658:	40000400 	.word	0x40000400
 800465c:	40014400 	.word	0x40014400
 8004660:	40000800 	.word	0x40000800
 8004664:	40014800 	.word	0x40014800
 8004668:	40000c00 	.word	0x40000c00

0800466c <LL_GPIO_SetPinPull>:
 800466c:	b530      	push	{r4, r5, lr}
 800466e:	68c3      	ldr	r3, [r0, #12]
 8004670:	fa91 f4a1 	rbit	r4, r1
 8004674:	fab4 f484 	clz	r4, r4
 8004678:	fa91 f1a1 	rbit	r1, r1
 800467c:	2503      	movs	r5, #3
 800467e:	fab1 f181 	clz	r1, r1
 8004682:	0064      	lsls	r4, r4, #1
 8004684:	fa05 f404 	lsl.w	r4, r5, r4
 8004688:	0049      	lsls	r1, r1, #1
 800468a:	ea23 0304 	bic.w	r3, r3, r4
 800468e:	fa02 f101 	lsl.w	r1, r2, r1
 8004692:	4319      	orrs	r1, r3
 8004694:	60c1      	str	r1, [r0, #12]
 8004696:	bd30      	pop	{r4, r5, pc}

08004698 <stm_pin_PullConfig>:
 8004698:	2a01      	cmp	r2, #1
 800469a:	d002      	beq.n	80046a2 <stm_pin_PullConfig+0xa>
 800469c:	2a02      	cmp	r2, #2
 800469e:	bf18      	it	ne
 80046a0:	2200      	movne	r2, #0
 80046a2:	f7ff bfe3 	b.w	800466c <LL_GPIO_SetPinPull>
	...

080046a8 <pin_function>:
 80046a8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80046ac:	4b3f      	ldr	r3, [pc, #252]	; (80047ac <pin_function+0x104>)
 80046ae:	f000 080f 	and.w	r8, r0, #15
 80046b2:	f3c0 1003 	ubfx	r0, r0, #4, #4
 80046b6:	f853 4028 	ldr.w	r4, [r3, r8, lsl #2]
 80046ba:	460e      	mov	r6, r1
 80046bc:	f001 0507 	and.w	r5, r1, #7
 80046c0:	f7ff fcf2 	bl	80040a8 <Set_GPIO_Clock>
 80046c4:	6883      	ldr	r3, [r0, #8]
 80046c6:	fa94 f1a4 	rbit	r1, r4
 80046ca:	fab1 f181 	clz	r1, r1
 80046ce:	fa94 f2a4 	rbit	r2, r4
 80046d2:	2703      	movs	r7, #3
 80046d4:	0049      	lsls	r1, r1, #1
 80046d6:	fa07 f101 	lsl.w	r1, r7, r1
 80046da:	fab2 f282 	clz	r2, r2
 80046de:	ea23 0301 	bic.w	r3, r3, r1
 80046e2:	0052      	lsls	r2, r2, #1
 80046e4:	2102      	movs	r1, #2
 80046e6:	fa01 f202 	lsl.w	r2, r1, r2
 80046ea:	4313      	orrs	r3, r2
 80046ec:	428d      	cmp	r5, r1
 80046ee:	6083      	str	r3, [r0, #8]
 80046f0:	d028      	beq.n	8004744 <pin_function+0x9c>
 80046f2:	42bd      	cmp	r5, r7
 80046f4:	d041      	beq.n	800477a <pin_function+0xd2>
 80046f6:	2d01      	cmp	r5, #1
 80046f8:	d03f      	beq.n	800477a <pin_function+0xd2>
 80046fa:	2300      	movs	r3, #0
 80046fc:	6802      	ldr	r2, [r0, #0]
 80046fe:	fa94 f7a4 	rbit	r7, r4
 8004702:	fab7 f787 	clz	r7, r7
 8004706:	fa94 f1a4 	rbit	r1, r4
 800470a:	f04f 0e03 	mov.w	lr, #3
 800470e:	fab1 f181 	clz	r1, r1
 8004712:	007f      	lsls	r7, r7, #1
 8004714:	fa0e f707 	lsl.w	r7, lr, r7
 8004718:	0049      	lsls	r1, r1, #1
 800471a:	ea22 0207 	bic.w	r2, r2, r7
 800471e:	408b      	lsls	r3, r1
 8004720:	3d01      	subs	r5, #1
 8004722:	4313      	orrs	r3, r2
 8004724:	2d01      	cmp	r5, #1
 8004726:	6003      	str	r3, [r0, #0]
 8004728:	d805      	bhi.n	8004736 <pin_function+0x8e>
 800472a:	6843      	ldr	r3, [r0, #4]
 800472c:	0732      	lsls	r2, r6, #28
 800472e:	bf4c      	ite	mi
 8004730:	4323      	orrmi	r3, r4
 8004732:	43a3      	bicpl	r3, r4
 8004734:	6043      	str	r3, [r0, #4]
 8004736:	f3c6 1201 	ubfx	r2, r6, #4, #2
 800473a:	4621      	mov	r1, r4
 800473c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8004740:	f7ff bfaa 	b.w	8004698 <stm_pin_PullConfig>
 8004744:	f1b8 0f07 	cmp.w	r8, #7
 8004748:	f3c6 2703 	ubfx	r7, r6, #8, #4
 800474c:	d917      	bls.n	800477e <pin_function+0xd6>
 800474e:	6a42      	ldr	r2, [r0, #36]	; 0x24
 8004750:	0a23      	lsrs	r3, r4, #8
 8004752:	fa93 f1a3 	rbit	r1, r3
 8004756:	fab1 f181 	clz	r1, r1
 800475a:	fa93 f3a3 	rbit	r3, r3
 800475e:	f04f 0e0f 	mov.w	lr, #15
 8004762:	fab3 f383 	clz	r3, r3
 8004766:	0089      	lsls	r1, r1, #2
 8004768:	fa0e f101 	lsl.w	r1, lr, r1
 800476c:	009b      	lsls	r3, r3, #2
 800476e:	ea22 0201 	bic.w	r2, r2, r1
 8004772:	fa07 f303 	lsl.w	r3, r7, r3
 8004776:	4313      	orrs	r3, r2
 8004778:	6243      	str	r3, [r0, #36]	; 0x24
 800477a:	462b      	mov	r3, r5
 800477c:	e7be      	b.n	80046fc <pin_function+0x54>
 800477e:	6a02      	ldr	r2, [r0, #32]
 8004780:	fa94 f3a4 	rbit	r3, r4
 8004784:	fab3 f383 	clz	r3, r3
 8004788:	fa94 f1a4 	rbit	r1, r4
 800478c:	f04f 0e0f 	mov.w	lr, #15
 8004790:	fab1 f181 	clz	r1, r1
 8004794:	009b      	lsls	r3, r3, #2
 8004796:	fa0e f303 	lsl.w	r3, lr, r3
 800479a:	0089      	lsls	r1, r1, #2
 800479c:	ea22 0203 	bic.w	r2, r2, r3
 80047a0:	fa07 f301 	lsl.w	r3, r7, r1
 80047a4:	4313      	orrs	r3, r2
 80047a6:	6203      	str	r3, [r0, #32]
 80047a8:	e7e7      	b.n	800477a <pin_function+0xd2>
 80047aa:	bf00      	nop
 80047ac:	08008368 	.word	0x08008368

080047b0 <pin_mode>:
 80047b0:	b538      	push	{r3, r4, r5, lr}
 80047b2:	f000 020f 	and.w	r2, r0, #15
 80047b6:	4b19      	ldr	r3, [pc, #100]	; (800481c <pin_mode+0x6c>)
 80047b8:	f3c0 1003 	ubfx	r0, r0, #4, #4
 80047bc:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 80047c0:	460d      	mov	r5, r1
 80047c2:	f7ff fc71 	bl	80040a8 <Set_GPIO_Clock>
 80047c6:	fb04 f204 	mul.w	r2, r4, r4
 80047ca:	6801      	ldr	r1, [r0, #0]
 80047cc:	eb02 0342 	add.w	r3, r2, r2, lsl #1
 80047d0:	400b      	ands	r3, r1
 80047d2:	fbb3 f3f2 	udiv	r3, r3, r2
 80047d6:	3b01      	subs	r3, #1
 80047d8:	2b01      	cmp	r3, #1
 80047da:	d805      	bhi.n	80047e8 <pin_mode+0x38>
 80047dc:	1eeb      	subs	r3, r5, #3
 80047de:	2b02      	cmp	r3, #2
 80047e0:	6843      	ldr	r3, [r0, #4]
 80047e2:	d809      	bhi.n	80047f8 <pin_mode+0x48>
 80047e4:	4323      	orrs	r3, r4
 80047e6:	6043      	str	r3, [r0, #4]
 80047e8:	2d03      	cmp	r5, #3
 80047ea:	d108      	bne.n	80047fe <pin_mode+0x4e>
 80047ec:	2201      	movs	r2, #1
 80047ee:	4621      	mov	r1, r4
 80047f0:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80047f4:	f7ff bf50 	b.w	8004698 <stm_pin_PullConfig>
 80047f8:	ea23 0304 	bic.w	r3, r3, r4
 80047fc:	6043      	str	r3, [r0, #4]
 80047fe:	2d01      	cmp	r5, #1
 8004800:	d0f4      	beq.n	80047ec <pin_mode+0x3c>
 8004802:	2d05      	cmp	r5, #5
 8004804:	d001      	beq.n	800480a <pin_mode+0x5a>
 8004806:	2d02      	cmp	r5, #2
 8004808:	d101      	bne.n	800480e <pin_mode+0x5e>
 800480a:	2202      	movs	r2, #2
 800480c:	e7ef      	b.n	80047ee <pin_mode+0x3e>
 800480e:	4621      	mov	r1, r4
 8004810:	2200      	movs	r2, #0
 8004812:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8004816:	f7ff bf29 	b.w	800466c <LL_GPIO_SetPinPull>
 800481a:	bf00      	nop
 800481c:	08008368 	.word	0x08008368

08004820 <__NVIC_DisableIRQ>:
 8004820:	0943      	lsrs	r3, r0, #5
 8004822:	2201      	movs	r2, #1
 8004824:	f000 001f 	and.w	r0, r0, #31
 8004828:	fa02 f000 	lsl.w	r0, r2, r0
 800482c:	3320      	adds	r3, #32
 800482e:	4a04      	ldr	r2, [pc, #16]	; (8004840 <__NVIC_DisableIRQ+0x20>)
 8004830:	f842 0023 	str.w	r0, [r2, r3, lsl #2]
 8004834:	f3bf 8f4f 	dsb	sy
 8004838:	f3bf 8f6f 	isb	sy
 800483c:	4770      	bx	lr
 800483e:	bf00      	nop
 8004840:	e000e100 	.word	0xe000e100

08004844 <init_uart>:
 8004844:	6842      	ldr	r2, [r0, #4]
 8004846:	4916      	ldr	r1, [pc, #88]	; (80048a0 <init_uart+0x5c>)
 8004848:	0192      	lsls	r2, r2, #6
 800484a:	b510      	push	{r4, lr}
 800484c:	188b      	adds	r3, r1, r2
 800484e:	6804      	ldr	r4, [r0, #0]
 8004850:	508c      	str	r4, [r1, r2]
 8004852:	6882      	ldr	r2, [r0, #8]
 8004854:	605a      	str	r2, [r3, #4]
 8004856:	68c2      	ldr	r2, [r0, #12]
 8004858:	609a      	str	r2, [r3, #8]
 800485a:	6902      	ldr	r2, [r0, #16]
 800485c:	60da      	str	r2, [r3, #12]
 800485e:	6942      	ldr	r2, [r0, #20]
 8004860:	611a      	str	r2, [r3, #16]
 8004862:	6a02      	ldr	r2, [r0, #32]
 8004864:	619a      	str	r2, [r3, #24]
 8004866:	2200      	movs	r2, #0
 8004868:	61da      	str	r2, [r3, #28]
 800486a:	84da      	strh	r2, [r3, #38]	; 0x26
 800486c:	849a      	strh	r2, [r3, #36]	; 0x24
 800486e:	85da      	strh	r2, [r3, #46]	; 0x2e
 8004870:	859a      	strh	r2, [r3, #44]	; 0x2c
 8004872:	f9b0 201a 	ldrsh.w	r2, [r0, #26]
 8004876:	3201      	adds	r2, #1
 8004878:	d10a      	bne.n	8004890 <init_uart+0x4c>
 800487a:	2208      	movs	r2, #8
 800487c:	615a      	str	r2, [r3, #20]
 800487e:	4618      	mov	r0, r3
 8004880:	f000 fda1 	bl	80053c6 <HAL_UART_Init>
 8004884:	b158      	cbz	r0, 800489e <init_uart+0x5a>
 8004886:	4807      	ldr	r0, [pc, #28]	; (80048a4 <init_uart+0x60>)
 8004888:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800488c:	f7fd bf62 	b.w	8002754 <error>
 8004890:	f9b0 2018 	ldrsh.w	r2, [r0, #24]
 8004894:	3201      	adds	r2, #1
 8004896:	bf0c      	ite	eq
 8004898:	2204      	moveq	r2, #4
 800489a:	220c      	movne	r2, #12
 800489c:	e7ee      	b.n	800487c <init_uart+0x38>
 800489e:	bd10      	pop	{r4, pc}
 80048a0:	200022c4 	.word	0x200022c4
 80048a4:	080083f0 	.word	0x080083f0

080048a8 <uart_irq>:
 80048a8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80048aa:	4e19      	ldr	r6, [pc, #100]	; (8004910 <uart_irq+0x68>)
 80048ac:	4607      	mov	r7, r0
 80048ae:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 80048b2:	2800      	cmp	r0, #0
 80048b4:	d02a      	beq.n	800490c <uart_irq+0x64>
 80048b6:	4c17      	ldr	r4, [pc, #92]	; (8004914 <uart_irq+0x6c>)
 80048b8:	01bd      	lsls	r5, r7, #6
 80048ba:	5963      	ldr	r3, [r4, r5]
 80048bc:	681a      	ldr	r2, [r3, #0]
 80048be:	0652      	lsls	r2, r2, #25
 80048c0:	d50a      	bpl.n	80048d8 <uart_irq+0x30>
 80048c2:	68db      	ldr	r3, [r3, #12]
 80048c4:	0659      	lsls	r1, r3, #25
 80048c6:	d507      	bpl.n	80048d8 <uart_irq+0x30>
 80048c8:	4b13      	ldr	r3, [pc, #76]	; (8004918 <uart_irq+0x70>)
 80048ca:	2101      	movs	r1, #1
 80048cc:	681b      	ldr	r3, [r3, #0]
 80048ce:	4798      	blx	r3
 80048d0:	5963      	ldr	r3, [r4, r5]
 80048d2:	f06f 0240 	mvn.w	r2, #64	; 0x40
 80048d6:	601a      	str	r2, [r3, #0]
 80048d8:	5963      	ldr	r3, [r4, r5]
 80048da:	681a      	ldr	r2, [r3, #0]
 80048dc:	0692      	lsls	r2, r2, #26
 80048de:	d50c      	bpl.n	80048fa <uart_irq+0x52>
 80048e0:	68db      	ldr	r3, [r3, #12]
 80048e2:	0698      	lsls	r0, r3, #26
 80048e4:	d509      	bpl.n	80048fa <uart_irq+0x52>
 80048e6:	4b0c      	ldr	r3, [pc, #48]	; (8004918 <uart_irq+0x70>)
 80048e8:	f856 0027 	ldr.w	r0, [r6, r7, lsl #2]
 80048ec:	681b      	ldr	r3, [r3, #0]
 80048ee:	2100      	movs	r1, #0
 80048f0:	4798      	blx	r3
 80048f2:	5963      	ldr	r3, [r4, r5]
 80048f4:	f06f 0220 	mvn.w	r2, #32
 80048f8:	601a      	str	r2, [r3, #0]
 80048fa:	5963      	ldr	r3, [r4, r5]
 80048fc:	681a      	ldr	r2, [r3, #0]
 80048fe:	0711      	lsls	r1, r2, #28
 8004900:	d504      	bpl.n	800490c <uart_irq+0x64>
 8004902:	695a      	ldr	r2, [r3, #20]
 8004904:	07d2      	lsls	r2, r2, #31
 8004906:	bf44      	itt	mi
 8004908:	685b      	ldrmi	r3, [r3, #4]
 800490a:	9301      	strmi	r3, [sp, #4]
 800490c:	b003      	add	sp, #12
 800490e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8004910:	200022a0 	.word	0x200022a0
 8004914:	200022c4 	.word	0x200022c4
 8004918:	2000229c 	.word	0x2000229c

0800491c <uart1_irq>:
 800491c:	2000      	movs	r0, #0
 800491e:	f7ff bfc3 	b.w	80048a8 <uart_irq>

08004922 <uart2_irq>:
 8004922:	2001      	movs	r0, #1
 8004924:	f7ff bfc0 	b.w	80048a8 <uart_irq>

08004928 <uart6_irq>:
 8004928:	2005      	movs	r0, #5
 800492a:	f7ff bfbd 	b.w	80048a8 <uart_irq>
	...

08004930 <serial_init>:
 8004930:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004932:	460e      	mov	r6, r1
 8004934:	b085      	sub	sp, #20
 8004936:	4604      	mov	r4, r0
 8004938:	4945      	ldr	r1, [pc, #276]	; (8004a50 <serial_init+0x120>)
 800493a:	4630      	mov	r0, r6
 800493c:	4615      	mov	r5, r2
 800493e:	f7fd fe97 	bl	8002670 <pinmap_peripheral>
 8004942:	4944      	ldr	r1, [pc, #272]	; (8004a54 <serial_init+0x124>)
 8004944:	4607      	mov	r7, r0
 8004946:	4628      	mov	r0, r5
 8004948:	f7fd fe92 	bl	8002670 <pinmap_peripheral>
 800494c:	4601      	mov	r1, r0
 800494e:	4638      	mov	r0, r7
 8004950:	f7fd fe70 	bl	8002634 <pinmap_merge>
 8004954:	4b40      	ldr	r3, [pc, #256]	; (8004a58 <serial_init+0x128>)
 8004956:	6020      	str	r0, [r4, #0]
 8004958:	4298      	cmp	r0, r3
 800495a:	d01e      	beq.n	800499a <serial_init+0x6a>
 800495c:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8004960:	4298      	cmp	r0, r3
 8004962:	d05e      	beq.n	8004a22 <serial_init+0xf2>
 8004964:	f5a3 4350 	sub.w	r3, r3, #53248	; 0xd000
 8004968:	4298      	cmp	r0, r3
 800496a:	d12b      	bne.n	80049c4 <serial_init+0x94>
 800496c:	4b3b      	ldr	r3, [pc, #236]	; (8004a5c <serial_init+0x12c>)
 800496e:	6a1a      	ldr	r2, [r3, #32]
 8004970:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8004974:	621a      	str	r2, [r3, #32]
 8004976:	6a1a      	ldr	r2, [r3, #32]
 8004978:	f422 3200 	bic.w	r2, r2, #131072	; 0x20000
 800497c:	621a      	str	r2, [r3, #32]
 800497e:	2200      	movs	r2, #0
 8004980:	9202      	str	r2, [sp, #8]
 8004982:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8004984:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8004988:	641a      	str	r2, [r3, #64]	; 0x40
 800498a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800498c:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8004990:	9302      	str	r3, [sp, #8]
 8004992:	9b02      	ldr	r3, [sp, #8]
 8004994:	2301      	movs	r3, #1
 8004996:	6063      	str	r3, [r4, #4]
 8004998:	e014      	b.n	80049c4 <serial_init+0x94>
 800499a:	4b30      	ldr	r3, [pc, #192]	; (8004a5c <serial_init+0x12c>)
 800499c:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 800499e:	f042 0210 	orr.w	r2, r2, #16
 80049a2:	625a      	str	r2, [r3, #36]	; 0x24
 80049a4:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 80049a6:	2100      	movs	r1, #0
 80049a8:	f022 0210 	bic.w	r2, r2, #16
 80049ac:	625a      	str	r2, [r3, #36]	; 0x24
 80049ae:	9101      	str	r1, [sp, #4]
 80049b0:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 80049b2:	f042 0210 	orr.w	r2, r2, #16
 80049b6:	645a      	str	r2, [r3, #68]	; 0x44
 80049b8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80049ba:	6061      	str	r1, [r4, #4]
 80049bc:	f003 0310 	and.w	r3, r3, #16
 80049c0:	9301      	str	r3, [sp, #4]
 80049c2:	9b01      	ldr	r3, [sp, #4]
 80049c4:	4922      	ldr	r1, [pc, #136]	; (8004a50 <serial_init+0x120>)
 80049c6:	4630      	mov	r0, r6
 80049c8:	f7fd fe16 	bl	80025f8 <pinmap_pinout>
 80049cc:	4921      	ldr	r1, [pc, #132]	; (8004a54 <serial_init+0x124>)
 80049ce:	4628      	mov	r0, r5
 80049d0:	f7fd fe12 	bl	80025f8 <pinmap_pinout>
 80049d4:	1c72      	adds	r2, r6, #1
 80049d6:	d003      	beq.n	80049e0 <serial_init+0xb0>
 80049d8:	2101      	movs	r1, #1
 80049da:	4630      	mov	r0, r6
 80049dc:	f7ff fee8 	bl	80047b0 <pin_mode>
 80049e0:	1c6b      	adds	r3, r5, #1
 80049e2:	d003      	beq.n	80049ec <serial_init+0xbc>
 80049e4:	2101      	movs	r1, #1
 80049e6:	4628      	mov	r0, r5
 80049e8:	f7ff fee2 	bl	80047b0 <pin_mode>
 80049ec:	f44f 5316 	mov.w	r3, #9600	; 0x2580
 80049f0:	60a3      	str	r3, [r4, #8]
 80049f2:	2300      	movs	r3, #0
 80049f4:	60e3      	str	r3, [r4, #12]
 80049f6:	6123      	str	r3, [r4, #16]
 80049f8:	6163      	str	r3, [r4, #20]
 80049fa:	6223      	str	r3, [r4, #32]
 80049fc:	8326      	strh	r6, [r4, #24]
 80049fe:	8365      	strh	r5, [r4, #26]
 8004a00:	4620      	mov	r0, r4
 8004a02:	f7ff ff1f 	bl	8004844 <init_uart>
 8004a06:	6822      	ldr	r2, [r4, #0]
 8004a08:	4b15      	ldr	r3, [pc, #84]	; (8004a60 <serial_init+0x130>)
 8004a0a:	429a      	cmp	r2, r3
 8004a0c:	d107      	bne.n	8004a1e <serial_init+0xee>
 8004a0e:	4b15      	ldr	r3, [pc, #84]	; (8004a64 <serial_init+0x134>)
 8004a10:	4815      	ldr	r0, [pc, #84]	; (8004a68 <serial_init+0x138>)
 8004a12:	2201      	movs	r2, #1
 8004a14:	601a      	str	r2, [r3, #0]
 8004a16:	4621      	mov	r1, r4
 8004a18:	224c      	movs	r2, #76	; 0x4c
 8004a1a:	f002 fb31 	bl	8007080 <memcpy>
 8004a1e:	b005      	add	sp, #20
 8004a20:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8004a22:	4b0e      	ldr	r3, [pc, #56]	; (8004a5c <serial_init+0x12c>)
 8004a24:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8004a26:	f042 0220 	orr.w	r2, r2, #32
 8004a2a:	625a      	str	r2, [r3, #36]	; 0x24
 8004a2c:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8004a2e:	f022 0220 	bic.w	r2, r2, #32
 8004a32:	625a      	str	r2, [r3, #36]	; 0x24
 8004a34:	2200      	movs	r2, #0
 8004a36:	9203      	str	r2, [sp, #12]
 8004a38:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8004a3a:	f042 0220 	orr.w	r2, r2, #32
 8004a3e:	645a      	str	r2, [r3, #68]	; 0x44
 8004a40:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8004a42:	f003 0320 	and.w	r3, r3, #32
 8004a46:	9303      	str	r3, [sp, #12]
 8004a48:	9b03      	ldr	r3, [sp, #12]
 8004a4a:	2305      	movs	r3, #5
 8004a4c:	e7a3      	b.n	8004996 <serial_init+0x66>
 8004a4e:	bf00      	nop
 8004a50:	0800866c 	.word	0x0800866c
 8004a54:	08008618 	.word	0x08008618
 8004a58:	40011000 	.word	0x40011000
 8004a5c:	40023800 	.word	0x40023800
 8004a60:	40004400 	.word	0x40004400
 8004a64:	200022c0 	.word	0x200022c0
 8004a68:	200030dc 	.word	0x200030dc

08004a6c <serial_baud>:
 8004a6c:	6081      	str	r1, [r0, #8]
 8004a6e:	f7ff bee9 	b.w	8004844 <init_uart>
	...

08004a74 <serial_irq_handler>:
 8004a74:	4b03      	ldr	r3, [pc, #12]	; (8004a84 <serial_irq_handler+0x10>)
 8004a76:	6019      	str	r1, [r3, #0]
 8004a78:	6841      	ldr	r1, [r0, #4]
 8004a7a:	4b03      	ldr	r3, [pc, #12]	; (8004a88 <serial_irq_handler+0x14>)
 8004a7c:	f843 2021 	str.w	r2, [r3, r1, lsl #2]
 8004a80:	4770      	bx	lr
 8004a82:	bf00      	nop
 8004a84:	2000229c 	.word	0x2000229c
 8004a88:	200022a0 	.word	0x200022a0

08004a8c <serial_irq_set>:
 8004a8c:	b538      	push	{r3, r4, r5, lr}
 8004a8e:	6843      	ldr	r3, [r0, #4]
 8004a90:	2b01      	cmp	r3, #1
 8004a92:	460d      	mov	r5, r1
 8004a94:	d01a      	beq.n	8004acc <serial_irq_set+0x40>
 8004a96:	2b05      	cmp	r3, #5
 8004a98:	d01b      	beq.n	8004ad2 <serial_irq_set+0x46>
 8004a9a:	b9eb      	cbnz	r3, 8004ad8 <serial_irq_set+0x4c>
 8004a9c:	491c      	ldr	r1, [pc, #112]	; (8004b10 <serial_irq_set+0x84>)
 8004a9e:	2425      	movs	r4, #37	; 0x25
 8004aa0:	481c      	ldr	r0, [pc, #112]	; (8004b14 <serial_irq_set+0x88>)
 8004aa2:	019b      	lsls	r3, r3, #6
 8004aa4:	b1f2      	cbz	r2, 8004ae4 <serial_irq_set+0x58>
 8004aa6:	58c2      	ldr	r2, [r0, r3]
 8004aa8:	68d3      	ldr	r3, [r2, #12]
 8004aaa:	b9c5      	cbnz	r5, 8004ade <serial_irq_set+0x52>
 8004aac:	f043 0320 	orr.w	r3, r3, #32
 8004ab0:	60d3      	str	r3, [r2, #12]
 8004ab2:	4620      	mov	r0, r4
 8004ab4:	f000 f986 	bl	8004dc4 <__NVIC_SetVector>
 8004ab8:	0962      	lsrs	r2, r4, #5
 8004aba:	2301      	movs	r3, #1
 8004abc:	f004 0407 	and.w	r4, r4, #7
 8004ac0:	fa03 f404 	lsl.w	r4, r3, r4
 8004ac4:	4b14      	ldr	r3, [pc, #80]	; (8004b18 <serial_irq_set+0x8c>)
 8004ac6:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 8004aca:	bd38      	pop	{r3, r4, r5, pc}
 8004acc:	4913      	ldr	r1, [pc, #76]	; (8004b1c <serial_irq_set+0x90>)
 8004ace:	2426      	movs	r4, #38	; 0x26
 8004ad0:	e7e6      	b.n	8004aa0 <serial_irq_set+0x14>
 8004ad2:	4913      	ldr	r1, [pc, #76]	; (8004b20 <serial_irq_set+0x94>)
 8004ad4:	2447      	movs	r4, #71	; 0x47
 8004ad6:	e7e3      	b.n	8004aa0 <serial_irq_set+0x14>
 8004ad8:	2100      	movs	r1, #0
 8004ada:	460c      	mov	r4, r1
 8004adc:	e7e0      	b.n	8004aa0 <serial_irq_set+0x14>
 8004ade:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8004ae2:	e7e5      	b.n	8004ab0 <serial_irq_set+0x24>
 8004ae4:	58c3      	ldr	r3, [r0, r3]
 8004ae6:	68da      	ldr	r2, [r3, #12]
 8004ae8:	b935      	cbnz	r5, 8004af8 <serial_irq_set+0x6c>
 8004aea:	f022 0220 	bic.w	r2, r2, #32
 8004aee:	60da      	str	r2, [r3, #12]
 8004af0:	68db      	ldr	r3, [r3, #12]
 8004af2:	061a      	lsls	r2, r3, #24
 8004af4:	d506      	bpl.n	8004b04 <serial_irq_set+0x78>
 8004af6:	bd38      	pop	{r3, r4, r5, pc}
 8004af8:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8004afc:	60da      	str	r2, [r3, #12]
 8004afe:	68db      	ldr	r3, [r3, #12]
 8004b00:	069b      	lsls	r3, r3, #26
 8004b02:	d404      	bmi.n	8004b0e <serial_irq_set+0x82>
 8004b04:	4620      	mov	r0, r4
 8004b06:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8004b0a:	f7ff be89 	b.w	8004820 <__NVIC_DisableIRQ>
 8004b0e:	bd38      	pop	{r3, r4, r5, pc}
 8004b10:	0800491d 	.word	0x0800491d
 8004b14:	200022c4 	.word	0x200022c4
 8004b18:	e000e100 	.word	0xe000e100
 8004b1c:	08004923 	.word	0x08004923
 8004b20:	08004929 	.word	0x08004929

08004b24 <serial_readable>:
 8004b24:	6843      	ldr	r3, [r0, #4]
 8004b26:	4a03      	ldr	r2, [pc, #12]	; (8004b34 <serial_readable+0x10>)
 8004b28:	019b      	lsls	r3, r3, #6
 8004b2a:	58d3      	ldr	r3, [r2, r3]
 8004b2c:	6818      	ldr	r0, [r3, #0]
 8004b2e:	f3c0 1040 	ubfx	r0, r0, #5, #1
 8004b32:	4770      	bx	lr
 8004b34:	200022c4 	.word	0x200022c4

08004b38 <serial_getc>:
 8004b38:	6841      	ldr	r1, [r0, #4]
 8004b3a:	b510      	push	{r4, lr}
 8004b3c:	4604      	mov	r4, r0
 8004b3e:	4620      	mov	r0, r4
 8004b40:	f7ff fff0 	bl	8004b24 <serial_readable>
 8004b44:	2800      	cmp	r0, #0
 8004b46:	d0fa      	beq.n	8004b3e <serial_getc+0x6>
 8004b48:	0189      	lsls	r1, r1, #6
 8004b4a:	4b03      	ldr	r3, [pc, #12]	; (8004b58 <serial_getc+0x20>)
 8004b4c:	585b      	ldr	r3, [r3, r1]
 8004b4e:	6858      	ldr	r0, [r3, #4]
 8004b50:	f3c0 0008 	ubfx	r0, r0, #0, #9
 8004b54:	bd10      	pop	{r4, pc}
 8004b56:	bf00      	nop
 8004b58:	200022c4 	.word	0x200022c4

08004b5c <serial_writable>:
 8004b5c:	6843      	ldr	r3, [r0, #4]
 8004b5e:	4a03      	ldr	r2, [pc, #12]	; (8004b6c <serial_writable+0x10>)
 8004b60:	019b      	lsls	r3, r3, #6
 8004b62:	58d3      	ldr	r3, [r2, r3]
 8004b64:	6818      	ldr	r0, [r3, #0]
 8004b66:	f3c0 10c0 	ubfx	r0, r0, #7, #1
 8004b6a:	4770      	bx	lr
 8004b6c:	200022c4 	.word	0x200022c4

08004b70 <serial_putc>:
 8004b70:	b538      	push	{r3, r4, r5, lr}
 8004b72:	6844      	ldr	r4, [r0, #4]
 8004b74:	4605      	mov	r5, r0
 8004b76:	4628      	mov	r0, r5
 8004b78:	f7ff fff0 	bl	8004b5c <serial_writable>
 8004b7c:	2800      	cmp	r0, #0
 8004b7e:	d0fa      	beq.n	8004b76 <serial_putc+0x6>
 8004b80:	01a4      	lsls	r4, r4, #6
 8004b82:	4b03      	ldr	r3, [pc, #12]	; (8004b90 <serial_putc+0x20>)
 8004b84:	591b      	ldr	r3, [r3, r4]
 8004b86:	f3c1 0108 	ubfx	r1, r1, #0, #9
 8004b8a:	6059      	str	r1, [r3, #4]
 8004b8c:	bd38      	pop	{r3, r4, r5, pc}
 8004b8e:	bf00      	nop
 8004b90:	200022c4 	.word	0x200022c4

08004b94 <mbed_sdk_init>:
 8004b94:	b508      	push	{r3, lr}
 8004b96:	f000 f819 	bl	8004bcc <SystemCoreClockUpdate>
 8004b9a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8004b9e:	f000 bf01 	b.w	80059a4 <HAL_Init>

08004ba2 <SetSysClock_PLL_HSE.part.0>:
 8004ba2:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8004ba4:	230f      	movs	r3, #15
 8004ba6:	9301      	str	r3, [sp, #4]
 8004ba8:	2302      	movs	r3, #2
 8004baa:	9302      	str	r3, [sp, #8]
 8004bac:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 8004bb0:	2300      	movs	r3, #0
 8004bb2:	2103      	movs	r1, #3
 8004bb4:	a801      	add	r0, sp, #4
 8004bb6:	9303      	str	r3, [sp, #12]
 8004bb8:	9204      	str	r2, [sp, #16]
 8004bba:	9305      	str	r3, [sp, #20]
 8004bbc:	f000 fdec 	bl	8005798 <HAL_RCC_ClockConfig>
 8004bc0:	fab0 f080 	clz	r0, r0
 8004bc4:	0940      	lsrs	r0, r0, #5
 8004bc6:	b007      	add	sp, #28
 8004bc8:	f85d fb04 	ldr.w	pc, [sp], #4

08004bcc <SystemCoreClockUpdate>:
 8004bcc:	4a17      	ldr	r2, [pc, #92]	; (8004c2c <SystemCoreClockUpdate+0x60>)
 8004bce:	4918      	ldr	r1, [pc, #96]	; (8004c30 <SystemCoreClockUpdate+0x64>)
 8004bd0:	6893      	ldr	r3, [r2, #8]
 8004bd2:	f003 030c 	and.w	r3, r3, #12
 8004bd6:	2b04      	cmp	r3, #4
 8004bd8:	b510      	push	{r4, lr}
 8004bda:	d00d      	beq.n	8004bf8 <SystemCoreClockUpdate+0x2c>
 8004bdc:	2b08      	cmp	r3, #8
 8004bde:	d00d      	beq.n	8004bfc <SystemCoreClockUpdate+0x30>
 8004be0:	4b14      	ldr	r3, [pc, #80]	; (8004c34 <SystemCoreClockUpdate+0x68>)
 8004be2:	600b      	str	r3, [r1, #0]
 8004be4:	4b11      	ldr	r3, [pc, #68]	; (8004c2c <SystemCoreClockUpdate+0x60>)
 8004be6:	4a14      	ldr	r2, [pc, #80]	; (8004c38 <SystemCoreClockUpdate+0x6c>)
 8004be8:	689b      	ldr	r3, [r3, #8]
 8004bea:	f3c3 1303 	ubfx	r3, r3, #4, #4
 8004bee:	5cd2      	ldrb	r2, [r2, r3]
 8004bf0:	680b      	ldr	r3, [r1, #0]
 8004bf2:	40d3      	lsrs	r3, r2
 8004bf4:	600b      	str	r3, [r1, #0]
 8004bf6:	bd10      	pop	{r4, pc}
 8004bf8:	4b10      	ldr	r3, [pc, #64]	; (8004c3c <SystemCoreClockUpdate+0x70>)
 8004bfa:	e7f2      	b.n	8004be2 <SystemCoreClockUpdate+0x16>
 8004bfc:	6854      	ldr	r4, [r2, #4]
 8004bfe:	6850      	ldr	r0, [r2, #4]
 8004c00:	6852      	ldr	r2, [r2, #4]
 8004c02:	0263      	lsls	r3, r4, #9
 8004c04:	f3c2 1288 	ubfx	r2, r2, #6, #9
 8004c08:	f000 003f 	and.w	r0, r0, #63	; 0x3f
 8004c0c:	bf4c      	ite	mi
 8004c0e:	4b0b      	ldrmi	r3, [pc, #44]	; (8004c3c <SystemCoreClockUpdate+0x70>)
 8004c10:	4b08      	ldrpl	r3, [pc, #32]	; (8004c34 <SystemCoreClockUpdate+0x68>)
 8004c12:	fbb3 f3f0 	udiv	r3, r3, r0
 8004c16:	4353      	muls	r3, r2
 8004c18:	4a04      	ldr	r2, [pc, #16]	; (8004c2c <SystemCoreClockUpdate+0x60>)
 8004c1a:	6852      	ldr	r2, [r2, #4]
 8004c1c:	f3c2 4201 	ubfx	r2, r2, #16, #2
 8004c20:	3201      	adds	r2, #1
 8004c22:	0052      	lsls	r2, r2, #1
 8004c24:	fbb3 f3f2 	udiv	r3, r3, r2
 8004c28:	e7db      	b.n	8004be2 <SystemCoreClockUpdate+0x16>
 8004c2a:	bf00      	nop
 8004c2c:	40023800 	.word	0x40023800
 8004c30:	200001b4 	.word	0x200001b4
 8004c34:	00f42400 	.word	0x00f42400
 8004c38:	080086c0 	.word	0x080086c0
 8004c3c:	007a1200 	.word	0x007a1200

08004c40 <SetSysClock_PLL_HSE>:
 8004c40:	b500      	push	{lr}
 8004c42:	b08f      	sub	sp, #60	; 0x3c
 8004c44:	4b1b      	ldr	r3, [pc, #108]	; (8004cb4 <SetSysClock_PLL_HSE+0x74>)
 8004c46:	2100      	movs	r1, #0
 8004c48:	9100      	str	r1, [sp, #0]
 8004c4a:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8004c4c:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8004c50:	641a      	str	r2, [r3, #64]	; 0x40
 8004c52:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004c54:	4a18      	ldr	r2, [pc, #96]	; (8004cb8 <SetSysClock_PLL_HSE+0x78>)
 8004c56:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8004c5a:	9300      	str	r3, [sp, #0]
 8004c5c:	9b00      	ldr	r3, [sp, #0]
 8004c5e:	9101      	str	r1, [sp, #4]
 8004c60:	6813      	ldr	r3, [r2, #0]
 8004c62:	f423 4340 	bic.w	r3, r3, #49152	; 0xc000
 8004c66:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8004c6a:	6013      	str	r3, [r2, #0]
 8004c6c:	6813      	ldr	r3, [r2, #0]
 8004c6e:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 8004c72:	9301      	str	r3, [sp, #4]
 8004c74:	9b01      	ldr	r3, [sp, #4]
 8004c76:	2301      	movs	r3, #1
 8004c78:	9302      	str	r3, [sp, #8]
 8004c7a:	b9b0      	cbnz	r0, 8004caa <SetSysClock_PLL_HSE+0x6a>
 8004c7c:	9303      	str	r3, [sp, #12]
 8004c7e:	2302      	movs	r3, #2
 8004c80:	9308      	str	r3, [sp, #32]
 8004c82:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
 8004c86:	9309      	str	r3, [sp, #36]	; 0x24
 8004c88:	2304      	movs	r3, #4
 8004c8a:	930a      	str	r3, [sp, #40]	; 0x28
 8004c8c:	930c      	str	r3, [sp, #48]	; 0x30
 8004c8e:	2308      	movs	r3, #8
 8004c90:	22c0      	movs	r2, #192	; 0xc0
 8004c92:	eb0d 0003 	add.w	r0, sp, r3
 8004c96:	920b      	str	r2, [sp, #44]	; 0x2c
 8004c98:	930d      	str	r3, [sp, #52]	; 0x34
 8004c9a:	f000 fbd3 	bl	8005444 <HAL_RCC_OscConfig>
 8004c9e:	b930      	cbnz	r0, 8004cae <SetSysClock_PLL_HSE+0x6e>
 8004ca0:	f7ff ff7f 	bl	8004ba2 <SetSysClock_PLL_HSE.part.0>
 8004ca4:	b00f      	add	sp, #60	; 0x3c
 8004ca6:	f85d fb04 	ldr.w	pc, [sp], #4
 8004caa:	2305      	movs	r3, #5
 8004cac:	e7e6      	b.n	8004c7c <SetSysClock_PLL_HSE+0x3c>
 8004cae:	2000      	movs	r0, #0
 8004cb0:	e7f8      	b.n	8004ca4 <SetSysClock_PLL_HSE+0x64>
 8004cb2:	bf00      	nop
 8004cb4:	40023800 	.word	0x40023800
 8004cb8:	40007000 	.word	0x40007000

08004cbc <SetSysClock_PLL_HSI>:
 8004cbc:	b510      	push	{r4, lr}
 8004cbe:	b08e      	sub	sp, #56	; 0x38
 8004cc0:	2400      	movs	r4, #0
 8004cc2:	4b1a      	ldr	r3, [pc, #104]	; (8004d2c <SetSysClock_PLL_HSI+0x70>)
 8004cc4:	9400      	str	r4, [sp, #0]
 8004cc6:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8004cc8:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8004ccc:	641a      	str	r2, [r3, #64]	; 0x40
 8004cce:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004cd0:	4a17      	ldr	r2, [pc, #92]	; (8004d30 <SetSysClock_PLL_HSI+0x74>)
 8004cd2:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8004cd6:	9300      	str	r3, [sp, #0]
 8004cd8:	9b00      	ldr	r3, [sp, #0]
 8004cda:	9401      	str	r4, [sp, #4]
 8004cdc:	6813      	ldr	r3, [r2, #0]
 8004cde:	f423 4340 	bic.w	r3, r3, #49152	; 0xc000
 8004ce2:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8004ce6:	6013      	str	r3, [r2, #0]
 8004ce8:	6813      	ldr	r3, [r2, #0]
 8004cea:	9403      	str	r4, [sp, #12]
 8004cec:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 8004cf0:	9301      	str	r3, [sp, #4]
 8004cf2:	9b01      	ldr	r3, [sp, #4]
 8004cf4:	9409      	str	r4, [sp, #36]	; 0x24
 8004cf6:	2303      	movs	r3, #3
 8004cf8:	9302      	str	r3, [sp, #8]
 8004cfa:	2301      	movs	r3, #1
 8004cfc:	9305      	str	r3, [sp, #20]
 8004cfe:	2310      	movs	r3, #16
 8004d00:	9306      	str	r3, [sp, #24]
 8004d02:	2302      	movs	r3, #2
 8004d04:	22c0      	movs	r2, #192	; 0xc0
 8004d06:	9308      	str	r3, [sp, #32]
 8004d08:	2308      	movs	r3, #8
 8004d0a:	920b      	str	r2, [sp, #44]	; 0x2c
 8004d0c:	eb0d 0003 	add.w	r0, sp, r3
 8004d10:	2204      	movs	r2, #4
 8004d12:	930a      	str	r3, [sp, #40]	; 0x28
 8004d14:	920c      	str	r2, [sp, #48]	; 0x30
 8004d16:	930d      	str	r3, [sp, #52]	; 0x34
 8004d18:	f000 fb94 	bl	8005444 <HAL_RCC_OscConfig>
 8004d1c:	b918      	cbnz	r0, 8004d26 <SetSysClock_PLL_HSI+0x6a>
 8004d1e:	f7ff ff40 	bl	8004ba2 <SetSysClock_PLL_HSE.part.0>
 8004d22:	b00e      	add	sp, #56	; 0x38
 8004d24:	bd10      	pop	{r4, pc}
 8004d26:	4620      	mov	r0, r4
 8004d28:	e7fb      	b.n	8004d22 <SetSysClock_PLL_HSI+0x66>
 8004d2a:	bf00      	nop
 8004d2c:	40023800 	.word	0x40023800
 8004d30:	40007000 	.word	0x40007000

08004d34 <SetSysClock>:
 8004d34:	b508      	push	{r3, lr}
 8004d36:	2001      	movs	r0, #1
 8004d38:	f7ff ff82 	bl	8004c40 <SetSysClock_PLL_HSE>
 8004d3c:	b930      	cbnz	r0, 8004d4c <SetSysClock+0x18>
 8004d3e:	f7ff ff7f 	bl	8004c40 <SetSysClock_PLL_HSE>
 8004d42:	b918      	cbnz	r0, 8004d4c <SetSysClock+0x18>
 8004d44:	f7ff ffba 	bl	8004cbc <SetSysClock_PLL_HSI>
 8004d48:	b900      	cbnz	r0, 8004d4c <SetSysClock+0x18>
 8004d4a:	e7fe      	b.n	8004d4a <SetSysClock+0x16>
 8004d4c:	bd08      	pop	{r3, pc}
	...

08004d50 <SystemInit>:
 8004d50:	4a17      	ldr	r2, [pc, #92]	; (8004db0 <SystemInit+0x60>)
 8004d52:	f8d2 3088 	ldr.w	r3, [r2, #136]	; 0x88
 8004d56:	b510      	push	{r4, lr}
 8004d58:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8004d5c:	4c15      	ldr	r4, [pc, #84]	; (8004db4 <SystemInit+0x64>)
 8004d5e:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
 8004d62:	6823      	ldr	r3, [r4, #0]
 8004d64:	2100      	movs	r1, #0
 8004d66:	f043 0301 	orr.w	r3, r3, #1
 8004d6a:	6023      	str	r3, [r4, #0]
 8004d6c:	60a1      	str	r1, [r4, #8]
 8004d6e:	6823      	ldr	r3, [r4, #0]
 8004d70:	f023 7384 	bic.w	r3, r3, #17301504	; 0x1080000
 8004d74:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8004d78:	6023      	str	r3, [r4, #0]
 8004d7a:	4b0f      	ldr	r3, [pc, #60]	; (8004db8 <SystemInit+0x68>)
 8004d7c:	6063      	str	r3, [r4, #4]
 8004d7e:	6823      	ldr	r3, [r4, #0]
 8004d80:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8004d84:	6023      	str	r3, [r4, #0]
 8004d86:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
 8004d8a:	60e1      	str	r1, [r4, #12]
 8004d8c:	6093      	str	r3, [r2, #8]
 8004d8e:	4b0b      	ldr	r3, [pc, #44]	; (8004dbc <SystemInit+0x6c>)
 8004d90:	4a0b      	ldr	r2, [pc, #44]	; (8004dc0 <SystemInit+0x70>)
 8004d92:	601a      	str	r2, [r3, #0]
 8004d94:	f000 fe06 	bl	80059a4 <HAL_Init>
 8004d98:	f7ff ffcc 	bl	8004d34 <SetSysClock>
 8004d9c:	6a23      	ldr	r3, [r4, #32]
 8004d9e:	f043 0308 	orr.w	r3, r3, #8
 8004da2:	6223      	str	r3, [r4, #32]
 8004da4:	6a23      	ldr	r3, [r4, #32]
 8004da6:	f023 0308 	bic.w	r3, r3, #8
 8004daa:	6223      	str	r3, [r4, #32]
 8004dac:	bd10      	pop	{r4, pc}
 8004dae:	bf00      	nop
 8004db0:	e000ed00 	.word	0xe000ed00
 8004db4:	40023800 	.word	0x40023800
 8004db8:	24003010 	.word	0x24003010
 8004dbc:	200001b4 	.word	0x200001b4
 8004dc0:	00f42400 	.word	0x00f42400

08004dc4 <__NVIC_SetVector>:
 8004dc4:	b530      	push	{r4, r5, lr}
 8004dc6:	4c0c      	ldr	r4, [pc, #48]	; (8004df8 <__NVIC_SetVector+0x34>)
 8004dc8:	68a2      	ldr	r2, [r4, #8]
 8004dca:	68a4      	ldr	r4, [r4, #8]
 8004dcc:	f1b4 6f00 	cmp.w	r4, #134217728	; 0x8000000
 8004dd0:	4613      	mov	r3, r2
 8004dd2:	d10c      	bne.n	8004dee <__NVIC_SetVector+0x2a>
 8004dd4:	1f13      	subs	r3, r2, #4
 8004dd6:	4c09      	ldr	r4, [pc, #36]	; (8004dfc <__NVIC_SetVector+0x38>)
 8004dd8:	4a09      	ldr	r2, [pc, #36]	; (8004e00 <__NVIC_SetVector+0x3c>)
 8004dda:	f853 5f04 	ldr.w	r5, [r3, #4]!
 8004dde:	f842 5f04 	str.w	r5, [r2, #4]!
 8004de2:	42a2      	cmp	r2, r4
 8004de4:	d1f9      	bne.n	8004dda <__NVIC_SetVector+0x16>
 8004de6:	4a04      	ldr	r2, [pc, #16]	; (8004df8 <__NVIC_SetVector+0x34>)
 8004de8:	f04f 5300 	mov.w	r3, #536870912	; 0x20000000
 8004dec:	6093      	str	r3, [r2, #8]
 8004dee:	3010      	adds	r0, #16
 8004df0:	f843 1020 	str.w	r1, [r3, r0, lsl #2]
 8004df4:	bd30      	pop	{r4, r5, pc}
 8004df6:	bf00      	nop
 8004df8:	e000ed00 	.word	0xe000ed00
 8004dfc:	20000194 	.word	0x20000194
 8004e00:	1ffffffc 	.word	0x1ffffffc

08004e04 <TIM_OC1_SetConfig>:
 8004e04:	6a03      	ldr	r3, [r0, #32]
 8004e06:	f023 0301 	bic.w	r3, r3, #1
 8004e0a:	6203      	str	r3, [r0, #32]
 8004e0c:	6a03      	ldr	r3, [r0, #32]
 8004e0e:	b570      	push	{r4, r5, r6, lr}
 8004e10:	6844      	ldr	r4, [r0, #4]
 8004e12:	6982      	ldr	r2, [r0, #24]
 8004e14:	680d      	ldr	r5, [r1, #0]
 8004e16:	f022 0273 	bic.w	r2, r2, #115	; 0x73
 8004e1a:	432a      	orrs	r2, r5
 8004e1c:	688d      	ldr	r5, [r1, #8]
 8004e1e:	f023 0302 	bic.w	r3, r3, #2
 8004e22:	432b      	orrs	r3, r5
 8004e24:	4d0a      	ldr	r5, [pc, #40]	; (8004e50 <TIM_OC1_SetConfig+0x4c>)
 8004e26:	42a8      	cmp	r0, r5
 8004e28:	d10b      	bne.n	8004e42 <TIM_OC1_SetConfig+0x3e>
 8004e2a:	68cd      	ldr	r5, [r1, #12]
 8004e2c:	698e      	ldr	r6, [r1, #24]
 8004e2e:	f023 0308 	bic.w	r3, r3, #8
 8004e32:	432b      	orrs	r3, r5
 8004e34:	694d      	ldr	r5, [r1, #20]
 8004e36:	f424 7440 	bic.w	r4, r4, #768	; 0x300
 8004e3a:	4335      	orrs	r5, r6
 8004e3c:	f023 0304 	bic.w	r3, r3, #4
 8004e40:	432c      	orrs	r4, r5
 8004e42:	6044      	str	r4, [r0, #4]
 8004e44:	6182      	str	r2, [r0, #24]
 8004e46:	684a      	ldr	r2, [r1, #4]
 8004e48:	6342      	str	r2, [r0, #52]	; 0x34
 8004e4a:	6203      	str	r3, [r0, #32]
 8004e4c:	bd70      	pop	{r4, r5, r6, pc}
 8004e4e:	bf00      	nop
 8004e50:	40010000 	.word	0x40010000

08004e54 <TIM_OC3_SetConfig>:
 8004e54:	6a03      	ldr	r3, [r0, #32]
 8004e56:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8004e5a:	6203      	str	r3, [r0, #32]
 8004e5c:	6a03      	ldr	r3, [r0, #32]
 8004e5e:	b570      	push	{r4, r5, r6, lr}
 8004e60:	6844      	ldr	r4, [r0, #4]
 8004e62:	69c2      	ldr	r2, [r0, #28]
 8004e64:	680d      	ldr	r5, [r1, #0]
 8004e66:	f022 0273 	bic.w	r2, r2, #115	; 0x73
 8004e6a:	432a      	orrs	r2, r5
 8004e6c:	688d      	ldr	r5, [r1, #8]
 8004e6e:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 8004e72:	ea43 2305 	orr.w	r3, r3, r5, lsl #8
 8004e76:	4d0b      	ldr	r5, [pc, #44]	; (8004ea4 <TIM_OC3_SetConfig+0x50>)
 8004e78:	42a8      	cmp	r0, r5
 8004e7a:	d10d      	bne.n	8004e98 <TIM_OC3_SetConfig+0x44>
 8004e7c:	68cd      	ldr	r5, [r1, #12]
 8004e7e:	698e      	ldr	r6, [r1, #24]
 8004e80:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8004e84:	ea43 2305 	orr.w	r3, r3, r5, lsl #8
 8004e88:	694d      	ldr	r5, [r1, #20]
 8004e8a:	f424 5440 	bic.w	r4, r4, #12288	; 0x3000
 8004e8e:	4335      	orrs	r5, r6
 8004e90:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 8004e94:	ea44 1405 	orr.w	r4, r4, r5, lsl #4
 8004e98:	6044      	str	r4, [r0, #4]
 8004e9a:	61c2      	str	r2, [r0, #28]
 8004e9c:	684a      	ldr	r2, [r1, #4]
 8004e9e:	63c2      	str	r2, [r0, #60]	; 0x3c
 8004ea0:	6203      	str	r3, [r0, #32]
 8004ea2:	bd70      	pop	{r4, r5, r6, pc}
 8004ea4:	40010000 	.word	0x40010000

08004ea8 <TIM_OC4_SetConfig>:
 8004ea8:	6a03      	ldr	r3, [r0, #32]
 8004eaa:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8004eae:	6203      	str	r3, [r0, #32]
 8004eb0:	6a03      	ldr	r3, [r0, #32]
 8004eb2:	b530      	push	{r4, r5, lr}
 8004eb4:	6844      	ldr	r4, [r0, #4]
 8004eb6:	69c2      	ldr	r2, [r0, #28]
 8004eb8:	680d      	ldr	r5, [r1, #0]
 8004eba:	f422 42e6 	bic.w	r2, r2, #29440	; 0x7300
 8004ebe:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
 8004ec2:	688d      	ldr	r5, [r1, #8]
 8004ec4:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8004ec8:	ea43 3305 	orr.w	r3, r3, r5, lsl #12
 8004ecc:	4d06      	ldr	r5, [pc, #24]	; (8004ee8 <TIM_OC4_SetConfig+0x40>)
 8004ece:	42a8      	cmp	r0, r5
 8004ed0:	bf02      	ittt	eq
 8004ed2:	694d      	ldreq	r5, [r1, #20]
 8004ed4:	f424 4480 	biceq.w	r4, r4, #16384	; 0x4000
 8004ed8:	ea44 1485 	orreq.w	r4, r4, r5, lsl #6
 8004edc:	6044      	str	r4, [r0, #4]
 8004ede:	61c2      	str	r2, [r0, #28]
 8004ee0:	684a      	ldr	r2, [r1, #4]
 8004ee2:	6402      	str	r2, [r0, #64]	; 0x40
 8004ee4:	6203      	str	r3, [r0, #32]
 8004ee6:	bd30      	pop	{r4, r5, pc}
 8004ee8:	40010000 	.word	0x40010000

08004eec <HAL_TIM_OC_MspInit>:
 8004eec:	4770      	bx	lr

08004eee <HAL_TIM_PWM_MspInit>:
 8004eee:	4770      	bx	lr

08004ef0 <TIM_Base_SetConfig>:
 8004ef0:	4a22      	ldr	r2, [pc, #136]	; (8004f7c <TIM_Base_SetConfig+0x8c>)
 8004ef2:	6803      	ldr	r3, [r0, #0]
 8004ef4:	4290      	cmp	r0, r2
 8004ef6:	d00e      	beq.n	8004f16 <TIM_Base_SetConfig+0x26>
 8004ef8:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 8004efc:	d00b      	beq.n	8004f16 <TIM_Base_SetConfig+0x26>
 8004efe:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 8004f02:	4290      	cmp	r0, r2
 8004f04:	d007      	beq.n	8004f16 <TIM_Base_SetConfig+0x26>
 8004f06:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8004f0a:	4290      	cmp	r0, r2
 8004f0c:	d003      	beq.n	8004f16 <TIM_Base_SetConfig+0x26>
 8004f0e:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8004f12:	4290      	cmp	r0, r2
 8004f14:	d119      	bne.n	8004f4a <TIM_Base_SetConfig+0x5a>
 8004f16:	684a      	ldr	r2, [r1, #4]
 8004f18:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8004f1c:	4313      	orrs	r3, r2
 8004f1e:	4a17      	ldr	r2, [pc, #92]	; (8004f7c <TIM_Base_SetConfig+0x8c>)
 8004f20:	4290      	cmp	r0, r2
 8004f22:	d104      	bne.n	8004f2e <TIM_Base_SetConfig+0x3e>
 8004f24:	68ca      	ldr	r2, [r1, #12]
 8004f26:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8004f2a:	4313      	orrs	r3, r2
 8004f2c:	e018      	b.n	8004f60 <TIM_Base_SetConfig+0x70>
 8004f2e:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 8004f32:	d0f7      	beq.n	8004f24 <TIM_Base_SetConfig+0x34>
 8004f34:	4a12      	ldr	r2, [pc, #72]	; (8004f80 <TIM_Base_SetConfig+0x90>)
 8004f36:	4290      	cmp	r0, r2
 8004f38:	d0f4      	beq.n	8004f24 <TIM_Base_SetConfig+0x34>
 8004f3a:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8004f3e:	4290      	cmp	r0, r2
 8004f40:	d0f0      	beq.n	8004f24 <TIM_Base_SetConfig+0x34>
 8004f42:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8004f46:	4290      	cmp	r0, r2
 8004f48:	d0ec      	beq.n	8004f24 <TIM_Base_SetConfig+0x34>
 8004f4a:	4a0e      	ldr	r2, [pc, #56]	; (8004f84 <TIM_Base_SetConfig+0x94>)
 8004f4c:	4290      	cmp	r0, r2
 8004f4e:	d0e9      	beq.n	8004f24 <TIM_Base_SetConfig+0x34>
 8004f50:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8004f54:	4290      	cmp	r0, r2
 8004f56:	d0e5      	beq.n	8004f24 <TIM_Base_SetConfig+0x34>
 8004f58:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8004f5c:	4290      	cmp	r0, r2
 8004f5e:	d0e1      	beq.n	8004f24 <TIM_Base_SetConfig+0x34>
 8004f60:	6003      	str	r3, [r0, #0]
 8004f62:	688b      	ldr	r3, [r1, #8]
 8004f64:	62c3      	str	r3, [r0, #44]	; 0x2c
 8004f66:	680b      	ldr	r3, [r1, #0]
 8004f68:	6283      	str	r3, [r0, #40]	; 0x28
 8004f6a:	4b04      	ldr	r3, [pc, #16]	; (8004f7c <TIM_Base_SetConfig+0x8c>)
 8004f6c:	4298      	cmp	r0, r3
 8004f6e:	bf04      	itt	eq
 8004f70:	690b      	ldreq	r3, [r1, #16]
 8004f72:	6303      	streq	r3, [r0, #48]	; 0x30
 8004f74:	2301      	movs	r3, #1
 8004f76:	6143      	str	r3, [r0, #20]
 8004f78:	4770      	bx	lr
 8004f7a:	bf00      	nop
 8004f7c:	40010000 	.word	0x40010000
 8004f80:	40000400 	.word	0x40000400
 8004f84:	40014000 	.word	0x40014000

08004f88 <HAL_TIM_OC_Init>:
 8004f88:	b510      	push	{r4, lr}
 8004f8a:	4604      	mov	r4, r0
 8004f8c:	b1a0      	cbz	r0, 8004fb8 <HAL_TIM_OC_Init+0x30>
 8004f8e:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 8004f92:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8004f96:	b91b      	cbnz	r3, 8004fa0 <HAL_TIM_OC_Init+0x18>
 8004f98:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38
 8004f9c:	f7ff ffa6 	bl	8004eec <HAL_TIM_OC_MspInit>
 8004fa0:	2302      	movs	r3, #2
 8004fa2:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
 8004fa6:	6820      	ldr	r0, [r4, #0]
 8004fa8:	1d21      	adds	r1, r4, #4
 8004faa:	f7ff ffa1 	bl	8004ef0 <TIM_Base_SetConfig>
 8004fae:	2301      	movs	r3, #1
 8004fb0:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
 8004fb4:	2000      	movs	r0, #0
 8004fb6:	bd10      	pop	{r4, pc}
 8004fb8:	2001      	movs	r0, #1
 8004fba:	bd10      	pop	{r4, pc}

08004fbc <HAL_TIM_PWM_Init>:
 8004fbc:	b510      	push	{r4, lr}
 8004fbe:	4604      	mov	r4, r0
 8004fc0:	b1a0      	cbz	r0, 8004fec <HAL_TIM_PWM_Init+0x30>
 8004fc2:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 8004fc6:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8004fca:	b91b      	cbnz	r3, 8004fd4 <HAL_TIM_PWM_Init+0x18>
 8004fcc:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38
 8004fd0:	f7ff ff8d 	bl	8004eee <HAL_TIM_PWM_MspInit>
 8004fd4:	2302      	movs	r3, #2
 8004fd6:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
 8004fda:	6820      	ldr	r0, [r4, #0]
 8004fdc:	1d21      	adds	r1, r4, #4
 8004fde:	f7ff ff87 	bl	8004ef0 <TIM_Base_SetConfig>
 8004fe2:	2301      	movs	r3, #1
 8004fe4:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
 8004fe8:	2000      	movs	r0, #0
 8004fea:	bd10      	pop	{r4, pc}
 8004fec:	2001      	movs	r0, #1
 8004fee:	bd10      	pop	{r4, pc}

08004ff0 <TIM_OC2_SetConfig>:
 8004ff0:	6a03      	ldr	r3, [r0, #32]
 8004ff2:	f023 0310 	bic.w	r3, r3, #16
 8004ff6:	6203      	str	r3, [r0, #32]
 8004ff8:	6a03      	ldr	r3, [r0, #32]
 8004ffa:	b570      	push	{r4, r5, r6, lr}
 8004ffc:	6844      	ldr	r4, [r0, #4]
 8004ffe:	6982      	ldr	r2, [r0, #24]
 8005000:	680d      	ldr	r5, [r1, #0]
 8005002:	f422 42e6 	bic.w	r2, r2, #29440	; 0x7300
 8005006:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
 800500a:	688d      	ldr	r5, [r1, #8]
 800500c:	f023 0320 	bic.w	r3, r3, #32
 8005010:	ea43 1305 	orr.w	r3, r3, r5, lsl #4
 8005014:	4d0b      	ldr	r5, [pc, #44]	; (8005044 <TIM_OC2_SetConfig+0x54>)
 8005016:	42a8      	cmp	r0, r5
 8005018:	d10d      	bne.n	8005036 <TIM_OC2_SetConfig+0x46>
 800501a:	68cd      	ldr	r5, [r1, #12]
 800501c:	698e      	ldr	r6, [r1, #24]
 800501e:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8005022:	ea43 1305 	orr.w	r3, r3, r5, lsl #4
 8005026:	694d      	ldr	r5, [r1, #20]
 8005028:	f424 6440 	bic.w	r4, r4, #3072	; 0xc00
 800502c:	4335      	orrs	r5, r6
 800502e:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8005032:	ea44 0485 	orr.w	r4, r4, r5, lsl #2
 8005036:	6044      	str	r4, [r0, #4]
 8005038:	6182      	str	r2, [r0, #24]
 800503a:	684a      	ldr	r2, [r1, #4]
 800503c:	6382      	str	r2, [r0, #56]	; 0x38
 800503e:	6203      	str	r3, [r0, #32]
 8005040:	bd70      	pop	{r4, r5, r6, pc}
 8005042:	bf00      	nop
 8005044:	40010000 	.word	0x40010000

08005048 <HAL_TIM_PWM_ConfigChannel>:
 8005048:	b538      	push	{r3, r4, r5, lr}
 800504a:	f890 3038 	ldrb.w	r3, [r0, #56]	; 0x38
 800504e:	2b01      	cmp	r3, #1
 8005050:	4604      	mov	r4, r0
 8005052:	f04f 0002 	mov.w	r0, #2
 8005056:	d025      	beq.n	80050a4 <HAL_TIM_PWM_ConfigChannel+0x5c>
 8005058:	2301      	movs	r3, #1
 800505a:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
 800505e:	f884 0039 	strb.w	r0, [r4, #57]	; 0x39
 8005062:	2a0c      	cmp	r2, #12
 8005064:	d818      	bhi.n	8005098 <HAL_TIM_PWM_ConfigChannel+0x50>
 8005066:	e8df f002 	tbb	[pc, r2]
 800506a:	1707      	.short	0x1707
 800506c:	171e1717 	.word	0x171e1717
 8005070:	172f1717 	.word	0x172f1717
 8005074:	1717      	.short	0x1717
 8005076:	40          	.byte	0x40
 8005077:	00          	.byte	0x00
 8005078:	6820      	ldr	r0, [r4, #0]
 800507a:	f7ff fec3 	bl	8004e04 <TIM_OC1_SetConfig>
 800507e:	6823      	ldr	r3, [r4, #0]
 8005080:	6909      	ldr	r1, [r1, #16]
 8005082:	699a      	ldr	r2, [r3, #24]
 8005084:	f042 0208 	orr.w	r2, r2, #8
 8005088:	619a      	str	r2, [r3, #24]
 800508a:	699a      	ldr	r2, [r3, #24]
 800508c:	f022 0204 	bic.w	r2, r2, #4
 8005090:	619a      	str	r2, [r3, #24]
 8005092:	699a      	ldr	r2, [r3, #24]
 8005094:	430a      	orrs	r2, r1
 8005096:	619a      	str	r2, [r3, #24]
 8005098:	2301      	movs	r3, #1
 800509a:	2000      	movs	r0, #0
 800509c:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
 80050a0:	f884 0038 	strb.w	r0, [r4, #56]	; 0x38
 80050a4:	bd38      	pop	{r3, r4, r5, pc}
 80050a6:	6820      	ldr	r0, [r4, #0]
 80050a8:	f7ff ffa2 	bl	8004ff0 <TIM_OC2_SetConfig>
 80050ac:	6823      	ldr	r3, [r4, #0]
 80050ae:	6909      	ldr	r1, [r1, #16]
 80050b0:	699a      	ldr	r2, [r3, #24]
 80050b2:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 80050b6:	619a      	str	r2, [r3, #24]
 80050b8:	699a      	ldr	r2, [r3, #24]
 80050ba:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 80050be:	619a      	str	r2, [r3, #24]
 80050c0:	699a      	ldr	r2, [r3, #24]
 80050c2:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 80050c6:	e7e6      	b.n	8005096 <HAL_TIM_PWM_ConfigChannel+0x4e>
 80050c8:	6820      	ldr	r0, [r4, #0]
 80050ca:	f7ff fec3 	bl	8004e54 <TIM_OC3_SetConfig>
 80050ce:	6823      	ldr	r3, [r4, #0]
 80050d0:	6909      	ldr	r1, [r1, #16]
 80050d2:	69da      	ldr	r2, [r3, #28]
 80050d4:	f042 0208 	orr.w	r2, r2, #8
 80050d8:	61da      	str	r2, [r3, #28]
 80050da:	69da      	ldr	r2, [r3, #28]
 80050dc:	f022 0204 	bic.w	r2, r2, #4
 80050e0:	61da      	str	r2, [r3, #28]
 80050e2:	69da      	ldr	r2, [r3, #28]
 80050e4:	430a      	orrs	r2, r1
 80050e6:	61da      	str	r2, [r3, #28]
 80050e8:	e7d6      	b.n	8005098 <HAL_TIM_PWM_ConfigChannel+0x50>
 80050ea:	6820      	ldr	r0, [r4, #0]
 80050ec:	f7ff fedc 	bl	8004ea8 <TIM_OC4_SetConfig>
 80050f0:	6823      	ldr	r3, [r4, #0]
 80050f2:	6909      	ldr	r1, [r1, #16]
 80050f4:	69da      	ldr	r2, [r3, #28]
 80050f6:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 80050fa:	61da      	str	r2, [r3, #28]
 80050fc:	69da      	ldr	r2, [r3, #28]
 80050fe:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8005102:	61da      	str	r2, [r3, #28]
 8005104:	69da      	ldr	r2, [r3, #28]
 8005106:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 800510a:	e7ec      	b.n	80050e6 <HAL_TIM_PWM_ConfigChannel+0x9e>

0800510c <TIM_CCxChannelCmd>:
 800510c:	6a03      	ldr	r3, [r0, #32]
 800510e:	b510      	push	{r4, lr}
 8005110:	2401      	movs	r4, #1
 8005112:	408c      	lsls	r4, r1
 8005114:	ea23 0304 	bic.w	r3, r3, r4
 8005118:	6203      	str	r3, [r0, #32]
 800511a:	6a03      	ldr	r3, [r0, #32]
 800511c:	408a      	lsls	r2, r1
 800511e:	431a      	orrs	r2, r3
 8005120:	6202      	str	r2, [r0, #32]
 8005122:	bd10      	pop	{r4, pc}

08005124 <HAL_TIM_PWM_Start>:
 8005124:	b510      	push	{r4, lr}
 8005126:	4604      	mov	r4, r0
 8005128:	2201      	movs	r2, #1
 800512a:	6800      	ldr	r0, [r0, #0]
 800512c:	f7ff ffee 	bl	800510c <TIM_CCxChannelCmd>
 8005130:	6823      	ldr	r3, [r4, #0]
 8005132:	4a06      	ldr	r2, [pc, #24]	; (800514c <HAL_TIM_PWM_Start+0x28>)
 8005134:	4293      	cmp	r3, r2
 8005136:	bf02      	ittt	eq
 8005138:	6c5a      	ldreq	r2, [r3, #68]	; 0x44
 800513a:	f442 4200 	orreq.w	r2, r2, #32768	; 0x8000
 800513e:	645a      	streq	r2, [r3, #68]	; 0x44
 8005140:	681a      	ldr	r2, [r3, #0]
 8005142:	f042 0201 	orr.w	r2, r2, #1
 8005146:	601a      	str	r2, [r3, #0]
 8005148:	2000      	movs	r0, #0
 800514a:	bd10      	pop	{r4, pc}
 800514c:	40010000 	.word	0x40010000

08005150 <HAL_TIM_OC_Start>:
 8005150:	f7ff bfe8 	b.w	8005124 <HAL_TIM_PWM_Start>

08005154 <TIM_CCxNChannelCmd>:
 8005154:	6a03      	ldr	r3, [r0, #32]
 8005156:	b510      	push	{r4, lr}
 8005158:	2404      	movs	r4, #4
 800515a:	408c      	lsls	r4, r1
 800515c:	ea23 0304 	bic.w	r3, r3, r4
 8005160:	6203      	str	r3, [r0, #32]
 8005162:	6a03      	ldr	r3, [r0, #32]
 8005164:	408a      	lsls	r2, r1
 8005166:	431a      	orrs	r2, r3
 8005168:	6202      	str	r2, [r0, #32]
 800516a:	bd10      	pop	{r4, pc}

0800516c <HAL_TIMEx_PWMN_Start>:
 800516c:	b510      	push	{r4, lr}
 800516e:	4604      	mov	r4, r0
 8005170:	2204      	movs	r2, #4
 8005172:	6800      	ldr	r0, [r0, #0]
 8005174:	f7ff ffee 	bl	8005154 <TIM_CCxNChannelCmd>
 8005178:	6823      	ldr	r3, [r4, #0]
 800517a:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 800517c:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8005180:	645a      	str	r2, [r3, #68]	; 0x44
 8005182:	681a      	ldr	r2, [r3, #0]
 8005184:	f042 0201 	orr.w	r2, r2, #1
 8005188:	601a      	str	r2, [r3, #0]
 800518a:	2000      	movs	r0, #0
 800518c:	bd10      	pop	{r4, pc}
	...

08005190 <UART_SetConfig>:
 8005190:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, lr}
 8005194:	6806      	ldr	r6, [r0, #0]
 8005196:	68c2      	ldr	r2, [r0, #12]
 8005198:	6933      	ldr	r3, [r6, #16]
 800519a:	69c1      	ldr	r1, [r0, #28]
 800519c:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
 80051a0:	4313      	orrs	r3, r2
 80051a2:	6133      	str	r3, [r6, #16]
 80051a4:	4604      	mov	r4, r0
 80051a6:	6883      	ldr	r3, [r0, #8]
 80051a8:	6900      	ldr	r0, [r0, #16]
 80051aa:	68f2      	ldr	r2, [r6, #12]
 80051ac:	4303      	orrs	r3, r0
 80051ae:	6960      	ldr	r0, [r4, #20]
 80051b0:	f422 4216 	bic.w	r2, r2, #38400	; 0x9600
 80051b4:	4303      	orrs	r3, r0
 80051b6:	f022 020c 	bic.w	r2, r2, #12
 80051ba:	430b      	orrs	r3, r1
 80051bc:	4313      	orrs	r3, r2
 80051be:	60f3      	str	r3, [r6, #12]
 80051c0:	6973      	ldr	r3, [r6, #20]
 80051c2:	69a2      	ldr	r2, [r4, #24]
 80051c4:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 80051c8:	4313      	orrs	r3, r2
 80051ca:	f5b1 4f00 	cmp.w	r1, #32768	; 0x8000
 80051ce:	6173      	str	r3, [r6, #20]
 80051d0:	4b7a      	ldr	r3, [pc, #488]	; (80053bc <UART_SetConfig+0x22c>)
 80051d2:	d17c      	bne.n	80052ce <UART_SetConfig+0x13e>
 80051d4:	429e      	cmp	r6, r3
 80051d6:	d003      	beq.n	80051e0 <UART_SetConfig+0x50>
 80051d8:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80051dc:	429e      	cmp	r6, r3
 80051de:	d144      	bne.n	800526a <UART_SetConfig+0xda>
 80051e0:	f000 fba8 	bl	8005934 <HAL_RCC_GetPCLK2Freq>
 80051e4:	2519      	movs	r5, #25
 80051e6:	fb05 f300 	mul.w	r3, r5, r0
 80051ea:	6860      	ldr	r0, [r4, #4]
 80051ec:	f04f 0964 	mov.w	r9, #100	; 0x64
 80051f0:	0040      	lsls	r0, r0, #1
 80051f2:	fbb3 f3f0 	udiv	r3, r3, r0
 80051f6:	fbb3 f3f9 	udiv	r3, r3, r9
 80051fa:	ea4f 1803 	mov.w	r8, r3, lsl #4
 80051fe:	f000 fb99 	bl	8005934 <HAL_RCC_GetPCLK2Freq>
 8005202:	6863      	ldr	r3, [r4, #4]
 8005204:	4368      	muls	r0, r5
 8005206:	005b      	lsls	r3, r3, #1
 8005208:	fbb0 f7f3 	udiv	r7, r0, r3
 800520c:	f000 fb92 	bl	8005934 <HAL_RCC_GetPCLK2Freq>
 8005210:	6863      	ldr	r3, [r4, #4]
 8005212:	4368      	muls	r0, r5
 8005214:	005b      	lsls	r3, r3, #1
 8005216:	fbb0 f3f3 	udiv	r3, r0, r3
 800521a:	fbb3 f3f9 	udiv	r3, r3, r9
 800521e:	fb09 7313 	mls	r3, r9, r3, r7
 8005222:	00db      	lsls	r3, r3, #3
 8005224:	3332      	adds	r3, #50	; 0x32
 8005226:	fbb3 f3f9 	udiv	r3, r3, r9
 800522a:	005b      	lsls	r3, r3, #1
 800522c:	f403 77f8 	and.w	r7, r3, #496	; 0x1f0
 8005230:	f000 fb80 	bl	8005934 <HAL_RCC_GetPCLK2Freq>
 8005234:	6862      	ldr	r2, [r4, #4]
 8005236:	4368      	muls	r0, r5
 8005238:	0052      	lsls	r2, r2, #1
 800523a:	fbb0 faf2 	udiv	r10, r0, r2
 800523e:	f000 fb79 	bl	8005934 <HAL_RCC_GetPCLK2Freq>
 8005242:	6863      	ldr	r3, [r4, #4]
 8005244:	4368      	muls	r0, r5
 8005246:	005b      	lsls	r3, r3, #1
 8005248:	fbb0 f3f3 	udiv	r3, r0, r3
 800524c:	fbb3 f3f9 	udiv	r3, r3, r9
 8005250:	fb09 a313 	mls	r3, r9, r3, r10
 8005254:	00db      	lsls	r3, r3, #3
 8005256:	3332      	adds	r3, #50	; 0x32
 8005258:	fbb3 f3f9 	udiv	r3, r3, r9
 800525c:	f003 0307 	and.w	r3, r3, #7
 8005260:	4443      	add	r3, r8
 8005262:	443b      	add	r3, r7
 8005264:	60b3      	str	r3, [r6, #8]
 8005266:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 800526a:	f000 fb4b 	bl	8005904 <HAL_RCC_GetPCLK1Freq>
 800526e:	2519      	movs	r5, #25
 8005270:	fb05 f300 	mul.w	r3, r5, r0
 8005274:	6860      	ldr	r0, [r4, #4]
 8005276:	f04f 0964 	mov.w	r9, #100	; 0x64
 800527a:	0040      	lsls	r0, r0, #1
 800527c:	fbb3 f3f0 	udiv	r3, r3, r0
 8005280:	fbb3 f3f9 	udiv	r3, r3, r9
 8005284:	ea4f 1803 	mov.w	r8, r3, lsl #4
 8005288:	f000 fb3c 	bl	8005904 <HAL_RCC_GetPCLK1Freq>
 800528c:	6863      	ldr	r3, [r4, #4]
 800528e:	4368      	muls	r0, r5
 8005290:	005b      	lsls	r3, r3, #1
 8005292:	fbb0 f7f3 	udiv	r7, r0, r3
 8005296:	f000 fb35 	bl	8005904 <HAL_RCC_GetPCLK1Freq>
 800529a:	6863      	ldr	r3, [r4, #4]
 800529c:	4368      	muls	r0, r5
 800529e:	005b      	lsls	r3, r3, #1
 80052a0:	fbb0 f3f3 	udiv	r3, r0, r3
 80052a4:	fbb3 f3f9 	udiv	r3, r3, r9
 80052a8:	fb09 7313 	mls	r3, r9, r3, r7
 80052ac:	00db      	lsls	r3, r3, #3
 80052ae:	3332      	adds	r3, #50	; 0x32
 80052b0:	fbb3 f3f9 	udiv	r3, r3, r9
 80052b4:	005b      	lsls	r3, r3, #1
 80052b6:	f403 77f8 	and.w	r7, r3, #496	; 0x1f0
 80052ba:	f000 fb23 	bl	8005904 <HAL_RCC_GetPCLK1Freq>
 80052be:	6862      	ldr	r2, [r4, #4]
 80052c0:	4368      	muls	r0, r5
 80052c2:	0052      	lsls	r2, r2, #1
 80052c4:	fbb0 faf2 	udiv	r10, r0, r2
 80052c8:	f000 fb1c 	bl	8005904 <HAL_RCC_GetPCLK1Freq>
 80052cc:	e7b9      	b.n	8005242 <UART_SetConfig+0xb2>
 80052ce:	429e      	cmp	r6, r3
 80052d0:	d002      	beq.n	80052d8 <UART_SetConfig+0x148>
 80052d2:	4b3b      	ldr	r3, [pc, #236]	; (80053c0 <UART_SetConfig+0x230>)
 80052d4:	429e      	cmp	r6, r3
 80052d6:	d140      	bne.n	800535a <UART_SetConfig+0x1ca>
 80052d8:	f000 fb2c 	bl	8005934 <HAL_RCC_GetPCLK2Freq>
 80052dc:	6867      	ldr	r7, [r4, #4]
 80052de:	2519      	movs	r5, #25
 80052e0:	f04f 0964 	mov.w	r9, #100	; 0x64
 80052e4:	fb05 f300 	mul.w	r3, r5, r0
 80052e8:	00bf      	lsls	r7, r7, #2
 80052ea:	fbb3 f3f7 	udiv	r3, r3, r7
 80052ee:	fbb3 f3f9 	udiv	r3, r3, r9
 80052f2:	011f      	lsls	r7, r3, #4
 80052f4:	f000 fb1e 	bl	8005934 <HAL_RCC_GetPCLK2Freq>
 80052f8:	6863      	ldr	r3, [r4, #4]
 80052fa:	4368      	muls	r0, r5
 80052fc:	009b      	lsls	r3, r3, #2
 80052fe:	fbb0 f8f3 	udiv	r8, r0, r3
 8005302:	f000 fb17 	bl	8005934 <HAL_RCC_GetPCLK2Freq>
 8005306:	6863      	ldr	r3, [r4, #4]
 8005308:	4368      	muls	r0, r5
 800530a:	009b      	lsls	r3, r3, #2
 800530c:	fbb0 f3f3 	udiv	r3, r0, r3
 8005310:	fbb3 f3f9 	udiv	r3, r3, r9
 8005314:	fb09 8313 	mls	r3, r9, r3, r8
 8005318:	011b      	lsls	r3, r3, #4
 800531a:	3332      	adds	r3, #50	; 0x32
 800531c:	fbb3 f3f9 	udiv	r3, r3, r9
 8005320:	f003 08f0 	and.w	r8, r3, #240	; 0xf0
 8005324:	f000 fb06 	bl	8005934 <HAL_RCC_GetPCLK2Freq>
 8005328:	6862      	ldr	r2, [r4, #4]
 800532a:	4368      	muls	r0, r5
 800532c:	0092      	lsls	r2, r2, #2
 800532e:	fbb0 faf2 	udiv	r10, r0, r2
 8005332:	f000 faff 	bl	8005934 <HAL_RCC_GetPCLK2Freq>
 8005336:	6863      	ldr	r3, [r4, #4]
 8005338:	4368      	muls	r0, r5
 800533a:	009b      	lsls	r3, r3, #2
 800533c:	fbb0 f3f3 	udiv	r3, r0, r3
 8005340:	fbb3 f3f9 	udiv	r3, r3, r9
 8005344:	fb09 a313 	mls	r3, r9, r3, r10
 8005348:	011b      	lsls	r3, r3, #4
 800534a:	3332      	adds	r3, #50	; 0x32
 800534c:	fbb3 f3f9 	udiv	r3, r3, r9
 8005350:	f003 030f 	and.w	r3, r3, #15
 8005354:	ea43 0308 	orr.w	r3, r3, r8
 8005358:	e783      	b.n	8005262 <UART_SetConfig+0xd2>
 800535a:	f000 fad3 	bl	8005904 <HAL_RCC_GetPCLK1Freq>
 800535e:	6867      	ldr	r7, [r4, #4]
 8005360:	2519      	movs	r5, #25
 8005362:	f04f 0964 	mov.w	r9, #100	; 0x64
 8005366:	fb05 f300 	mul.w	r3, r5, r0
 800536a:	00bf      	lsls	r7, r7, #2
 800536c:	fbb3 f3f7 	udiv	r3, r3, r7
 8005370:	fbb3 f3f9 	udiv	r3, r3, r9
 8005374:	011f      	lsls	r7, r3, #4
 8005376:	f000 fac5 	bl	8005904 <HAL_RCC_GetPCLK1Freq>
 800537a:	6863      	ldr	r3, [r4, #4]
 800537c:	4368      	muls	r0, r5
 800537e:	009b      	lsls	r3, r3, #2
 8005380:	fbb0 f8f3 	udiv	r8, r0, r3
 8005384:	f000 fabe 	bl	8005904 <HAL_RCC_GetPCLK1Freq>
 8005388:	6863      	ldr	r3, [r4, #4]
 800538a:	4368      	muls	r0, r5
 800538c:	009b      	lsls	r3, r3, #2
 800538e:	fbb0 f3f3 	udiv	r3, r0, r3
 8005392:	fbb3 f3f9 	udiv	r3, r3, r9
 8005396:	fb09 8313 	mls	r3, r9, r3, r8
 800539a:	011b      	lsls	r3, r3, #4
 800539c:	3332      	adds	r3, #50	; 0x32
 800539e:	fbb3 f3f9 	udiv	r3, r3, r9
 80053a2:	f003 08f0 	and.w	r8, r3, #240	; 0xf0
 80053a6:	f000 faad 	bl	8005904 <HAL_RCC_GetPCLK1Freq>
 80053aa:	6862      	ldr	r2, [r4, #4]
 80053ac:	4368      	muls	r0, r5
 80053ae:	0092      	lsls	r2, r2, #2
 80053b0:	fbb0 faf2 	udiv	r10, r0, r2
 80053b4:	f000 faa6 	bl	8005904 <HAL_RCC_GetPCLK1Freq>
 80053b8:	e7bd      	b.n	8005336 <UART_SetConfig+0x1a6>
 80053ba:	bf00      	nop
 80053bc:	40011000 	.word	0x40011000
 80053c0:	40011400 	.word	0x40011400

080053c4 <HAL_UART_MspInit>:
 80053c4:	4770      	bx	lr

080053c6 <HAL_UART_Init>:
 80053c6:	b510      	push	{r4, lr}
 80053c8:	4604      	mov	r4, r0
 80053ca:	b340      	cbz	r0, 800541e <HAL_UART_Init+0x58>
 80053cc:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 80053d0:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 80053d4:	b91b      	cbnz	r3, 80053de <HAL_UART_Init+0x18>
 80053d6:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38
 80053da:	f7ff fff3 	bl	80053c4 <HAL_UART_MspInit>
 80053de:	6822      	ldr	r2, [r4, #0]
 80053e0:	2324      	movs	r3, #36	; 0x24
 80053e2:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
 80053e6:	68d3      	ldr	r3, [r2, #12]
 80053e8:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 80053ec:	60d3      	str	r3, [r2, #12]
 80053ee:	4620      	mov	r0, r4
 80053f0:	f7ff fece 	bl	8005190 <UART_SetConfig>
 80053f4:	6823      	ldr	r3, [r4, #0]
 80053f6:	691a      	ldr	r2, [r3, #16]
 80053f8:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 80053fc:	611a      	str	r2, [r3, #16]
 80053fe:	695a      	ldr	r2, [r3, #20]
 8005400:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 8005404:	615a      	str	r2, [r3, #20]
 8005406:	68da      	ldr	r2, [r3, #12]
 8005408:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 800540c:	60da      	str	r2, [r3, #12]
 800540e:	2000      	movs	r0, #0
 8005410:	2320      	movs	r3, #32
 8005412:	63e0      	str	r0, [r4, #60]	; 0x3c
 8005414:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
 8005418:	f884 303a 	strb.w	r3, [r4, #58]	; 0x3a
 800541c:	bd10      	pop	{r4, pc}
 800541e:	2001      	movs	r0, #1
 8005420:	bd10      	pop	{r4, pc}
	...

08005424 <HAL_PWR_EnterSLEEPMode>:
 8005424:	4a06      	ldr	r2, [pc, #24]	; (8005440 <HAL_PWR_EnterSLEEPMode+0x1c>)
 8005426:	6913      	ldr	r3, [r2, #16]
 8005428:	2901      	cmp	r1, #1
 800542a:	f023 0304 	bic.w	r3, r3, #4
 800542e:	6113      	str	r3, [r2, #16]
 8005430:	d101      	bne.n	8005436 <HAL_PWR_EnterSLEEPMode+0x12>
 8005432:	bf30      	wfi
 8005434:	4770      	bx	lr
 8005436:	bf40      	sev
 8005438:	bf20      	wfe
 800543a:	bf20      	wfe
 800543c:	4770      	bx	lr
 800543e:	bf00      	nop
 8005440:	e000ed00 	.word	0xe000ed00

08005444 <HAL_RCC_OscConfig>:
 8005444:	6803      	ldr	r3, [r0, #0]
 8005446:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8005448:	07dd      	lsls	r5, r3, #31
 800544a:	4604      	mov	r4, r0
 800544c:	d438      	bmi.n	80054c0 <HAL_RCC_OscConfig+0x7c>
 800544e:	6823      	ldr	r3, [r4, #0]
 8005450:	0798      	lsls	r0, r3, #30
 8005452:	d471      	bmi.n	8005538 <HAL_RCC_OscConfig+0xf4>
 8005454:	6823      	ldr	r3, [r4, #0]
 8005456:	071e      	lsls	r6, r3, #28
 8005458:	f100 80bd 	bmi.w	80055d6 <HAL_RCC_OscConfig+0x192>
 800545c:	6823      	ldr	r3, [r4, #0]
 800545e:	075d      	lsls	r5, r3, #29
 8005460:	d528      	bpl.n	80054b4 <HAL_RCC_OscConfig+0x70>
 8005462:	2300      	movs	r3, #0
 8005464:	9301      	str	r3, [sp, #4]
 8005466:	4ba8      	ldr	r3, [pc, #672]	; (8005708 <HAL_RCC_OscConfig+0x2c4>)
 8005468:	4da8      	ldr	r5, [pc, #672]	; (800570c <HAL_RCC_OscConfig+0x2c8>)
 800546a:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800546c:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8005470:	641a      	str	r2, [r3, #64]	; 0x40
 8005472:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005474:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8005478:	9301      	str	r3, [sp, #4]
 800547a:	9b01      	ldr	r3, [sp, #4]
 800547c:	682b      	ldr	r3, [r5, #0]
 800547e:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8005482:	602b      	str	r3, [r5, #0]
 8005484:	f000 faae 	bl	80059e4 <HAL_GetTick>
 8005488:	4606      	mov	r6, r0
 800548a:	682b      	ldr	r3, [r5, #0]
 800548c:	05da      	lsls	r2, r3, #23
 800548e:	f140 80c4 	bpl.w	800561a <HAL_RCC_OscConfig+0x1d6>
 8005492:	4b9f      	ldr	r3, [pc, #636]	; (8005710 <HAL_RCC_OscConfig+0x2cc>)
 8005494:	7a22      	ldrb	r2, [r4, #8]
 8005496:	701a      	strb	r2, [r3, #0]
 8005498:	68a3      	ldr	r3, [r4, #8]
 800549a:	2b00      	cmp	r3, #0
 800549c:	f000 80cb 	beq.w	8005636 <HAL_RCC_OscConfig+0x1f2>
 80054a0:	f000 faa0 	bl	80059e4 <HAL_GetTick>
 80054a4:	4d98      	ldr	r5, [pc, #608]	; (8005708 <HAL_RCC_OscConfig+0x2c4>)
 80054a6:	4606      	mov	r6, r0
 80054a8:	f241 3788 	movw	r7, #5000	; 0x1388
 80054ac:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 80054ae:	079b      	lsls	r3, r3, #30
 80054b0:	f140 80ba 	bpl.w	8005628 <HAL_RCC_OscConfig+0x1e4>
 80054b4:	69a2      	ldr	r2, [r4, #24]
 80054b6:	2a00      	cmp	r2, #0
 80054b8:	f040 80cd 	bne.w	8005656 <HAL_RCC_OscConfig+0x212>
 80054bc:	2000      	movs	r0, #0
 80054be:	e015      	b.n	80054ec <HAL_RCC_OscConfig+0xa8>
 80054c0:	4b91      	ldr	r3, [pc, #580]	; (8005708 <HAL_RCC_OscConfig+0x2c4>)
 80054c2:	689a      	ldr	r2, [r3, #8]
 80054c4:	f002 020c 	and.w	r2, r2, #12
 80054c8:	2a04      	cmp	r2, #4
 80054ca:	d007      	beq.n	80054dc <HAL_RCC_OscConfig+0x98>
 80054cc:	689a      	ldr	r2, [r3, #8]
 80054ce:	f002 020c 	and.w	r2, r2, #12
 80054d2:	2a08      	cmp	r2, #8
 80054d4:	d10c      	bne.n	80054f0 <HAL_RCC_OscConfig+0xac>
 80054d6:	685b      	ldr	r3, [r3, #4]
 80054d8:	0259      	lsls	r1, r3, #9
 80054da:	d509      	bpl.n	80054f0 <HAL_RCC_OscConfig+0xac>
 80054dc:	4b8a      	ldr	r3, [pc, #552]	; (8005708 <HAL_RCC_OscConfig+0x2c4>)
 80054de:	681b      	ldr	r3, [r3, #0]
 80054e0:	039a      	lsls	r2, r3, #14
 80054e2:	d5b4      	bpl.n	800544e <HAL_RCC_OscConfig+0xa>
 80054e4:	6863      	ldr	r3, [r4, #4]
 80054e6:	2b00      	cmp	r3, #0
 80054e8:	d1b1      	bne.n	800544e <HAL_RCC_OscConfig+0xa>
 80054ea:	2001      	movs	r0, #1
 80054ec:	b003      	add	sp, #12
 80054ee:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80054f0:	4b88      	ldr	r3, [pc, #544]	; (8005714 <HAL_RCC_OscConfig+0x2d0>)
 80054f2:	7922      	ldrb	r2, [r4, #4]
 80054f4:	701a      	strb	r2, [r3, #0]
 80054f6:	6863      	ldr	r3, [r4, #4]
 80054f8:	b17b      	cbz	r3, 800551a <HAL_RCC_OscConfig+0xd6>
 80054fa:	f000 fa73 	bl	80059e4 <HAL_GetTick>
 80054fe:	4d82      	ldr	r5, [pc, #520]	; (8005708 <HAL_RCC_OscConfig+0x2c4>)
 8005500:	4606      	mov	r6, r0
 8005502:	f241 3788 	movw	r7, #5000	; 0x1388
 8005506:	682b      	ldr	r3, [r5, #0]
 8005508:	039b      	lsls	r3, r3, #14
 800550a:	d4a0      	bmi.n	800544e <HAL_RCC_OscConfig+0xa>
 800550c:	f000 fa6a 	bl	80059e4 <HAL_GetTick>
 8005510:	1b80      	subs	r0, r0, r6
 8005512:	42b8      	cmp	r0, r7
 8005514:	d9f7      	bls.n	8005506 <HAL_RCC_OscConfig+0xc2>
 8005516:	2003      	movs	r0, #3
 8005518:	e7e8      	b.n	80054ec <HAL_RCC_OscConfig+0xa8>
 800551a:	f000 fa63 	bl	80059e4 <HAL_GetTick>
 800551e:	4d7a      	ldr	r5, [pc, #488]	; (8005708 <HAL_RCC_OscConfig+0x2c4>)
 8005520:	4606      	mov	r6, r0
 8005522:	f241 3788 	movw	r7, #5000	; 0x1388
 8005526:	682b      	ldr	r3, [r5, #0]
 8005528:	0398      	lsls	r0, r3, #14
 800552a:	d590      	bpl.n	800544e <HAL_RCC_OscConfig+0xa>
 800552c:	f000 fa5a 	bl	80059e4 <HAL_GetTick>
 8005530:	1b80      	subs	r0, r0, r6
 8005532:	42b8      	cmp	r0, r7
 8005534:	d9f7      	bls.n	8005526 <HAL_RCC_OscConfig+0xe2>
 8005536:	e7ee      	b.n	8005516 <HAL_RCC_OscConfig+0xd2>
 8005538:	4b73      	ldr	r3, [pc, #460]	; (8005708 <HAL_RCC_OscConfig+0x2c4>)
 800553a:	689a      	ldr	r2, [r3, #8]
 800553c:	f012 0f0c 	tst.w	r2, #12
 8005540:	d007      	beq.n	8005552 <HAL_RCC_OscConfig+0x10e>
 8005542:	689a      	ldr	r2, [r3, #8]
 8005544:	f002 020c 	and.w	r2, r2, #12
 8005548:	2a08      	cmp	r2, #8
 800554a:	d116      	bne.n	800557a <HAL_RCC_OscConfig+0x136>
 800554c:	685b      	ldr	r3, [r3, #4]
 800554e:	0259      	lsls	r1, r3, #9
 8005550:	d413      	bmi.n	800557a <HAL_RCC_OscConfig+0x136>
 8005552:	4b6d      	ldr	r3, [pc, #436]	; (8005708 <HAL_RCC_OscConfig+0x2c4>)
 8005554:	681a      	ldr	r2, [r3, #0]
 8005556:	0792      	lsls	r2, r2, #30
 8005558:	d502      	bpl.n	8005560 <HAL_RCC_OscConfig+0x11c>
 800555a:	68e2      	ldr	r2, [r4, #12]
 800555c:	2a01      	cmp	r2, #1
 800555e:	d1c4      	bne.n	80054ea <HAL_RCC_OscConfig+0xa6>
 8005560:	6818      	ldr	r0, [r3, #0]
 8005562:	22f8      	movs	r2, #248	; 0xf8
 8005564:	fa92 f2a2 	rbit	r2, r2
 8005568:	fab2 f182 	clz	r1, r2
 800556c:	6922      	ldr	r2, [r4, #16]
 800556e:	408a      	lsls	r2, r1
 8005570:	f020 01f8 	bic.w	r1, r0, #248	; 0xf8
 8005574:	430a      	orrs	r2, r1
 8005576:	601a      	str	r2, [r3, #0]
 8005578:	e76c      	b.n	8005454 <HAL_RCC_OscConfig+0x10>
 800557a:	68e2      	ldr	r2, [r4, #12]
 800557c:	4b66      	ldr	r3, [pc, #408]	; (8005718 <HAL_RCC_OscConfig+0x2d4>)
 800557e:	b1da      	cbz	r2, 80055b8 <HAL_RCC_OscConfig+0x174>
 8005580:	2201      	movs	r2, #1
 8005582:	601a      	str	r2, [r3, #0]
 8005584:	f000 fa2e 	bl	80059e4 <HAL_GetTick>
 8005588:	4d5f      	ldr	r5, [pc, #380]	; (8005708 <HAL_RCC_OscConfig+0x2c4>)
 800558a:	4606      	mov	r6, r0
 800558c:	682b      	ldr	r3, [r5, #0]
 800558e:	079b      	lsls	r3, r3, #30
 8005590:	d50c      	bpl.n	80055ac <HAL_RCC_OscConfig+0x168>
 8005592:	6829      	ldr	r1, [r5, #0]
 8005594:	23f8      	movs	r3, #248	; 0xf8
 8005596:	fa93 f3a3 	rbit	r3, r3
 800559a:	fab3 f283 	clz	r2, r3
 800559e:	6923      	ldr	r3, [r4, #16]
 80055a0:	4093      	lsls	r3, r2
 80055a2:	f021 02f8 	bic.w	r2, r1, #248	; 0xf8
 80055a6:	4313      	orrs	r3, r2
 80055a8:	602b      	str	r3, [r5, #0]
 80055aa:	e753      	b.n	8005454 <HAL_RCC_OscConfig+0x10>
 80055ac:	f000 fa1a 	bl	80059e4 <HAL_GetTick>
 80055b0:	1b80      	subs	r0, r0, r6
 80055b2:	2802      	cmp	r0, #2
 80055b4:	d9ea      	bls.n	800558c <HAL_RCC_OscConfig+0x148>
 80055b6:	e7ae      	b.n	8005516 <HAL_RCC_OscConfig+0xd2>
 80055b8:	601a      	str	r2, [r3, #0]
 80055ba:	f000 fa13 	bl	80059e4 <HAL_GetTick>
 80055be:	4d52      	ldr	r5, [pc, #328]	; (8005708 <HAL_RCC_OscConfig+0x2c4>)
 80055c0:	4606      	mov	r6, r0
 80055c2:	682b      	ldr	r3, [r5, #0]
 80055c4:	079f      	lsls	r7, r3, #30
 80055c6:	f57f af45 	bpl.w	8005454 <HAL_RCC_OscConfig+0x10>
 80055ca:	f000 fa0b 	bl	80059e4 <HAL_GetTick>
 80055ce:	1b80      	subs	r0, r0, r6
 80055d0:	2802      	cmp	r0, #2
 80055d2:	d9f6      	bls.n	80055c2 <HAL_RCC_OscConfig+0x17e>
 80055d4:	e79f      	b.n	8005516 <HAL_RCC_OscConfig+0xd2>
 80055d6:	6962      	ldr	r2, [r4, #20]
 80055d8:	4b50      	ldr	r3, [pc, #320]	; (800571c <HAL_RCC_OscConfig+0x2d8>)
 80055da:	b17a      	cbz	r2, 80055fc <HAL_RCC_OscConfig+0x1b8>
 80055dc:	2201      	movs	r2, #1
 80055de:	601a      	str	r2, [r3, #0]
 80055e0:	f000 fa00 	bl	80059e4 <HAL_GetTick>
 80055e4:	4d48      	ldr	r5, [pc, #288]	; (8005708 <HAL_RCC_OscConfig+0x2c4>)
 80055e6:	4606      	mov	r6, r0
 80055e8:	6f6b      	ldr	r3, [r5, #116]	; 0x74
 80055ea:	0798      	lsls	r0, r3, #30
 80055ec:	f53f af36 	bmi.w	800545c <HAL_RCC_OscConfig+0x18>
 80055f0:	f000 f9f8 	bl	80059e4 <HAL_GetTick>
 80055f4:	1b80      	subs	r0, r0, r6
 80055f6:	2802      	cmp	r0, #2
 80055f8:	d9f6      	bls.n	80055e8 <HAL_RCC_OscConfig+0x1a4>
 80055fa:	e78c      	b.n	8005516 <HAL_RCC_OscConfig+0xd2>
 80055fc:	601a      	str	r2, [r3, #0]
 80055fe:	f000 f9f1 	bl	80059e4 <HAL_GetTick>
 8005602:	4d41      	ldr	r5, [pc, #260]	; (8005708 <HAL_RCC_OscConfig+0x2c4>)
 8005604:	4606      	mov	r6, r0
 8005606:	6f6b      	ldr	r3, [r5, #116]	; 0x74
 8005608:	0799      	lsls	r1, r3, #30
 800560a:	f57f af27 	bpl.w	800545c <HAL_RCC_OscConfig+0x18>
 800560e:	f000 f9e9 	bl	80059e4 <HAL_GetTick>
 8005612:	1b80      	subs	r0, r0, r6
 8005614:	2802      	cmp	r0, #2
 8005616:	d9f6      	bls.n	8005606 <HAL_RCC_OscConfig+0x1c2>
 8005618:	e77d      	b.n	8005516 <HAL_RCC_OscConfig+0xd2>
 800561a:	f000 f9e3 	bl	80059e4 <HAL_GetTick>
 800561e:	1b80      	subs	r0, r0, r6
 8005620:	2802      	cmp	r0, #2
 8005622:	f67f af32 	bls.w	800548a <HAL_RCC_OscConfig+0x46>
 8005626:	e776      	b.n	8005516 <HAL_RCC_OscConfig+0xd2>
 8005628:	f000 f9dc 	bl	80059e4 <HAL_GetTick>
 800562c:	1b80      	subs	r0, r0, r6
 800562e:	42b8      	cmp	r0, r7
 8005630:	f67f af3c 	bls.w	80054ac <HAL_RCC_OscConfig+0x68>
 8005634:	e76f      	b.n	8005516 <HAL_RCC_OscConfig+0xd2>
 8005636:	f000 f9d5 	bl	80059e4 <HAL_GetTick>
 800563a:	4d33      	ldr	r5, [pc, #204]	; (8005708 <HAL_RCC_OscConfig+0x2c4>)
 800563c:	4606      	mov	r6, r0
 800563e:	f241 3788 	movw	r7, #5000	; 0x1388
 8005642:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8005644:	0798      	lsls	r0, r3, #30
 8005646:	f57f af35 	bpl.w	80054b4 <HAL_RCC_OscConfig+0x70>
 800564a:	f000 f9cb 	bl	80059e4 <HAL_GetTick>
 800564e:	1b80      	subs	r0, r0, r6
 8005650:	42b8      	cmp	r0, r7
 8005652:	d9f6      	bls.n	8005642 <HAL_RCC_OscConfig+0x1fe>
 8005654:	e75f      	b.n	8005516 <HAL_RCC_OscConfig+0xd2>
 8005656:	4d2c      	ldr	r5, [pc, #176]	; (8005708 <HAL_RCC_OscConfig+0x2c4>)
 8005658:	68ab      	ldr	r3, [r5, #8]
 800565a:	f003 030c 	and.w	r3, r3, #12
 800565e:	2b08      	cmp	r3, #8
 8005660:	f43f af43 	beq.w	80054ea <HAL_RCC_OscConfig+0xa6>
 8005664:	4e2e      	ldr	r6, [pc, #184]	; (8005720 <HAL_RCC_OscConfig+0x2dc>)
 8005666:	2300      	movs	r3, #0
 8005668:	2a02      	cmp	r2, #2
 800566a:	6033      	str	r3, [r6, #0]
 800566c:	d13e      	bne.n	80056ec <HAL_RCC_OscConfig+0x2a8>
 800566e:	f000 f9b9 	bl	80059e4 <HAL_GetTick>
 8005672:	4607      	mov	r7, r0
 8005674:	682b      	ldr	r3, [r5, #0]
 8005676:	0199      	lsls	r1, r3, #6
 8005678:	d432      	bmi.n	80056e0 <HAL_RCC_OscConfig+0x29c>
 800567a:	f647 77c0 	movw	r7, #32704	; 0x7fc0
 800567e:	fa97 f7a7 	rbit	r7, r7
 8005682:	f44f 3240 	mov.w	r2, #196608	; 0x30000
 8005686:	fab7 f787 	clz	r7, r7
 800568a:	fa92 f2a2 	rbit	r2, r2
 800568e:	f04f 6170 	mov.w	r1, #251658240	; 0xf000000
 8005692:	fab2 f082 	clz	r0, r2
 8005696:	fa91 f1a1 	rbit	r1, r1
 800569a:	6a22      	ldr	r2, [r4, #32]
 800569c:	69e3      	ldr	r3, [r4, #28]
 800569e:	4313      	orrs	r3, r2
 80056a0:	6a62      	ldr	r2, [r4, #36]	; 0x24
 80056a2:	fa02 f707 	lsl.w	r7, r2, r7
 80056a6:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 80056a8:	0852      	lsrs	r2, r2, #1
 80056aa:	3a01      	subs	r2, #1
 80056ac:	4082      	lsls	r2, r0
 80056ae:	433b      	orrs	r3, r7
 80056b0:	4313      	orrs	r3, r2
 80056b2:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 80056b4:	4c14      	ldr	r4, [pc, #80]	; (8005708 <HAL_RCC_OscConfig+0x2c4>)
 80056b6:	fab1 f181 	clz	r1, r1
 80056ba:	fa02 f101 	lsl.w	r1, r2, r1
 80056be:	430b      	orrs	r3, r1
 80056c0:	606b      	str	r3, [r5, #4]
 80056c2:	2301      	movs	r3, #1
 80056c4:	6033      	str	r3, [r6, #0]
 80056c6:	f000 f98d 	bl	80059e4 <HAL_GetTick>
 80056ca:	4605      	mov	r5, r0
 80056cc:	6823      	ldr	r3, [r4, #0]
 80056ce:	019a      	lsls	r2, r3, #6
 80056d0:	f53f aef4 	bmi.w	80054bc <HAL_RCC_OscConfig+0x78>
 80056d4:	f000 f986 	bl	80059e4 <HAL_GetTick>
 80056d8:	1b40      	subs	r0, r0, r5
 80056da:	2802      	cmp	r0, #2
 80056dc:	d9f6      	bls.n	80056cc <HAL_RCC_OscConfig+0x288>
 80056de:	e71a      	b.n	8005516 <HAL_RCC_OscConfig+0xd2>
 80056e0:	f000 f980 	bl	80059e4 <HAL_GetTick>
 80056e4:	1bc0      	subs	r0, r0, r7
 80056e6:	2802      	cmp	r0, #2
 80056e8:	d9c4      	bls.n	8005674 <HAL_RCC_OscConfig+0x230>
 80056ea:	e714      	b.n	8005516 <HAL_RCC_OscConfig+0xd2>
 80056ec:	f000 f97a 	bl	80059e4 <HAL_GetTick>
 80056f0:	4604      	mov	r4, r0
 80056f2:	682b      	ldr	r3, [r5, #0]
 80056f4:	019b      	lsls	r3, r3, #6
 80056f6:	f57f aee1 	bpl.w	80054bc <HAL_RCC_OscConfig+0x78>
 80056fa:	f000 f973 	bl	80059e4 <HAL_GetTick>
 80056fe:	1b00      	subs	r0, r0, r4
 8005700:	2802      	cmp	r0, #2
 8005702:	d9f6      	bls.n	80056f2 <HAL_RCC_OscConfig+0x2ae>
 8005704:	e707      	b.n	8005516 <HAL_RCC_OscConfig+0xd2>
 8005706:	bf00      	nop
 8005708:	40023800 	.word	0x40023800
 800570c:	40007000 	.word	0x40007000
 8005710:	40023870 	.word	0x40023870
 8005714:	40023802 	.word	0x40023802
 8005718:	42470000 	.word	0x42470000
 800571c:	42470e80 	.word	0x42470e80
 8005720:	42470060 	.word	0x42470060

08005724 <HAL_RCC_GetSysClockFreq>:
 8005724:	4a19      	ldr	r2, [pc, #100]	; (800578c <HAL_RCC_GetSysClockFreq+0x68>)
 8005726:	6893      	ldr	r3, [r2, #8]
 8005728:	f003 030c 	and.w	r3, r3, #12
 800572c:	2b04      	cmp	r3, #4
 800572e:	b510      	push	{r4, lr}
 8005730:	d003      	beq.n	800573a <HAL_RCC_GetSysClockFreq+0x16>
 8005732:	2b08      	cmp	r3, #8
 8005734:	d003      	beq.n	800573e <HAL_RCC_GetSysClockFreq+0x1a>
 8005736:	4816      	ldr	r0, [pc, #88]	; (8005790 <HAL_RCC_GetSysClockFreq+0x6c>)
 8005738:	bd10      	pop	{r4, pc}
 800573a:	4816      	ldr	r0, [pc, #88]	; (8005794 <HAL_RCC_GetSysClockFreq+0x70>)
 800573c:	bd10      	pop	{r4, pc}
 800573e:	6851      	ldr	r1, [r2, #4]
 8005740:	6853      	ldr	r3, [r2, #4]
 8005742:	f001 013f 	and.w	r1, r1, #63	; 0x3f
 8005746:	f413 0f80 	tst.w	r3, #4194304	; 0x400000
 800574a:	f647 74c0 	movw	r4, #32704	; 0x7fc0
 800574e:	6853      	ldr	r3, [r2, #4]
 8005750:	fa94 f0a4 	rbit	r0, r4
 8005754:	fab0 f080 	clz	r0, r0
 8005758:	ea03 0304 	and.w	r3, r3, r4
 800575c:	fa23 f300 	lsr.w	r3, r3, r0
 8005760:	bf14      	ite	ne
 8005762:	480c      	ldrne	r0, [pc, #48]	; (8005794 <HAL_RCC_GetSysClockFreq+0x70>)
 8005764:	480a      	ldreq	r0, [pc, #40]	; (8005790 <HAL_RCC_GetSysClockFreq+0x6c>)
 8005766:	fbb0 f0f1 	udiv	r0, r0, r1
 800576a:	4358      	muls	r0, r3
 800576c:	4b07      	ldr	r3, [pc, #28]	; (800578c <HAL_RCC_GetSysClockFreq+0x68>)
 800576e:	f44f 3240 	mov.w	r2, #196608	; 0x30000
 8005772:	685b      	ldr	r3, [r3, #4]
 8005774:	fa92 f2a2 	rbit	r2, r2
 8005778:	fab2 f282 	clz	r2, r2
 800577c:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 8005780:	40d3      	lsrs	r3, r2
 8005782:	3301      	adds	r3, #1
 8005784:	005b      	lsls	r3, r3, #1
 8005786:	fbb0 f0f3 	udiv	r0, r0, r3
 800578a:	bd10      	pop	{r4, pc}
 800578c:	40023800 	.word	0x40023800
 8005790:	00f42400 	.word	0x00f42400
 8005794:	007a1200 	.word	0x007a1200

08005798 <HAL_RCC_ClockConfig>:
 8005798:	4b56      	ldr	r3, [pc, #344]	; (80058f4 <HAL_RCC_ClockConfig+0x15c>)
 800579a:	681a      	ldr	r2, [r3, #0]
 800579c:	f002 020f 	and.w	r2, r2, #15
 80057a0:	428a      	cmp	r2, r1
 80057a2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80057a6:	4605      	mov	r5, r0
 80057a8:	460e      	mov	r6, r1
 80057aa:	d330      	bcc.n	800580e <HAL_RCC_ClockConfig+0x76>
 80057ac:	682a      	ldr	r2, [r5, #0]
 80057ae:	0794      	lsls	r4, r2, #30
 80057b0:	d437      	bmi.n	8005822 <HAL_RCC_ClockConfig+0x8a>
 80057b2:	07d0      	lsls	r0, r2, #31
 80057b4:	d43d      	bmi.n	8005832 <HAL_RCC_ClockConfig+0x9a>
 80057b6:	4b4f      	ldr	r3, [pc, #316]	; (80058f4 <HAL_RCC_ClockConfig+0x15c>)
 80057b8:	681a      	ldr	r2, [r3, #0]
 80057ba:	f002 020f 	and.w	r2, r2, #15
 80057be:	4296      	cmp	r6, r2
 80057c0:	f0c0 8088 	bcc.w	80058d4 <HAL_RCC_ClockConfig+0x13c>
 80057c4:	682a      	ldr	r2, [r5, #0]
 80057c6:	0751      	lsls	r1, r2, #29
 80057c8:	f100 808c 	bmi.w	80058e4 <HAL_RCC_ClockConfig+0x14c>
 80057cc:	0713      	lsls	r3, r2, #28
 80057ce:	d507      	bpl.n	80057e0 <HAL_RCC_ClockConfig+0x48>
 80057d0:	4a49      	ldr	r2, [pc, #292]	; (80058f8 <HAL_RCC_ClockConfig+0x160>)
 80057d2:	6929      	ldr	r1, [r5, #16]
 80057d4:	6893      	ldr	r3, [r2, #8]
 80057d6:	f423 4360 	bic.w	r3, r3, #57344	; 0xe000
 80057da:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 80057de:	6093      	str	r3, [r2, #8]
 80057e0:	f7ff ffa0 	bl	8005724 <HAL_RCC_GetSysClockFreq>
 80057e4:	4b44      	ldr	r3, [pc, #272]	; (80058f8 <HAL_RCC_ClockConfig+0x160>)
 80057e6:	22f0      	movs	r2, #240	; 0xf0
 80057e8:	689b      	ldr	r3, [r3, #8]
 80057ea:	fa92 f2a2 	rbit	r2, r2
 80057ee:	fab2 f282 	clz	r2, r2
 80057f2:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 80057f6:	40d3      	lsrs	r3, r2
 80057f8:	4a40      	ldr	r2, [pc, #256]	; (80058fc <HAL_RCC_ClockConfig+0x164>)
 80057fa:	5cd3      	ldrb	r3, [r2, r3]
 80057fc:	40d8      	lsrs	r0, r3
 80057fe:	4b40      	ldr	r3, [pc, #256]	; (8005900 <HAL_RCC_ClockConfig+0x168>)
 8005800:	6018      	str	r0, [r3, #0]
 8005802:	200f      	movs	r0, #15
 8005804:	f7fe fa52 	bl	8003cac <HAL_InitTick>
 8005808:	2000      	movs	r0, #0
 800580a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800580e:	b2ca      	uxtb	r2, r1
 8005810:	701a      	strb	r2, [r3, #0]
 8005812:	681b      	ldr	r3, [r3, #0]
 8005814:	f003 030f 	and.w	r3, r3, #15
 8005818:	4299      	cmp	r1, r3
 800581a:	d0c7      	beq.n	80057ac <HAL_RCC_ClockConfig+0x14>
 800581c:	2001      	movs	r0, #1
 800581e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8005822:	4935      	ldr	r1, [pc, #212]	; (80058f8 <HAL_RCC_ClockConfig+0x160>)
 8005824:	68a8      	ldr	r0, [r5, #8]
 8005826:	688b      	ldr	r3, [r1, #8]
 8005828:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 800582c:	4303      	orrs	r3, r0
 800582e:	608b      	str	r3, [r1, #8]
 8005830:	e7bf      	b.n	80057b2 <HAL_RCC_ClockConfig+0x1a>
 8005832:	686a      	ldr	r2, [r5, #4]
 8005834:	4b30      	ldr	r3, [pc, #192]	; (80058f8 <HAL_RCC_ClockConfig+0x160>)
 8005836:	2a01      	cmp	r2, #1
 8005838:	d11e      	bne.n	8005878 <HAL_RCC_ClockConfig+0xe0>
 800583a:	681b      	ldr	r3, [r3, #0]
 800583c:	f413 3f00 	tst.w	r3, #131072	; 0x20000
 8005840:	d0ec      	beq.n	800581c <HAL_RCC_ClockConfig+0x84>
 8005842:	4c2d      	ldr	r4, [pc, #180]	; (80058f8 <HAL_RCC_ClockConfig+0x160>)
 8005844:	68a3      	ldr	r3, [r4, #8]
 8005846:	f023 0303 	bic.w	r3, r3, #3
 800584a:	4313      	orrs	r3, r2
 800584c:	60a3      	str	r3, [r4, #8]
 800584e:	f000 f8c9 	bl	80059e4 <HAL_GetTick>
 8005852:	686b      	ldr	r3, [r5, #4]
 8005854:	2b01      	cmp	r3, #1
 8005856:	4607      	mov	r7, r0
 8005858:	f241 3888 	movw	r8, #5000	; 0x1388
 800585c:	d116      	bne.n	800588c <HAL_RCC_ClockConfig+0xf4>
 800585e:	68a3      	ldr	r3, [r4, #8]
 8005860:	f003 030c 	and.w	r3, r3, #12
 8005864:	2b04      	cmp	r3, #4
 8005866:	d0a6      	beq.n	80057b6 <HAL_RCC_ClockConfig+0x1e>
 8005868:	f000 f8bc 	bl	80059e4 <HAL_GetTick>
 800586c:	1bc0      	subs	r0, r0, r7
 800586e:	4540      	cmp	r0, r8
 8005870:	d9f5      	bls.n	800585e <HAL_RCC_ClockConfig+0xc6>
 8005872:	2003      	movs	r0, #3
 8005874:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8005878:	1e91      	subs	r1, r2, #2
 800587a:	2901      	cmp	r1, #1
 800587c:	681b      	ldr	r3, [r3, #0]
 800587e:	d802      	bhi.n	8005886 <HAL_RCC_ClockConfig+0xee>
 8005880:	f013 7f00 	tst.w	r3, #33554432	; 0x2000000
 8005884:	e7dc      	b.n	8005840 <HAL_RCC_ClockConfig+0xa8>
 8005886:	f013 0f02 	tst.w	r3, #2
 800588a:	e7d9      	b.n	8005840 <HAL_RCC_ClockConfig+0xa8>
 800588c:	2b02      	cmp	r3, #2
 800588e:	d10a      	bne.n	80058a6 <HAL_RCC_ClockConfig+0x10e>
 8005890:	68a3      	ldr	r3, [r4, #8]
 8005892:	f003 030c 	and.w	r3, r3, #12
 8005896:	2b08      	cmp	r3, #8
 8005898:	d08d      	beq.n	80057b6 <HAL_RCC_ClockConfig+0x1e>
 800589a:	f000 f8a3 	bl	80059e4 <HAL_GetTick>
 800589e:	1bc0      	subs	r0, r0, r7
 80058a0:	4540      	cmp	r0, r8
 80058a2:	d9f5      	bls.n	8005890 <HAL_RCC_ClockConfig+0xf8>
 80058a4:	e7e5      	b.n	8005872 <HAL_RCC_ClockConfig+0xda>
 80058a6:	2b03      	cmp	r3, #3
 80058a8:	d10f      	bne.n	80058ca <HAL_RCC_ClockConfig+0x132>
 80058aa:	68a3      	ldr	r3, [r4, #8]
 80058ac:	f003 030c 	and.w	r3, r3, #12
 80058b0:	2b0c      	cmp	r3, #12
 80058b2:	d080      	beq.n	80057b6 <HAL_RCC_ClockConfig+0x1e>
 80058b4:	f000 f896 	bl	80059e4 <HAL_GetTick>
 80058b8:	1bc0      	subs	r0, r0, r7
 80058ba:	4540      	cmp	r0, r8
 80058bc:	d9f5      	bls.n	80058aa <HAL_RCC_ClockConfig+0x112>
 80058be:	e7d8      	b.n	8005872 <HAL_RCC_ClockConfig+0xda>
 80058c0:	f000 f890 	bl	80059e4 <HAL_GetTick>
 80058c4:	1bc0      	subs	r0, r0, r7
 80058c6:	4540      	cmp	r0, r8
 80058c8:	d8d3      	bhi.n	8005872 <HAL_RCC_ClockConfig+0xda>
 80058ca:	68a3      	ldr	r3, [r4, #8]
 80058cc:	f013 0f0c 	tst.w	r3, #12
 80058d0:	d1f6      	bne.n	80058c0 <HAL_RCC_ClockConfig+0x128>
 80058d2:	e770      	b.n	80057b6 <HAL_RCC_ClockConfig+0x1e>
 80058d4:	b2f2      	uxtb	r2, r6
 80058d6:	701a      	strb	r2, [r3, #0]
 80058d8:	681b      	ldr	r3, [r3, #0]
 80058da:	f003 030f 	and.w	r3, r3, #15
 80058de:	429e      	cmp	r6, r3
 80058e0:	d19c      	bne.n	800581c <HAL_RCC_ClockConfig+0x84>
 80058e2:	e76f      	b.n	80057c4 <HAL_RCC_ClockConfig+0x2c>
 80058e4:	4904      	ldr	r1, [pc, #16]	; (80058f8 <HAL_RCC_ClockConfig+0x160>)
 80058e6:	68e8      	ldr	r0, [r5, #12]
 80058e8:	688b      	ldr	r3, [r1, #8]
 80058ea:	f423 53e0 	bic.w	r3, r3, #7168	; 0x1c00
 80058ee:	4303      	orrs	r3, r0
 80058f0:	608b      	str	r3, [r1, #8]
 80058f2:	e76b      	b.n	80057cc <HAL_RCC_ClockConfig+0x34>
 80058f4:	40023c00 	.word	0x40023c00
 80058f8:	40023800 	.word	0x40023800
 80058fc:	080086d0 	.word	0x080086d0
 8005900:	200001b4 	.word	0x200001b4

08005904 <HAL_RCC_GetPCLK1Freq>:
 8005904:	4b08      	ldr	r3, [pc, #32]	; (8005928 <HAL_RCC_GetPCLK1Freq+0x24>)
 8005906:	f44f 52e0 	mov.w	r2, #7168	; 0x1c00
 800590a:	689b      	ldr	r3, [r3, #8]
 800590c:	fa92 f2a2 	rbit	r2, r2
 8005910:	fab2 f282 	clz	r2, r2
 8005914:	f403 53e0 	and.w	r3, r3, #7168	; 0x1c00
 8005918:	40d3      	lsrs	r3, r2
 800591a:	4a04      	ldr	r2, [pc, #16]	; (800592c <HAL_RCC_GetPCLK1Freq+0x28>)
 800591c:	5cd3      	ldrb	r3, [r2, r3]
 800591e:	4a04      	ldr	r2, [pc, #16]	; (8005930 <HAL_RCC_GetPCLK1Freq+0x2c>)
 8005920:	6810      	ldr	r0, [r2, #0]
 8005922:	40d8      	lsrs	r0, r3
 8005924:	4770      	bx	lr
 8005926:	bf00      	nop
 8005928:	40023800 	.word	0x40023800
 800592c:	080086d0 	.word	0x080086d0
 8005930:	200001b4 	.word	0x200001b4

08005934 <HAL_RCC_GetPCLK2Freq>:
 8005934:	4b08      	ldr	r3, [pc, #32]	; (8005958 <HAL_RCC_GetPCLK2Freq+0x24>)
 8005936:	f44f 4260 	mov.w	r2, #57344	; 0xe000
 800593a:	689b      	ldr	r3, [r3, #8]
 800593c:	fa92 f2a2 	rbit	r2, r2
 8005940:	fab2 f282 	clz	r2, r2
 8005944:	f403 4360 	and.w	r3, r3, #57344	; 0xe000
 8005948:	40d3      	lsrs	r3, r2
 800594a:	4a04      	ldr	r2, [pc, #16]	; (800595c <HAL_RCC_GetPCLK2Freq+0x28>)
 800594c:	5cd3      	ldrb	r3, [r2, r3]
 800594e:	4a04      	ldr	r2, [pc, #16]	; (8005960 <HAL_RCC_GetPCLK2Freq+0x2c>)
 8005950:	6810      	ldr	r0, [r2, #0]
 8005952:	40d8      	lsrs	r0, r3
 8005954:	4770      	bx	lr
 8005956:	bf00      	nop
 8005958:	40023800 	.word	0x40023800
 800595c:	080086d0 	.word	0x080086d0
 8005960:	200001b4 	.word	0x200001b4

08005964 <HAL_RCC_GetClockConfig>:
 8005964:	230f      	movs	r3, #15
 8005966:	6003      	str	r3, [r0, #0]
 8005968:	4b0b      	ldr	r3, [pc, #44]	; (8005998 <HAL_RCC_GetClockConfig+0x34>)
 800596a:	689a      	ldr	r2, [r3, #8]
 800596c:	f002 0203 	and.w	r2, r2, #3
 8005970:	6042      	str	r2, [r0, #4]
 8005972:	689a      	ldr	r2, [r3, #8]
 8005974:	f002 02f0 	and.w	r2, r2, #240	; 0xf0
 8005978:	6082      	str	r2, [r0, #8]
 800597a:	689a      	ldr	r2, [r3, #8]
 800597c:	f402 52e0 	and.w	r2, r2, #7168	; 0x1c00
 8005980:	60c2      	str	r2, [r0, #12]
 8005982:	689b      	ldr	r3, [r3, #8]
 8005984:	08db      	lsrs	r3, r3, #3
 8005986:	f403 53e0 	and.w	r3, r3, #7168	; 0x1c00
 800598a:	6103      	str	r3, [r0, #16]
 800598c:	4b03      	ldr	r3, [pc, #12]	; (800599c <HAL_RCC_GetClockConfig+0x38>)
 800598e:	681b      	ldr	r3, [r3, #0]
 8005990:	f003 030f 	and.w	r3, r3, #15
 8005994:	600b      	str	r3, [r1, #0]
 8005996:	4770      	bx	lr
 8005998:	40023800 	.word	0x40023800
 800599c:	40023c00 	.word	0x40023c00

080059a0 <HAL_MspInit>:
 80059a0:	4770      	bx	lr
	...

080059a4 <HAL_Init>:
 80059a4:	b508      	push	{r3, lr}
 80059a6:	4b0a      	ldr	r3, [pc, #40]	; (80059d0 <HAL_Init+0x2c>)
 80059a8:	681a      	ldr	r2, [r3, #0]
 80059aa:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80059ae:	601a      	str	r2, [r3, #0]
 80059b0:	681a      	ldr	r2, [r3, #0]
 80059b2:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 80059b6:	601a      	str	r2, [r3, #0]
 80059b8:	681a      	ldr	r2, [r3, #0]
 80059ba:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 80059be:	601a      	str	r2, [r3, #0]
 80059c0:	200f      	movs	r0, #15
 80059c2:	f7fe f973 	bl	8003cac <HAL_InitTick>
 80059c6:	f7ff ffeb 	bl	80059a0 <HAL_MspInit>
 80059ca:	2000      	movs	r0, #0
 80059cc:	bd08      	pop	{r3, pc}
 80059ce:	bf00      	nop
 80059d0:	40023c00 	.word	0x40023c00

080059d4 <HAL_IncTick>:
 80059d4:	4a02      	ldr	r2, [pc, #8]	; (80059e0 <HAL_IncTick+0xc>)
 80059d6:	6813      	ldr	r3, [r2, #0]
 80059d8:	3301      	adds	r3, #1
 80059da:	6013      	str	r3, [r2, #0]
 80059dc:	4770      	bx	lr
 80059de:	bf00      	nop
 80059e0:	20003128 	.word	0x20003128

080059e4 <HAL_GetTick>:
 80059e4:	4b01      	ldr	r3, [pc, #4]	; (80059ec <HAL_GetTick+0x8>)
 80059e6:	6818      	ldr	r0, [r3, #0]
 80059e8:	4770      	bx	lr
 80059ea:	bf00      	nop
 80059ec:	20003128 	.word	0x20003128

080059f0 <mbed::Ticker::handler()>:
 80059f0:	6943      	ldr	r3, [r0, #20]
 80059f2:	6841      	ldr	r1, [r0, #4]
 80059f4:	b510      	push	{r4, lr}
 80059f6:	4604      	mov	r4, r0
 80059f8:	4419      	add	r1, r3
 80059fa:	f000 fa85 	bl	8005f08 <mbed::TimerEvent::insert(unsigned long)>
 80059fe:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8005a00:	f104 0018 	add.w	r0, r4, #24
 8005a04:	681b      	ldr	r3, [r3, #0]
 8005a06:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8005a0a:	4718      	bx	r3

08005a0c <mbed::Ticker::setup(unsigned long)>:
 8005a0c:	b538      	push	{r3, r4, r5, lr}
 8005a0e:	4604      	mov	r4, r0
 8005a10:	460d      	mov	r5, r1
 8005a12:	f7fc fe75 	bl	8002700 <core_util_critical_section_enter>
 8005a16:	4620      	mov	r0, r4
 8005a18:	f000 fa7c 	bl	8005f14 <mbed::TimerEvent::remove()>
 8005a1c:	6165      	str	r5, [r4, #20]
 8005a1e:	6920      	ldr	r0, [r4, #16]
 8005a20:	f7fc fde7 	bl	80025f2 <ticker_read>
 8005a24:	1829      	adds	r1, r5, r0
 8005a26:	4620      	mov	r0, r4
 8005a28:	f000 fa6e 	bl	8005f08 <mbed::TimerEvent::insert(unsigned long)>
 8005a2c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8005a30:	f7fc be7c 	b.w	800272c <core_util_critical_section_exit>

08005a34 <mbed::Ticker::detach()>:
 8005a34:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8005a36:	4606      	mov	r6, r0
 8005a38:	f106 0418 	add.w	r4, r6, #24
 8005a3c:	f7fc fe60 	bl	8002700 <core_util_critical_section_enter>
 8005a40:	466d      	mov	r5, sp
 8005a42:	4630      	mov	r0, r6
 8005a44:	f000 fa66 	bl	8005f14 <mbed::TimerEvent::remove()>
 8005a48:	2300      	movs	r3, #0
 8005a4a:	42ac      	cmp	r4, r5
 8005a4c:	9303      	str	r3, [sp, #12]
 8005a4e:	d00b      	beq.n	8005a68 <mbed::Ticker::detach()+0x34>
 8005a50:	4620      	mov	r0, r4
 8005a52:	f7fa fe2b 	bl	80006ac <mbed::Callback<void ()>::~Callback()>
 8005a56:	b13c      	cbz	r4, 8005a68 <mbed::Ticker::detach()+0x34>
 8005a58:	9b03      	ldr	r3, [sp, #12]
 8005a5a:	b11b      	cbz	r3, 8005a64 <mbed::Ticker::detach()+0x30>
 8005a5c:	685b      	ldr	r3, [r3, #4]
 8005a5e:	4669      	mov	r1, sp
 8005a60:	4620      	mov	r0, r4
 8005a62:	4798      	blx	r3
 8005a64:	9b03      	ldr	r3, [sp, #12]
 8005a66:	6273      	str	r3, [r6, #36]	; 0x24
 8005a68:	4628      	mov	r0, r5
 8005a6a:	f7fa fe1f 	bl	80006ac <mbed::Callback<void ()>::~Callback()>
 8005a6e:	f7fc fe5d 	bl	800272c <core_util_critical_section_exit>
 8005a72:	b004      	add	sp, #16
 8005a74:	bd70      	pop	{r4, r5, r6, pc}

08005a76 <mbed::Timer::start()>:
 8005a76:	b510      	push	{r4, lr}
 8005a78:	4604      	mov	r4, r0
 8005a7a:	f7fc fe41 	bl	8002700 <core_util_critical_section_enter>
 8005a7e:	6823      	ldr	r3, [r4, #0]
 8005a80:	b92b      	cbnz	r3, 8005a8e <mbed::Timer::start()+0x18>
 8005a82:	68e0      	ldr	r0, [r4, #12]
 8005a84:	f7fc fdb5 	bl	80025f2 <ticker_read>
 8005a88:	2301      	movs	r3, #1
 8005a8a:	6060      	str	r0, [r4, #4]
 8005a8c:	6023      	str	r3, [r4, #0]
 8005a8e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8005a92:	f7fc be4b 	b.w	800272c <core_util_critical_section_exit>

08005a96 <mbed::Timer::slicetime()>:
 8005a96:	b538      	push	{r3, r4, r5, lr}
 8005a98:	4605      	mov	r5, r0
 8005a9a:	f7fc fe31 	bl	8002700 <core_util_critical_section_enter>
 8005a9e:	682c      	ldr	r4, [r5, #0]
 8005aa0:	b124      	cbz	r4, 8005aac <mbed::Timer::slicetime()+0x16>
 8005aa2:	68e8      	ldr	r0, [r5, #12]
 8005aa4:	f7fc fda5 	bl	80025f2 <ticker_read>
 8005aa8:	686c      	ldr	r4, [r5, #4]
 8005aaa:	1b04      	subs	r4, r0, r4
 8005aac:	f7fc fe3e 	bl	800272c <core_util_critical_section_exit>
 8005ab0:	4620      	mov	r0, r4
 8005ab2:	bd38      	pop	{r3, r4, r5, pc}

08005ab4 <mbed::Timer::read_us()>:
 8005ab4:	b538      	push	{r3, r4, r5, lr}
 8005ab6:	4605      	mov	r5, r0
 8005ab8:	f7fc fe22 	bl	8002700 <core_util_critical_section_enter>
 8005abc:	4628      	mov	r0, r5
 8005abe:	68ac      	ldr	r4, [r5, #8]
 8005ac0:	f7ff ffe9 	bl	8005a96 <mbed::Timer::slicetime()>
 8005ac4:	4404      	add	r4, r0
 8005ac6:	f7fc fe31 	bl	800272c <core_util_critical_section_exit>
 8005aca:	4620      	mov	r0, r4
 8005acc:	bd38      	pop	{r3, r4, r5, pc}
	...

08005ad0 <mbed::Timer::read()>:
 8005ad0:	b508      	push	{r3, lr}
 8005ad2:	f7ff ffef 	bl	8005ab4 <mbed::Timer::read_us()>
 8005ad6:	ee07 0a90 	vmov	s15, r0
 8005ada:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8005ade:	eddf 7a03 	vldr	s15, [pc, #12]	; 8005aec <mbed::Timer::read()+0x1c>
 8005ae2:	eec7 6a27 	vdiv.f32	s13, s14, s15
 8005ae6:	ee16 0a90 	vmov	r0, s13
 8005aea:	bd08      	pop	{r3, pc}
 8005aec:	49742400 	.word	0x49742400

08005af0 <mbed::Timer::read_ms()>:
 8005af0:	b508      	push	{r3, lr}
 8005af2:	f7ff ffdf 	bl	8005ab4 <mbed::Timer::read_us()>
 8005af6:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8005afa:	fb90 f0f3 	sdiv	r0, r0, r3
 8005afe:	bd08      	pop	{r3, pc}

08005b00 <mbed::Timer::reset()>:
 8005b00:	b510      	push	{r4, lr}
 8005b02:	4604      	mov	r4, r0
 8005b04:	f7fc fdfc 	bl	8002700 <core_util_critical_section_enter>
 8005b08:	68e0      	ldr	r0, [r4, #12]
 8005b0a:	f7fc fd72 	bl	80025f2 <ticker_read>
 8005b0e:	2300      	movs	r3, #0
 8005b10:	6060      	str	r0, [r4, #4]
 8005b12:	60a3      	str	r3, [r4, #8]
 8005b14:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8005b18:	f7fc be08 	b.w	800272c <core_util_critical_section_exit>

08005b1c <mbed::Timer::Timer()>:
 8005b1c:	2300      	movs	r3, #0
 8005b1e:	b510      	push	{r4, lr}
 8005b20:	6003      	str	r3, [r0, #0]
 8005b22:	6043      	str	r3, [r0, #4]
 8005b24:	6083      	str	r3, [r0, #8]
 8005b26:	4604      	mov	r4, r0
 8005b28:	f7fc fcec 	bl	8002504 <get_us_ticker_data>
 8005b2c:	60e0      	str	r0, [r4, #12]
 8005b2e:	4620      	mov	r0, r4
 8005b30:	f7ff ffe6 	bl	8005b00 <mbed::Timer::reset()>
 8005b34:	4620      	mov	r0, r4
 8005b36:	bd10      	pop	{r4, pc}

08005b38 <mbed::RawSerial::lock()>:
 8005b38:	4770      	bx	lr
	...

08005b3c <mbed::RawSerial::RawSerial(PinName, PinName, int)>:
 8005b3c:	b510      	push	{r4, lr}
 8005b3e:	4604      	mov	r4, r0
 8005b40:	f000 f92c 	bl	8005d9c <mbed::SerialBase::SerialBase(PinName, PinName, int)>
 8005b44:	4b01      	ldr	r3, [pc, #4]	; (8005b4c <mbed::RawSerial::RawSerial(PinName, PinName, int)+0x10>)
 8005b46:	6023      	str	r3, [r4, #0]
 8005b48:	4620      	mov	r0, r4
 8005b4a:	bd10      	pop	{r4, pc}
 8005b4c:	080086fc 	.word	0x080086fc

08005b50 <mbed::RawSerial::~RawSerial()>:
 8005b50:	b510      	push	{r4, lr}
 8005b52:	4b03      	ldr	r3, [pc, #12]	; (8005b60 <mbed::RawSerial::~RawSerial()+0x10>)
 8005b54:	6003      	str	r3, [r0, #0]
 8005b56:	4604      	mov	r4, r0
 8005b58:	f7fc fb16 	bl	8002188 <mbed::SerialBase::~SerialBase()>
 8005b5c:	4620      	mov	r0, r4
 8005b5e:	bd10      	pop	{r4, pc}
 8005b60:	080086fc 	.word	0x080086fc

08005b64 <mbed::RawSerial::~RawSerial()>:
 8005b64:	b510      	push	{r4, lr}
 8005b66:	4604      	mov	r4, r0
 8005b68:	f7ff fff2 	bl	8005b50 <mbed::RawSerial::~RawSerial()>
 8005b6c:	4620      	mov	r0, r4
 8005b6e:	f000 fb5f 	bl	8006230 <operator delete(void*)>
 8005b72:	4620      	mov	r0, r4
 8005b74:	bd10      	pop	{r4, pc}

08005b76 <mbed::donothing()>:
 8005b76:	4770      	bx	lr

08005b78 <mbed::InterruptIn::read()>:
 8005b78:	6883      	ldr	r3, [r0, #8]
 8005b7a:	681a      	ldr	r2, [r3, #0]
 8005b7c:	6843      	ldr	r3, [r0, #4]
 8005b7e:	421a      	tst	r2, r3
 8005b80:	bf14      	ite	ne
 8005b82:	2001      	movne	r0, #1
 8005b84:	2000      	moveq	r0, #0
 8005b86:	4770      	bx	lr

08005b88 <mbed::InterruptIn::~InterruptIn()>:
 8005b88:	b510      	push	{r4, lr}
 8005b8a:	4b08      	ldr	r3, [pc, #32]	; (8005bac <mbed::InterruptIn::~InterruptIn()+0x24>)
 8005b8c:	4604      	mov	r4, r0
 8005b8e:	f840 3b20 	str.w	r3, [r0], #32
 8005b92:	f7fe fa5f 	bl	8004054 <gpio_irq_free>
 8005b96:	f104 0040 	add.w	r0, r4, #64	; 0x40
 8005b9a:	f7fa fd87 	bl	80006ac <mbed::Callback<void ()>::~Callback()>
 8005b9e:	f104 0030 	add.w	r0, r4, #48	; 0x30
 8005ba2:	f7fa fd83 	bl	80006ac <mbed::Callback<void ()>::~Callback()>
 8005ba6:	4620      	mov	r0, r4
 8005ba8:	bd10      	pop	{r4, pc}
 8005baa:	bf00      	nop
 8005bac:	08008714 	.word	0x08008714

08005bb0 <mbed::InterruptIn::~InterruptIn()>:
 8005bb0:	b510      	push	{r4, lr}
 8005bb2:	4604      	mov	r4, r0
 8005bb4:	f7ff ffe8 	bl	8005b88 <mbed::InterruptIn::~InterruptIn()>
 8005bb8:	4620      	mov	r0, r4
 8005bba:	f000 fb39 	bl	8006230 <operator delete(void*)>
 8005bbe:	4620      	mov	r0, r4
 8005bc0:	bd10      	pop	{r4, pc}

08005bc2 <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)>:
 8005bc2:	4288      	cmp	r0, r1
 8005bc4:	b538      	push	{r3, r4, r5, lr}
 8005bc6:	4604      	mov	r4, r0
 8005bc8:	460d      	mov	r5, r1
 8005bca:	d00a      	beq.n	8005be2 <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)+0x20>
 8005bcc:	f7fa fd6e 	bl	80006ac <mbed::Callback<void ()>::~Callback()>
 8005bd0:	b13c      	cbz	r4, 8005be2 <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)+0x20>
 8005bd2:	68eb      	ldr	r3, [r5, #12]
 8005bd4:	b11b      	cbz	r3, 8005bde <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)+0x1c>
 8005bd6:	685b      	ldr	r3, [r3, #4]
 8005bd8:	4629      	mov	r1, r5
 8005bda:	4620      	mov	r0, r4
 8005bdc:	4798      	blx	r3
 8005bde:	68eb      	ldr	r3, [r5, #12]
 8005be0:	60e3      	str	r3, [r4, #12]
 8005be2:	4620      	mov	r0, r4
 8005be4:	bd38      	pop	{r3, r4, r5, pc}
	...

08005be8 <mbed::InterruptIn::InterruptIn(PinName)>:
 8005be8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8005bec:	4605      	mov	r5, r0
 8005bee:	4b1f      	ldr	r3, [pc, #124]	; (8005c6c <mbed::InterruptIn::InterruptIn(PinName)+0x84>)
 8005bf0:	f845 3b04 	str.w	r3, [r5], #4
 8005bf4:	4604      	mov	r4, r0
 8005bf6:	b085      	sub	sp, #20
 8005bf8:	460e      	mov	r6, r1
 8005bfa:	f104 0720 	add.w	r7, r4, #32
 8005bfe:	221c      	movs	r2, #28
 8005c00:	2100      	movs	r1, #0
 8005c02:	4628      	mov	r0, r5
 8005c04:	f001 fa61 	bl	80070ca <memset>
 8005c08:	2210      	movs	r2, #16
 8005c0a:	2100      	movs	r1, #0
 8005c0c:	4638      	mov	r0, r7
 8005c0e:	f001 fa5c 	bl	80070ca <memset>
 8005c12:	2300      	movs	r3, #0
 8005c14:	63e3      	str	r3, [r4, #60]	; 0x3c
 8005c16:	64e3      	str	r3, [r4, #76]	; 0x4c
 8005c18:	4669      	mov	r1, sp
 8005c1a:	f8df 9058 	ldr.w	r9, [pc, #88]	; 8005c74 <mbed::InterruptIn::InterruptIn(PinName)+0x8c>
 8005c1e:	f8df 8058 	ldr.w	r8, [pc, #88]	; 8005c78 <mbed::InterruptIn::InterruptIn(PinName)+0x90>
 8005c22:	f8cd 9000 	str.w	r9, [sp]
 8005c26:	f104 0030 	add.w	r0, r4, #48	; 0x30
 8005c2a:	f8cd 800c 	str.w	r8, [sp, #12]
 8005c2e:	f7ff ffc8 	bl	8005bc2 <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)>
 8005c32:	4668      	mov	r0, sp
 8005c34:	f7fa fd3a 	bl	80006ac <mbed::Callback<void ()>::~Callback()>
 8005c38:	4669      	mov	r1, sp
 8005c3a:	f104 0040 	add.w	r0, r4, #64	; 0x40
 8005c3e:	f8cd 9000 	str.w	r9, [sp]
 8005c42:	f8cd 800c 	str.w	r8, [sp, #12]
 8005c46:	f7ff ffbc 	bl	8005bc2 <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)>
 8005c4a:	4668      	mov	r0, sp
 8005c4c:	f7fa fd2e 	bl	80006ac <mbed::Callback<void ()>::~Callback()>
 8005c50:	4623      	mov	r3, r4
 8005c52:	4a07      	ldr	r2, [pc, #28]	; (8005c70 <mbed::InterruptIn::InterruptIn(PinName)+0x88>)
 8005c54:	4631      	mov	r1, r6
 8005c56:	4638      	mov	r0, r7
 8005c58:	f7fe f948 	bl	8003eec <gpio_irq_init>
 8005c5c:	4628      	mov	r0, r5
 8005c5e:	4631      	mov	r1, r6
 8005c60:	f7fc fc39 	bl	80024d6 <gpio_init_in>
 8005c64:	4620      	mov	r0, r4
 8005c66:	b005      	add	sp, #20
 8005c68:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8005c6c:	08008714 	.word	0x08008714
 8005c70:	08005d1b 	.word	0x08005d1b
 8005c74:	08005b77 	.word	0x08005b77
 8005c78:	08007e24 	.word	0x08007e24

08005c7c <mbed::InterruptIn::rise(mbed::Callback<void ()>)>:
 8005c7c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8005c7e:	460e      	mov	r6, r1
 8005c80:	4604      	mov	r4, r0
 8005c82:	f7fc fd3d 	bl	8002700 <core_util_critical_section_enter>
 8005c86:	68f5      	ldr	r5, [r6, #12]
 8005c88:	f104 0030 	add.w	r0, r4, #48	; 0x30
 8005c8c:	3420      	adds	r4, #32
 8005c8e:	b15d      	cbz	r5, 8005ca8 <mbed::InterruptIn::rise(mbed::Callback<void ()>)+0x2c>
 8005c90:	4631      	mov	r1, r6
 8005c92:	f7ff ff96 	bl	8005bc2 <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)>
 8005c96:	2201      	movs	r2, #1
 8005c98:	2101      	movs	r1, #1
 8005c9a:	4620      	mov	r0, r4
 8005c9c:	f7fe f8ca 	bl	8003e34 <gpio_irq_set>
 8005ca0:	f7fc fd44 	bl	800272c <core_util_critical_section_exit>
 8005ca4:	b004      	add	sp, #16
 8005ca6:	bd70      	pop	{r4, r5, r6, pc}
 8005ca8:	4b05      	ldr	r3, [pc, #20]	; (8005cc0 <mbed::InterruptIn::rise(mbed::Callback<void ()>)+0x44>)
 8005caa:	9300      	str	r3, [sp, #0]
 8005cac:	4669      	mov	r1, sp
 8005cae:	4b05      	ldr	r3, [pc, #20]	; (8005cc4 <mbed::InterruptIn::rise(mbed::Callback<void ()>)+0x48>)
 8005cb0:	9303      	str	r3, [sp, #12]
 8005cb2:	f7ff ff86 	bl	8005bc2 <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)>
 8005cb6:	4668      	mov	r0, sp
 8005cb8:	f7fa fcf8 	bl	80006ac <mbed::Callback<void ()>::~Callback()>
 8005cbc:	462a      	mov	r2, r5
 8005cbe:	e7eb      	b.n	8005c98 <mbed::InterruptIn::rise(mbed::Callback<void ()>)+0x1c>
 8005cc0:	08005b77 	.word	0x08005b77
 8005cc4:	08007e24 	.word	0x08007e24

08005cc8 <mbed::InterruptIn::fall(mbed::Callback<void ()>)>:
 8005cc8:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8005cca:	460e      	mov	r6, r1
 8005ccc:	4604      	mov	r4, r0
 8005cce:	f7fc fd17 	bl	8002700 <core_util_critical_section_enter>
 8005cd2:	68f5      	ldr	r5, [r6, #12]
 8005cd4:	f104 0040 	add.w	r0, r4, #64	; 0x40
 8005cd8:	3420      	adds	r4, #32
 8005cda:	b15d      	cbz	r5, 8005cf4 <mbed::InterruptIn::fall(mbed::Callback<void ()>)+0x2c>
 8005cdc:	4631      	mov	r1, r6
 8005cde:	f7ff ff70 	bl	8005bc2 <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)>
 8005ce2:	2201      	movs	r2, #1
 8005ce4:	2102      	movs	r1, #2
 8005ce6:	4620      	mov	r0, r4
 8005ce8:	f7fe f8a4 	bl	8003e34 <gpio_irq_set>
 8005cec:	f7fc fd1e 	bl	800272c <core_util_critical_section_exit>
 8005cf0:	b004      	add	sp, #16
 8005cf2:	bd70      	pop	{r4, r5, r6, pc}
 8005cf4:	4b05      	ldr	r3, [pc, #20]	; (8005d0c <mbed::InterruptIn::fall(mbed::Callback<void ()>)+0x44>)
 8005cf6:	9300      	str	r3, [sp, #0]
 8005cf8:	4669      	mov	r1, sp
 8005cfa:	4b05      	ldr	r3, [pc, #20]	; (8005d10 <mbed::InterruptIn::fall(mbed::Callback<void ()>)+0x48>)
 8005cfc:	9303      	str	r3, [sp, #12]
 8005cfe:	f7ff ff60 	bl	8005bc2 <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)>
 8005d02:	4668      	mov	r0, sp
 8005d04:	f7fa fcd2 	bl	80006ac <mbed::Callback<void ()>::~Callback()>
 8005d08:	462a      	mov	r2, r5
 8005d0a:	e7eb      	b.n	8005ce4 <mbed::InterruptIn::fall(mbed::Callback<void ()>)+0x1c>
 8005d0c:	08005b77 	.word	0x08005b77
 8005d10:	08007e24 	.word	0x08007e24

08005d14 <mbed::Callback<void ()>::call() const>:
 8005d14:	68c3      	ldr	r3, [r0, #12]
 8005d16:	681b      	ldr	r3, [r3, #0]
 8005d18:	4718      	bx	r3

08005d1a <mbed::InterruptIn::_irq_handler(unsigned long, gpio_irq_event)>:
 8005d1a:	2901      	cmp	r1, #1
 8005d1c:	b508      	push	{r3, lr}
 8005d1e:	d002      	beq.n	8005d26 <mbed::InterruptIn::_irq_handler(unsigned long, gpio_irq_event)+0xc>
 8005d20:	2902      	cmp	r1, #2
 8005d22:	d004      	beq.n	8005d2e <mbed::InterruptIn::_irq_handler(unsigned long, gpio_irq_event)+0x14>
 8005d24:	bd08      	pop	{r3, pc}
 8005d26:	3030      	adds	r0, #48	; 0x30
 8005d28:	f7ff fff4 	bl	8005d14 <mbed::Callback<void ()>::call() const>
 8005d2c:	bd08      	pop	{r3, pc}
 8005d2e:	3040      	adds	r0, #64	; 0x40
 8005d30:	e7fa      	b.n	8005d28 <mbed::InterruptIn::_irq_handler(unsigned long, gpio_irq_event)+0xe>

08005d32 <mbed::donothing()>:
 8005d32:	4770      	bx	lr

08005d34 <mbed::SerialBase::lock()>:
 8005d34:	4770      	bx	lr

08005d36 <mbed::SerialBase::unlock()>:
 8005d36:	4770      	bx	lr

08005d38 <mbed::SerialBase::_irq_handler(unsigned long, SerialIrq)>:
 8005d38:	eb00 1201 	add.w	r2, r0, r1, lsl #4
 8005d3c:	f102 0098 	add.w	r0, r2, #152	; 0x98
 8005d40:	f8d2 30a4 	ldr.w	r3, [r2, #164]	; 0xa4
 8005d44:	681b      	ldr	r3, [r3, #0]
 8005d46:	4718      	bx	r3

08005d48 <CThunk<mbed::SerialBase>::trampoline(mbed::SerialBase*, void*, void (mbed::SerialBase::**)(void*))>:
 8005d48:	b410      	push	{r4}
 8005d4a:	b180      	cbz	r0, 8005d6e <CThunk<mbed::SerialBase>::trampoline(mbed::SerialBase*, void*, void (mbed::SerialBase::**)(void*))+0x26>
 8005d4c:	6814      	ldr	r4, [r2, #0]
 8005d4e:	6853      	ldr	r3, [r2, #4]
 8005d50:	b90c      	cbnz	r4, 8005d56 <CThunk<mbed::SerialBase>::trampoline(mbed::SerialBase*, void*, void (mbed::SerialBase::**)(void*))+0xe>
 8005d52:	07da      	lsls	r2, r3, #31
 8005d54:	d50b      	bpl.n	8005d6e <CThunk<mbed::SerialBase>::trampoline(mbed::SerialBase*, void*, void (mbed::SerialBase::**)(void*))+0x26>
 8005d56:	f013 0f01 	tst.w	r3, #1
 8005d5a:	ea4f 0363 	mov.w	r3, r3, asr #1
 8005d5e:	bf1c      	itt	ne
 8005d60:	58c2      	ldrne	r2, [r0, r3]
 8005d62:	5914      	ldrne	r4, [r2, r4]
 8005d64:	4418      	add	r0, r3
 8005d66:	4623      	mov	r3, r4
 8005d68:	f85d 4b04 	ldr.w	r4, [sp], #4
 8005d6c:	4718      	bx	r3
 8005d6e:	f85d 4b04 	ldr.w	r4, [sp], #4
 8005d72:	4770      	bx	lr

08005d74 <mbed::SerialBase::baud(int)>:
 8005d74:	b570      	push	{r4, r5, r6, lr}
 8005d76:	4605      	mov	r5, r0
 8005d78:	4604      	mov	r4, r0
 8005d7a:	f855 3b4c 	ldr.w	r3, [r5], #76
 8005d7e:	460e      	mov	r6, r1
 8005d80:	681b      	ldr	r3, [r3, #0]
 8005d82:	4798      	blx	r3
 8005d84:	4628      	mov	r0, r5
 8005d86:	4631      	mov	r1, r6
 8005d88:	f7fe fe70 	bl	8004a6c <serial_baud>
 8005d8c:	6823      	ldr	r3, [r4, #0]
 8005d8e:	f8c4 60b8 	str.w	r6, [r4, #184]	; 0xb8
 8005d92:	4620      	mov	r0, r4
 8005d94:	685b      	ldr	r3, [r3, #4]
 8005d96:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8005d9a:	4718      	bx	r3

08005d9c <mbed::SerialBase::SerialBase(PinName, PinName, int)>:
 8005d9c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8005da0:	b087      	sub	sp, #28
 8005da2:	2500      	movs	r5, #0
 8005da4:	4691      	mov	r9, r2
 8005da6:	9500      	str	r5, [sp, #0]
 8005da8:	4602      	mov	r2, r0
 8005daa:	9501      	str	r5, [sp, #4]
 8005dac:	4604      	mov	r4, r0
 8005dae:	4688      	mov	r8, r1
 8005db0:	461f      	mov	r7, r3
 8005db2:	e89d 0003 	ldmia.w	sp, {r0, r1}
 8005db6:	4b27      	ldr	r3, [pc, #156]	; (8005e54 <mbed::SerialBase::SerialBase(PinName, PinName, int)+0xb8>)
 8005db8:	f842 3b08 	str.w	r3, [r2], #8
 8005dbc:	4b26      	ldr	r3, [pc, #152]	; (8005e58 <mbed::SerialBase::SerialBase(PinName, PinName, int)+0xbc>)
 8005dbe:	e882 0003 	stmia.w	r2, {r0, r1}
 8005dc2:	6123      	str	r3, [r4, #16]
 8005dc4:	f248 0307 	movw	r3, #32775	; 0x8007
 8005dc8:	6163      	str	r3, [r4, #20]
 8005dca:	4b24      	ldr	r3, [pc, #144]	; (8005e5c <mbed::SerialBase::SerialBase(PinName, PinName, int)+0xc0>)
 8005dcc:	61e5      	str	r5, [r4, #28]
 8005dce:	61a4      	str	r4, [r4, #24]
 8005dd0:	6222      	str	r2, [r4, #32]
 8005dd2:	6263      	str	r3, [r4, #36]	; 0x24
 8005dd4:	f3bf 8f6f 	isb	sy
 8005dd8:	f3bf 8f4f 	dsb	sy
 8005ddc:	f104 064c 	add.w	r6, r4, #76	; 0x4c
 8005de0:	224c      	movs	r2, #76	; 0x4c
 8005de2:	6365      	str	r5, [r4, #52]	; 0x34
 8005de4:	6465      	str	r5, [r4, #68]	; 0x44
 8005de6:	f884 5048 	strb.w	r5, [r4, #72]	; 0x48
 8005dea:	f884 5049 	strb.w	r5, [r4, #73]	; 0x49
 8005dee:	4630      	mov	r0, r6
 8005df0:	f001 f96b 	bl	80070ca <memset>
 8005df4:	a902      	add	r1, sp, #8
 8005df6:	f8c4 50a4 	str.w	r5, [r4, #164]	; 0xa4
 8005dfa:	f8c4 50b4 	str.w	r5, [r4, #180]	; 0xb4
 8005dfe:	f8c4 70b8 	str.w	r7, [r4, #184]	; 0xb8
 8005e02:	4d17      	ldr	r5, [pc, #92]	; (8005e60 <mbed::SerialBase::SerialBase(PinName, PinName, int)+0xc4>)
 8005e04:	4f17      	ldr	r7, [pc, #92]	; (8005e64 <mbed::SerialBase::SerialBase(PinName, PinName, int)+0xc8>)
 8005e06:	9702      	str	r7, [sp, #8]
 8005e08:	f104 0098 	add.w	r0, r4, #152	; 0x98
 8005e0c:	9505      	str	r5, [sp, #20]
 8005e0e:	f7ff fed8 	bl	8005bc2 <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)>
 8005e12:	a802      	add	r0, sp, #8
 8005e14:	f7fa fc4a 	bl	80006ac <mbed::Callback<void ()>::~Callback()>
 8005e18:	a902      	add	r1, sp, #8
 8005e1a:	f104 00a8 	add.w	r0, r4, #168	; 0xa8
 8005e1e:	9702      	str	r7, [sp, #8]
 8005e20:	9505      	str	r5, [sp, #20]
 8005e22:	f7ff fece 	bl	8005bc2 <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)>
 8005e26:	a802      	add	r0, sp, #8
 8005e28:	f7fa fc40 	bl	80006ac <mbed::Callback<void ()>::~Callback()>
 8005e2c:	464a      	mov	r2, r9
 8005e2e:	4641      	mov	r1, r8
 8005e30:	4630      	mov	r0, r6
 8005e32:	f7fe fd7d 	bl	8004930 <serial_init>
 8005e36:	f8d4 10b8 	ldr.w	r1, [r4, #184]	; 0xb8
 8005e3a:	4630      	mov	r0, r6
 8005e3c:	f7fe fe16 	bl	8004a6c <serial_baud>
 8005e40:	4630      	mov	r0, r6
 8005e42:	4622      	mov	r2, r4
 8005e44:	4908      	ldr	r1, [pc, #32]	; (8005e68 <mbed::SerialBase::SerialBase(PinName, PinName, int)+0xcc>)
 8005e46:	f7fe fe15 	bl	8004a74 <serial_irq_handler>
 8005e4a:	4620      	mov	r0, r4
 8005e4c:	b007      	add	sp, #28
 8005e4e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8005e52:	bf00      	nop
 8005e54:	08008724 	.word	0x08008724
 8005e58:	e890a001 	.word	0xe890a001
 8005e5c:	08005d49 	.word	0x08005d49
 8005e60:	08007e24 	.word	0x08007e24
 8005e64:	08005d33 	.word	0x08005d33
 8005e68:	08005d39 	.word	0x08005d39

08005e6c <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)>:
 8005e6c:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8005e70:	4605      	mov	r5, r0
 8005e72:	4688      	mov	r8, r1
 8005e74:	f855 3b4c 	ldr.w	r3, [r5], #76
 8005e78:	681b      	ldr	r3, [r3, #0]
 8005e7a:	4604      	mov	r4, r0
 8005e7c:	4616      	mov	r6, r2
 8005e7e:	4798      	blx	r3
 8005e80:	f7fc fc3e 	bl	8002700 <core_util_critical_section_enter>
 8005e84:	f8d8 700c 	ldr.w	r7, [r8, #12]
 8005e88:	0130      	lsls	r0, r6, #4
 8005e8a:	b197      	cbz	r7, 8005eb2 <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)+0x46>
 8005e8c:	3098      	adds	r0, #152	; 0x98
 8005e8e:	4641      	mov	r1, r8
 8005e90:	4420      	add	r0, r4
 8005e92:	f7ff fe96 	bl	8005bc2 <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)>
 8005e96:	2201      	movs	r2, #1
 8005e98:	4631      	mov	r1, r6
 8005e9a:	4628      	mov	r0, r5
 8005e9c:	f7fe fdf6 	bl	8004a8c <serial_irq_set>
 8005ea0:	f7fc fc44 	bl	800272c <core_util_critical_section_exit>
 8005ea4:	6823      	ldr	r3, [r4, #0]
 8005ea6:	4620      	mov	r0, r4
 8005ea8:	685b      	ldr	r3, [r3, #4]
 8005eaa:	4798      	blx	r3
 8005eac:	b004      	add	sp, #16
 8005eae:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8005eb2:	4b07      	ldr	r3, [pc, #28]	; (8005ed0 <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)+0x64>)
 8005eb4:	9300      	str	r3, [sp, #0]
 8005eb6:	3098      	adds	r0, #152	; 0x98
 8005eb8:	4b06      	ldr	r3, [pc, #24]	; (8005ed4 <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)+0x68>)
 8005eba:	9303      	str	r3, [sp, #12]
 8005ebc:	4669      	mov	r1, sp
 8005ebe:	4420      	add	r0, r4
 8005ec0:	f7ff fe7f 	bl	8005bc2 <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)>
 8005ec4:	4668      	mov	r0, sp
 8005ec6:	f7fa fbf1 	bl	80006ac <mbed::Callback<void ()>::~Callback()>
 8005eca:	463a      	mov	r2, r7
 8005ecc:	e7e4      	b.n	8005e98 <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)+0x2c>
 8005ece:	bf00      	nop
 8005ed0:	08005d33 	.word	0x08005d33
 8005ed4:	08007e24 	.word	0x08007e24

08005ed8 <mbed::TimerEvent::irq(unsigned long)>:
 8005ed8:	6803      	ldr	r3, [r0, #0]
 8005eda:	689b      	ldr	r3, [r3, #8]
 8005edc:	4718      	bx	r3
	...

08005ee0 <mbed::TimerEvent::TimerEvent()>:
 8005ee0:	4b07      	ldr	r3, [pc, #28]	; (8005f00 <mbed::TimerEvent::TimerEvent()+0x20>)
 8005ee2:	b510      	push	{r4, lr}
 8005ee4:	6003      	str	r3, [r0, #0]
 8005ee6:	2300      	movs	r3, #0
 8005ee8:	6043      	str	r3, [r0, #4]
 8005eea:	6083      	str	r3, [r0, #8]
 8005eec:	60c3      	str	r3, [r0, #12]
 8005eee:	4604      	mov	r4, r0
 8005ef0:	f7fc fb08 	bl	8002504 <get_us_ticker_data>
 8005ef4:	4903      	ldr	r1, [pc, #12]	; (8005f04 <mbed::TimerEvent::TimerEvent()+0x24>)
 8005ef6:	6120      	str	r0, [r4, #16]
 8005ef8:	f7fc fb0e 	bl	8002518 <ticker_set_handler>
 8005efc:	4620      	mov	r0, r4
 8005efe:	bd10      	pop	{r4, pc}
 8005f00:	0800873c 	.word	0x0800873c
 8005f04:	08005ed9 	.word	0x08005ed9

08005f08 <mbed::TimerEvent::insert(unsigned long)>:
 8005f08:	4603      	mov	r3, r0
 8005f0a:	460a      	mov	r2, r1
 8005f0c:	1d01      	adds	r1, r0, #4
 8005f0e:	6900      	ldr	r0, [r0, #16]
 8005f10:	f7fc bb2e 	b.w	8002570 <ticker_insert_event>

08005f14 <mbed::TimerEvent::remove()>:
 8005f14:	1d01      	adds	r1, r0, #4
 8005f16:	6900      	ldr	r0, [r0, #16]
 8005f18:	f7fc bb4b 	b.w	80025b2 <ticker_remove_event>

08005f1c <mbed::TimerEvent::~TimerEvent()>:
 8005f1c:	b510      	push	{r4, lr}
 8005f1e:	4b03      	ldr	r3, [pc, #12]	; (8005f2c <mbed::TimerEvent::~TimerEvent()+0x10>)
 8005f20:	6003      	str	r3, [r0, #0]
 8005f22:	4604      	mov	r4, r0
 8005f24:	f7ff fff6 	bl	8005f14 <mbed::TimerEvent::remove()>
 8005f28:	4620      	mov	r0, r4
 8005f2a:	bd10      	pop	{r4, pc}
 8005f2c:	0800873c 	.word	0x0800873c

08005f30 <mbed::CircularBuffer<mbed::Transaction<mbed::SPI>, 2ul, unsigned long>::~CircularBuffer()>:
 8005f30:	b538      	push	{r3, r4, r5, lr}
 8005f32:	4604      	mov	r4, r0
 8005f34:	b148      	cbz	r0, 8005f4a <mbed::CircularBuffer<mbed::Transaction<mbed::SPI>, 2ul, unsigned long>::~CircularBuffer()+0x1a>
 8005f36:	3058      	adds	r0, #88	; 0x58
 8005f38:	42a0      	cmp	r0, r4
 8005f3a:	d006      	beq.n	8005f4a <mbed::CircularBuffer<mbed::Transaction<mbed::SPI>, 2ul, unsigned long>::~CircularBuffer()+0x1a>
 8005f3c:	f1a0 052c 	sub.w	r5, r0, #44	; 0x2c
 8005f40:	3814      	subs	r0, #20
 8005f42:	f7fc f918 	bl	8002176 <mbed::Callback<void (int)>::~Callback()>
 8005f46:	4628      	mov	r0, r5
 8005f48:	e7f6      	b.n	8005f38 <mbed::CircularBuffer<mbed::Transaction<mbed::SPI>, 2ul, unsigned long>::~CircularBuffer()+0x8>
 8005f4a:	4620      	mov	r0, r4
 8005f4c:	bd38      	pop	{r3, r4, r5, pc}
	...

08005f50 <_GLOBAL__sub_I__ZN4mbed3SPI19_transaction_bufferE>:
 8005f50:	b570      	push	{r4, r5, r6, lr}
 8005f52:	4c0e      	ldr	r4, [pc, #56]	; (8005f8c <_GLOBAL__sub_I__ZN4mbed3SPI19_transaction_bufferE+0x3c>)
 8005f54:	4620      	mov	r0, r4
 8005f56:	2500      	movs	r5, #0
 8005f58:	2628      	movs	r6, #40	; 0x28
 8005f5a:	4632      	mov	r2, r6
 8005f5c:	4629      	mov	r1, r5
 8005f5e:	f840 5b04 	str.w	r5, [r0], #4
 8005f62:	f001 f8b2 	bl	80070ca <memset>
 8005f66:	4632      	mov	r2, r6
 8005f68:	4629      	mov	r1, r5
 8005f6a:	f104 0030 	add.w	r0, r4, #48	; 0x30
 8005f6e:	62e5      	str	r5, [r4, #44]	; 0x2c
 8005f70:	f001 f8ab 	bl	80070ca <memset>
 8005f74:	65a5      	str	r5, [r4, #88]	; 0x58
 8005f76:	4620      	mov	r0, r4
 8005f78:	65e5      	str	r5, [r4, #92]	; 0x5c
 8005f7a:	4a05      	ldr	r2, [pc, #20]	; (8005f90 <_GLOBAL__sub_I__ZN4mbed3SPI19_transaction_bufferE+0x40>)
 8005f7c:	f884 5060 	strb.w	r5, [r4, #96]	; 0x60
 8005f80:	4904      	ldr	r1, [pc, #16]	; (8005f94 <_GLOBAL__sub_I__ZN4mbed3SPI19_transaction_bufferE+0x44>)
 8005f82:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8005f86:	f000 b935 	b.w	80061f4 <__aeabi_atexit>
 8005f8a:	bf00      	nop
 8005f8c:	200024c4 	.word	0x200024c4
 8005f90:	20000198 	.word	0x20000198
 8005f94:	08005f31 	.word	0x08005f31

08005f98 <__wrap__malloc_r>:
 8005f98:	f001 b8ee 	b.w	8007178 <_malloc_r>

08005f9c <__wrap__realloc_r>:
 8005f9c:	f001 b94a 	b.w	8007234 <_realloc_r>

08005fa0 <__wrap__free_r>:
 8005fa0:	f001 b89c 	b.w	80070dc <_free_r>

08005fa4 <wait_us>:
 8005fa4:	b570      	push	{r4, r5, r6, lr}
 8005fa6:	4605      	mov	r5, r0
 8005fa8:	f7fe f962 	bl	8004270 <us_ticker_read>
 8005fac:	f44f 747a 	mov.w	r4, #1000	; 0x3e8
 8005fb0:	fb95 f4f4 	sdiv	r4, r5, r4
 8005fb4:	2c00      	cmp	r4, #0
 8005fb6:	4606      	mov	r6, r0
 8005fb8:	dd02      	ble.n	8005fc0 <wait_us+0x1c>
 8005fba:	f7fc fb9b 	bl	80026f4 <core_util_are_interrupts_enabled>
 8005fbe:	b928      	cbnz	r0, 8005fcc <wait_us+0x28>
 8005fc0:	f7fe f956 	bl	8004270 <us_ticker_read>
 8005fc4:	1b80      	subs	r0, r0, r6
 8005fc6:	42a8      	cmp	r0, r5
 8005fc8:	d3fa      	bcc.n	8005fc0 <wait_us+0x1c>
 8005fca:	bd70      	pop	{r4, r5, r6, pc}
 8005fcc:	4620      	mov	r0, r4
 8005fce:	f000 f939 	bl	8006244 <rtos::Thread::wait(unsigned long)>
 8005fd2:	e7f5      	b.n	8005fc0 <wait_us+0x1c>

08005fd4 <wait>:
 8005fd4:	ee07 0a10 	vmov	s14, r0
 8005fd8:	eddf 7a04 	vldr	s15, [pc, #16]	; 8005fec <wait+0x18>
 8005fdc:	ee67 7a27 	vmul.f32	s15, s14, s15
 8005fe0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005fe4:	ee17 0a90 	vmov	r0, s15
 8005fe8:	f7ff bfdc 	b.w	8005fa4 <wait_us>
 8005fec:	49742400 	.word	0x49742400

08005ff0 <wait_ms>:
 8005ff0:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8005ff4:	4358      	muls	r0, r3
 8005ff6:	f7ff bfd5 	b.w	8005fa4 <wait_us>
	...

08005ffc <init_serial()>:
 8005ffc:	b508      	push	{r3, lr}
 8005ffe:	4b08      	ldr	r3, [pc, #32]	; (8006020 <init_serial()+0x24>)
 8006000:	681b      	ldr	r3, [r3, #0]
 8006002:	b95b      	cbnz	r3, 800601c <init_serial()+0x20>
 8006004:	2102      	movs	r1, #2
 8006006:	4807      	ldr	r0, [pc, #28]	; (8006024 <init_serial()+0x28>)
 8006008:	2203      	movs	r2, #3
 800600a:	f7fe fc91 	bl	8004930 <serial_init>
 800600e:	f44f 5116 	mov.w	r1, #9600	; 0x2580
 8006012:	4804      	ldr	r0, [pc, #16]	; (8006024 <init_serial()+0x28>)
 8006014:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8006018:	f7fe bd28 	b.w	8004a6c <serial_baud>
 800601c:	bd08      	pop	{r3, pc}
 800601e:	bf00      	nop
 8006020:	200022c0 	.word	0x200022c0
 8006024:	200030dc 	.word	0x200030dc

08006028 <_close>:
 8006028:	2802      	cmp	r0, #2
 800602a:	b510      	push	{r4, lr}
 800602c:	4604      	mov	r4, r0
 800602e:	dc01      	bgt.n	8006034 <_close+0xc>
 8006030:	2000      	movs	r0, #0
 8006032:	bd10      	pop	{r4, pc}
 8006034:	f000 fe0a 	bl	8006c4c <__errno>
 8006038:	2309      	movs	r3, #9
 800603a:	6003      	str	r3, [r0, #0]
 800603c:	3c03      	subs	r4, #3
 800603e:	4b09      	ldr	r3, [pc, #36]	; (8006064 <_close+0x3c>)
 8006040:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 8006044:	2200      	movs	r2, #0
 8006046:	f843 2024 	str.w	r2, [r3, r4, lsl #2]
 800604a:	b140      	cbz	r0, 800605e <_close+0x36>
 800604c:	6803      	ldr	r3, [r0, #0]
 800604e:	691b      	ldr	r3, [r3, #16]
 8006050:	4798      	blx	r3
 8006052:	1e04      	subs	r4, r0, #0
 8006054:	daec      	bge.n	8006030 <_close+0x8>
 8006056:	f000 fdf9 	bl	8006c4c <__errno>
 800605a:	4264      	negs	r4, r4
 800605c:	6004      	str	r4, [r0, #0]
 800605e:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8006062:	bd10      	pop	{r4, pc}
 8006064:	20002528 	.word	0x20002528

08006068 <_write>:
 8006068:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800606a:	4605      	mov	r5, r0
 800606c:	460e      	mov	r6, r1
 800606e:	4614      	mov	r4, r2
 8006070:	f000 fdec 	bl	8006c4c <__errno>
 8006074:	2309      	movs	r3, #9
 8006076:	2d02      	cmp	r5, #2
 8006078:	6003      	str	r3, [r0, #0]
 800607a:	dc0f      	bgt.n	800609c <_write+0x34>
 800607c:	4b12      	ldr	r3, [pc, #72]	; (80060c8 <_write+0x60>)
 800607e:	681b      	ldr	r3, [r3, #0]
 8006080:	b90b      	cbnz	r3, 8006086 <_write+0x1e>
 8006082:	f7ff ffbb 	bl	8005ffc <init_serial()>
 8006086:	4635      	mov	r5, r6
 8006088:	1937      	adds	r7, r6, r4
 800608a:	4e10      	ldr	r6, [pc, #64]	; (80060cc <_write+0x64>)
 800608c:	42bd      	cmp	r5, r7
 800608e:	d015      	beq.n	80060bc <_write+0x54>
 8006090:	f815 1b01 	ldrb.w	r1, [r5], #1
 8006094:	4630      	mov	r0, r6
 8006096:	f7fe fd6b 	bl	8004b70 <serial_putc>
 800609a:	e7f7      	b.n	800608c <_write+0x24>
 800609c:	3d03      	subs	r5, #3
 800609e:	4b0c      	ldr	r3, [pc, #48]	; (80060d0 <_write+0x68>)
 80060a0:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 80060a4:	b160      	cbz	r0, 80060c0 <_write+0x58>
 80060a6:	6803      	ldr	r3, [r0, #0]
 80060a8:	4622      	mov	r2, r4
 80060aa:	68db      	ldr	r3, [r3, #12]
 80060ac:	4631      	mov	r1, r6
 80060ae:	4798      	blx	r3
 80060b0:	1e04      	subs	r4, r0, #0
 80060b2:	da03      	bge.n	80060bc <_write+0x54>
 80060b4:	f000 fdca 	bl	8006c4c <__errno>
 80060b8:	4263      	negs	r3, r4
 80060ba:	6003      	str	r3, [r0, #0]
 80060bc:	4620      	mov	r0, r4
 80060be:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80060c0:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
 80060c4:	e7fa      	b.n	80060bc <_write+0x54>
 80060c6:	bf00      	nop
 80060c8:	200022c0 	.word	0x200022c0
 80060cc:	200030dc 	.word	0x200030dc
 80060d0:	20002528 	.word	0x20002528

080060d4 <_read>:
 80060d4:	b570      	push	{r4, r5, r6, lr}
 80060d6:	4604      	mov	r4, r0
 80060d8:	460d      	mov	r5, r1
 80060da:	4616      	mov	r6, r2
 80060dc:	f000 fdb6 	bl	8006c4c <__errno>
 80060e0:	2309      	movs	r3, #9
 80060e2:	2c02      	cmp	r4, #2
 80060e4:	6003      	str	r3, [r0, #0]
 80060e6:	dc0b      	bgt.n	8006100 <_read+0x2c>
 80060e8:	4b0f      	ldr	r3, [pc, #60]	; (8006128 <_read+0x54>)
 80060ea:	681b      	ldr	r3, [r3, #0]
 80060ec:	b90b      	cbnz	r3, 80060f2 <_read+0x1e>
 80060ee:	f7ff ff85 	bl	8005ffc <init_serial()>
 80060f2:	480e      	ldr	r0, [pc, #56]	; (800612c <_read+0x58>)
 80060f4:	f7fe fd20 	bl	8004b38 <serial_getc>
 80060f8:	2401      	movs	r4, #1
 80060fa:	7028      	strb	r0, [r5, #0]
 80060fc:	4620      	mov	r0, r4
 80060fe:	bd70      	pop	{r4, r5, r6, pc}
 8006100:	3c03      	subs	r4, #3
 8006102:	4b0b      	ldr	r3, [pc, #44]	; (8006130 <_read+0x5c>)
 8006104:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 8006108:	b158      	cbz	r0, 8006122 <_read+0x4e>
 800610a:	6803      	ldr	r3, [r0, #0]
 800610c:	4632      	mov	r2, r6
 800610e:	689b      	ldr	r3, [r3, #8]
 8006110:	4629      	mov	r1, r5
 8006112:	4798      	blx	r3
 8006114:	1e04      	subs	r4, r0, #0
 8006116:	daf1      	bge.n	80060fc <_read+0x28>
 8006118:	f000 fd98 	bl	8006c4c <__errno>
 800611c:	4263      	negs	r3, r4
 800611e:	6003      	str	r3, [r0, #0]
 8006120:	e7ec      	b.n	80060fc <_read+0x28>
 8006122:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
 8006126:	e7e9      	b.n	80060fc <_read+0x28>
 8006128:	200022c0 	.word	0x200022c0
 800612c:	200030dc 	.word	0x200030dc
 8006130:	20002528 	.word	0x20002528

08006134 <_lseek>:
 8006134:	b570      	push	{r4, r5, r6, lr}
 8006136:	4604      	mov	r4, r0
 8006138:	460d      	mov	r5, r1
 800613a:	4616      	mov	r6, r2
 800613c:	f000 fd86 	bl	8006c4c <__errno>
 8006140:	2309      	movs	r3, #9
 8006142:	2c02      	cmp	r4, #2
 8006144:	6003      	str	r3, [r0, #0]
 8006146:	dd0b      	ble.n	8006160 <_lseek+0x2c>
 8006148:	3c03      	subs	r4, #3
 800614a:	4b08      	ldr	r3, [pc, #32]	; (800616c <_lseek+0x38>)
 800614c:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 8006150:	b140      	cbz	r0, 8006164 <_lseek+0x30>
 8006152:	6803      	ldr	r3, [r0, #0]
 8006154:	4632      	mov	r2, r6
 8006156:	4629      	mov	r1, r5
 8006158:	69db      	ldr	r3, [r3, #28]
 800615a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800615e:	4718      	bx	r3
 8006160:	2000      	movs	r0, #0
 8006162:	bd70      	pop	{r4, r5, r6, pc}
 8006164:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8006168:	bd70      	pop	{r4, r5, r6, pc}
 800616a:	bf00      	nop
 800616c:	20002528 	.word	0x20002528

08006170 <software_init_hook>:
 8006170:	b508      	push	{r3, lr}
 8006172:	f7fe fd0f 	bl	8004b94 <mbed_sdk_init>
 8006176:	f7fc fb55 	bl	8002824 <software_init_hook_rtos>
 800617a:	bd08      	pop	{r3, pc}

0800617c <mbed_main>:
 800617c:	4770      	bx	lr

0800617e <__wrap_main>:
 800617e:	b508      	push	{r3, lr}
 8006180:	f7ff fffc 	bl	800617c <mbed_main>
 8006184:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8006188:	f7fb b99c 	b.w	80014c4 <main>

0800618c <_sbrk>:
 800618c:	4a0c      	ldr	r2, [pc, #48]	; (80061c0 <_sbrk+0x34>)
 800618e:	6813      	ldr	r3, [r2, #0]
 8006190:	b510      	push	{r4, lr}
 8006192:	4418      	add	r0, r3
 8006194:	f3ef 8108 	mrs	r1, MSP
 8006198:	4288      	cmp	r0, r1
 800619a:	d305      	bcc.n	80061a8 <_sbrk+0x1c>
 800619c:	4b09      	ldr	r3, [pc, #36]	; (80061c4 <_sbrk+0x38>)
 800619e:	220c      	movs	r2, #12
 80061a0:	601a      	str	r2, [r3, #0]
 80061a2:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80061a6:	bd10      	pop	{r4, pc}
 80061a8:	4907      	ldr	r1, [pc, #28]	; (80061c8 <_sbrk+0x3c>)
 80061aa:	680c      	ldr	r4, [r1, #0]
 80061ac:	b124      	cbz	r4, 80061b8 <_sbrk+0x2c>
 80061ae:	4907      	ldr	r1, [pc, #28]	; (80061cc <_sbrk+0x40>)
 80061b0:	6809      	ldr	r1, [r1, #0]
 80061b2:	4421      	add	r1, r4
 80061b4:	4288      	cmp	r0, r1
 80061b6:	d2f1      	bcs.n	800619c <_sbrk+0x10>
 80061b8:	6010      	str	r0, [r2, #0]
 80061ba:	4618      	mov	r0, r3
 80061bc:	bd10      	pop	{r4, pc}
 80061be:	bf00      	nop
 80061c0:	200001b8 	.word	0x200001b8
 80061c4:	2000312c 	.word	0x2000312c
 80061c8:	20002628 	.word	0x20002628
 80061cc:	2000262c 	.word	0x2000262c

080061d0 <_exit>:
 80061d0:	4c07      	ldr	r4, [pc, #28]	; (80061f0 <_exit+0x20>)
 80061d2:	b508      	push	{r3, lr}
 80061d4:	6823      	ldr	r3, [r4, #0]
 80061d6:	4605      	mov	r5, r0
 80061d8:	6898      	ldr	r0, [r3, #8]
 80061da:	f000 fdef 	bl	8006dbc <fflush>
 80061de:	6823      	ldr	r3, [r4, #0]
 80061e0:	68d8      	ldr	r0, [r3, #12]
 80061e2:	f000 fdeb 	bl	8006dbc <fflush>
 80061e6:	b10d      	cbz	r5, 80061ec <_exit+0x1c>
 80061e8:	f7fc fa6e 	bl	80026c8 <mbed_die>
 80061ec:	e7fe      	b.n	80061ec <_exit+0x1c>
 80061ee:	bf00      	nop
 80061f0:	200001bc 	.word	0x200001bc

080061f4 <__aeabi_atexit>:
 80061f4:	2001      	movs	r0, #1
 80061f6:	4770      	bx	lr

080061f8 <__wrap_exit>:
 80061f8:	b508      	push	{r3, lr}
 80061fa:	f7ff ffe9 	bl	80061d0 <_exit>

080061fe <__malloc_lock>:
 80061fe:	b508      	push	{r3, lr}
 8006200:	f7fc fb1e 	bl	8002840 <__rtos_malloc_lock>
 8006204:	bd08      	pop	{r3, pc}

08006206 <__malloc_unlock>:
 8006206:	b508      	push	{r3, lr}
 8006208:	f7fc fb22 	bl	8002850 <__rtos_malloc_unlock>
 800620c:	bd08      	pop	{r3, pc}
	...

08006210 <operator new[](unsigned int)>:
 8006210:	b510      	push	{r4, lr}
 8006212:	f000 fed3 	bl	8006fbc <malloc>
 8006216:	4604      	mov	r4, r0
 8006218:	b910      	cbnz	r0, 8006220 <operator new[](unsigned int)+0x10>
 800621a:	4802      	ldr	r0, [pc, #8]	; (8006224 <operator new[](unsigned int)+0x14>)
 800621c:	f7fc fa9a 	bl	8002754 <error>
 8006220:	4620      	mov	r0, r4
 8006222:	bd10      	pop	{r4, pc}
 8006224:	08008748 	.word	0x08008748

08006228 <operator delete[](void*)>:
 8006228:	b108      	cbz	r0, 800622e <operator delete[](void*)+0x6>
 800622a:	f000 becf 	b.w	8006fcc <free>
 800622e:	4770      	bx	lr

08006230 <operator delete(void*)>:
 8006230:	f7ff bffa 	b.w	8006228 <operator delete[](void*)>

08006234 <thread_terminate_hook>:
 8006234:	4b02      	ldr	r3, [pc, #8]	; (8006240 <thread_terminate_hook+0xc>)
 8006236:	681b      	ldr	r3, [r3, #0]
 8006238:	b103      	cbz	r3, 800623c <thread_terminate_hook+0x8>
 800623a:	4718      	bx	r3
 800623c:	4770      	bx	lr
 800623e:	bf00      	nop
 8006240:	20002630 	.word	0x20002630

08006244 <rtos::Thread::wait(unsigned long)>:
 8006244:	f7fc bfd2 	b.w	80031ec <osDelay>

08006248 <rt_set_PSP>:
 8006248:	f380 8809 	msr	PSP, r0
 800624c:	4770      	bx	lr

0800624e <rt_get_PSP>:
 800624e:	f3ef 8009 	mrs	r0, PSP
 8006252:	4770      	bx	lr

08006254 <os_set_env>:
 8006254:	4668      	mov	r0, sp
 8006256:	f380 8809 	msr	PSP, r0
 800625a:	485a      	ldr	r0, [pc, #360]	; (80063c4 <OS_Tick_Handler+0x10>)
 800625c:	7800      	ldrb	r0, [r0, #0]
 800625e:	07c0      	lsls	r0, r0, #31
 8006260:	bf14      	ite	ne
 8006262:	2002      	movne	r0, #2
 8006264:	2003      	moveq	r0, #3
 8006266:	f380 8814 	msr	CONTROL, r0
 800626a:	4770      	bx	lr

0800626c <_alloc_box>:
 800626c:	f8df c158 	ldr.w	r12, [pc, #344]	; 80063c8 <OS_Tick_Handler+0x14>
 8006270:	f3ef 8305 	mrs	r3, IPSR
 8006274:	061b      	lsls	r3, r3, #24
 8006276:	bf18      	it	ne
 8006278:	4760      	bxne	r12
 800627a:	f3ef 8314 	mrs	r3, CONTROL
 800627e:	07db      	lsls	r3, r3, #31
 8006280:	bf08      	it	eq
 8006282:	4760      	bxeq	r12
 8006284:	df00      	svc	0
 8006286:	4770      	bx	lr

08006288 <_free_box>:
 8006288:	f8df c140 	ldr.w	r12, [pc, #320]	; 80063cc <OS_Tick_Handler+0x18>
 800628c:	f3ef 8305 	mrs	r3, IPSR
 8006290:	061b      	lsls	r3, r3, #24
 8006292:	bf18      	it	ne
 8006294:	4760      	bxne	r12
 8006296:	f3ef 8314 	mrs	r3, CONTROL
 800629a:	07db      	lsls	r3, r3, #31
 800629c:	bf08      	it	eq
 800629e:	4760      	bxeq	r12
 80062a0:	df00      	svc	0
 80062a2:	4770      	bx	lr

080062a4 <SVC_Handler>:
 80062a4:	f3ef 8009 	mrs	r0, PSP
 80062a8:	6981      	ldr	r1, [r0, #24]
 80062aa:	f811 1c02 	ldrb.w	r1, [r1, #-2]
 80062ae:	bbe1      	cbnz	r1, 800632a <SVC_User>
 80062b0:	e890 100f 	ldmia.w	r0, {r0, r1, r2, r3, r12}
 80062b4:	b510      	push	{r4, lr}
 80062b6:	47e0      	blx	r12
 80062b8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80062bc:	f3ef 8c09 	mrs	r12, PSP
 80062c0:	e88c 0007 	stmia.w	r12, {r0, r1, r2}
 80062c4:	4b42      	ldr	r3, [pc, #264]	; (80063d0 <OS_Tick_Handler+0x1c>)
 80062c6:	e893 0006 	ldmia.w	r3, {r1, r2}
 80062ca:	4291      	cmp	r1, r2
 80062cc:	bf08      	it	eq
 80062ce:	4770      	bxeq	lr
 80062d0:	b941      	cbnz	r1, 80062e4 <SVC_ContextSave>
 80062d2:	f01e 0f10 	tst.w	lr, #16
 80062d6:	d116      	bne.n	8006306 <SVC_ContextRestore>
 80062d8:	493e      	ldr	r1, [pc, #248]	; (80063d4 <OS_Tick_Handler+0x20>)
 80062da:	6808      	ldr	r0, [r1, #0]
 80062dc:	f020 0001 	bic.w	r0, r0, #1
 80062e0:	6008      	str	r0, [r1, #0]
 80062e2:	e010      	b.n	8006306 <SVC_ContextRestore>

080062e4 <SVC_ContextSave>:
 80062e4:	f01e 0f10 	tst.w	lr, #16
 80062e8:	bf06      	itte	eq
 80062ea:	ed2c 8a10 	vstmdbeq	r12!, {s16-s31}
 80062ee:	2001      	moveq	r0, #1
 80062f0:	2000      	movne	r0, #0
 80062f2:	f881 0025 	strb.w	r0, [r1, #37]	; 0x25
 80062f6:	e92c 0ff0 	stmdb	r12!, {r4, r5, r6, r7, r8, r9, r10, r11}
 80062fa:	f8c1 c02c 	str.w	r12, [r1, #44]	; 0x2c
 80062fe:	b40c      	push	{r2, r3}
 8006300:	f7fc fc8a 	bl	8002c18 <rt_stk_check>
 8006304:	bc0c      	pop	{r2, r3}

08006306 <SVC_ContextRestore>:
 8006306:	601a      	str	r2, [r3, #0]
 8006308:	f8d2 c02c 	ldr.w	r12, [r2, #44]	; 0x2c
 800630c:	e8bc 0ff0 	ldmia.w	r12!, {r4, r5, r6, r7, r8, r9, r10, r11}
 8006310:	f892 0025 	ldrb.w	r0, [r2, #37]	; 0x25
 8006314:	2800      	cmp	r0, #0
 8006316:	bf0e      	itee	eq
 8006318:	f06f 0e02 	mvneq.w	lr, #2
 800631c:	f06f 0e12 	mvnne.w	lr, #18
 8006320:	ecbc 8a10 	vldmiane	r12!, {s16-s31}
 8006324:	f38c 8809 	msr	PSP, r12

08006328 <SVC_Exit>:
 8006328:	4770      	bx	lr

0800632a <SVC_User>:
 800632a:	b510      	push	{r4, lr}
 800632c:	4a2a      	ldr	r2, [pc, #168]	; (80063d8 <OS_Tick_Handler+0x24>)
 800632e:	6812      	ldr	r2, [r2, #0]
 8006330:	4291      	cmp	r1, r2
 8006332:	d809      	bhi.n	8006348 <SVC_Done>
 8006334:	4c29      	ldr	r4, [pc, #164]	; (80063dc <OS_Tick_Handler+0x28>)
 8006336:	f854 4021 	ldr.w	r4, [r4, r1, lsl #2]
 800633a:	e890 100f 	ldmia.w	r0, {r0, r1, r2, r3, r12}
 800633e:	47a0      	blx	r4
 8006340:	f3ef 8c09 	mrs	r12, PSP
 8006344:	e88c 000f 	stmia.w	r12, {r0, r1, r2, r3}

08006348 <SVC_Done>:
 8006348:	bd10      	pop	{r4, pc}

0800634a <PendSV_Handler>:
 800634a:	b510      	push	{r4, lr}
 800634c:	f7fc fbf0 	bl	8002b30 <rt_pop_req>

08006350 <Sys_Switch>:
 8006350:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8006354:	4b1e      	ldr	r3, [pc, #120]	; (80063d0 <OS_Tick_Handler+0x1c>)
 8006356:	e893 0006 	ldmia.w	r3, {r1, r2}
 800635a:	4291      	cmp	r1, r2
 800635c:	bf08      	it	eq
 800635e:	4770      	bxeq	lr
 8006360:	f3ef 8c09 	mrs	r12, PSP
 8006364:	f01e 0f10 	tst.w	lr, #16
 8006368:	bf06      	itte	eq
 800636a:	ed2c 8a10 	vstmdbeq	r12!, {s16-s31}
 800636e:	2001      	moveq	r0, #1
 8006370:	2000      	movne	r0, #0
 8006372:	f881 0025 	strb.w	r0, [r1, #37]	; 0x25
 8006376:	e92c 0ff0 	stmdb	r12!, {r4, r5, r6, r7, r8, r9, r10, r11}
 800637a:	f8c1 c02c 	str.w	r12, [r1, #44]	; 0x2c
 800637e:	b40c      	push	{r2, r3}
 8006380:	f7fc fc4a 	bl	8002c18 <rt_stk_check>
 8006384:	bc0c      	pop	{r2, r3}
 8006386:	601a      	str	r2, [r3, #0]
 8006388:	f8d2 c02c 	ldr.w	r12, [r2, #44]	; 0x2c
 800638c:	e8bc 0ff0 	ldmia.w	r12!, {r4, r5, r6, r7, r8, r9, r10, r11}
 8006390:	f892 0025 	ldrb.w	r0, [r2, #37]	; 0x25
 8006394:	2800      	cmp	r0, #0
 8006396:	bf0e      	itee	eq
 8006398:	f06f 0e02 	mvneq.w	lr, #2
 800639c:	f06f 0e12 	mvnne.w	lr, #18
 80063a0:	ecbc 8a10 	vldmiane	r12!, {s16-s31}
 80063a4:	f38c 8809 	msr	PSP, r12

080063a8 <Sys_Exit>:
 80063a8:	4770      	bx	lr

080063aa <SysTick_Handler>:
 80063aa:	b510      	push	{r4, lr}
 80063ac:	f7fc fc16 	bl	8002bdc <rt_systick>
 80063b0:	f7ff bfce 	b.w	8006350 <Sys_Switch>

080063b4 <OS_Tick_Handler>:
 80063b4:	b510      	push	{r4, lr}
 80063b6:	f7fc fc0f 	bl	8002bd8 <os_tick_irqack>
 80063ba:	f7fc fc0f 	bl	8002bdc <rt_systick>
 80063be:	f7ff bfc7 	b.w	8006350 <Sys_Switch>
 80063c2:	0000      	.short	0x0000
 80063c4:	080082b6 	.word	0x080082b6
 80063c8:	08002c87 	.word	0x08002c87
 80063cc:	08002ca1 	.word	0x08002ca1
 80063d0:	20003054 	.word	0x20003054
 80063d4:	e000ef34 	.word	0xe000ef34
 80063d8:	00000000 	.word	0x00000000
 80063dc:	fffffffc 	.word	0xfffffffc

080063e0 <Reset_Handler>:
 80063e0:	f8df d020 	ldr.w	sp, [pc, #32]	; 8006404 <LoopCopyDataInit+0x14>
 80063e4:	2100      	movs	r1, #0
 80063e6:	e003      	b.n	80063f0 <LoopCopyDataInit>

080063e8 <CopyDataInit>:
 80063e8:	4b07      	ldr	r3, [pc, #28]	; (8006408 <LoopCopyDataInit+0x18>)
 80063ea:	585b      	ldr	r3, [r3, r1]
 80063ec:	5043      	str	r3, [r0, r1]
 80063ee:	3104      	adds	r1, #4

080063f0 <LoopCopyDataInit>:
 80063f0:	4806      	ldr	r0, [pc, #24]	; (800640c <LoopCopyDataInit+0x1c>)
 80063f2:	4b07      	ldr	r3, [pc, #28]	; (8006410 <LoopCopyDataInit+0x20>)
 80063f4:	1842      	adds	r2, r0, r1
 80063f6:	429a      	cmp	r2, r3
 80063f8:	d3f6      	bcc.n	80063e8 <CopyDataInit>
 80063fa:	f7fe fca9 	bl	8004d50 <SystemInit>
 80063fe:	f7fb fe2b 	bl	8002058 <_start>
 8006402:	4770      	bx	lr
 8006404:	20020000 	.word	0x20020000
 8006408:	0800882c 	.word	0x0800882c
 800640c:	20000198 	.word	0x20000198
 8006410:	20000238 	.word	0x20000238

08006414 <ADC_IRQHandler>:
 8006414:	e7fe      	b.n	8006414 <ADC_IRQHandler>
	...

08006418 <__aeabi_drsub>:
 8006418:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 800641c:	e002      	b.n	8006424 <__adddf3>
 800641e:	bf00      	nop

08006420 <__aeabi_dsub>:
 8006420:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

08006424 <__adddf3>:
 8006424:	b530      	push	{r4, r5, lr}
 8006426:	ea4f 0441 	mov.w	r4, r1, lsl #1
 800642a:	ea4f 0543 	mov.w	r5, r3, lsl #1
 800642e:	ea94 0f05 	teq	r4, r5
 8006432:	bf08      	it	eq
 8006434:	ea90 0f02 	teqeq	r0, r2
 8006438:	bf1f      	itttt	ne
 800643a:	ea54 0c00 	orrsne.w	r12, r4, r0
 800643e:	ea55 0c02 	orrsne.w	r12, r5, r2
 8006442:	ea7f 5c64 	mvnsne.w	r12, r4, asr #21
 8006446:	ea7f 5c65 	mvnsne.w	r12, r5, asr #21
 800644a:	f000 80e2 	beq.w	8006612 <__adddf3+0x1ee>
 800644e:	ea4f 5454 	mov.w	r4, r4, lsr #21
 8006452:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 8006456:	bfb8      	it	lt
 8006458:	426d      	neglt	r5, r5
 800645a:	dd0c      	ble.n	8006476 <__adddf3+0x52>
 800645c:	442c      	add	r4, r5
 800645e:	ea80 0202 	eor.w	r2, r0, r2
 8006462:	ea81 0303 	eor.w	r3, r1, r3
 8006466:	ea82 0000 	eor.w	r0, r2, r0
 800646a:	ea83 0101 	eor.w	r1, r3, r1
 800646e:	ea80 0202 	eor.w	r2, r0, r2
 8006472:	ea81 0303 	eor.w	r3, r1, r3
 8006476:	2d36      	cmp	r5, #54	; 0x36
 8006478:	bf88      	it	hi
 800647a:	bd30      	pophi	{r4, r5, pc}
 800647c:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8006480:	ea4f 3101 	mov.w	r1, r1, lsl #12
 8006484:	f44f 1c80 	mov.w	r12, #1048576	; 0x100000
 8006488:	ea4c 3111 	orr.w	r1, r12, r1, lsr #12
 800648c:	d002      	beq.n	8006494 <__adddf3+0x70>
 800648e:	4240      	negs	r0, r0
 8006490:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8006494:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8006498:	ea4f 3303 	mov.w	r3, r3, lsl #12
 800649c:	ea4c 3313 	orr.w	r3, r12, r3, lsr #12
 80064a0:	d002      	beq.n	80064a8 <__adddf3+0x84>
 80064a2:	4252      	negs	r2, r2
 80064a4:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 80064a8:	ea94 0f05 	teq	r4, r5
 80064ac:	f000 80a7 	beq.w	80065fe <__adddf3+0x1da>
 80064b0:	f1a4 0401 	sub.w	r4, r4, #1
 80064b4:	f1d5 0e20 	rsbs	lr, r5, #32
 80064b8:	db0d      	blt.n	80064d6 <__adddf3+0xb2>
 80064ba:	fa02 fc0e 	lsl.w	r12, r2, lr
 80064be:	fa22 f205 	lsr.w	r2, r2, r5
 80064c2:	1880      	adds	r0, r0, r2
 80064c4:	f141 0100 	adc.w	r1, r1, #0
 80064c8:	fa03 f20e 	lsl.w	r2, r3, lr
 80064cc:	1880      	adds	r0, r0, r2
 80064ce:	fa43 f305 	asr.w	r3, r3, r5
 80064d2:	4159      	adcs	r1, r3
 80064d4:	e00e      	b.n	80064f4 <__adddf3+0xd0>
 80064d6:	f1a5 0520 	sub.w	r5, r5, #32
 80064da:	f10e 0e20 	add.w	lr, lr, #32
 80064de:	2a01      	cmp	r2, #1
 80064e0:	fa03 fc0e 	lsl.w	r12, r3, lr
 80064e4:	bf28      	it	cs
 80064e6:	f04c 0c02 	orrcs.w	r12, r12, #2
 80064ea:	fa43 f305 	asr.w	r3, r3, r5
 80064ee:	18c0      	adds	r0, r0, r3
 80064f0:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 80064f4:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80064f8:	d507      	bpl.n	800650a <__adddf3+0xe6>
 80064fa:	f04f 0e00 	mov.w	lr, #0
 80064fe:	f1dc 0c00 	rsbs	r12, r12, #0
 8006502:	eb7e 0000 	sbcs.w	r0, lr, r0
 8006506:	eb6e 0101 	sbc.w	r1, lr, r1
 800650a:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 800650e:	d31b      	bcc.n	8006548 <__adddf3+0x124>
 8006510:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 8006514:	d30c      	bcc.n	8006530 <__adddf3+0x10c>
 8006516:	0849      	lsrs	r1, r1, #1
 8006518:	ea5f 0030 	movs.w	r0, r0, rrx
 800651c:	ea4f 0c3c 	mov.w	r12, r12, rrx
 8006520:	f104 0401 	add.w	r4, r4, #1
 8006524:	ea4f 5244 	mov.w	r2, r4, lsl #21
 8006528:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 800652c:	f080 809a 	bcs.w	8006664 <__adddf3+0x240>
 8006530:	f1bc 4f00 	cmp.w	r12, #2147483648	; 0x80000000
 8006534:	bf08      	it	eq
 8006536:	ea5f 0c50 	movseq.w	r12, r0, lsr #1
 800653a:	f150 0000 	adcs.w	r0, r0, #0
 800653e:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8006542:	ea41 0105 	orr.w	r1, r1, r5
 8006546:	bd30      	pop	{r4, r5, pc}
 8006548:	ea5f 0c4c 	movs.w	r12, r12, lsl #1
 800654c:	4140      	adcs	r0, r0
 800654e:	eb41 0101 	adc.w	r1, r1, r1
 8006552:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8006556:	f1a4 0401 	sub.w	r4, r4, #1
 800655a:	d1e9      	bne.n	8006530 <__adddf3+0x10c>
 800655c:	f091 0f00 	teq	r1, #0
 8006560:	bf04      	itt	eq
 8006562:	4601      	moveq	r1, r0
 8006564:	2000      	moveq	r0, #0
 8006566:	fab1 f381 	clz	r3, r1
 800656a:	bf08      	it	eq
 800656c:	3320      	addeq	r3, #32
 800656e:	f1a3 030b 	sub.w	r3, r3, #11
 8006572:	f1b3 0220 	subs.w	r2, r3, #32
 8006576:	da0c      	bge.n	8006592 <__adddf3+0x16e>
 8006578:	320c      	adds	r2, #12
 800657a:	dd08      	ble.n	800658e <__adddf3+0x16a>
 800657c:	f102 0c14 	add.w	r12, r2, #20
 8006580:	f1c2 020c 	rsb	r2, r2, #12
 8006584:	fa01 f00c 	lsl.w	r0, r1, r12
 8006588:	fa21 f102 	lsr.w	r1, r1, r2
 800658c:	e00c      	b.n	80065a8 <__adddf3+0x184>
 800658e:	f102 0214 	add.w	r2, r2, #20
 8006592:	bfd8      	it	le
 8006594:	f1c2 0c20 	rsble	r12, r2, #32
 8006598:	fa01 f102 	lsl.w	r1, r1, r2
 800659c:	fa20 fc0c 	lsr.w	r12, r0, r12
 80065a0:	bfdc      	itt	le
 80065a2:	ea41 010c 	orrle.w	r1, r1, r12
 80065a6:	4090      	lslle	r0, r2
 80065a8:	1ae4      	subs	r4, r4, r3
 80065aa:	bfa2      	ittt	ge
 80065ac:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 80065b0:	4329      	orrge	r1, r5
 80065b2:	bd30      	popge	{r4, r5, pc}
 80065b4:	ea6f 0404 	mvn.w	r4, r4
 80065b8:	3c1f      	subs	r4, #31
 80065ba:	da1c      	bge.n	80065f6 <__adddf3+0x1d2>
 80065bc:	340c      	adds	r4, #12
 80065be:	dc0e      	bgt.n	80065de <__adddf3+0x1ba>
 80065c0:	f104 0414 	add.w	r4, r4, #20
 80065c4:	f1c4 0220 	rsb	r2, r4, #32
 80065c8:	fa20 f004 	lsr.w	r0, r0, r4
 80065cc:	fa01 f302 	lsl.w	r3, r1, r2
 80065d0:	ea40 0003 	orr.w	r0, r0, r3
 80065d4:	fa21 f304 	lsr.w	r3, r1, r4
 80065d8:	ea45 0103 	orr.w	r1, r5, r3
 80065dc:	bd30      	pop	{r4, r5, pc}
 80065de:	f1c4 040c 	rsb	r4, r4, #12
 80065e2:	f1c4 0220 	rsb	r2, r4, #32
 80065e6:	fa20 f002 	lsr.w	r0, r0, r2
 80065ea:	fa01 f304 	lsl.w	r3, r1, r4
 80065ee:	ea40 0003 	orr.w	r0, r0, r3
 80065f2:	4629      	mov	r1, r5
 80065f4:	bd30      	pop	{r4, r5, pc}
 80065f6:	fa21 f004 	lsr.w	r0, r1, r4
 80065fa:	4629      	mov	r1, r5
 80065fc:	bd30      	pop	{r4, r5, pc}
 80065fe:	f094 0f00 	teq	r4, #0
 8006602:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 8006606:	bf06      	itte	eq
 8006608:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 800660c:	3401      	addeq	r4, #1
 800660e:	3d01      	subne	r5, #1
 8006610:	e74e      	b.n	80064b0 <__adddf3+0x8c>
 8006612:	ea7f 5c64 	mvns.w	r12, r4, asr #21
 8006616:	bf18      	it	ne
 8006618:	ea7f 5c65 	mvnsne.w	r12, r5, asr #21
 800661c:	d029      	beq.n	8006672 <__adddf3+0x24e>
 800661e:	ea94 0f05 	teq	r4, r5
 8006622:	bf08      	it	eq
 8006624:	ea90 0f02 	teqeq	r0, r2
 8006628:	d005      	beq.n	8006636 <__adddf3+0x212>
 800662a:	ea54 0c00 	orrs.w	r12, r4, r0
 800662e:	bf04      	itt	eq
 8006630:	4619      	moveq	r1, r3
 8006632:	4610      	moveq	r0, r2
 8006634:	bd30      	pop	{r4, r5, pc}
 8006636:	ea91 0f03 	teq	r1, r3
 800663a:	bf1e      	ittt	ne
 800663c:	2100      	movne	r1, #0
 800663e:	2000      	movne	r0, #0
 8006640:	bd30      	popne	{r4, r5, pc}
 8006642:	ea5f 5c54 	movs.w	r12, r4, lsr #21
 8006646:	d105      	bne.n	8006654 <__adddf3+0x230>
 8006648:	0040      	lsls	r0, r0, #1
 800664a:	4149      	adcs	r1, r1
 800664c:	bf28      	it	cs
 800664e:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 8006652:	bd30      	pop	{r4, r5, pc}
 8006654:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 8006658:	bf3c      	itt	cc
 800665a:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 800665e:	bd30      	popcc	{r4, r5, pc}
 8006660:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8006664:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 8006668:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800666c:	f04f 0000 	mov.w	r0, #0
 8006670:	bd30      	pop	{r4, r5, pc}
 8006672:	ea7f 5c64 	mvns.w	r12, r4, asr #21
 8006676:	bf1a      	itte	ne
 8006678:	4619      	movne	r1, r3
 800667a:	4610      	movne	r0, r2
 800667c:	ea7f 5c65 	mvnseq.w	r12, r5, asr #21
 8006680:	bf1c      	itt	ne
 8006682:	460b      	movne	r3, r1
 8006684:	4602      	movne	r2, r0
 8006686:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 800668a:	bf06      	itte	eq
 800668c:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8006690:	ea91 0f03 	teqeq	r1, r3
 8006694:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8006698:	bd30      	pop	{r4, r5, pc}
 800669a:	bf00      	nop

0800669c <__aeabi_ui2d>:
 800669c:	f090 0f00 	teq	r0, #0
 80066a0:	bf04      	itt	eq
 80066a2:	2100      	moveq	r1, #0
 80066a4:	4770      	bxeq	lr
 80066a6:	b530      	push	{r4, r5, lr}
 80066a8:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80066ac:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80066b0:	f04f 0500 	mov.w	r5, #0
 80066b4:	f04f 0100 	mov.w	r1, #0
 80066b8:	e750      	b.n	800655c <__adddf3+0x138>
 80066ba:	bf00      	nop

080066bc <__aeabi_i2d>:
 80066bc:	f090 0f00 	teq	r0, #0
 80066c0:	bf04      	itt	eq
 80066c2:	2100      	moveq	r1, #0
 80066c4:	4770      	bxeq	lr
 80066c6:	b530      	push	{r4, r5, lr}
 80066c8:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80066cc:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80066d0:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 80066d4:	bf48      	it	mi
 80066d6:	4240      	negmi	r0, r0
 80066d8:	f04f 0100 	mov.w	r1, #0
 80066dc:	e73e      	b.n	800655c <__adddf3+0x138>
 80066de:	bf00      	nop

080066e0 <__aeabi_f2d>:
 80066e0:	0042      	lsls	r2, r0, #1
 80066e2:	ea4f 01e2 	mov.w	r1, r2, asr #3
 80066e6:	ea4f 0131 	mov.w	r1, r1, rrx
 80066ea:	ea4f 7002 	mov.w	r0, r2, lsl #28
 80066ee:	bf1f      	itttt	ne
 80066f0:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 80066f4:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 80066f8:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 80066fc:	4770      	bxne	lr
 80066fe:	f092 0f00 	teq	r2, #0
 8006702:	bf14      	ite	ne
 8006704:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8006708:	4770      	bxeq	lr
 800670a:	b530      	push	{r4, r5, lr}
 800670c:	f44f 7460 	mov.w	r4, #896	; 0x380
 8006710:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8006714:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8006718:	e720      	b.n	800655c <__adddf3+0x138>
 800671a:	bf00      	nop

0800671c <__aeabi_ul2d>:
 800671c:	ea50 0201 	orrs.w	r2, r0, r1
 8006720:	bf08      	it	eq
 8006722:	4770      	bxeq	lr
 8006724:	b530      	push	{r4, r5, lr}
 8006726:	f04f 0500 	mov.w	r5, #0
 800672a:	e00a      	b.n	8006742 <__aeabi_l2d+0x16>

0800672c <__aeabi_l2d>:
 800672c:	ea50 0201 	orrs.w	r2, r0, r1
 8006730:	bf08      	it	eq
 8006732:	4770      	bxeq	lr
 8006734:	b530      	push	{r4, r5, lr}
 8006736:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 800673a:	d502      	bpl.n	8006742 <__aeabi_l2d+0x16>
 800673c:	4240      	negs	r0, r0
 800673e:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8006742:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8006746:	f104 0432 	add.w	r4, r4, #50	; 0x32
 800674a:	ea5f 5c91 	movs.w	r12, r1, lsr #22
 800674e:	f43f aedc 	beq.w	800650a <__adddf3+0xe6>
 8006752:	f04f 0203 	mov.w	r2, #3
 8006756:	ea5f 0cdc 	movs.w	r12, r12, lsr #3
 800675a:	bf18      	it	ne
 800675c:	3203      	addne	r2, #3
 800675e:	ea5f 0cdc 	movs.w	r12, r12, lsr #3
 8006762:	bf18      	it	ne
 8006764:	3203      	addne	r2, #3
 8006766:	eb02 02dc 	add.w	r2, r2, r12, lsr #3
 800676a:	f1c2 0320 	rsb	r3, r2, #32
 800676e:	fa00 fc03 	lsl.w	r12, r0, r3
 8006772:	fa20 f002 	lsr.w	r0, r0, r2
 8006776:	fa01 fe03 	lsl.w	lr, r1, r3
 800677a:	ea40 000e 	orr.w	r0, r0, lr
 800677e:	fa21 f102 	lsr.w	r1, r1, r2
 8006782:	4414      	add	r4, r2
 8006784:	e6c1      	b.n	800650a <__adddf3+0xe6>
 8006786:	bf00      	nop

08006788 <__aeabi_dmul>:
 8006788:	b570      	push	{r4, r5, r6, lr}
 800678a:	f04f 0cff 	mov.w	r12, #255	; 0xff
 800678e:	f44c 6ce0 	orr.w	r12, r12, #1792	; 0x700
 8006792:	ea1c 5411 	ands.w	r4, r12, r1, lsr #20
 8006796:	bf1d      	ittte	ne
 8006798:	ea1c 5513 	andsne.w	r5, r12, r3, lsr #20
 800679c:	ea94 0f0c 	teqne	r4, r12
 80067a0:	ea95 0f0c 	teqne	r5, r12
 80067a4:	f000 f8de 	bleq	8006964 <__aeabi_dmul+0x1dc>
 80067a8:	442c      	add	r4, r5
 80067aa:	ea81 0603 	eor.w	r6, r1, r3
 80067ae:	ea21 514c 	bic.w	r1, r1, r12, lsl #21
 80067b2:	ea23 534c 	bic.w	r3, r3, r12, lsl #21
 80067b6:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 80067ba:	bf18      	it	ne
 80067bc:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 80067c0:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80067c4:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 80067c8:	d038      	beq.n	800683c <__aeabi_dmul+0xb4>
 80067ca:	fba0 ce02 	umull	r12, lr, r0, r2
 80067ce:	f04f 0500 	mov.w	r5, #0
 80067d2:	fbe1 e502 	umlal	lr, r5, r1, r2
 80067d6:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 80067da:	fbe0 e503 	umlal	lr, r5, r0, r3
 80067de:	f04f 0600 	mov.w	r6, #0
 80067e2:	fbe1 5603 	umlal	r5, r6, r1, r3
 80067e6:	f09c 0f00 	teq	r12, #0
 80067ea:	bf18      	it	ne
 80067ec:	f04e 0e01 	orrne.w	lr, lr, #1
 80067f0:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 80067f4:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 80067f8:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 80067fc:	d204      	bcs.n	8006808 <__aeabi_dmul+0x80>
 80067fe:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8006802:	416d      	adcs	r5, r5
 8006804:	eb46 0606 	adc.w	r6, r6, r6
 8006808:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 800680c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8006810:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8006814:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8006818:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 800681c:	f1b4 0cfd 	subs.w	r12, r4, #253	; 0xfd
 8006820:	bf88      	it	hi
 8006822:	f5bc 6fe0 	cmphi.w	r12, #1792	; 0x700
 8006826:	d81e      	bhi.n	8006866 <__aeabi_dmul+0xde>
 8006828:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 800682c:	bf08      	it	eq
 800682e:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 8006832:	f150 0000 	adcs.w	r0, r0, #0
 8006836:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800683a:	bd70      	pop	{r4, r5, r6, pc}
 800683c:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 8006840:	ea46 0101 	orr.w	r1, r6, r1
 8006844:	ea40 0002 	orr.w	r0, r0, r2
 8006848:	ea81 0103 	eor.w	r1, r1, r3
 800684c:	ebb4 045c 	subs.w	r4, r4, r12, lsr #1
 8006850:	bfc2      	ittt	gt
 8006852:	ebd4 050c 	rsbsgt	r5, r4, r12
 8006856:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 800685a:	bd70      	popgt	{r4, r5, r6, pc}
 800685c:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8006860:	f04f 0e00 	mov.w	lr, #0
 8006864:	3c01      	subs	r4, #1
 8006866:	f300 80ab 	bgt.w	80069c0 <__aeabi_dmul+0x238>
 800686a:	f114 0f36 	cmn.w	r4, #54	; 0x36
 800686e:	bfde      	ittt	le
 8006870:	2000      	movle	r0, #0
 8006872:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 8006876:	bd70      	pople	{r4, r5, r6, pc}
 8006878:	f1c4 0400 	rsb	r4, r4, #0
 800687c:	3c20      	subs	r4, #32
 800687e:	da35      	bge.n	80068ec <__aeabi_dmul+0x164>
 8006880:	340c      	adds	r4, #12
 8006882:	dc1b      	bgt.n	80068bc <__aeabi_dmul+0x134>
 8006884:	f104 0414 	add.w	r4, r4, #20
 8006888:	f1c4 0520 	rsb	r5, r4, #32
 800688c:	fa00 f305 	lsl.w	r3, r0, r5
 8006890:	fa20 f004 	lsr.w	r0, r0, r4
 8006894:	fa01 f205 	lsl.w	r2, r1, r5
 8006898:	ea40 0002 	orr.w	r0, r0, r2
 800689c:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 80068a0:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 80068a4:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 80068a8:	fa21 f604 	lsr.w	r6, r1, r4
 80068ac:	eb42 0106 	adc.w	r1, r2, r6
 80068b0:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80068b4:	bf08      	it	eq
 80068b6:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80068ba:	bd70      	pop	{r4, r5, r6, pc}
 80068bc:	f1c4 040c 	rsb	r4, r4, #12
 80068c0:	f1c4 0520 	rsb	r5, r4, #32
 80068c4:	fa00 f304 	lsl.w	r3, r0, r4
 80068c8:	fa20 f005 	lsr.w	r0, r0, r5
 80068cc:	fa01 f204 	lsl.w	r2, r1, r4
 80068d0:	ea40 0002 	orr.w	r0, r0, r2
 80068d4:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80068d8:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 80068dc:	f141 0100 	adc.w	r1, r1, #0
 80068e0:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80068e4:	bf08      	it	eq
 80068e6:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80068ea:	bd70      	pop	{r4, r5, r6, pc}
 80068ec:	f1c4 0520 	rsb	r5, r4, #32
 80068f0:	fa00 f205 	lsl.w	r2, r0, r5
 80068f4:	ea4e 0e02 	orr.w	lr, lr, r2
 80068f8:	fa20 f304 	lsr.w	r3, r0, r4
 80068fc:	fa01 f205 	lsl.w	r2, r1, r5
 8006900:	ea43 0302 	orr.w	r3, r3, r2
 8006904:	fa21 f004 	lsr.w	r0, r1, r4
 8006908:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 800690c:	fa21 f204 	lsr.w	r2, r1, r4
 8006910:	ea20 0002 	bic.w	r0, r0, r2
 8006914:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8006918:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800691c:	bf08      	it	eq
 800691e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8006922:	bd70      	pop	{r4, r5, r6, pc}
 8006924:	f094 0f00 	teq	r4, #0
 8006928:	d10f      	bne.n	800694a <__aeabi_dmul+0x1c2>
 800692a:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 800692e:	0040      	lsls	r0, r0, #1
 8006930:	eb41 0101 	adc.w	r1, r1, r1
 8006934:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8006938:	bf08      	it	eq
 800693a:	3c01      	subeq	r4, #1
 800693c:	d0f7      	beq.n	800692e <__aeabi_dmul+0x1a6>
 800693e:	ea41 0106 	orr.w	r1, r1, r6
 8006942:	f095 0f00 	teq	r5, #0
 8006946:	bf18      	it	ne
 8006948:	4770      	bxne	lr
 800694a:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 800694e:	0052      	lsls	r2, r2, #1
 8006950:	eb43 0303 	adc.w	r3, r3, r3
 8006954:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 8006958:	bf08      	it	eq
 800695a:	3d01      	subeq	r5, #1
 800695c:	d0f7      	beq.n	800694e <__aeabi_dmul+0x1c6>
 800695e:	ea43 0306 	orr.w	r3, r3, r6
 8006962:	4770      	bx	lr
 8006964:	ea94 0f0c 	teq	r4, r12
 8006968:	ea0c 5513 	and.w	r5, r12, r3, lsr #20
 800696c:	bf18      	it	ne
 800696e:	ea95 0f0c 	teqne	r5, r12
 8006972:	d00c      	beq.n	800698e <__aeabi_dmul+0x206>
 8006974:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8006978:	bf18      	it	ne
 800697a:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800697e:	d1d1      	bne.n	8006924 <__aeabi_dmul+0x19c>
 8006980:	ea81 0103 	eor.w	r1, r1, r3
 8006984:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8006988:	f04f 0000 	mov.w	r0, #0
 800698c:	bd70      	pop	{r4, r5, r6, pc}
 800698e:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8006992:	bf06      	itte	eq
 8006994:	4610      	moveq	r0, r2
 8006996:	4619      	moveq	r1, r3
 8006998:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800699c:	d019      	beq.n	80069d2 <__aeabi_dmul+0x24a>
 800699e:	ea94 0f0c 	teq	r4, r12
 80069a2:	d102      	bne.n	80069aa <__aeabi_dmul+0x222>
 80069a4:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 80069a8:	d113      	bne.n	80069d2 <__aeabi_dmul+0x24a>
 80069aa:	ea95 0f0c 	teq	r5, r12
 80069ae:	d105      	bne.n	80069bc <__aeabi_dmul+0x234>
 80069b0:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 80069b4:	bf1c      	itt	ne
 80069b6:	4610      	movne	r0, r2
 80069b8:	4619      	movne	r1, r3
 80069ba:	d10a      	bne.n	80069d2 <__aeabi_dmul+0x24a>
 80069bc:	ea81 0103 	eor.w	r1, r1, r3
 80069c0:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80069c4:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 80069c8:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80069cc:	f04f 0000 	mov.w	r0, #0
 80069d0:	bd70      	pop	{r4, r5, r6, pc}
 80069d2:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 80069d6:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 80069da:	bd70      	pop	{r4, r5, r6, pc}

080069dc <__aeabi_ddiv>:
 80069dc:	b570      	push	{r4, r5, r6, lr}
 80069de:	f04f 0cff 	mov.w	r12, #255	; 0xff
 80069e2:	f44c 6ce0 	orr.w	r12, r12, #1792	; 0x700
 80069e6:	ea1c 5411 	ands.w	r4, r12, r1, lsr #20
 80069ea:	bf1d      	ittte	ne
 80069ec:	ea1c 5513 	andsne.w	r5, r12, r3, lsr #20
 80069f0:	ea94 0f0c 	teqne	r4, r12
 80069f4:	ea95 0f0c 	teqne	r5, r12
 80069f8:	f000 f8a7 	bleq	8006b4a <__aeabi_ddiv+0x16e>
 80069fc:	eba4 0405 	sub.w	r4, r4, r5
 8006a00:	ea81 0e03 	eor.w	lr, r1, r3
 8006a04:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8006a08:	ea4f 3101 	mov.w	r1, r1, lsl #12
 8006a0c:	f000 8088 	beq.w	8006b20 <__aeabi_ddiv+0x144>
 8006a10:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8006a14:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 8006a18:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 8006a1c:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 8006a20:	ea4f 2202 	mov.w	r2, r2, lsl #8
 8006a24:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 8006a28:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 8006a2c:	ea4f 2600 	mov.w	r6, r0, lsl #8
 8006a30:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 8006a34:	429d      	cmp	r5, r3
 8006a36:	bf08      	it	eq
 8006a38:	4296      	cmpeq	r6, r2
 8006a3a:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 8006a3e:	f504 7440 	add.w	r4, r4, #768	; 0x300
 8006a42:	d202      	bcs.n	8006a4a <__aeabi_ddiv+0x6e>
 8006a44:	085b      	lsrs	r3, r3, #1
 8006a46:	ea4f 0232 	mov.w	r2, r2, rrx
 8006a4a:	1ab6      	subs	r6, r6, r2
 8006a4c:	eb65 0503 	sbc.w	r5, r5, r3
 8006a50:	085b      	lsrs	r3, r3, #1
 8006a52:	ea4f 0232 	mov.w	r2, r2, rrx
 8006a56:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 8006a5a:	f44f 2c00 	mov.w	r12, #524288	; 0x80000
 8006a5e:	ebb6 0e02 	subs.w	lr, r6, r2
 8006a62:	eb75 0e03 	sbcs.w	lr, r5, r3
 8006a66:	bf22      	ittt	cs
 8006a68:	1ab6      	subcs	r6, r6, r2
 8006a6a:	4675      	movcs	r5, lr
 8006a6c:	ea40 000c 	orrcs.w	r0, r0, r12
 8006a70:	085b      	lsrs	r3, r3, #1
 8006a72:	ea4f 0232 	mov.w	r2, r2, rrx
 8006a76:	ebb6 0e02 	subs.w	lr, r6, r2
 8006a7a:	eb75 0e03 	sbcs.w	lr, r5, r3
 8006a7e:	bf22      	ittt	cs
 8006a80:	1ab6      	subcs	r6, r6, r2
 8006a82:	4675      	movcs	r5, lr
 8006a84:	ea40 005c 	orrcs.w	r0, r0, r12, lsr #1
 8006a88:	085b      	lsrs	r3, r3, #1
 8006a8a:	ea4f 0232 	mov.w	r2, r2, rrx
 8006a8e:	ebb6 0e02 	subs.w	lr, r6, r2
 8006a92:	eb75 0e03 	sbcs.w	lr, r5, r3
 8006a96:	bf22      	ittt	cs
 8006a98:	1ab6      	subcs	r6, r6, r2
 8006a9a:	4675      	movcs	r5, lr
 8006a9c:	ea40 009c 	orrcs.w	r0, r0, r12, lsr #2
 8006aa0:	085b      	lsrs	r3, r3, #1
 8006aa2:	ea4f 0232 	mov.w	r2, r2, rrx
 8006aa6:	ebb6 0e02 	subs.w	lr, r6, r2
 8006aaa:	eb75 0e03 	sbcs.w	lr, r5, r3
 8006aae:	bf22      	ittt	cs
 8006ab0:	1ab6      	subcs	r6, r6, r2
 8006ab2:	4675      	movcs	r5, lr
 8006ab4:	ea40 00dc 	orrcs.w	r0, r0, r12, lsr #3
 8006ab8:	ea55 0e06 	orrs.w	lr, r5, r6
 8006abc:	d018      	beq.n	8006af0 <__aeabi_ddiv+0x114>
 8006abe:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8006ac2:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8006ac6:	ea4f 1606 	mov.w	r6, r6, lsl #4
 8006aca:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 8006ace:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8006ad2:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8006ad6:	ea5f 1c1c 	movs.w	r12, r12, lsr #4
 8006ada:	d1c0      	bne.n	8006a5e <__aeabi_ddiv+0x82>
 8006adc:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8006ae0:	d10b      	bne.n	8006afa <__aeabi_ddiv+0x11e>
 8006ae2:	ea41 0100 	orr.w	r1, r1, r0
 8006ae6:	f04f 0000 	mov.w	r0, #0
 8006aea:	f04f 4c00 	mov.w	r12, #2147483648	; 0x80000000
 8006aee:	e7b6      	b.n	8006a5e <__aeabi_ddiv+0x82>
 8006af0:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8006af4:	bf04      	itt	eq
 8006af6:	4301      	orreq	r1, r0
 8006af8:	2000      	moveq	r0, #0
 8006afa:	f1b4 0cfd 	subs.w	r12, r4, #253	; 0xfd
 8006afe:	bf88      	it	hi
 8006b00:	f5bc 6fe0 	cmphi.w	r12, #1792	; 0x700
 8006b04:	f63f aeaf 	bhi.w	8006866 <__aeabi_dmul+0xde>
 8006b08:	ebb5 0c03 	subs.w	r12, r5, r3
 8006b0c:	bf04      	itt	eq
 8006b0e:	ebb6 0c02 	subseq.w	r12, r6, r2
 8006b12:	ea5f 0c50 	movseq.w	r12, r0, lsr #1
 8006b16:	f150 0000 	adcs.w	r0, r0, #0
 8006b1a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8006b1e:	bd70      	pop	{r4, r5, r6, pc}
 8006b20:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 8006b24:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 8006b28:	eb14 045c 	adds.w	r4, r4, r12, lsr #1
 8006b2c:	bfc2      	ittt	gt
 8006b2e:	ebd4 050c 	rsbsgt	r5, r4, r12
 8006b32:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 8006b36:	bd70      	popgt	{r4, r5, r6, pc}
 8006b38:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8006b3c:	f04f 0e00 	mov.w	lr, #0
 8006b40:	3c01      	subs	r4, #1
 8006b42:	e690      	b.n	8006866 <__aeabi_dmul+0xde>
 8006b44:	ea45 0e06 	orr.w	lr, r5, r6
 8006b48:	e68d      	b.n	8006866 <__aeabi_dmul+0xde>
 8006b4a:	ea0c 5513 	and.w	r5, r12, r3, lsr #20
 8006b4e:	ea94 0f0c 	teq	r4, r12
 8006b52:	bf08      	it	eq
 8006b54:	ea95 0f0c 	teqeq	r5, r12
 8006b58:	f43f af3b 	beq.w	80069d2 <__aeabi_dmul+0x24a>
 8006b5c:	ea94 0f0c 	teq	r4, r12
 8006b60:	d10a      	bne.n	8006b78 <__aeabi_ddiv+0x19c>
 8006b62:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8006b66:	f47f af34 	bne.w	80069d2 <__aeabi_dmul+0x24a>
 8006b6a:	ea95 0f0c 	teq	r5, r12
 8006b6e:	f47f af25 	bne.w	80069bc <__aeabi_dmul+0x234>
 8006b72:	4610      	mov	r0, r2
 8006b74:	4619      	mov	r1, r3
 8006b76:	e72c      	b.n	80069d2 <__aeabi_dmul+0x24a>
 8006b78:	ea95 0f0c 	teq	r5, r12
 8006b7c:	d106      	bne.n	8006b8c <__aeabi_ddiv+0x1b0>
 8006b7e:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8006b82:	f43f aefd 	beq.w	8006980 <__aeabi_dmul+0x1f8>
 8006b86:	4610      	mov	r0, r2
 8006b88:	4619      	mov	r1, r3
 8006b8a:	e722      	b.n	80069d2 <__aeabi_dmul+0x24a>
 8006b8c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8006b90:	bf18      	it	ne
 8006b92:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8006b96:	f47f aec5 	bne.w	8006924 <__aeabi_dmul+0x19c>
 8006b9a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8006b9e:	f47f af0d 	bne.w	80069bc <__aeabi_dmul+0x234>
 8006ba2:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8006ba6:	f47f aeeb 	bne.w	8006980 <__aeabi_dmul+0x1f8>
 8006baa:	e712      	b.n	80069d2 <__aeabi_dmul+0x24a>

08006bac <__aeabi_d2f>:
 8006bac:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8006bb0:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
 8006bb4:	bf24      	itt	cs
 8006bb6:	f5b3 1c00 	subscs.w	r12, r3, #2097152	; 0x200000
 8006bba:	f1dc 5cfe 	rsbscs	r12, r12, #532676608	; 0x1fc00000
 8006bbe:	d90d      	bls.n	8006bdc <__aeabi_d2f+0x30>
 8006bc0:	f001 4c00 	and.w	r12, r1, #2147483648	; 0x80000000
 8006bc4:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8006bc8:	ea4c 7050 	orr.w	r0, r12, r0, lsr #29
 8006bcc:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
 8006bd0:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8006bd4:	bf08      	it	eq
 8006bd6:	f020 0001 	biceq.w	r0, r0, #1
 8006bda:	4770      	bx	lr
 8006bdc:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
 8006be0:	d121      	bne.n	8006c26 <__aeabi_d2f+0x7a>
 8006be2:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
 8006be6:	bfbc      	itt	lt
 8006be8:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
 8006bec:	4770      	bxlt	lr
 8006bee:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8006bf2:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8006bf6:	f1c2 0218 	rsb	r2, r2, #24
 8006bfa:	f1c2 0c20 	rsb	r12, r2, #32
 8006bfe:	fa10 f30c 	lsls.w	r3, r0, r12
 8006c02:	fa20 f002 	lsr.w	r0, r0, r2
 8006c06:	bf18      	it	ne
 8006c08:	f040 0001 	orrne.w	r0, r0, #1
 8006c0c:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8006c10:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8006c14:	fa03 fc0c 	lsl.w	r12, r3, r12
 8006c18:	ea40 000c 	orr.w	r0, r0, r12
 8006c1c:	fa23 f302 	lsr.w	r3, r3, r2
 8006c20:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8006c24:	e7cc      	b.n	8006bc0 <__aeabi_d2f+0x14>
 8006c26:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8006c2a:	d107      	bne.n	8006c3c <__aeabi_d2f+0x90>
 8006c2c:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8006c30:	bf1e      	ittt	ne
 8006c32:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
 8006c36:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
 8006c3a:	4770      	bxne	lr
 8006c3c:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
 8006c40:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8006c44:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8006c48:	4770      	bx	lr
 8006c4a:	bf00      	nop

08006c4c <__errno>:
 8006c4c:	4b01      	ldr	r3, [pc, #4]	; (8006c54 <__errno+0x8>)
 8006c4e:	6818      	ldr	r0, [r3, #0]
 8006c50:	4770      	bx	lr
 8006c52:	bf00      	nop
 8006c54:	200001bc 	.word	0x200001bc

08006c58 <__sflush_r>:
 8006c58:	898a      	ldrh	r2, [r1, #12]
 8006c5a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8006c5e:	4605      	mov	r5, r0
 8006c60:	0710      	lsls	r0, r2, #28
 8006c62:	460c      	mov	r4, r1
 8006c64:	d45a      	bmi.n	8006d1c <__sflush_r+0xc4>
 8006c66:	684b      	ldr	r3, [r1, #4]
 8006c68:	2b00      	cmp	r3, #0
 8006c6a:	dc05      	bgt.n	8006c78 <__sflush_r+0x20>
 8006c6c:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8006c6e:	2b00      	cmp	r3, #0
 8006c70:	dc02      	bgt.n	8006c78 <__sflush_r+0x20>
 8006c72:	2000      	movs	r0, #0
 8006c74:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8006c78:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8006c7a:	2e00      	cmp	r6, #0
 8006c7c:	d0f9      	beq.n	8006c72 <__sflush_r+0x1a>
 8006c7e:	2300      	movs	r3, #0
 8006c80:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8006c84:	682f      	ldr	r7, [r5, #0]
 8006c86:	602b      	str	r3, [r5, #0]
 8006c88:	d033      	beq.n	8006cf2 <__sflush_r+0x9a>
 8006c8a:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8006c8c:	89a3      	ldrh	r3, [r4, #12]
 8006c8e:	075a      	lsls	r2, r3, #29
 8006c90:	d505      	bpl.n	8006c9e <__sflush_r+0x46>
 8006c92:	6863      	ldr	r3, [r4, #4]
 8006c94:	1ac0      	subs	r0, r0, r3
 8006c96:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8006c98:	b10b      	cbz	r3, 8006c9e <__sflush_r+0x46>
 8006c9a:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8006c9c:	1ac0      	subs	r0, r0, r3
 8006c9e:	2300      	movs	r3, #0
 8006ca0:	4602      	mov	r2, r0
 8006ca2:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8006ca4:	6a21      	ldr	r1, [r4, #32]
 8006ca6:	4628      	mov	r0, r5
 8006ca8:	47b0      	blx	r6
 8006caa:	1c43      	adds	r3, r0, #1
 8006cac:	89a3      	ldrh	r3, [r4, #12]
 8006cae:	d106      	bne.n	8006cbe <__sflush_r+0x66>
 8006cb0:	6829      	ldr	r1, [r5, #0]
 8006cb2:	291d      	cmp	r1, #29
 8006cb4:	d84b      	bhi.n	8006d4e <__sflush_r+0xf6>
 8006cb6:	4a2b      	ldr	r2, [pc, #172]	; (8006d64 <__sflush_r+0x10c>)
 8006cb8:	40ca      	lsrs	r2, r1
 8006cba:	07d6      	lsls	r6, r2, #31
 8006cbc:	d547      	bpl.n	8006d4e <__sflush_r+0xf6>
 8006cbe:	2200      	movs	r2, #0
 8006cc0:	6062      	str	r2, [r4, #4]
 8006cc2:	04d9      	lsls	r1, r3, #19
 8006cc4:	6922      	ldr	r2, [r4, #16]
 8006cc6:	6022      	str	r2, [r4, #0]
 8006cc8:	d504      	bpl.n	8006cd4 <__sflush_r+0x7c>
 8006cca:	1c42      	adds	r2, r0, #1
 8006ccc:	d101      	bne.n	8006cd2 <__sflush_r+0x7a>
 8006cce:	682b      	ldr	r3, [r5, #0]
 8006cd0:	b903      	cbnz	r3, 8006cd4 <__sflush_r+0x7c>
 8006cd2:	6560      	str	r0, [r4, #84]	; 0x54
 8006cd4:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8006cd6:	602f      	str	r7, [r5, #0]
 8006cd8:	2900      	cmp	r1, #0
 8006cda:	d0ca      	beq.n	8006c72 <__sflush_r+0x1a>
 8006cdc:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8006ce0:	4299      	cmp	r1, r3
 8006ce2:	d002      	beq.n	8006cea <__sflush_r+0x92>
 8006ce4:	4628      	mov	r0, r5
 8006ce6:	f7ff f95b 	bl	8005fa0 <__wrap__free_r>
 8006cea:	2000      	movs	r0, #0
 8006cec:	6360      	str	r0, [r4, #52]	; 0x34
 8006cee:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8006cf2:	6a21      	ldr	r1, [r4, #32]
 8006cf4:	2301      	movs	r3, #1
 8006cf6:	4628      	mov	r0, r5
 8006cf8:	47b0      	blx	r6
 8006cfa:	1c41      	adds	r1, r0, #1
 8006cfc:	d1c6      	bne.n	8006c8c <__sflush_r+0x34>
 8006cfe:	682b      	ldr	r3, [r5, #0]
 8006d00:	2b00      	cmp	r3, #0
 8006d02:	d0c3      	beq.n	8006c8c <__sflush_r+0x34>
 8006d04:	2b1d      	cmp	r3, #29
 8006d06:	d001      	beq.n	8006d0c <__sflush_r+0xb4>
 8006d08:	2b16      	cmp	r3, #22
 8006d0a:	d101      	bne.n	8006d10 <__sflush_r+0xb8>
 8006d0c:	602f      	str	r7, [r5, #0]
 8006d0e:	e7b0      	b.n	8006c72 <__sflush_r+0x1a>
 8006d10:	89a3      	ldrh	r3, [r4, #12]
 8006d12:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8006d16:	81a3      	strh	r3, [r4, #12]
 8006d18:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8006d1c:	690f      	ldr	r7, [r1, #16]
 8006d1e:	2f00      	cmp	r7, #0
 8006d20:	d0a7      	beq.n	8006c72 <__sflush_r+0x1a>
 8006d22:	0793      	lsls	r3, r2, #30
 8006d24:	680e      	ldr	r6, [r1, #0]
 8006d26:	bf08      	it	eq
 8006d28:	694b      	ldreq	r3, [r1, #20]
 8006d2a:	600f      	str	r7, [r1, #0]
 8006d2c:	bf18      	it	ne
 8006d2e:	2300      	movne	r3, #0
 8006d30:	eba6 0807 	sub.w	r8, r6, r7
 8006d34:	608b      	str	r3, [r1, #8]
 8006d36:	f1b8 0f00 	cmp.w	r8, #0
 8006d3a:	dd9a      	ble.n	8006c72 <__sflush_r+0x1a>
 8006d3c:	4643      	mov	r3, r8
 8006d3e:	463a      	mov	r2, r7
 8006d40:	6a21      	ldr	r1, [r4, #32]
 8006d42:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8006d44:	4628      	mov	r0, r5
 8006d46:	47b0      	blx	r6
 8006d48:	2800      	cmp	r0, #0
 8006d4a:	dc07      	bgt.n	8006d5c <__sflush_r+0x104>
 8006d4c:	89a3      	ldrh	r3, [r4, #12]
 8006d4e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8006d52:	81a3      	strh	r3, [r4, #12]
 8006d54:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8006d58:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8006d5c:	4407      	add	r7, r0
 8006d5e:	eba8 0800 	sub.w	r8, r8, r0
 8006d62:	e7e8      	b.n	8006d36 <__sflush_r+0xde>
 8006d64:	20400001 	.word	0x20400001

08006d68 <_fflush_r>:
 8006d68:	b538      	push	{r3, r4, r5, lr}
 8006d6a:	690b      	ldr	r3, [r1, #16]
 8006d6c:	4605      	mov	r5, r0
 8006d6e:	460c      	mov	r4, r1
 8006d70:	b1db      	cbz	r3, 8006daa <_fflush_r+0x42>
 8006d72:	b118      	cbz	r0, 8006d7c <_fflush_r+0x14>
 8006d74:	6983      	ldr	r3, [r0, #24]
 8006d76:	b90b      	cbnz	r3, 8006d7c <_fflush_r+0x14>
 8006d78:	f000 f872 	bl	8006e60 <__sinit>
 8006d7c:	4b0c      	ldr	r3, [pc, #48]	; (8006db0 <_fflush_r+0x48>)
 8006d7e:	429c      	cmp	r4, r3
 8006d80:	d109      	bne.n	8006d96 <_fflush_r+0x2e>
 8006d82:	686c      	ldr	r4, [r5, #4]
 8006d84:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8006d88:	b17b      	cbz	r3, 8006daa <_fflush_r+0x42>
 8006d8a:	4621      	mov	r1, r4
 8006d8c:	4628      	mov	r0, r5
 8006d8e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8006d92:	f7ff bf61 	b.w	8006c58 <__sflush_r>
 8006d96:	4b07      	ldr	r3, [pc, #28]	; (8006db4 <_fflush_r+0x4c>)
 8006d98:	429c      	cmp	r4, r3
 8006d9a:	d101      	bne.n	8006da0 <_fflush_r+0x38>
 8006d9c:	68ac      	ldr	r4, [r5, #8]
 8006d9e:	e7f1      	b.n	8006d84 <_fflush_r+0x1c>
 8006da0:	4b05      	ldr	r3, [pc, #20]	; (8006db8 <_fflush_r+0x50>)
 8006da2:	429c      	cmp	r4, r3
 8006da4:	bf08      	it	eq
 8006da6:	68ec      	ldreq	r4, [r5, #12]
 8006da8:	e7ec      	b.n	8006d84 <_fflush_r+0x1c>
 8006daa:	2000      	movs	r0, #0
 8006dac:	bd38      	pop	{r3, r4, r5, pc}
 8006dae:	bf00      	nop
 8006db0:	08008788 	.word	0x08008788
 8006db4:	080087a8 	.word	0x080087a8
 8006db8:	08008768 	.word	0x08008768

08006dbc <fflush>:
 8006dbc:	4601      	mov	r1, r0
 8006dbe:	b920      	cbnz	r0, 8006dca <fflush+0xe>
 8006dc0:	4b04      	ldr	r3, [pc, #16]	; (8006dd4 <fflush+0x18>)
 8006dc2:	4905      	ldr	r1, [pc, #20]	; (8006dd8 <fflush+0x1c>)
 8006dc4:	6818      	ldr	r0, [r3, #0]
 8006dc6:	f000 b8b7 	b.w	8006f38 <_fwalk_reent>
 8006dca:	4b04      	ldr	r3, [pc, #16]	; (8006ddc <fflush+0x20>)
 8006dcc:	6818      	ldr	r0, [r3, #0]
 8006dce:	f7ff bfcb 	b.w	8006d68 <_fflush_r>
 8006dd2:	bf00      	nop
 8006dd4:	080087c8 	.word	0x080087c8
 8006dd8:	08006d69 	.word	0x08006d69
 8006ddc:	200001bc 	.word	0x200001bc

08006de0 <_cleanup_r>:
 8006de0:	4901      	ldr	r1, [pc, #4]	; (8006de8 <_cleanup_r+0x8>)
 8006de2:	f000 b8a9 	b.w	8006f38 <_fwalk_reent>
 8006de6:	bf00      	nop
 8006de8:	08006d69 	.word	0x08006d69

08006dec <std.isra.0>:
 8006dec:	2300      	movs	r3, #0
 8006dee:	b510      	push	{r4, lr}
 8006df0:	4604      	mov	r4, r0
 8006df2:	6003      	str	r3, [r0, #0]
 8006df4:	6043      	str	r3, [r0, #4]
 8006df6:	6083      	str	r3, [r0, #8]
 8006df8:	8181      	strh	r1, [r0, #12]
 8006dfa:	6643      	str	r3, [r0, #100]	; 0x64
 8006dfc:	81c2      	strh	r2, [r0, #14]
 8006dfe:	6103      	str	r3, [r0, #16]
 8006e00:	6143      	str	r3, [r0, #20]
 8006e02:	6183      	str	r3, [r0, #24]
 8006e04:	4619      	mov	r1, r3
 8006e06:	2208      	movs	r2, #8
 8006e08:	305c      	adds	r0, #92	; 0x5c
 8006e0a:	f000 f95e 	bl	80070ca <memset>
 8006e0e:	4b05      	ldr	r3, [pc, #20]	; (8006e24 <std.isra.0+0x38>)
 8006e10:	6263      	str	r3, [r4, #36]	; 0x24
 8006e12:	4b05      	ldr	r3, [pc, #20]	; (8006e28 <std.isra.0+0x3c>)
 8006e14:	62a3      	str	r3, [r4, #40]	; 0x28
 8006e16:	4b05      	ldr	r3, [pc, #20]	; (8006e2c <std.isra.0+0x40>)
 8006e18:	62e3      	str	r3, [r4, #44]	; 0x2c
 8006e1a:	4b05      	ldr	r3, [pc, #20]	; (8006e30 <std.isra.0+0x44>)
 8006e1c:	6224      	str	r4, [r4, #32]
 8006e1e:	6323      	str	r3, [r4, #48]	; 0x30
 8006e20:	bd10      	pop	{r4, pc}
 8006e22:	bf00      	nop
 8006e24:	080075dd 	.word	0x080075dd
 8006e28:	080075ff 	.word	0x080075ff
 8006e2c:	08007637 	.word	0x08007637
 8006e30:	0800765b 	.word	0x0800765b

08006e34 <__sfmoreglue>:
 8006e34:	b570      	push	{r4, r5, r6, lr}
 8006e36:	1e4a      	subs	r2, r1, #1
 8006e38:	2568      	movs	r5, #104	; 0x68
 8006e3a:	4355      	muls	r5, r2
 8006e3c:	460e      	mov	r6, r1
 8006e3e:	f105 0174 	add.w	r1, r5, #116	; 0x74
 8006e42:	f7ff f8a9 	bl	8005f98 <__wrap__malloc_r>
 8006e46:	4604      	mov	r4, r0
 8006e48:	b140      	cbz	r0, 8006e5c <__sfmoreglue+0x28>
 8006e4a:	2100      	movs	r1, #0
 8006e4c:	e880 0042 	stmia.w	r0, {r1, r6}
 8006e50:	300c      	adds	r0, #12
 8006e52:	60a0      	str	r0, [r4, #8]
 8006e54:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8006e58:	f000 f937 	bl	80070ca <memset>
 8006e5c:	4620      	mov	r0, r4
 8006e5e:	bd70      	pop	{r4, r5, r6, pc}

08006e60 <__sinit>:
 8006e60:	6983      	ldr	r3, [r0, #24]
 8006e62:	b510      	push	{r4, lr}
 8006e64:	4604      	mov	r4, r0
 8006e66:	bb33      	cbnz	r3, 8006eb6 <__sinit+0x56>
 8006e68:	6483      	str	r3, [r0, #72]	; 0x48
 8006e6a:	64c3      	str	r3, [r0, #76]	; 0x4c
 8006e6c:	6503      	str	r3, [r0, #80]	; 0x50
 8006e6e:	4b12      	ldr	r3, [pc, #72]	; (8006eb8 <__sinit+0x58>)
 8006e70:	4a12      	ldr	r2, [pc, #72]	; (8006ebc <__sinit+0x5c>)
 8006e72:	681b      	ldr	r3, [r3, #0]
 8006e74:	6282      	str	r2, [r0, #40]	; 0x28
 8006e76:	4298      	cmp	r0, r3
 8006e78:	bf04      	itt	eq
 8006e7a:	2301      	moveq	r3, #1
 8006e7c:	6183      	streq	r3, [r0, #24]
 8006e7e:	f000 f81f 	bl	8006ec0 <__sfp>
 8006e82:	6060      	str	r0, [r4, #4]
 8006e84:	4620      	mov	r0, r4
 8006e86:	f000 f81b 	bl	8006ec0 <__sfp>
 8006e8a:	60a0      	str	r0, [r4, #8]
 8006e8c:	4620      	mov	r0, r4
 8006e8e:	f000 f817 	bl	8006ec0 <__sfp>
 8006e92:	2200      	movs	r2, #0
 8006e94:	60e0      	str	r0, [r4, #12]
 8006e96:	2104      	movs	r1, #4
 8006e98:	6860      	ldr	r0, [r4, #4]
 8006e9a:	f7ff ffa7 	bl	8006dec <std.isra.0>
 8006e9e:	2201      	movs	r2, #1
 8006ea0:	2109      	movs	r1, #9
 8006ea2:	68a0      	ldr	r0, [r4, #8]
 8006ea4:	f7ff ffa2 	bl	8006dec <std.isra.0>
 8006ea8:	2202      	movs	r2, #2
 8006eaa:	2112      	movs	r1, #18
 8006eac:	68e0      	ldr	r0, [r4, #12]
 8006eae:	f7ff ff9d 	bl	8006dec <std.isra.0>
 8006eb2:	2301      	movs	r3, #1
 8006eb4:	61a3      	str	r3, [r4, #24]
 8006eb6:	bd10      	pop	{r4, pc}
 8006eb8:	080087c8 	.word	0x080087c8
 8006ebc:	08006de1 	.word	0x08006de1

08006ec0 <__sfp>:
 8006ec0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006ec2:	4b1c      	ldr	r3, [pc, #112]	; (8006f34 <__sfp+0x74>)
 8006ec4:	681e      	ldr	r6, [r3, #0]
 8006ec6:	69b3      	ldr	r3, [r6, #24]
 8006ec8:	4607      	mov	r7, r0
 8006eca:	b913      	cbnz	r3, 8006ed2 <__sfp+0x12>
 8006ecc:	4630      	mov	r0, r6
 8006ece:	f7ff ffc7 	bl	8006e60 <__sinit>
 8006ed2:	3648      	adds	r6, #72	; 0x48
 8006ed4:	68b4      	ldr	r4, [r6, #8]
 8006ed6:	6873      	ldr	r3, [r6, #4]
 8006ed8:	3b01      	subs	r3, #1
 8006eda:	d503      	bpl.n	8006ee4 <__sfp+0x24>
 8006edc:	6833      	ldr	r3, [r6, #0]
 8006ede:	b133      	cbz	r3, 8006eee <__sfp+0x2e>
 8006ee0:	6836      	ldr	r6, [r6, #0]
 8006ee2:	e7f7      	b.n	8006ed4 <__sfp+0x14>
 8006ee4:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8006ee8:	b16d      	cbz	r5, 8006f06 <__sfp+0x46>
 8006eea:	3468      	adds	r4, #104	; 0x68
 8006eec:	e7f4      	b.n	8006ed8 <__sfp+0x18>
 8006eee:	2104      	movs	r1, #4
 8006ef0:	4638      	mov	r0, r7
 8006ef2:	f7ff ff9f 	bl	8006e34 <__sfmoreglue>
 8006ef6:	6030      	str	r0, [r6, #0]
 8006ef8:	2800      	cmp	r0, #0
 8006efa:	d1f1      	bne.n	8006ee0 <__sfp+0x20>
 8006efc:	230c      	movs	r3, #12
 8006efe:	603b      	str	r3, [r7, #0]
 8006f00:	4604      	mov	r4, r0
 8006f02:	4620      	mov	r0, r4
 8006f04:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8006f06:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8006f0a:	81e3      	strh	r3, [r4, #14]
 8006f0c:	2301      	movs	r3, #1
 8006f0e:	81a3      	strh	r3, [r4, #12]
 8006f10:	6665      	str	r5, [r4, #100]	; 0x64
 8006f12:	6025      	str	r5, [r4, #0]
 8006f14:	60a5      	str	r5, [r4, #8]
 8006f16:	6065      	str	r5, [r4, #4]
 8006f18:	6125      	str	r5, [r4, #16]
 8006f1a:	6165      	str	r5, [r4, #20]
 8006f1c:	61a5      	str	r5, [r4, #24]
 8006f1e:	2208      	movs	r2, #8
 8006f20:	4629      	mov	r1, r5
 8006f22:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8006f26:	f000 f8d0 	bl	80070ca <memset>
 8006f2a:	6365      	str	r5, [r4, #52]	; 0x34
 8006f2c:	63a5      	str	r5, [r4, #56]	; 0x38
 8006f2e:	64a5      	str	r5, [r4, #72]	; 0x48
 8006f30:	64e5      	str	r5, [r4, #76]	; 0x4c
 8006f32:	e7e6      	b.n	8006f02 <__sfp+0x42>
 8006f34:	080087c8 	.word	0x080087c8

08006f38 <_fwalk_reent>:
 8006f38:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8006f3c:	4680      	mov	r8, r0
 8006f3e:	4689      	mov	r9, r1
 8006f40:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8006f44:	2600      	movs	r6, #0
 8006f46:	b914      	cbnz	r4, 8006f4e <_fwalk_reent+0x16>
 8006f48:	4630      	mov	r0, r6
 8006f4a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8006f4e:	68a5      	ldr	r5, [r4, #8]
 8006f50:	6867      	ldr	r7, [r4, #4]
 8006f52:	3f01      	subs	r7, #1
 8006f54:	d501      	bpl.n	8006f5a <_fwalk_reent+0x22>
 8006f56:	6824      	ldr	r4, [r4, #0]
 8006f58:	e7f5      	b.n	8006f46 <_fwalk_reent+0xe>
 8006f5a:	89ab      	ldrh	r3, [r5, #12]
 8006f5c:	2b01      	cmp	r3, #1
 8006f5e:	d907      	bls.n	8006f70 <_fwalk_reent+0x38>
 8006f60:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8006f64:	3301      	adds	r3, #1
 8006f66:	d003      	beq.n	8006f70 <_fwalk_reent+0x38>
 8006f68:	4629      	mov	r1, r5
 8006f6a:	4640      	mov	r0, r8
 8006f6c:	47c8      	blx	r9
 8006f6e:	4306      	orrs	r6, r0
 8006f70:	3568      	adds	r5, #104	; 0x68
 8006f72:	e7ee      	b.n	8006f52 <_fwalk_reent+0x1a>

08006f74 <__libc_init_array>:
 8006f74:	b570      	push	{r4, r5, r6, lr}
 8006f76:	4e0d      	ldr	r6, [pc, #52]	; (8006fac <__libc_init_array+0x38>)
 8006f78:	4c0d      	ldr	r4, [pc, #52]	; (8006fb0 <__libc_init_array+0x3c>)
 8006f7a:	1ba4      	subs	r4, r4, r6
 8006f7c:	10a4      	asrs	r4, r4, #2
 8006f7e:	2500      	movs	r5, #0
 8006f80:	42a5      	cmp	r5, r4
 8006f82:	d109      	bne.n	8006f98 <__libc_init_array+0x24>
 8006f84:	4e0b      	ldr	r6, [pc, #44]	; (8006fb4 <__libc_init_array+0x40>)
 8006f86:	4c0c      	ldr	r4, [pc, #48]	; (8006fb8 <__libc_init_array+0x44>)
 8006f88:	f000 fe9a 	bl	8007cc0 <_init>
 8006f8c:	1ba4      	subs	r4, r4, r6
 8006f8e:	10a4      	asrs	r4, r4, #2
 8006f90:	2500      	movs	r5, #0
 8006f92:	42a5      	cmp	r5, r4
 8006f94:	d105      	bne.n	8006fa2 <__libc_init_array+0x2e>
 8006f96:	bd70      	pop	{r4, r5, r6, pc}
 8006f98:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8006f9c:	4798      	blx	r3
 8006f9e:	3501      	adds	r5, #1
 8006fa0:	e7ee      	b.n	8006f80 <__libc_init_array+0xc>
 8006fa2:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8006fa6:	4798      	blx	r3
 8006fa8:	3501      	adds	r5, #1
 8006faa:	e7f2      	b.n	8006f92 <__libc_init_array+0x1e>
 8006fac:	20000224 	.word	0x20000224
 8006fb0:	20000224 	.word	0x20000224
 8006fb4:	20000224 	.word	0x20000224
 8006fb8:	20000230 	.word	0x20000230

08006fbc <malloc>:
 8006fbc:	4b02      	ldr	r3, [pc, #8]	; (8006fc8 <malloc+0xc>)
 8006fbe:	4601      	mov	r1, r0
 8006fc0:	6818      	ldr	r0, [r3, #0]
 8006fc2:	f7fe bfe9 	b.w	8005f98 <__wrap__malloc_r>
 8006fc6:	bf00      	nop
 8006fc8:	200001bc 	.word	0x200001bc

08006fcc <free>:
 8006fcc:	4b02      	ldr	r3, [pc, #8]	; (8006fd8 <free+0xc>)
 8006fce:	4601      	mov	r1, r0
 8006fd0:	6818      	ldr	r0, [r3, #0]
 8006fd2:	f7fe bfe5 	b.w	8005fa0 <__wrap__free_r>
 8006fd6:	bf00      	nop
 8006fd8:	200001bc 	.word	0x200001bc
 8006fdc:	00000000 	.word	0x00000000

08006fe0 <memchr>:
 8006fe0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8006fe4:	2a10      	cmp	r2, #16
 8006fe6:	db2b      	blt.n	8007040 <memchr+0x60>
 8006fe8:	f010 0f07 	tst.w	r0, #7
 8006fec:	d008      	beq.n	8007000 <memchr+0x20>
 8006fee:	f810 3b01 	ldrb.w	r3, [r0], #1
 8006ff2:	3a01      	subs	r2, #1
 8006ff4:	428b      	cmp	r3, r1
 8006ff6:	d02d      	beq.n	8007054 <memchr+0x74>
 8006ff8:	f010 0f07 	tst.w	r0, #7
 8006ffc:	b342      	cbz	r2, 8007050 <memchr+0x70>
 8006ffe:	d1f6      	bne.n	8006fee <memchr+0xe>
 8007000:	b4f0      	push	{r4, r5, r6, r7}
 8007002:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8007006:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800700a:	f022 0407 	bic.w	r4, r2, #7
 800700e:	f07f 0700 	mvns.w	r7, #0
 8007012:	2300      	movs	r3, #0
 8007014:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8007018:	3c08      	subs	r4, #8
 800701a:	ea85 0501 	eor.w	r5, r5, r1
 800701e:	ea86 0601 	eor.w	r6, r6, r1
 8007022:	fa85 f547 	uadd8	r5, r5, r7
 8007026:	faa3 f587 	sel	r5, r3, r7
 800702a:	fa86 f647 	uadd8	r6, r6, r7
 800702e:	faa5 f687 	sel	r6, r5, r7
 8007032:	b98e      	cbnz	r6, 8007058 <memchr+0x78>
 8007034:	d1ee      	bne.n	8007014 <memchr+0x34>
 8007036:	bcf0      	pop	{r4, r5, r6, r7}
 8007038:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800703c:	f002 0207 	and.w	r2, r2, #7
 8007040:	b132      	cbz	r2, 8007050 <memchr+0x70>
 8007042:	f810 3b01 	ldrb.w	r3, [r0], #1
 8007046:	3a01      	subs	r2, #1
 8007048:	ea83 0301 	eor.w	r3, r3, r1
 800704c:	b113      	cbz	r3, 8007054 <memchr+0x74>
 800704e:	d1f8      	bne.n	8007042 <memchr+0x62>
 8007050:	2000      	movs	r0, #0
 8007052:	4770      	bx	lr
 8007054:	3801      	subs	r0, #1
 8007056:	4770      	bx	lr
 8007058:	2d00      	cmp	r5, #0
 800705a:	bf06      	itte	eq
 800705c:	4635      	moveq	r5, r6
 800705e:	3803      	subeq	r0, #3
 8007060:	3807      	subne	r0, #7
 8007062:	f015 0f01 	tst.w	r5, #1
 8007066:	d107      	bne.n	8007078 <memchr+0x98>
 8007068:	3001      	adds	r0, #1
 800706a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800706e:	bf02      	ittt	eq
 8007070:	3001      	addeq	r0, #1
 8007072:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8007076:	3001      	addeq	r0, #1
 8007078:	bcf0      	pop	{r4, r5, r6, r7}
 800707a:	3801      	subs	r0, #1
 800707c:	4770      	bx	lr
 800707e:	bf00      	nop

08007080 <memcpy>:
 8007080:	b510      	push	{r4, lr}
 8007082:	1e43      	subs	r3, r0, #1
 8007084:	440a      	add	r2, r1
 8007086:	4291      	cmp	r1, r2
 8007088:	d100      	bne.n	800708c <memcpy+0xc>
 800708a:	bd10      	pop	{r4, pc}
 800708c:	f811 4b01 	ldrb.w	r4, [r1], #1
 8007090:	f803 4f01 	strb.w	r4, [r3, #1]!
 8007094:	e7f7      	b.n	8007086 <memcpy+0x6>

08007096 <memmove>:
 8007096:	4288      	cmp	r0, r1
 8007098:	b510      	push	{r4, lr}
 800709a:	eb01 0302 	add.w	r3, r1, r2
 800709e:	d803      	bhi.n	80070a8 <memmove+0x12>
 80070a0:	1e42      	subs	r2, r0, #1
 80070a2:	4299      	cmp	r1, r3
 80070a4:	d10c      	bne.n	80070c0 <memmove+0x2a>
 80070a6:	bd10      	pop	{r4, pc}
 80070a8:	4298      	cmp	r0, r3
 80070aa:	d2f9      	bcs.n	80070a0 <memmove+0xa>
 80070ac:	1881      	adds	r1, r0, r2
 80070ae:	1ad2      	subs	r2, r2, r3
 80070b0:	42d3      	cmn	r3, r2
 80070b2:	d100      	bne.n	80070b6 <memmove+0x20>
 80070b4:	bd10      	pop	{r4, pc}
 80070b6:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 80070ba:	f801 4d01 	strb.w	r4, [r1, #-1]!
 80070be:	e7f7      	b.n	80070b0 <memmove+0x1a>
 80070c0:	f811 4b01 	ldrb.w	r4, [r1], #1
 80070c4:	f802 4f01 	strb.w	r4, [r2, #1]!
 80070c8:	e7eb      	b.n	80070a2 <memmove+0xc>

080070ca <memset>:
 80070ca:	4402      	add	r2, r0
 80070cc:	4603      	mov	r3, r0
 80070ce:	4293      	cmp	r3, r2
 80070d0:	d100      	bne.n	80070d4 <memset+0xa>
 80070d2:	4770      	bx	lr
 80070d4:	f803 1b01 	strb.w	r1, [r3], #1
 80070d8:	e7f9      	b.n	80070ce <memset+0x4>
	...

080070dc <_free_r>:
 80070dc:	b538      	push	{r3, r4, r5, lr}
 80070de:	4605      	mov	r5, r0
 80070e0:	2900      	cmp	r1, #0
 80070e2:	d045      	beq.n	8007170 <_free_r+0x94>
 80070e4:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80070e8:	1f0c      	subs	r4, r1, #4
 80070ea:	2b00      	cmp	r3, #0
 80070ec:	bfb8      	it	lt
 80070ee:	18e4      	addlt	r4, r4, r3
 80070f0:	f7ff f885 	bl	80061fe <__malloc_lock>
 80070f4:	4a1f      	ldr	r2, [pc, #124]	; (8007174 <_free_r+0x98>)
 80070f6:	6813      	ldr	r3, [r2, #0]
 80070f8:	4610      	mov	r0, r2
 80070fa:	b933      	cbnz	r3, 800710a <_free_r+0x2e>
 80070fc:	6063      	str	r3, [r4, #4]
 80070fe:	6014      	str	r4, [r2, #0]
 8007100:	4628      	mov	r0, r5
 8007102:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8007106:	f7ff b87e 	b.w	8006206 <__malloc_unlock>
 800710a:	42a3      	cmp	r3, r4
 800710c:	d90c      	bls.n	8007128 <_free_r+0x4c>
 800710e:	6821      	ldr	r1, [r4, #0]
 8007110:	1862      	adds	r2, r4, r1
 8007112:	4293      	cmp	r3, r2
 8007114:	bf04      	itt	eq
 8007116:	681a      	ldreq	r2, [r3, #0]
 8007118:	685b      	ldreq	r3, [r3, #4]
 800711a:	6063      	str	r3, [r4, #4]
 800711c:	bf04      	itt	eq
 800711e:	1852      	addeq	r2, r2, r1
 8007120:	6022      	streq	r2, [r4, #0]
 8007122:	6004      	str	r4, [r0, #0]
 8007124:	e7ec      	b.n	8007100 <_free_r+0x24>
 8007126:	4613      	mov	r3, r2
 8007128:	685a      	ldr	r2, [r3, #4]
 800712a:	b10a      	cbz	r2, 8007130 <_free_r+0x54>
 800712c:	42a2      	cmp	r2, r4
 800712e:	d9fa      	bls.n	8007126 <_free_r+0x4a>
 8007130:	6819      	ldr	r1, [r3, #0]
 8007132:	1858      	adds	r0, r3, r1
 8007134:	42a0      	cmp	r0, r4
 8007136:	d10b      	bne.n	8007150 <_free_r+0x74>
 8007138:	6820      	ldr	r0, [r4, #0]
 800713a:	4401      	add	r1, r0
 800713c:	1858      	adds	r0, r3, r1
 800713e:	4282      	cmp	r2, r0
 8007140:	6019      	str	r1, [r3, #0]
 8007142:	d1dd      	bne.n	8007100 <_free_r+0x24>
 8007144:	6810      	ldr	r0, [r2, #0]
 8007146:	6852      	ldr	r2, [r2, #4]
 8007148:	605a      	str	r2, [r3, #4]
 800714a:	4401      	add	r1, r0
 800714c:	6019      	str	r1, [r3, #0]
 800714e:	e7d7      	b.n	8007100 <_free_r+0x24>
 8007150:	d902      	bls.n	8007158 <_free_r+0x7c>
 8007152:	230c      	movs	r3, #12
 8007154:	602b      	str	r3, [r5, #0]
 8007156:	e7d3      	b.n	8007100 <_free_r+0x24>
 8007158:	6820      	ldr	r0, [r4, #0]
 800715a:	1821      	adds	r1, r4, r0
 800715c:	428a      	cmp	r2, r1
 800715e:	bf04      	itt	eq
 8007160:	6811      	ldreq	r1, [r2, #0]
 8007162:	6852      	ldreq	r2, [r2, #4]
 8007164:	6062      	str	r2, [r4, #4]
 8007166:	bf04      	itt	eq
 8007168:	1809      	addeq	r1, r1, r0
 800716a:	6021      	streq	r1, [r4, #0]
 800716c:	605c      	str	r4, [r3, #4]
 800716e:	e7c7      	b.n	8007100 <_free_r+0x24>
 8007170:	bd38      	pop	{r3, r4, r5, pc}
 8007172:	bf00      	nop
 8007174:	20002634 	.word	0x20002634

08007178 <_malloc_r>:
 8007178:	b570      	push	{r4, r5, r6, lr}
 800717a:	1ccd      	adds	r5, r1, #3
 800717c:	f025 0503 	bic.w	r5, r5, #3
 8007180:	3508      	adds	r5, #8
 8007182:	2d0c      	cmp	r5, #12
 8007184:	bf38      	it	cc
 8007186:	250c      	movcc	r5, #12
 8007188:	2d00      	cmp	r5, #0
 800718a:	4606      	mov	r6, r0
 800718c:	db01      	blt.n	8007192 <_malloc_r+0x1a>
 800718e:	42a9      	cmp	r1, r5
 8007190:	d903      	bls.n	800719a <_malloc_r+0x22>
 8007192:	230c      	movs	r3, #12
 8007194:	6033      	str	r3, [r6, #0]
 8007196:	2000      	movs	r0, #0
 8007198:	bd70      	pop	{r4, r5, r6, pc}
 800719a:	f7ff f830 	bl	80061fe <__malloc_lock>
 800719e:	4a23      	ldr	r2, [pc, #140]	; (800722c <_malloc_r+0xb4>)
 80071a0:	6814      	ldr	r4, [r2, #0]
 80071a2:	4621      	mov	r1, r4
 80071a4:	b991      	cbnz	r1, 80071cc <_malloc_r+0x54>
 80071a6:	4c22      	ldr	r4, [pc, #136]	; (8007230 <_malloc_r+0xb8>)
 80071a8:	6823      	ldr	r3, [r4, #0]
 80071aa:	b91b      	cbnz	r3, 80071b4 <_malloc_r+0x3c>
 80071ac:	4630      	mov	r0, r6
 80071ae:	f000 fa05 	bl	80075bc <_sbrk_r>
 80071b2:	6020      	str	r0, [r4, #0]
 80071b4:	4629      	mov	r1, r5
 80071b6:	4630      	mov	r0, r6
 80071b8:	f000 fa00 	bl	80075bc <_sbrk_r>
 80071bc:	1c43      	adds	r3, r0, #1
 80071be:	d126      	bne.n	800720e <_malloc_r+0x96>
 80071c0:	230c      	movs	r3, #12
 80071c2:	6033      	str	r3, [r6, #0]
 80071c4:	4630      	mov	r0, r6
 80071c6:	f7ff f81e 	bl	8006206 <__malloc_unlock>
 80071ca:	e7e4      	b.n	8007196 <_malloc_r+0x1e>
 80071cc:	680b      	ldr	r3, [r1, #0]
 80071ce:	1b5b      	subs	r3, r3, r5
 80071d0:	d41a      	bmi.n	8007208 <_malloc_r+0x90>
 80071d2:	2b0b      	cmp	r3, #11
 80071d4:	d90f      	bls.n	80071f6 <_malloc_r+0x7e>
 80071d6:	600b      	str	r3, [r1, #0]
 80071d8:	50cd      	str	r5, [r1, r3]
 80071da:	18cc      	adds	r4, r1, r3
 80071dc:	4630      	mov	r0, r6
 80071de:	f7ff f812 	bl	8006206 <__malloc_unlock>
 80071e2:	f104 000b 	add.w	r0, r4, #11
 80071e6:	1d23      	adds	r3, r4, #4
 80071e8:	f020 0007 	bic.w	r0, r0, #7
 80071ec:	1ac3      	subs	r3, r0, r3
 80071ee:	d01b      	beq.n	8007228 <_malloc_r+0xb0>
 80071f0:	425a      	negs	r2, r3
 80071f2:	50e2      	str	r2, [r4, r3]
 80071f4:	bd70      	pop	{r4, r5, r6, pc}
 80071f6:	428c      	cmp	r4, r1
 80071f8:	bf0d      	iteet	eq
 80071fa:	6863      	ldreq	r3, [r4, #4]
 80071fc:	684b      	ldrne	r3, [r1, #4]
 80071fe:	6063      	strne	r3, [r4, #4]
 8007200:	6013      	streq	r3, [r2, #0]
 8007202:	bf18      	it	ne
 8007204:	460c      	movne	r4, r1
 8007206:	e7e9      	b.n	80071dc <_malloc_r+0x64>
 8007208:	460c      	mov	r4, r1
 800720a:	6849      	ldr	r1, [r1, #4]
 800720c:	e7ca      	b.n	80071a4 <_malloc_r+0x2c>
 800720e:	1cc4      	adds	r4, r0, #3
 8007210:	f024 0403 	bic.w	r4, r4, #3
 8007214:	42a0      	cmp	r0, r4
 8007216:	d005      	beq.n	8007224 <_malloc_r+0xac>
 8007218:	1a21      	subs	r1, r4, r0
 800721a:	4630      	mov	r0, r6
 800721c:	f000 f9ce 	bl	80075bc <_sbrk_r>
 8007220:	3001      	adds	r0, #1
 8007222:	d0cd      	beq.n	80071c0 <_malloc_r+0x48>
 8007224:	6025      	str	r5, [r4, #0]
 8007226:	e7d9      	b.n	80071dc <_malloc_r+0x64>
 8007228:	bd70      	pop	{r4, r5, r6, pc}
 800722a:	bf00      	nop
 800722c:	20002634 	.word	0x20002634
 8007230:	20002638 	.word	0x20002638

08007234 <_realloc_r>:
 8007234:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007236:	4607      	mov	r7, r0
 8007238:	4614      	mov	r4, r2
 800723a:	460e      	mov	r6, r1
 800723c:	b921      	cbnz	r1, 8007248 <_realloc_r+0x14>
 800723e:	4611      	mov	r1, r2
 8007240:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8007244:	f7fe bea8 	b.w	8005f98 <__wrap__malloc_r>
 8007248:	b922      	cbnz	r2, 8007254 <_realloc_r+0x20>
 800724a:	f7fe fea9 	bl	8005fa0 <__wrap__free_r>
 800724e:	4625      	mov	r5, r4
 8007250:	4628      	mov	r0, r5
 8007252:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8007254:	f000 fa64 	bl	8007720 <_malloc_usable_size_r>
 8007258:	4284      	cmp	r4, r0
 800725a:	d90f      	bls.n	800727c <_realloc_r+0x48>
 800725c:	4621      	mov	r1, r4
 800725e:	4638      	mov	r0, r7
 8007260:	f7fe fe9a 	bl	8005f98 <__wrap__malloc_r>
 8007264:	4605      	mov	r5, r0
 8007266:	2800      	cmp	r0, #0
 8007268:	d0f2      	beq.n	8007250 <_realloc_r+0x1c>
 800726a:	4631      	mov	r1, r6
 800726c:	4622      	mov	r2, r4
 800726e:	f7ff ff07 	bl	8007080 <memcpy>
 8007272:	4631      	mov	r1, r6
 8007274:	4638      	mov	r0, r7
 8007276:	f7fe fe93 	bl	8005fa0 <__wrap__free_r>
 800727a:	e7e9      	b.n	8007250 <_realloc_r+0x1c>
 800727c:	4635      	mov	r5, r6
 800727e:	e7e7      	b.n	8007250 <_realloc_r+0x1c>

08007280 <_printf_common>:
 8007280:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, lr}
 8007284:	4691      	mov	r9, r2
 8007286:	461f      	mov	r7, r3
 8007288:	688a      	ldr	r2, [r1, #8]
 800728a:	690b      	ldr	r3, [r1, #16]
 800728c:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8007290:	4293      	cmp	r3, r2
 8007292:	bfb8      	it	lt
 8007294:	4613      	movlt	r3, r2
 8007296:	f8c9 3000 	str.w	r3, [r9]
 800729a:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 800729e:	4606      	mov	r6, r0
 80072a0:	460c      	mov	r4, r1
 80072a2:	b112      	cbz	r2, 80072aa <_printf_common+0x2a>
 80072a4:	3301      	adds	r3, #1
 80072a6:	f8c9 3000 	str.w	r3, [r9]
 80072aa:	6823      	ldr	r3, [r4, #0]
 80072ac:	0699      	lsls	r1, r3, #26
 80072ae:	bf42      	ittt	mi
 80072b0:	f8d9 3000 	ldrmi.w	r3, [r9]
 80072b4:	3302      	addmi	r3, #2
 80072b6:	f8c9 3000 	strmi.w	r3, [r9]
 80072ba:	6825      	ldr	r5, [r4, #0]
 80072bc:	f015 0506 	ands.w	r5, r5, #6
 80072c0:	d107      	bne.n	80072d2 <_printf_common+0x52>
 80072c2:	f104 0a19 	add.w	r10, r4, #25
 80072c6:	68e3      	ldr	r3, [r4, #12]
 80072c8:	f8d9 2000 	ldr.w	r2, [r9]
 80072cc:	1a9b      	subs	r3, r3, r2
 80072ce:	429d      	cmp	r5, r3
 80072d0:	db29      	blt.n	8007326 <_printf_common+0xa6>
 80072d2:	f894 3043 	ldrb.w	r3, [r4, #67]	; 0x43
 80072d6:	6822      	ldr	r2, [r4, #0]
 80072d8:	3300      	adds	r3, #0
 80072da:	bf18      	it	ne
 80072dc:	2301      	movne	r3, #1
 80072de:	0692      	lsls	r2, r2, #26
 80072e0:	d42e      	bmi.n	8007340 <_printf_common+0xc0>
 80072e2:	f104 0243 	add.w	r2, r4, #67	; 0x43
 80072e6:	4639      	mov	r1, r7
 80072e8:	4630      	mov	r0, r6
 80072ea:	47c0      	blx	r8
 80072ec:	3001      	adds	r0, #1
 80072ee:	d021      	beq.n	8007334 <_printf_common+0xb4>
 80072f0:	6823      	ldr	r3, [r4, #0]
 80072f2:	68e5      	ldr	r5, [r4, #12]
 80072f4:	f8d9 2000 	ldr.w	r2, [r9]
 80072f8:	f003 0306 	and.w	r3, r3, #6
 80072fc:	2b04      	cmp	r3, #4
 80072fe:	bf08      	it	eq
 8007300:	1aad      	subeq	r5, r5, r2
 8007302:	68a3      	ldr	r3, [r4, #8]
 8007304:	6922      	ldr	r2, [r4, #16]
 8007306:	bf0c      	ite	eq
 8007308:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 800730c:	2500      	movne	r5, #0
 800730e:	4293      	cmp	r3, r2
 8007310:	bfc4      	itt	gt
 8007312:	1a9b      	subgt	r3, r3, r2
 8007314:	18ed      	addgt	r5, r5, r3
 8007316:	f04f 0900 	mov.w	r9, #0
 800731a:	341a      	adds	r4, #26
 800731c:	454d      	cmp	r5, r9
 800731e:	d11b      	bne.n	8007358 <_printf_common+0xd8>
 8007320:	2000      	movs	r0, #0
 8007322:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 8007326:	2301      	movs	r3, #1
 8007328:	4652      	mov	r2, r10
 800732a:	4639      	mov	r1, r7
 800732c:	4630      	mov	r0, r6
 800732e:	47c0      	blx	r8
 8007330:	3001      	adds	r0, #1
 8007332:	d103      	bne.n	800733c <_printf_common+0xbc>
 8007334:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8007338:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 800733c:	3501      	adds	r5, #1
 800733e:	e7c2      	b.n	80072c6 <_printf_common+0x46>
 8007340:	18e1      	adds	r1, r4, r3
 8007342:	1c5a      	adds	r2, r3, #1
 8007344:	2030      	movs	r0, #48	; 0x30
 8007346:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 800734a:	4422      	add	r2, r4
 800734c:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8007350:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8007354:	3302      	adds	r3, #2
 8007356:	e7c4      	b.n	80072e2 <_printf_common+0x62>
 8007358:	2301      	movs	r3, #1
 800735a:	4622      	mov	r2, r4
 800735c:	4639      	mov	r1, r7
 800735e:	4630      	mov	r0, r6
 8007360:	47c0      	blx	r8
 8007362:	3001      	adds	r0, #1
 8007364:	d0e6      	beq.n	8007334 <_printf_common+0xb4>
 8007366:	f109 0901 	add.w	r9, r9, #1
 800736a:	e7d7      	b.n	800731c <_printf_common+0x9c>

0800736c <_printf_i>:
 800736c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8007370:	4617      	mov	r7, r2
 8007372:	7e0a      	ldrb	r2, [r1, #24]
 8007374:	b085      	sub	sp, #20
 8007376:	2a6e      	cmp	r2, #110	; 0x6e
 8007378:	4698      	mov	r8, r3
 800737a:	4606      	mov	r6, r0
 800737c:	460c      	mov	r4, r1
 800737e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8007380:	f101 0e43 	add.w	lr, r1, #67	; 0x43
 8007384:	f000 80bc 	beq.w	8007500 <_printf_i+0x194>
 8007388:	d81a      	bhi.n	80073c0 <_printf_i+0x54>
 800738a:	2a63      	cmp	r2, #99	; 0x63
 800738c:	d02e      	beq.n	80073ec <_printf_i+0x80>
 800738e:	d80a      	bhi.n	80073a6 <_printf_i+0x3a>
 8007390:	2a00      	cmp	r2, #0
 8007392:	f000 80c8 	beq.w	8007526 <_printf_i+0x1ba>
 8007396:	2a58      	cmp	r2, #88	; 0x58
 8007398:	f000 808a 	beq.w	80074b0 <_printf_i+0x144>
 800739c:	f104 0542 	add.w	r5, r4, #66	; 0x42
 80073a0:	f884 2042 	strb.w	r2, [r4, #66]	; 0x42
 80073a4:	e02a      	b.n	80073fc <_printf_i+0x90>
 80073a6:	2a64      	cmp	r2, #100	; 0x64
 80073a8:	d001      	beq.n	80073ae <_printf_i+0x42>
 80073aa:	2a69      	cmp	r2, #105	; 0x69
 80073ac:	d1f6      	bne.n	800739c <_printf_i+0x30>
 80073ae:	6821      	ldr	r1, [r4, #0]
 80073b0:	681a      	ldr	r2, [r3, #0]
 80073b2:	f011 0f80 	tst.w	r1, #128	; 0x80
 80073b6:	d023      	beq.n	8007400 <_printf_i+0x94>
 80073b8:	1d11      	adds	r1, r2, #4
 80073ba:	6019      	str	r1, [r3, #0]
 80073bc:	6813      	ldr	r3, [r2, #0]
 80073be:	e027      	b.n	8007410 <_printf_i+0xa4>
 80073c0:	2a73      	cmp	r2, #115	; 0x73
 80073c2:	f000 80b4 	beq.w	800752e <_printf_i+0x1c2>
 80073c6:	d808      	bhi.n	80073da <_printf_i+0x6e>
 80073c8:	2a6f      	cmp	r2, #111	; 0x6f
 80073ca:	d02a      	beq.n	8007422 <_printf_i+0xb6>
 80073cc:	2a70      	cmp	r2, #112	; 0x70
 80073ce:	d1e5      	bne.n	800739c <_printf_i+0x30>
 80073d0:	680a      	ldr	r2, [r1, #0]
 80073d2:	f042 0220 	orr.w	r2, r2, #32
 80073d6:	600a      	str	r2, [r1, #0]
 80073d8:	e003      	b.n	80073e2 <_printf_i+0x76>
 80073da:	2a75      	cmp	r2, #117	; 0x75
 80073dc:	d021      	beq.n	8007422 <_printf_i+0xb6>
 80073de:	2a78      	cmp	r2, #120	; 0x78
 80073e0:	d1dc      	bne.n	800739c <_printf_i+0x30>
 80073e2:	2278      	movs	r2, #120	; 0x78
 80073e4:	f884 2045 	strb.w	r2, [r4, #69]	; 0x45
 80073e8:	496e      	ldr	r1, [pc, #440]	; (80075a4 <_printf_i+0x238>)
 80073ea:	e064      	b.n	80074b6 <_printf_i+0x14a>
 80073ec:	681a      	ldr	r2, [r3, #0]
 80073ee:	f101 0542 	add.w	r5, r1, #66	; 0x42
 80073f2:	1d11      	adds	r1, r2, #4
 80073f4:	6019      	str	r1, [r3, #0]
 80073f6:	6813      	ldr	r3, [r2, #0]
 80073f8:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 80073fc:	2301      	movs	r3, #1
 80073fe:	e0a3      	b.n	8007548 <_printf_i+0x1dc>
 8007400:	f011 0f40 	tst.w	r1, #64	; 0x40
 8007404:	f102 0104 	add.w	r1, r2, #4
 8007408:	6019      	str	r1, [r3, #0]
 800740a:	d0d7      	beq.n	80073bc <_printf_i+0x50>
 800740c:	f9b2 3000 	ldrsh.w	r3, [r2]
 8007410:	2b00      	cmp	r3, #0
 8007412:	da03      	bge.n	800741c <_printf_i+0xb0>
 8007414:	222d      	movs	r2, #45	; 0x2d
 8007416:	425b      	negs	r3, r3
 8007418:	f884 2043 	strb.w	r2, [r4, #67]	; 0x43
 800741c:	4962      	ldr	r1, [pc, #392]	; (80075a8 <_printf_i+0x23c>)
 800741e:	220a      	movs	r2, #10
 8007420:	e017      	b.n	8007452 <_printf_i+0xe6>
 8007422:	6820      	ldr	r0, [r4, #0]
 8007424:	6819      	ldr	r1, [r3, #0]
 8007426:	f010 0f80 	tst.w	r0, #128	; 0x80
 800742a:	d003      	beq.n	8007434 <_printf_i+0xc8>
 800742c:	1d08      	adds	r0, r1, #4
 800742e:	6018      	str	r0, [r3, #0]
 8007430:	680b      	ldr	r3, [r1, #0]
 8007432:	e006      	b.n	8007442 <_printf_i+0xd6>
 8007434:	f010 0f40 	tst.w	r0, #64	; 0x40
 8007438:	f101 0004 	add.w	r0, r1, #4
 800743c:	6018      	str	r0, [r3, #0]
 800743e:	d0f7      	beq.n	8007430 <_printf_i+0xc4>
 8007440:	880b      	ldrh	r3, [r1, #0]
 8007442:	4959      	ldr	r1, [pc, #356]	; (80075a8 <_printf_i+0x23c>)
 8007444:	2a6f      	cmp	r2, #111	; 0x6f
 8007446:	bf14      	ite	ne
 8007448:	220a      	movne	r2, #10
 800744a:	2208      	moveq	r2, #8
 800744c:	2000      	movs	r0, #0
 800744e:	f884 0043 	strb.w	r0, [r4, #67]	; 0x43
 8007452:	6865      	ldr	r5, [r4, #4]
 8007454:	60a5      	str	r5, [r4, #8]
 8007456:	2d00      	cmp	r5, #0
 8007458:	f2c0 809c 	blt.w	8007594 <_printf_i+0x228>
 800745c:	6820      	ldr	r0, [r4, #0]
 800745e:	f020 0004 	bic.w	r0, r0, #4
 8007462:	6020      	str	r0, [r4, #0]
 8007464:	2b00      	cmp	r3, #0
 8007466:	d13f      	bne.n	80074e8 <_printf_i+0x17c>
 8007468:	2d00      	cmp	r5, #0
 800746a:	f040 8095 	bne.w	8007598 <_printf_i+0x22c>
 800746e:	4675      	mov	r5, lr
 8007470:	2a08      	cmp	r2, #8
 8007472:	d10b      	bne.n	800748c <_printf_i+0x120>
 8007474:	6823      	ldr	r3, [r4, #0]
 8007476:	07da      	lsls	r2, r3, #31
 8007478:	d508      	bpl.n	800748c <_printf_i+0x120>
 800747a:	6923      	ldr	r3, [r4, #16]
 800747c:	6862      	ldr	r2, [r4, #4]
 800747e:	429a      	cmp	r2, r3
 8007480:	bfde      	ittt	le
 8007482:	2330      	movle	r3, #48	; 0x30
 8007484:	f805 3c01 	strble.w	r3, [r5, #-1]
 8007488:	f105 35ff 	addle.w	r5, r5, #4294967295	; 0xffffffff
 800748c:	ebae 0305 	sub.w	r3, lr, r5
 8007490:	6123      	str	r3, [r4, #16]
 8007492:	f8cd 8000 	str.w	r8, [sp]
 8007496:	463b      	mov	r3, r7
 8007498:	aa03      	add	r2, sp, #12
 800749a:	4621      	mov	r1, r4
 800749c:	4630      	mov	r0, r6
 800749e:	f7ff feef 	bl	8007280 <_printf_common>
 80074a2:	3001      	adds	r0, #1
 80074a4:	d155      	bne.n	8007552 <_printf_i+0x1e6>
 80074a6:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80074aa:	b005      	add	sp, #20
 80074ac:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80074b0:	f881 2045 	strb.w	r2, [r1, #69]	; 0x45
 80074b4:	493c      	ldr	r1, [pc, #240]	; (80075a8 <_printf_i+0x23c>)
 80074b6:	6822      	ldr	r2, [r4, #0]
 80074b8:	6818      	ldr	r0, [r3, #0]
 80074ba:	f012 0f80 	tst.w	r2, #128	; 0x80
 80074be:	f100 0504 	add.w	r5, r0, #4
 80074c2:	601d      	str	r5, [r3, #0]
 80074c4:	d001      	beq.n	80074ca <_printf_i+0x15e>
 80074c6:	6803      	ldr	r3, [r0, #0]
 80074c8:	e002      	b.n	80074d0 <_printf_i+0x164>
 80074ca:	0655      	lsls	r5, r2, #25
 80074cc:	d5fb      	bpl.n	80074c6 <_printf_i+0x15a>
 80074ce:	8803      	ldrh	r3, [r0, #0]
 80074d0:	07d0      	lsls	r0, r2, #31
 80074d2:	bf44      	itt	mi
 80074d4:	f042 0220 	orrmi.w	r2, r2, #32
 80074d8:	6022      	strmi	r2, [r4, #0]
 80074da:	b91b      	cbnz	r3, 80074e4 <_printf_i+0x178>
 80074dc:	6822      	ldr	r2, [r4, #0]
 80074de:	f022 0220 	bic.w	r2, r2, #32
 80074e2:	6022      	str	r2, [r4, #0]
 80074e4:	2210      	movs	r2, #16
 80074e6:	e7b1      	b.n	800744c <_printf_i+0xe0>
 80074e8:	4675      	mov	r5, lr
 80074ea:	fbb3 f0f2 	udiv	r0, r3, r2
 80074ee:	fb02 3310 	mls	r3, r2, r0, r3
 80074f2:	5ccb      	ldrb	r3, [r1, r3]
 80074f4:	f805 3d01 	strb.w	r3, [r5, #-1]!
 80074f8:	4603      	mov	r3, r0
 80074fa:	2800      	cmp	r0, #0
 80074fc:	d1f5      	bne.n	80074ea <_printf_i+0x17e>
 80074fe:	e7b7      	b.n	8007470 <_printf_i+0x104>
 8007500:	6808      	ldr	r0, [r1, #0]
 8007502:	681a      	ldr	r2, [r3, #0]
 8007504:	6949      	ldr	r1, [r1, #20]
 8007506:	f010 0f80 	tst.w	r0, #128	; 0x80
 800750a:	d004      	beq.n	8007516 <_printf_i+0x1aa>
 800750c:	1d10      	adds	r0, r2, #4
 800750e:	6018      	str	r0, [r3, #0]
 8007510:	6813      	ldr	r3, [r2, #0]
 8007512:	6019      	str	r1, [r3, #0]
 8007514:	e007      	b.n	8007526 <_printf_i+0x1ba>
 8007516:	f010 0f40 	tst.w	r0, #64	; 0x40
 800751a:	f102 0004 	add.w	r0, r2, #4
 800751e:	6018      	str	r0, [r3, #0]
 8007520:	6813      	ldr	r3, [r2, #0]
 8007522:	d0f6      	beq.n	8007512 <_printf_i+0x1a6>
 8007524:	8019      	strh	r1, [r3, #0]
 8007526:	2300      	movs	r3, #0
 8007528:	6123      	str	r3, [r4, #16]
 800752a:	4675      	mov	r5, lr
 800752c:	e7b1      	b.n	8007492 <_printf_i+0x126>
 800752e:	681a      	ldr	r2, [r3, #0]
 8007530:	1d11      	adds	r1, r2, #4
 8007532:	6019      	str	r1, [r3, #0]
 8007534:	6815      	ldr	r5, [r2, #0]
 8007536:	6862      	ldr	r2, [r4, #4]
 8007538:	2100      	movs	r1, #0
 800753a:	4628      	mov	r0, r5
 800753c:	f7ff fd50 	bl	8006fe0 <memchr>
 8007540:	b108      	cbz	r0, 8007546 <_printf_i+0x1da>
 8007542:	1b40      	subs	r0, r0, r5
 8007544:	6060      	str	r0, [r4, #4]
 8007546:	6863      	ldr	r3, [r4, #4]
 8007548:	6123      	str	r3, [r4, #16]
 800754a:	2300      	movs	r3, #0
 800754c:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8007550:	e79f      	b.n	8007492 <_printf_i+0x126>
 8007552:	6923      	ldr	r3, [r4, #16]
 8007554:	462a      	mov	r2, r5
 8007556:	4639      	mov	r1, r7
 8007558:	4630      	mov	r0, r6
 800755a:	47c0      	blx	r8
 800755c:	3001      	adds	r0, #1
 800755e:	d0a2      	beq.n	80074a6 <_printf_i+0x13a>
 8007560:	6823      	ldr	r3, [r4, #0]
 8007562:	079b      	lsls	r3, r3, #30
 8007564:	d507      	bpl.n	8007576 <_printf_i+0x20a>
 8007566:	2500      	movs	r5, #0
 8007568:	f104 0919 	add.w	r9, r4, #25
 800756c:	68e3      	ldr	r3, [r4, #12]
 800756e:	9a03      	ldr	r2, [sp, #12]
 8007570:	1a9b      	subs	r3, r3, r2
 8007572:	429d      	cmp	r5, r3
 8007574:	db05      	blt.n	8007582 <_printf_i+0x216>
 8007576:	68e0      	ldr	r0, [r4, #12]
 8007578:	9b03      	ldr	r3, [sp, #12]
 800757a:	4298      	cmp	r0, r3
 800757c:	bfb8      	it	lt
 800757e:	4618      	movlt	r0, r3
 8007580:	e793      	b.n	80074aa <_printf_i+0x13e>
 8007582:	2301      	movs	r3, #1
 8007584:	464a      	mov	r2, r9
 8007586:	4639      	mov	r1, r7
 8007588:	4630      	mov	r0, r6
 800758a:	47c0      	blx	r8
 800758c:	3001      	adds	r0, #1
 800758e:	d08a      	beq.n	80074a6 <_printf_i+0x13a>
 8007590:	3501      	adds	r5, #1
 8007592:	e7eb      	b.n	800756c <_printf_i+0x200>
 8007594:	2b00      	cmp	r3, #0
 8007596:	d1a7      	bne.n	80074e8 <_printf_i+0x17c>
 8007598:	780b      	ldrb	r3, [r1, #0]
 800759a:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 800759e:	f104 0542 	add.w	r5, r4, #66	; 0x42
 80075a2:	e765      	b.n	8007470 <_printf_i+0x104>
 80075a4:	080087dd 	.word	0x080087dd
 80075a8:	080087cc 	.word	0x080087cc

080075ac <realloc>:
 80075ac:	4b02      	ldr	r3, [pc, #8]	; (80075b8 <realloc+0xc>)
 80075ae:	460a      	mov	r2, r1
 80075b0:	4601      	mov	r1, r0
 80075b2:	6818      	ldr	r0, [r3, #0]
 80075b4:	f7fe bcf2 	b.w	8005f9c <__wrap__realloc_r>
 80075b8:	200001bc 	.word	0x200001bc

080075bc <_sbrk_r>:
 80075bc:	b538      	push	{r3, r4, r5, lr}
 80075be:	4c06      	ldr	r4, [pc, #24]	; (80075d8 <_sbrk_r+0x1c>)
 80075c0:	2300      	movs	r3, #0
 80075c2:	4605      	mov	r5, r0
 80075c4:	4608      	mov	r0, r1
 80075c6:	6023      	str	r3, [r4, #0]
 80075c8:	f7fe fde0 	bl	800618c <_sbrk>
 80075cc:	1c43      	adds	r3, r0, #1
 80075ce:	d102      	bne.n	80075d6 <_sbrk_r+0x1a>
 80075d0:	6823      	ldr	r3, [r4, #0]
 80075d2:	b103      	cbz	r3, 80075d6 <_sbrk_r+0x1a>
 80075d4:	602b      	str	r3, [r5, #0]
 80075d6:	bd38      	pop	{r3, r4, r5, pc}
 80075d8:	2000312c 	.word	0x2000312c

080075dc <__sread>:
 80075dc:	b510      	push	{r4, lr}
 80075de:	460c      	mov	r4, r1
 80075e0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80075e4:	f000 f9f4 	bl	80079d0 <_read_r>
 80075e8:	2800      	cmp	r0, #0
 80075ea:	bfab      	itete	ge
 80075ec:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 80075ee:	89a3      	ldrhlt	r3, [r4, #12]
 80075f0:	181b      	addge	r3, r3, r0
 80075f2:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 80075f6:	bfac      	ite	ge
 80075f8:	6563      	strge	r3, [r4, #84]	; 0x54
 80075fa:	81a3      	strhlt	r3, [r4, #12]
 80075fc:	bd10      	pop	{r4, pc}

080075fe <__swrite>:
 80075fe:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8007602:	461f      	mov	r7, r3
 8007604:	898b      	ldrh	r3, [r1, #12]
 8007606:	05db      	lsls	r3, r3, #23
 8007608:	4605      	mov	r5, r0
 800760a:	460c      	mov	r4, r1
 800760c:	4616      	mov	r6, r2
 800760e:	d505      	bpl.n	800761c <__swrite+0x1e>
 8007610:	2302      	movs	r3, #2
 8007612:	2200      	movs	r2, #0
 8007614:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8007618:	f000 f870 	bl	80076fc <_lseek_r>
 800761c:	89a3      	ldrh	r3, [r4, #12]
 800761e:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8007622:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8007626:	81a3      	strh	r3, [r4, #12]
 8007628:	4632      	mov	r2, r6
 800762a:	463b      	mov	r3, r7
 800762c:	4628      	mov	r0, r5
 800762e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8007632:	f000 b841 	b.w	80076b8 <_write_r>

08007636 <__sseek>:
 8007636:	b510      	push	{r4, lr}
 8007638:	460c      	mov	r4, r1
 800763a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800763e:	f000 f85d 	bl	80076fc <_lseek_r>
 8007642:	1c43      	adds	r3, r0, #1
 8007644:	89a3      	ldrh	r3, [r4, #12]
 8007646:	bf15      	itete	ne
 8007648:	6560      	strne	r0, [r4, #84]	; 0x54
 800764a:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 800764e:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8007652:	81a3      	strheq	r3, [r4, #12]
 8007654:	bf18      	it	ne
 8007656:	81a3      	strhne	r3, [r4, #12]
 8007658:	bd10      	pop	{r4, pc}

0800765a <__sclose>:
 800765a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800765e:	f000 b83d 	b.w	80076dc <_close_r>

08007662 <strlen>:
 8007662:	4603      	mov	r3, r0
 8007664:	f813 2b01 	ldrb.w	r2, [r3], #1
 8007668:	2a00      	cmp	r2, #0
 800766a:	d1fb      	bne.n	8007664 <strlen+0x2>
 800766c:	1a18      	subs	r0, r3, r0
 800766e:	3801      	subs	r0, #1
 8007670:	4770      	bx	lr

08007672 <_vsiprintf_r>:
 8007672:	b510      	push	{r4, lr}
 8007674:	b09a      	sub	sp, #104	; 0x68
 8007676:	f44f 7402 	mov.w	r4, #520	; 0x208
 800767a:	9100      	str	r1, [sp, #0]
 800767c:	9104      	str	r1, [sp, #16]
 800767e:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 8007682:	9102      	str	r1, [sp, #8]
 8007684:	9105      	str	r1, [sp, #20]
 8007686:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800768a:	f8ad 100e 	strh.w	r1, [sp, #14]
 800768e:	4669      	mov	r1, sp
 8007690:	f8ad 400c 	strh.w	r4, [sp, #12]
 8007694:	f000 f8a8 	bl	80077e8 <_svfiprintf_r>
 8007698:	9b00      	ldr	r3, [sp, #0]
 800769a:	2200      	movs	r2, #0
 800769c:	701a      	strb	r2, [r3, #0]
 800769e:	b01a      	add	sp, #104	; 0x68
 80076a0:	bd10      	pop	{r4, pc}
	...

080076a4 <vsiprintf>:
 80076a4:	4613      	mov	r3, r2
 80076a6:	460a      	mov	r2, r1
 80076a8:	4601      	mov	r1, r0
 80076aa:	4802      	ldr	r0, [pc, #8]	; (80076b4 <vsiprintf+0x10>)
 80076ac:	6800      	ldr	r0, [r0, #0]
 80076ae:	f7ff bfe0 	b.w	8007672 <_vsiprintf_r>
 80076b2:	bf00      	nop
 80076b4:	200001bc 	.word	0x200001bc

080076b8 <_write_r>:
 80076b8:	b538      	push	{r3, r4, r5, lr}
 80076ba:	4c07      	ldr	r4, [pc, #28]	; (80076d8 <_write_r+0x20>)
 80076bc:	4605      	mov	r5, r0
 80076be:	4608      	mov	r0, r1
 80076c0:	4611      	mov	r1, r2
 80076c2:	2200      	movs	r2, #0
 80076c4:	6022      	str	r2, [r4, #0]
 80076c6:	461a      	mov	r2, r3
 80076c8:	f7fe fcce 	bl	8006068 <_write>
 80076cc:	1c43      	adds	r3, r0, #1
 80076ce:	d102      	bne.n	80076d6 <_write_r+0x1e>
 80076d0:	6823      	ldr	r3, [r4, #0]
 80076d2:	b103      	cbz	r3, 80076d6 <_write_r+0x1e>
 80076d4:	602b      	str	r3, [r5, #0]
 80076d6:	bd38      	pop	{r3, r4, r5, pc}
 80076d8:	2000312c 	.word	0x2000312c

080076dc <_close_r>:
 80076dc:	b538      	push	{r3, r4, r5, lr}
 80076de:	4c06      	ldr	r4, [pc, #24]	; (80076f8 <_close_r+0x1c>)
 80076e0:	2300      	movs	r3, #0
 80076e2:	4605      	mov	r5, r0
 80076e4:	4608      	mov	r0, r1
 80076e6:	6023      	str	r3, [r4, #0]
 80076e8:	f7fe fc9e 	bl	8006028 <_close>
 80076ec:	1c43      	adds	r3, r0, #1
 80076ee:	d102      	bne.n	80076f6 <_close_r+0x1a>
 80076f0:	6823      	ldr	r3, [r4, #0]
 80076f2:	b103      	cbz	r3, 80076f6 <_close_r+0x1a>
 80076f4:	602b      	str	r3, [r5, #0]
 80076f6:	bd38      	pop	{r3, r4, r5, pc}
 80076f8:	2000312c 	.word	0x2000312c

080076fc <_lseek_r>:
 80076fc:	b538      	push	{r3, r4, r5, lr}
 80076fe:	4c07      	ldr	r4, [pc, #28]	; (800771c <_lseek_r+0x20>)
 8007700:	4605      	mov	r5, r0
 8007702:	4608      	mov	r0, r1
 8007704:	4611      	mov	r1, r2
 8007706:	2200      	movs	r2, #0
 8007708:	6022      	str	r2, [r4, #0]
 800770a:	461a      	mov	r2, r3
 800770c:	f7fe fd12 	bl	8006134 <_lseek>
 8007710:	1c43      	adds	r3, r0, #1
 8007712:	d102      	bne.n	800771a <_lseek_r+0x1e>
 8007714:	6823      	ldr	r3, [r4, #0]
 8007716:	b103      	cbz	r3, 800771a <_lseek_r+0x1e>
 8007718:	602b      	str	r3, [r5, #0]
 800771a:	bd38      	pop	{r3, r4, r5, pc}
 800771c:	2000312c 	.word	0x2000312c

08007720 <_malloc_usable_size_r>:
 8007720:	f851 0c04 	ldr.w	r0, [r1, #-4]
 8007724:	2800      	cmp	r0, #0
 8007726:	f1a0 0004 	sub.w	r0, r0, #4
 800772a:	bfbc      	itt	lt
 800772c:	580b      	ldrlt	r3, [r1, r0]
 800772e:	18c0      	addlt	r0, r0, r3
 8007730:	4770      	bx	lr

08007732 <__ssputs_r>:
 8007732:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, lr}
 8007736:	688e      	ldr	r6, [r1, #8]
 8007738:	429e      	cmp	r6, r3
 800773a:	4682      	mov	r10, r0
 800773c:	460c      	mov	r4, r1
 800773e:	4691      	mov	r9, r2
 8007740:	4698      	mov	r8, r3
 8007742:	d835      	bhi.n	80077b0 <__ssputs_r+0x7e>
 8007744:	898a      	ldrh	r2, [r1, #12]
 8007746:	f412 6f90 	tst.w	r2, #1152	; 0x480
 800774a:	d031      	beq.n	80077b0 <__ssputs_r+0x7e>
 800774c:	6825      	ldr	r5, [r4, #0]
 800774e:	6909      	ldr	r1, [r1, #16]
 8007750:	1a6f      	subs	r7, r5, r1
 8007752:	6965      	ldr	r5, [r4, #20]
 8007754:	2302      	movs	r3, #2
 8007756:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 800775a:	fb95 f5f3 	sdiv	r5, r5, r3
 800775e:	f108 0301 	add.w	r3, r8, #1
 8007762:	443b      	add	r3, r7
 8007764:	429d      	cmp	r5, r3
 8007766:	bf38      	it	cc
 8007768:	461d      	movcc	r5, r3
 800776a:	0553      	lsls	r3, r2, #21
 800776c:	d531      	bpl.n	80077d2 <__ssputs_r+0xa0>
 800776e:	4629      	mov	r1, r5
 8007770:	f7fe fc12 	bl	8005f98 <__wrap__malloc_r>
 8007774:	4606      	mov	r6, r0
 8007776:	b950      	cbnz	r0, 800778e <__ssputs_r+0x5c>
 8007778:	230c      	movs	r3, #12
 800777a:	f8ca 3000 	str.w	r3, [r10]
 800777e:	89a3      	ldrh	r3, [r4, #12]
 8007780:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8007784:	81a3      	strh	r3, [r4, #12]
 8007786:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800778a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 800778e:	463a      	mov	r2, r7
 8007790:	6921      	ldr	r1, [r4, #16]
 8007792:	f7ff fc75 	bl	8007080 <memcpy>
 8007796:	89a3      	ldrh	r3, [r4, #12]
 8007798:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 800779c:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80077a0:	81a3      	strh	r3, [r4, #12]
 80077a2:	6126      	str	r6, [r4, #16]
 80077a4:	6165      	str	r5, [r4, #20]
 80077a6:	443e      	add	r6, r7
 80077a8:	1bed      	subs	r5, r5, r7
 80077aa:	6026      	str	r6, [r4, #0]
 80077ac:	60a5      	str	r5, [r4, #8]
 80077ae:	4646      	mov	r6, r8
 80077b0:	4546      	cmp	r6, r8
 80077b2:	bf28      	it	cs
 80077b4:	4646      	movcs	r6, r8
 80077b6:	4632      	mov	r2, r6
 80077b8:	4649      	mov	r1, r9
 80077ba:	6820      	ldr	r0, [r4, #0]
 80077bc:	f7ff fc6b 	bl	8007096 <memmove>
 80077c0:	68a3      	ldr	r3, [r4, #8]
 80077c2:	1b9b      	subs	r3, r3, r6
 80077c4:	60a3      	str	r3, [r4, #8]
 80077c6:	6823      	ldr	r3, [r4, #0]
 80077c8:	441e      	add	r6, r3
 80077ca:	6026      	str	r6, [r4, #0]
 80077cc:	2000      	movs	r0, #0
 80077ce:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 80077d2:	462a      	mov	r2, r5
 80077d4:	f7fe fbe2 	bl	8005f9c <__wrap__realloc_r>
 80077d8:	4606      	mov	r6, r0
 80077da:	2800      	cmp	r0, #0
 80077dc:	d1e1      	bne.n	80077a2 <__ssputs_r+0x70>
 80077de:	6921      	ldr	r1, [r4, #16]
 80077e0:	4650      	mov	r0, r10
 80077e2:	f7fe fbdd 	bl	8005fa0 <__wrap__free_r>
 80077e6:	e7c7      	b.n	8007778 <__ssputs_r+0x46>

080077e8 <_svfiprintf_r>:
 80077e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, lr}
 80077ec:	b09d      	sub	sp, #116	; 0x74
 80077ee:	4680      	mov	r8, r0
 80077f0:	9303      	str	r3, [sp, #12]
 80077f2:	898b      	ldrh	r3, [r1, #12]
 80077f4:	061c      	lsls	r4, r3, #24
 80077f6:	460d      	mov	r5, r1
 80077f8:	4616      	mov	r6, r2
 80077fa:	d50f      	bpl.n	800781c <_svfiprintf_r+0x34>
 80077fc:	690b      	ldr	r3, [r1, #16]
 80077fe:	b96b      	cbnz	r3, 800781c <_svfiprintf_r+0x34>
 8007800:	2140      	movs	r1, #64	; 0x40
 8007802:	f7fe fbc9 	bl	8005f98 <__wrap__malloc_r>
 8007806:	6028      	str	r0, [r5, #0]
 8007808:	6128      	str	r0, [r5, #16]
 800780a:	b928      	cbnz	r0, 8007818 <_svfiprintf_r+0x30>
 800780c:	230c      	movs	r3, #12
 800780e:	f8c8 3000 	str.w	r3, [r8]
 8007812:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8007816:	e0c5      	b.n	80079a4 <_svfiprintf_r+0x1bc>
 8007818:	2340      	movs	r3, #64	; 0x40
 800781a:	616b      	str	r3, [r5, #20]
 800781c:	2300      	movs	r3, #0
 800781e:	9309      	str	r3, [sp, #36]	; 0x24
 8007820:	2320      	movs	r3, #32
 8007822:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8007826:	2330      	movs	r3, #48	; 0x30
 8007828:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 800782c:	f04f 0b01 	mov.w	r11, #1
 8007830:	4637      	mov	r7, r6
 8007832:	463c      	mov	r4, r7
 8007834:	f814 3b01 	ldrb.w	r3, [r4], #1
 8007838:	2b00      	cmp	r3, #0
 800783a:	d13c      	bne.n	80078b6 <_svfiprintf_r+0xce>
 800783c:	ebb7 0a06 	subs.w	r10, r7, r6
 8007840:	d00b      	beq.n	800785a <_svfiprintf_r+0x72>
 8007842:	4653      	mov	r3, r10
 8007844:	4632      	mov	r2, r6
 8007846:	4629      	mov	r1, r5
 8007848:	4640      	mov	r0, r8
 800784a:	f7ff ff72 	bl	8007732 <__ssputs_r>
 800784e:	3001      	adds	r0, #1
 8007850:	f000 80a3 	beq.w	800799a <_svfiprintf_r+0x1b2>
 8007854:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8007856:	4453      	add	r3, r10
 8007858:	9309      	str	r3, [sp, #36]	; 0x24
 800785a:	783b      	ldrb	r3, [r7, #0]
 800785c:	2b00      	cmp	r3, #0
 800785e:	f000 809c 	beq.w	800799a <_svfiprintf_r+0x1b2>
 8007862:	2300      	movs	r3, #0
 8007864:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8007868:	9304      	str	r3, [sp, #16]
 800786a:	9307      	str	r3, [sp, #28]
 800786c:	9205      	str	r2, [sp, #20]
 800786e:	9306      	str	r3, [sp, #24]
 8007870:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8007874:	931a      	str	r3, [sp, #104]	; 0x68
 8007876:	2205      	movs	r2, #5
 8007878:	7821      	ldrb	r1, [r4, #0]
 800787a:	4850      	ldr	r0, [pc, #320]	; (80079bc <_svfiprintf_r+0x1d4>)
 800787c:	f7ff fbb0 	bl	8006fe0 <memchr>
 8007880:	1c67      	adds	r7, r4, #1
 8007882:	9b04      	ldr	r3, [sp, #16]
 8007884:	b9d8      	cbnz	r0, 80078be <_svfiprintf_r+0xd6>
 8007886:	06d9      	lsls	r1, r3, #27
 8007888:	bf44      	itt	mi
 800788a:	2220      	movmi	r2, #32
 800788c:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 8007890:	071a      	lsls	r2, r3, #28
 8007892:	bf44      	itt	mi
 8007894:	222b      	movmi	r2, #43	; 0x2b
 8007896:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 800789a:	7822      	ldrb	r2, [r4, #0]
 800789c:	2a2a      	cmp	r2, #42	; 0x2a
 800789e:	d016      	beq.n	80078ce <_svfiprintf_r+0xe6>
 80078a0:	9a07      	ldr	r2, [sp, #28]
 80078a2:	2100      	movs	r1, #0
 80078a4:	200a      	movs	r0, #10
 80078a6:	4627      	mov	r7, r4
 80078a8:	3401      	adds	r4, #1
 80078aa:	783b      	ldrb	r3, [r7, #0]
 80078ac:	3b30      	subs	r3, #48	; 0x30
 80078ae:	2b09      	cmp	r3, #9
 80078b0:	d951      	bls.n	8007956 <_svfiprintf_r+0x16e>
 80078b2:	b1c9      	cbz	r1, 80078e8 <_svfiprintf_r+0x100>
 80078b4:	e011      	b.n	80078da <_svfiprintf_r+0xf2>
 80078b6:	2b25      	cmp	r3, #37	; 0x25
 80078b8:	d0c0      	beq.n	800783c <_svfiprintf_r+0x54>
 80078ba:	4627      	mov	r7, r4
 80078bc:	e7b9      	b.n	8007832 <_svfiprintf_r+0x4a>
 80078be:	4a3f      	ldr	r2, [pc, #252]	; (80079bc <_svfiprintf_r+0x1d4>)
 80078c0:	1a80      	subs	r0, r0, r2
 80078c2:	fa0b f000 	lsl.w	r0, r11, r0
 80078c6:	4318      	orrs	r0, r3
 80078c8:	9004      	str	r0, [sp, #16]
 80078ca:	463c      	mov	r4, r7
 80078cc:	e7d3      	b.n	8007876 <_svfiprintf_r+0x8e>
 80078ce:	9a03      	ldr	r2, [sp, #12]
 80078d0:	1d11      	adds	r1, r2, #4
 80078d2:	6812      	ldr	r2, [r2, #0]
 80078d4:	9103      	str	r1, [sp, #12]
 80078d6:	2a00      	cmp	r2, #0
 80078d8:	db01      	blt.n	80078de <_svfiprintf_r+0xf6>
 80078da:	9207      	str	r2, [sp, #28]
 80078dc:	e004      	b.n	80078e8 <_svfiprintf_r+0x100>
 80078de:	4252      	negs	r2, r2
 80078e0:	f043 0302 	orr.w	r3, r3, #2
 80078e4:	9207      	str	r2, [sp, #28]
 80078e6:	9304      	str	r3, [sp, #16]
 80078e8:	783b      	ldrb	r3, [r7, #0]
 80078ea:	2b2e      	cmp	r3, #46	; 0x2e
 80078ec:	d10e      	bne.n	800790c <_svfiprintf_r+0x124>
 80078ee:	787b      	ldrb	r3, [r7, #1]
 80078f0:	2b2a      	cmp	r3, #42	; 0x2a
 80078f2:	f107 0101 	add.w	r1, r7, #1
 80078f6:	d132      	bne.n	800795e <_svfiprintf_r+0x176>
 80078f8:	9b03      	ldr	r3, [sp, #12]
 80078fa:	1d1a      	adds	r2, r3, #4
 80078fc:	681b      	ldr	r3, [r3, #0]
 80078fe:	9203      	str	r2, [sp, #12]
 8007900:	2b00      	cmp	r3, #0
 8007902:	bfb8      	it	lt
 8007904:	f04f 33ff 	movlt.w	r3, #4294967295	; 0xffffffff
 8007908:	3702      	adds	r7, #2
 800790a:	9305      	str	r3, [sp, #20]
 800790c:	4c2c      	ldr	r4, [pc, #176]	; (80079c0 <_svfiprintf_r+0x1d8>)
 800790e:	7839      	ldrb	r1, [r7, #0]
 8007910:	2203      	movs	r2, #3
 8007912:	4620      	mov	r0, r4
 8007914:	f7ff fb64 	bl	8006fe0 <memchr>
 8007918:	b138      	cbz	r0, 800792a <_svfiprintf_r+0x142>
 800791a:	2340      	movs	r3, #64	; 0x40
 800791c:	1b00      	subs	r0, r0, r4
 800791e:	fa03 f000 	lsl.w	r0, r3, r0
 8007922:	9b04      	ldr	r3, [sp, #16]
 8007924:	4303      	orrs	r3, r0
 8007926:	9304      	str	r3, [sp, #16]
 8007928:	3701      	adds	r7, #1
 800792a:	7839      	ldrb	r1, [r7, #0]
 800792c:	4825      	ldr	r0, [pc, #148]	; (80079c4 <_svfiprintf_r+0x1dc>)
 800792e:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8007932:	2206      	movs	r2, #6
 8007934:	1c7e      	adds	r6, r7, #1
 8007936:	f7ff fb53 	bl	8006fe0 <memchr>
 800793a:	2800      	cmp	r0, #0
 800793c:	d035      	beq.n	80079aa <_svfiprintf_r+0x1c2>
 800793e:	4b22      	ldr	r3, [pc, #136]	; (80079c8 <_svfiprintf_r+0x1e0>)
 8007940:	b9fb      	cbnz	r3, 8007982 <_svfiprintf_r+0x19a>
 8007942:	9b03      	ldr	r3, [sp, #12]
 8007944:	3307      	adds	r3, #7
 8007946:	f023 0307 	bic.w	r3, r3, #7
 800794a:	3308      	adds	r3, #8
 800794c:	9303      	str	r3, [sp, #12]
 800794e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8007950:	444b      	add	r3, r9
 8007952:	9309      	str	r3, [sp, #36]	; 0x24
 8007954:	e76c      	b.n	8007830 <_svfiprintf_r+0x48>
 8007956:	fb00 3202 	mla	r2, r0, r2, r3
 800795a:	2101      	movs	r1, #1
 800795c:	e7a3      	b.n	80078a6 <_svfiprintf_r+0xbe>
 800795e:	2300      	movs	r3, #0
 8007960:	9305      	str	r3, [sp, #20]
 8007962:	4618      	mov	r0, r3
 8007964:	240a      	movs	r4, #10
 8007966:	460f      	mov	r7, r1
 8007968:	3101      	adds	r1, #1
 800796a:	783a      	ldrb	r2, [r7, #0]
 800796c:	3a30      	subs	r2, #48	; 0x30
 800796e:	2a09      	cmp	r2, #9
 8007970:	d903      	bls.n	800797a <_svfiprintf_r+0x192>
 8007972:	2b00      	cmp	r3, #0
 8007974:	d0ca      	beq.n	800790c <_svfiprintf_r+0x124>
 8007976:	9005      	str	r0, [sp, #20]
 8007978:	e7c8      	b.n	800790c <_svfiprintf_r+0x124>
 800797a:	fb04 2000 	mla	r0, r4, r0, r2
 800797e:	2301      	movs	r3, #1
 8007980:	e7f1      	b.n	8007966 <_svfiprintf_r+0x17e>
 8007982:	ab03      	add	r3, sp, #12
 8007984:	9300      	str	r3, [sp, #0]
 8007986:	462a      	mov	r2, r5
 8007988:	4b10      	ldr	r3, [pc, #64]	; (80079cc <_svfiprintf_r+0x1e4>)
 800798a:	a904      	add	r1, sp, #16
 800798c:	4640      	mov	r0, r8
 800798e:	f3af 8000 	nop.w
 8007992:	f1b0 3fff 	cmp.w	r0, #4294967295	; 0xffffffff
 8007996:	4681      	mov	r9, r0
 8007998:	d1d9      	bne.n	800794e <_svfiprintf_r+0x166>
 800799a:	89ab      	ldrh	r3, [r5, #12]
 800799c:	065b      	lsls	r3, r3, #25
 800799e:	f53f af38 	bmi.w	8007812 <_svfiprintf_r+0x2a>
 80079a2:	9809      	ldr	r0, [sp, #36]	; 0x24
 80079a4:	b01d      	add	sp, #116	; 0x74
 80079a6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, pc}
 80079aa:	ab03      	add	r3, sp, #12
 80079ac:	9300      	str	r3, [sp, #0]
 80079ae:	462a      	mov	r2, r5
 80079b0:	4b06      	ldr	r3, [pc, #24]	; (80079cc <_svfiprintf_r+0x1e4>)
 80079b2:	a904      	add	r1, sp, #16
 80079b4:	4640      	mov	r0, r8
 80079b6:	f7ff fcd9 	bl	800736c <_printf_i>
 80079ba:	e7ea      	b.n	8007992 <_svfiprintf_r+0x1aa>
 80079bc:	080087ee 	.word	0x080087ee
 80079c0:	080087f4 	.word	0x080087f4
 80079c4:	080087f8 	.word	0x080087f8
 80079c8:	00000000 	.word	0x00000000
 80079cc:	08007733 	.word	0x08007733

080079d0 <_read_r>:
 80079d0:	b538      	push	{r3, r4, r5, lr}
 80079d2:	4c07      	ldr	r4, [pc, #28]	; (80079f0 <_read_r+0x20>)
 80079d4:	4605      	mov	r5, r0
 80079d6:	4608      	mov	r0, r1
 80079d8:	4611      	mov	r1, r2
 80079da:	2200      	movs	r2, #0
 80079dc:	6022      	str	r2, [r4, #0]
 80079de:	461a      	mov	r2, r3
 80079e0:	f7fe fb78 	bl	80060d4 <_read>
 80079e4:	1c43      	adds	r3, r0, #1
 80079e6:	d102      	bne.n	80079ee <_read_r+0x1e>
 80079e8:	6823      	ldr	r3, [r4, #0]
 80079ea:	b103      	cbz	r3, 80079ee <_read_r+0x1e>
 80079ec:	602b      	str	r3, [r5, #0]
 80079ee:	bd38      	pop	{r3, r4, r5, pc}
 80079f0:	2000312c 	.word	0x2000312c

080079f4 <expf>:
 80079f4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80079f6:	ed2d 8b02 	vpush	{d8}
 80079fa:	4d36      	ldr	r5, [pc, #216]	; (8007ad4 <expf+0xe0>)
 80079fc:	b08b      	sub	sp, #44	; 0x2c
 80079fe:	ee08 0a10 	vmov	s16, r0
 8007a02:	f000 f873 	bl	8007aec <__ieee754_expf>
 8007a06:	f995 3000 	ldrsb.w	r3, [r5]
 8007a0a:	3301      	adds	r3, #1
 8007a0c:	4604      	mov	r4, r0
 8007a0e:	d039      	beq.n	8007a84 <expf+0x90>
 8007a10:	ee18 0a10 	vmov	r0, s16
 8007a14:	f000 f94c 	bl	8007cb0 <finitef>
 8007a18:	2800      	cmp	r0, #0
 8007a1a:	d033      	beq.n	8007a84 <expf+0x90>
 8007a1c:	eddf 7a2e 	vldr	s15, [pc, #184]	; 8007ad8 <expf+0xe4>
 8007a20:	eeb4 8ae7 	vcmpe.f32	s16, s15
 8007a24:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007a28:	dc31      	bgt.n	8007a8e <expf+0x9a>
 8007a2a:	eddf 7a2c 	vldr	s15, [pc, #176]	; 8007adc <expf+0xe8>
 8007a2e:	eeb4 8ae7 	vcmpe.f32	s16, s15
 8007a32:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007a36:	d525      	bpl.n	8007a84 <expf+0x90>
 8007a38:	2304      	movs	r3, #4
 8007a3a:	4a29      	ldr	r2, [pc, #164]	; (8007ae0 <expf+0xec>)
 8007a3c:	9300      	str	r3, [sp, #0]
 8007a3e:	ee18 0a10 	vmov	r0, s16
 8007a42:	2300      	movs	r3, #0
 8007a44:	9308      	str	r3, [sp, #32]
 8007a46:	9201      	str	r2, [sp, #4]
 8007a48:	f7fe fe4a 	bl	80066e0 <__aeabi_f2d>
 8007a4c:	f995 3000 	ldrsb.w	r3, [r5]
 8007a50:	2600      	movs	r6, #0
 8007a52:	2700      	movs	r7, #0
 8007a54:	2b02      	cmp	r3, #2
 8007a56:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8007a5a:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8007a5e:	e9cd 6706 	strd	r6, r7, [sp, #24]
 8007a62:	d031      	beq.n	8007ac8 <expf+0xd4>
 8007a64:	4668      	mov	r0, sp
 8007a66:	f000 f921 	bl	8007cac <matherr>
 8007a6a:	2800      	cmp	r0, #0
 8007a6c:	d02c      	beq.n	8007ac8 <expf+0xd4>
 8007a6e:	9b08      	ldr	r3, [sp, #32]
 8007a70:	b11b      	cbz	r3, 8007a7a <expf+0x86>
 8007a72:	f7ff f8eb 	bl	8006c4c <__errno>
 8007a76:	9b08      	ldr	r3, [sp, #32]
 8007a78:	6003      	str	r3, [r0, #0]
 8007a7a:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8007a7e:	f7ff f895 	bl	8006bac <__aeabi_d2f>
 8007a82:	4604      	mov	r4, r0
 8007a84:	4620      	mov	r0, r4
 8007a86:	b00b      	add	sp, #44	; 0x2c
 8007a88:	ecbd 8b02 	vpop	{d8}
 8007a8c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8007a8e:	2303      	movs	r3, #3
 8007a90:	4a13      	ldr	r2, [pc, #76]	; (8007ae0 <expf+0xec>)
 8007a92:	9300      	str	r3, [sp, #0]
 8007a94:	ee18 0a10 	vmov	r0, s16
 8007a98:	2300      	movs	r3, #0
 8007a9a:	9308      	str	r3, [sp, #32]
 8007a9c:	9201      	str	r2, [sp, #4]
 8007a9e:	f7fe fe1f 	bl	80066e0 <__aeabi_f2d>
 8007aa2:	f995 3000 	ldrsb.w	r3, [r5]
 8007aa6:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8007aaa:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8007aae:	b92b      	cbnz	r3, 8007abc <expf+0xc8>
 8007ab0:	4b0c      	ldr	r3, [pc, #48]	; (8007ae4 <expf+0xf0>)
 8007ab2:	f04f 4260 	mov.w	r2, #3758096384	; 0xe0000000
 8007ab6:	e9cd 2306 	strd	r2, r3, [sp, #24]
 8007aba:	e7d3      	b.n	8007a64 <expf+0x70>
 8007abc:	490a      	ldr	r1, [pc, #40]	; (8007ae8 <expf+0xf4>)
 8007abe:	2000      	movs	r0, #0
 8007ac0:	2b02      	cmp	r3, #2
 8007ac2:	e9cd 0106 	strd	r0, r1, [sp, #24]
 8007ac6:	d1cd      	bne.n	8007a64 <expf+0x70>
 8007ac8:	f7ff f8c0 	bl	8006c4c <__errno>
 8007acc:	2322      	movs	r3, #34	; 0x22
 8007ace:	6003      	str	r3, [r0, #0]
 8007ad0:	e7cd      	b.n	8007a6e <expf+0x7a>
 8007ad2:	bf00      	nop
 8007ad4:	20000220 	.word	0x20000220
 8007ad8:	42b17180 	.word	0x42b17180
 8007adc:	c2cff1b5 	.word	0xc2cff1b5
 8007ae0:	08008800 	.word	0x08008800
 8007ae4:	47efffff 	.word	0x47efffff
 8007ae8:	7ff00000 	.word	0x7ff00000

08007aec <__ieee754_expf>:
 8007aec:	f020 4200 	bic.w	r2, r0, #2147483648	; 0x80000000
 8007af0:	f1b2 4fff 	cmp.w	r2, #2139095040	; 0x7f800000
 8007af4:	ee07 0a90 	vmov	s15, r0
 8007af8:	4603      	mov	r3, r0
 8007afa:	d857      	bhi.n	8007bac <__ieee754_expf+0xc0>
 8007afc:	ea4f 71d0 	mov.w	r1, r0, lsr #31
 8007b00:	d059      	beq.n	8007bb6 <__ieee754_expf+0xca>
 8007b02:	4858      	ldr	r0, [pc, #352]	; (8007c64 <__ieee754_expf+0x178>)
 8007b04:	4283      	cmp	r3, r0
 8007b06:	dc78      	bgt.n	8007bfa <__ieee754_expf+0x10e>
 8007b08:	2b00      	cmp	r3, #0
 8007b0a:	db6e      	blt.n	8007bea <__ieee754_expf+0xfe>
 8007b0c:	4b56      	ldr	r3, [pc, #344]	; (8007c68 <__ieee754_expf+0x17c>)
 8007b0e:	429a      	cmp	r2, r3
 8007b10:	d95a      	bls.n	8007bc8 <__ieee754_expf+0xdc>
 8007b12:	4b56      	ldr	r3, [pc, #344]	; (8007c6c <__ieee754_expf+0x180>)
 8007b14:	429a      	cmp	r2, r3
 8007b16:	f200 8084 	bhi.w	8007c22 <__ieee754_expf+0x136>
 8007b1a:	4b55      	ldr	r3, [pc, #340]	; (8007c70 <__ieee754_expf+0x184>)
 8007b1c:	4a55      	ldr	r2, [pc, #340]	; (8007c74 <__ieee754_expf+0x188>)
 8007b1e:	0088      	lsls	r0, r1, #2
 8007b20:	4403      	add	r3, r0
 8007b22:	edd3 6a00 	vldr	s13, [r3]
 8007b26:	4402      	add	r2, r0
 8007b28:	f1c1 0301 	rsb	r3, r1, #1
 8007b2c:	ee37 4ae6 	vsub.f32	s8, s15, s13
 8007b30:	edd2 6a00 	vldr	s13, [r2]
 8007b34:	1a5b      	subs	r3, r3, r1
 8007b36:	ee74 7a66 	vsub.f32	s15, s8, s13
 8007b3a:	ee27 7aa7 	vmul.f32	s14, s15, s15
 8007b3e:	eddf 3a4e 	vldr	s7, [pc, #312]	; 8007c78 <__ieee754_expf+0x18c>
 8007b42:	eddf 4a4e 	vldr	s9, [pc, #312]	; 8007c7c <__ieee754_expf+0x190>
 8007b46:	ed9f 5a4e 	vldr	s10, [pc, #312]	; 8007c80 <__ieee754_expf+0x194>
 8007b4a:	eddf 5a4e 	vldr	s11, [pc, #312]	; 8007c84 <__ieee754_expf+0x198>
 8007b4e:	ed9f 6a4e 	vldr	s12, [pc, #312]	; 8007c88 <__ieee754_expf+0x19c>
 8007b52:	eee7 4a23 	vfma.f32	s9, s14, s7
 8007b56:	eea7 5a24 	vfma.f32	s10, s14, s9
 8007b5a:	eee7 5a05 	vfma.f32	s11, s14, s10
 8007b5e:	eea7 6a25 	vfma.f32	s12, s14, s11
 8007b62:	eef0 5a67 	vmov.f32	s11, s15
 8007b66:	eee7 5a46 	vfms.f32	s11, s14, s12
 8007b6a:	eeb0 6a00 	vmov.f32	s12, #0	; 0x40000000  2.0
 8007b6e:	2b00      	cmp	r3, #0
 8007b70:	d04a      	beq.n	8007c08 <__ieee754_expf+0x11c>
 8007b72:	ee67 7aa5 	vmul.f32	s15, s15, s11
 8007b76:	ee36 7a65 	vsub.f32	s14, s12, s11
 8007b7a:	f113 0f7d 	cmn.w	r3, #125	; 0x7d
 8007b7e:	eec7 5a87 	vdiv.f32	s11, s15, s14
 8007b82:	eeb7 6a00 	vmov.f32	s12, #112	; 0x3f800000  1.0
 8007b86:	ee76 6ae5 	vsub.f32	s13, s13, s11
 8007b8a:	ee76 6ac4 	vsub.f32	s13, s13, s8
 8007b8e:	ee76 7a66 	vsub.f32	s15, s12, s13
 8007b92:	da60      	bge.n	8007c56 <__ieee754_expf+0x16a>
 8007b94:	ee17 2a90 	vmov	r2, s15
 8007b98:	3364      	adds	r3, #100	; 0x64
 8007b9a:	eb02 53c3 	add.w	r3, r2, r3, lsl #23
 8007b9e:	ed9f 7a3b 	vldr	s14, [pc, #236]	; 8007c8c <__ieee754_expf+0x1a0>
 8007ba2:	ee07 3a90 	vmov	s15, r3
 8007ba6:	ee67 7a87 	vmul.f32	s15, s15, s14
 8007baa:	e001      	b.n	8007bb0 <__ieee754_expf+0xc4>
 8007bac:	ee77 7aa7 	vadd.f32	s15, s15, s15
 8007bb0:	ee17 0a90 	vmov	r0, s15
 8007bb4:	4770      	bx	lr
 8007bb6:	ed9f 7a36 	vldr	s14, [pc, #216]	; 8007c90 <__ieee754_expf+0x1a4>
 8007bba:	2900      	cmp	r1, #0
 8007bbc:	bf18      	it	ne
 8007bbe:	eef0 7a47 	vmovne.f32	s15, s14
 8007bc2:	ee17 0a90 	vmov	r0, s15
 8007bc6:	4770      	bx	lr
 8007bc8:	f1b2 5f46 	cmp.w	r2, #830472192	; 0x31800000
 8007bcc:	d213      	bcs.n	8007bf6 <__ieee754_expf+0x10a>
 8007bce:	ed9f 7a31 	vldr	s14, [pc, #196]	; 8007c94 <__ieee754_expf+0x1a8>
 8007bd2:	ee37 7a87 	vadd.f32	s14, s15, s14
 8007bd6:	eeb7 6a00 	vmov.f32	s12, #112	; 0x3f800000  1.0
 8007bda:	eeb4 7ac6 	vcmpe.f32	s14, s12
 8007bde:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007be2:	dd08      	ble.n	8007bf6 <__ieee754_expf+0x10a>
 8007be4:	ee77 7a86 	vadd.f32	s15, s15, s12
 8007be8:	e7e2      	b.n	8007bb0 <__ieee754_expf+0xc4>
 8007bea:	4b2b      	ldr	r3, [pc, #172]	; (8007c98 <__ieee754_expf+0x1ac>)
 8007bec:	429a      	cmp	r2, r3
 8007bee:	d98d      	bls.n	8007b0c <__ieee754_expf+0x20>
 8007bf0:	eddf 7a27 	vldr	s15, [pc, #156]	; 8007c90 <__ieee754_expf+0x1a4>
 8007bf4:	e7dc      	b.n	8007bb0 <__ieee754_expf+0xc4>
 8007bf6:	2300      	movs	r3, #0
 8007bf8:	e79f      	b.n	8007b3a <__ieee754_expf+0x4e>
 8007bfa:	eddf 7a26 	vldr	s15, [pc, #152]	; 8007c94 <__ieee754_expf+0x1a8>
 8007bfe:	ee67 7aa7 	vmul.f32	s15, s15, s15
 8007c02:	ee17 0a90 	vmov	r0, s15
 8007c06:	4770      	bx	lr
 8007c08:	ee27 7aa5 	vmul.f32	s14, s15, s11
 8007c0c:	ee35 6ac6 	vsub.f32	s12, s11, s12
 8007c10:	eef7 5a00 	vmov.f32	s11, #112	; 0x3f800000  1.0
 8007c14:	eec7 6a06 	vdiv.f32	s13, s14, s12
 8007c18:	ee76 7ae7 	vsub.f32	s15, s13, s15
 8007c1c:	ee75 7ae7 	vsub.f32	s15, s11, s15
 8007c20:	e7c6      	b.n	8007bb0 <__ieee754_expf+0xc4>
 8007c22:	4b1e      	ldr	r3, [pc, #120]	; (8007c9c <__ieee754_expf+0x1b0>)
 8007c24:	eddf 6a1e 	vldr	s13, [pc, #120]	; 8007ca0 <__ieee754_expf+0x1b4>
 8007c28:	eddf 5a1e 	vldr	s11, [pc, #120]	; 8007ca4 <__ieee754_expf+0x1b8>
 8007c2c:	ed9f 6a1e 	vldr	s12, [pc, #120]	; 8007ca8 <__ieee754_expf+0x1bc>
 8007c30:	eb03 0381 	add.w	r3, r3, r1, lsl #2
 8007c34:	ed93 7a00 	vldr	s14, [r3]
 8007c38:	eea7 7aa6 	vfma.f32	s14, s15, s13
 8007c3c:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 8007c40:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8007c44:	ee17 3a10 	vmov	r3, s14
 8007c48:	eee6 7ae5 	vfms.f32	s15, s13, s11
 8007c4c:	ee66 6a86 	vmul.f32	s13, s13, s12
 8007c50:	eeb0 4a67 	vmov.f32	s8, s15
 8007c54:	e76f      	b.n	8007b36 <__ieee754_expf+0x4a>
 8007c56:	ee17 2a90 	vmov	r2, s15
 8007c5a:	eb02 53c3 	add.w	r3, r2, r3, lsl #23
 8007c5e:	ee07 3a90 	vmov	s15, r3
 8007c62:	e7a5      	b.n	8007bb0 <__ieee754_expf+0xc4>
 8007c64:	42b17217 	.word	0x42b17217
 8007c68:	3eb17218 	.word	0x3eb17218
 8007c6c:	3f851591 	.word	0x3f851591
 8007c70:	08008810 	.word	0x08008810
 8007c74:	08008818 	.word	0x08008818
 8007c78:	3331bb4c 	.word	0x3331bb4c
 8007c7c:	b5ddea0e 	.word	0xb5ddea0e
 8007c80:	388ab355 	.word	0x388ab355
 8007c84:	bb360b61 	.word	0xbb360b61
 8007c88:	3e2aaaab 	.word	0x3e2aaaab
 8007c8c:	0d800000 	.word	0x0d800000
 8007c90:	00000000 	.word	0x00000000
 8007c94:	7149f2ca 	.word	0x7149f2ca
 8007c98:	42cff1b5 	.word	0x42cff1b5
 8007c9c:	08008808 	.word	0x08008808
 8007ca0:	3fb8aa3b 	.word	0x3fb8aa3b
 8007ca4:	3f317180 	.word	0x3f317180
 8007ca8:	3717f7d1 	.word	0x3717f7d1

08007cac <matherr>:
 8007cac:	2000      	movs	r0, #0
 8007cae:	4770      	bx	lr

08007cb0 <finitef>:
 8007cb0:	f020 4000 	bic.w	r0, r0, #2147483648	; 0x80000000
 8007cb4:	f1b0 4fff 	cmp.w	r0, #2139095040	; 0x7f800000
 8007cb8:	bfac      	ite	ge
 8007cba:	2000      	movge	r0, #0
 8007cbc:	2001      	movlt	r0, #1
 8007cbe:	4770      	bx	lr

08007cc0 <_init>:
 8007cc0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007cc2:	bf00      	nop
 8007cc4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8007cc6:	bc08      	pop	{r3}
 8007cc8:	469e      	mov	lr, r3
 8007cca:	4770      	bx	lr

08007ccc <_fini>:
 8007ccc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007cce:	bf00      	nop
 8007cd0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8007cd2:	bc08      	pop	{r3}
 8007cd4:	469e      	mov	lr, r3
 8007cd6:	4770      	bx	lr

08007cd8 <vtable for std_msgs::Time>:
	...
 8007ce0:	0205 0800 022d 0800 0269 0800 0271 0800     ....-...i...q...

08007cf0 <vtable for rosserial_msgs::TopicInfo>:
	...
 8007cf8:	0877 0800 0951 0800 0279 0800 0281 0800     w...Q...y.......

08007d08 <vtable for rosserial_msgs::Log>:
	...
 8007d10:	084b 0800 091b 0800 0289 0800 0291 0800     K...............

08007d20 <vtable for rosserial_msgs::RequestParamResponse>:
	...
 8007d28:	0769 0800 0a07 0800 0299 0800 02a1 0800     i...............

08007d38 <vtable for std_msgs::Empty>:
	...
 8007d40:	02a9 0800 02ad 0800 02b1 0800 02b9 0800     ................

08007d50 <vtable for std_msgs::Float32>:
	...
 8007d58:	02c1 0800 02d5 0800 02dd 0800 02e5 0800     ................

08007d68 <vtable for std_msgs::MultiArrayDimension>:
	...
 8007d70:	071d 0800 0b35 0800 02ed 0800 02f5 0800     ....5...........

08007d80 <vtable for std_msgs::MultiArrayLayout>:
	...
 8007d88:	02fd 0800 0b9f 0800 034d 0800 0355 0800     ........M...U...

08007d98 <vtable for std_msgs::Float32MultiArray>:
	...
 8007da0:	035d 0800 0c13 0800 03b5 0800 03bd 0800     ]...............

08007db0 <vtable for geometry_msgs::Vector3>:
	...
 8007db8:	03c5 0800 042b 0800 0449 0800 0451 0800     ....+...I...Q...

08007dc8 <vtable for ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>>:
	...
 8007dd0:	1559 0800 1295 0800 04dd 0800               Y...........

08007ddc <vtable for ros::Subscriber<std_msgs::Empty, void>>:
	...
 8007de4:	04c1 0800 04c7 0800 04cd 0800 04d5 0800     ................

08007df4 <vtable for ros::Subscriber<std_msgs::Float32, void>>:
	...
 8007dfc:	0495 0800 04ad 0800 04b1 0800 04b9 0800     ................

08007e0c <vtable for ros::Subscriber<geometry_msgs::Vector3, void>>:
	...
 8007e14:	0467 0800 047f 0800 0485 0800 048d 0800     g...............

08007e24 <void mbed::Callback<void ()>::generate<void (*)()>(void (* const&)())::ops>:
 8007e24:	0459 0800 045d 0800 0465 0800 7473 706f     Y...]...e...stop
 8007e34:	6d5f 746f 726f 0031 7473 706f 6d5f 746f     _motor1.stop_mot
 8007e44:	726f 0032 7473 706f 6d5f 746f 726f 0033     or2.stop_motor3.
 8007e54:	6573 5f74 6e61 6c67 5f65 6f6d 6f74 3172     set_angle_motor1
 8007e64:	7300 7465 615f 676e 656c 6d5f 746f 726f     .set_angle_motor
 8007e74:	0032 6573 5f74 6e61 6c67 5f65 6f6d 6f74     2.set_angle_moto
 8007e84:	3372 7300 7465 505f 4449 6d5f 746f 726f     r3.set_PID_motor
 8007e94:	0031 6573 5f74 4950 5f44 6f6d 6f74 3272     1.set_PID_motor2
 8007ea4:	7300 7465 505f 4449 6d5f 746f 726f 0033     .set_PID_motor3.
 8007eb4:	6f6d 696e 6f74 6972 676e 3400 3861 3234     monitoring.4a842
 8007ec4:	3662 6635 3134 3033 3438 6364 6232 3031     b65f413084dc2b10
 8007ed4:	6266 3834 6534 3761 3166 0037 6567 6d6f     fb484ea7f17.geom
 8007ee4:	7465 7972 6d5f 6773 2f73 6556 7463 726f     etry_msgs/Vector
 8007ef4:	0033 6639 6530 3839 6462 3661 3935 3138     3.9f0e98bda65981
 8007f04:	3839 6436 6664 3335 6661 3761 3461 6530     986ddf53afa7a40e
 8007f14:	3934 3100 6131 6462 3337 6331 3532 3339     49.11abd731c2593
 8007f24:	3233 3136 6463 3136 3338 6462 3231 3664     3261cd6183bd12d6
 8007f34:	3932 0035 6f72 7373 7265 6169 5f6c 736d     295.rosserial_ms
 8007f44:	7367 4c2f 676f 3000 6461 3135 3866 6638     gs/Log.0ad51f88f
 8007f54:	3463 3834 3239 3866 3163 3630 3438 3730     c44892f8c1068407
 8007f64:	3637 3634 3030 0035 6f72 7373 7265 6169     7646005.rosseria
 8007f74:	5f6c 736d 7367 542f 706f 6369 6e49 6f66     l_msgs/TopicInfo
	...

08007f85 <rosserial_msgs::REQUESTPARAM>:
 8007f85:	6f72 7373 7265 6169 5f6c 736d 7367 522f     rosserial_msgs/R
 8007f95:	7165 6575 7473 6150 6172 006d 654d 7373     equestParam.Mess
 8007fa5:	6761 2065 7266 6d6f 6420 7665 6369 2065     age from device 
 8007fb5:	7264 706f 6570 3a64 6d20 7365 6173 6567     dropped: message
 8007fc5:	6c20 7261 6567 2072 6874 6e61 6220 6675      larger than buf
 8007fd5:	6566 2e72 3000 6566 3264 3161 6331 3331     fer..0fed2a11c13
 8007fe5:	3165 6331 3535 3137 3462 3265 3961 3539     e11c5571b4e2a995
 8007ff5:	3961 6131 0033 7473 5f64 736d 7367 4d2f     a91a3.std_msgs/M
 8008005:	6c75 6974 7241 6172 4c79 7961 756f 0074     ultiArrayLayout.
 8008015:	6136 3034 3065 6666 3661 3161 6137 3035     6a40e0ffa6a17a50
 8008025:	6133 3363 3866 3136 3936 3139 3162 3666     3ac3f8616991b1f6
 8008035:	7300 6474 6d5f 6773 2f73 6c46 616f 3374     .std_msgs/Float3
 8008045:	4d32 6c75 6974 7241 6172 0079 6334 3064     2MultiArray.4cd0
 8008055:	3863 6133 3638 3338 6564 6561 3034 6365     c83a8683deae40ec
 8008065:	6164 3663 6530 3335 6662 3861 7300 6474     dac60e53bfa8.std
 8008075:	6d5f 6773 2f73 754d 746c 4169 7272 7961     _msgs/MultiArray
 8008085:	6944 656d 736e 6f69 006e 6463 3137 3636     Dimension.cd7166
 8008095:	3763 6334 3535 6332 3133 6631 6362 3263     c74c552c311fbcc2
 80080a5:	6566 6135 6237 3263 3938 7300 6474 6d5f     fe5a7bc289.std_m
 80080b5:	6773 2f73 6954 656d 6400 3134 3864 6463     sgs/Time.d41d8cd
 80080c5:	3839 3066 6230 3032 6534 3839 3030 3939     98f00b204e980099
 80080d5:	6538 6663 3438 3732 0065 7473 5f64 736d     8ecf8427e.std_ms
 80080e5:	7367 452f 706d 7974 3700 6633 6263 3466     gs/Empty.73fcbf4
 80080f5:	6236 3934 3931 6531 3736 3932 3830 3565     6b49191e672908e5
 8008105:	3830 3234 3861 6433 0034 7473 5f64 736d     0842a83d4.std_ms
 8008115:	7367 462f 6f6c 7461 3233 6900                    gs/Float32.

08008120 <void mbed::Callback<void ()>::generate<mbed::Callback<void ()>::method_context<DcServo, void (DcServo::*)()> >(mbed::Callback<void ()>::method_context<DcServo, void (DcServo::*)()> const&)::ops>:
 8008120:	1669 0800 165b 0800 1667 0800               i...[...g...

0800812c <void mbed::Callback<void ()>::generate<mbed::Callback<void ()>::method_context<Encoder, void (Encoder::*)()> >(mbed::Callback<void ()>::method_context<Encoder, void (Encoder::*)()> const&)::ops>:
 800812c:	1931 0800 1923 0800 192f 0800               1...#.../...

08008138 <vtable for LowpassFilter>:
	...
 8008140:	1b2d 0800 1b2f 0800                         -.../...

08008148 <void mbed::Callback<void ()>::generate<mbed::Callback<void ()>::method_context<BufferedSerial, void (BufferedSerial::*)()> >(mbed::Callback<void ()>::method_context<BufferedSerial, void (BufferedSerial::*)()> const&)::ops>:
 8008148:	20fb 0800 20ed 0800 20f9 0800 682f 6d6f     . ... ... ../hom
 8008158:	2f65 6275 6e75 7574 722f 736f 6c2f 6269     e/ubuntu/ros/lib
 8008168:	722f 736f 6c5f 6269 422f 6675 6566 6572     /ros_lib/Buffere
 8008178:	5364 7265 6169 2f6c 7542 6666 7265 6465     dSerial/Buffered
 8008188:	6553 6972 6c61 632e 7070 2500 2073 6425     Serial.cpp.%s %d
 8008198:	6220 6675 6566 2072 766f 7265 7277 7469      buffer overwrit
 80081a8:	2065 6d28 7861 625f 6675 735f 7a69 3a65     e (max_buf_size:
 80081b8:	2520 2064 7865 6563 6465 6465 203a 6425      %d exceeded: %d
 80081c8:	2129 0a0d 0000 0000                         )!......

080081d0 <vtable for BufferedSerial>:
	...
 80081d8:	5b39 0800 5b39 0800 21d5 0800 222d 0800     9[..9[...!..-"..
 80081e8:	20ad 0800 20bd 0800 20c1 0800 234d 0800     . ... ... ..M#..
 80081f8:	2365 0800 23e1 0800 23a3 0800               e#...#...#..

08008204 <us_data>:
 8008204:	820c 0800 0fb8 2000                         ....... 

0800820c <us_interface>:
 800820c:	424d 0800 4271 0800 42a9 0800 42c1 0800     MB..qB...B...B..
 800821c:	428d 0800 6970 6d6e 7061 6e20 746f 6620     .B..pinmap not f
 800822c:	756f 646e 6620 726f 6620 6e75 7463 6f69     ound for functio
 800823c:	006e 6970 6d6e 7061 6d20 7369 6d2d 7461     n.pinmap mis-mat
 800824c:	6863 7000 6e69 616d 2070 6f6e 2074 6f66     ch.pinmap not fo
 800825c:	6e75 2064 6f66 2072 6570 6972 6870 7265     und for peripher
 800826c:	6c61 6300 756f 646c 6e20 746f 7020 6e69     al.could not pin
 800827c:	756f 0074                                   out.

08008280 <mp_stk_size>:
 8008280:	0210 0000                                   ....

08008284 <mp_tcb_size>:
 8008284:	03cc                                        ..

08008286 <mp_tmr_size>:
	...

08008288 <os_clockrate>:
 8008288:	03e8 0000 5452 2058 7265 6f72 2072 6f63     ....RTX error co
 8008298:	6564 203a 7830 3025 5838 202c 6174 6b73     de: 0x%08X, task
 80082a8:	4920 3a44 3020 2578 3830 0a58 1000                ID: 0x%08X..

080082b5 <os_fifo_size>:
 80082b5:	0110                                             .

080082b6 <os_flags>:
 80082b6:	0001                                        ..

080082b8 <os_maxtaskrun>:
 80082b8:	000f 0000                                   ....

080082bc <os_messageQ_def_osTimerMessageQ>:
 80082bc:	0004 0000 0fdc 2000                         ....... 

080082c4 <os_mutex_def_env_mutex>:
 80082c4:	0ffc 2000                                   ... 

080082c8 <os_mutex_def_malloc_mutex>:
 80082c8:	100c 2000                                   ... 

080082cc <os_mutex_def_singleton_mutex>:
 80082cc:	101c 2000                                   ... 

080082d0 <os_rrobin>:
 80082d0:	0005 0001                                   ....

080082d4 <os_stackinfo>:
 80082d4:	0200 0100                                   ....

080082d8 <os_thread_def_osTimerThread>:
 80082d8:	35e1 0800 0002 0000 0001 0000 0320 0000     .5.......... ...
 80082e8:	2918 2000                                   .). 

080082ec <os_trv>:
 80082ec:	869f 0001                                   ....

080082f0 <os_mutex_def_osThreadMutex>:
 80082f0:	2030 2000 6e49 6574 7272 7075 4974 206e     0 . InterruptIn 
 8008300:	7265 6f72 3a72 7020 6e69 6e20 746f 7320     error: pin not s
 8008310:	7075 6f70 7472 6465 0a2e 5000 6e69 616d     upported...Pinma
 8008320:	2070 7265 6f72 3a72 7720 6f72 676e 7020     p error: wrong p
 8008330:	726f 2074 756e 626d 7265 002e 6e55 6e6b     ort number..Unkn
 8008340:	776f 206e 5750 204d 6e69 7473 6e61 6563     own PWM instance
 8008350:	4300 6e61 6f6e 2074 6e69 7469 6169 696c     .Cannot initiali
 8008360:	657a 5020 4d57 000a                         ze PWM..

08008368 <ll_pin_defines>:
 8008368:	0001 0000 0002 0000 0004 0000 0008 0000     ................
 8008378:	0010 0000 0020 0000 0040 0000 0080 0000     .... ...@.......
 8008388:	0100 0000 0200 0000 0400 0000 0800 0000     ................
 8008398:	1000 0000 2000 0000 4000 0000 8000 0000     ..... ...@......

080083a8 <pwm_apb_map_table>:
 80083a8:	0000 4000 0000 0000 0400 4000 0000 0000     ...@.......@....
 80083b8:	0800 4000 0000 0000 0c00 4000 0000 0000     ...@.......@....
 80083c8:	0000 4001 0001 0000 4000 4001 0001 0000     ...@.....@.@....
 80083d8:	4400 4001 0001 0000 4800 4001 0001 0000     .D.@.....H.@....
 80083e8:	0000 0000 0002 0000 6143 6e6e 746f 6920     ........Cannot i
 80083f8:	696e 6974 6c61 7a69 2065 4155 5452 000a     nitialize UART..

08008408 <pin_lines_desc>:
	...
 8008410:	0006 0000 0000 0000 0001 0000 0007 0000     ................
 8008420:	0000 0000 0002 0000 0008 0000 0000 0000     ................
 8008430:	0003 0000 0009 0000 0000 0000 0004 0000     ................
 8008440:	000a 0000 0000 0000 0005 0000 0017 0000     ................
 8008450:	0001 0000 0005 0000 0017 0000 0002 0000     ................
 8008460:	0005 0000 0017 0000 0003 0000 0005 0000     ................
 8008470:	0017 0000 0004 0000 0005 0000 0017 0000     ................
 8008480:	0000 0000 0006 0000 0028 0000 0001 0000     ........(.......
 8008490:	0006 0000 0028 0000 0002 0000 0006 0000     ....(...........
 80084a0:	0028 0000 0003 0000 0006 0000 0028 0000     (...........(...
 80084b0:	0004 0000 0006 0000 0028 0000 0005 0000     ........(.......
 80084c0:	0006 0000 0028 0000                         ....(...

080084c8 <PinMap_PWM>:
 80084c8:	0000 0000 0000 4000 1112 0000 0001 0000     .......@........
 80084d8:	0000 4000 2112 0000 0005 0000 0000 4000     ...@.!.........@
 80084e8:	1112 0000 0006 0000 0400 4000 1212 0000     ...........@....
 80084f8:	0007 0000 0000 4001 1112 0002 0008 0000     .......@........
 8008508:	0000 4001 1112 0000 0009 0000 0000 4001     ...@...........@
 8008518:	2112 0000 000a 0000 0000 4001 3112 0000     .!.........@.1..
 8008528:	000b 0000 0000 4001 4112 0000 000f 0000     .......@.A......
 8008538:	0000 4000 1112 0000 0010 0000 0000 4001     ...@...........@
 8008548:	2112 0002 0011 0000 0000 4001 3112 0002     .!.........@.1..
 8008558:	0013 0000 0000 4000 2112 0000 0014 0000     .......@.!......
 8008568:	0400 4000 1212 0000 0015 0000 0400 4000     ...@...........@
 8008578:	2212 0000 0016 0000 0800 4000 1212 0000     .".........@....
 8008588:	0017 0000 0800 4000 2212 0000 0018 0000     .......@."......
 8008598:	0800 4000 3212 0000 0019 0000 0800 4000     ...@.2.........@
 80085a8:	4212 0000 001a 0000 0000 4000 3112 0000     .B.........@.1..
 80085b8:	001d 0000 0000 4001 1112 0002 001e 0000     .......@........
 80085c8:	0000 4001 2112 0002 001f 0000 0000 4001     ...@.!.........@
 80085d8:	3112 0002 0026 0000 0400 4000 1212 0000     .1..&......@....
 80085e8:	0027 0000 0400 4000 2212 0000 0028 0000     '......@."..(...
 80085f8:	0400 4000 3212 0000 0029 0000 0400 4000     ...@.2..)......@
 8008608:	4212 0000 ffff 0000 ffff ffff 0000 0000     .B..............

08008618 <PinMap_UART_RX>:
 8008618:	0003 0000 4400 4000 0712 0000 000a 0000     .....D.@........
 8008628:	1000 4001 0712 0000 000c 0000 1400 4001     ...@...........@
 8008638:	0812 0000 0013 0000 1000 4001 0712 0000     ...........@....
 8008648:	0017 0000 1000 4001 0712 0000 0027 0000     .......@....'...
 8008658:	1400 4001 0812 0000 ffff 0000 ffff ffff     ...@............
 8008668:	0000 0000                                   ....

0800866c <PinMap_UART_TX>:
 800866c:	0002 0000 4400 4000 0712 0000 0009 0000     .....D.@........
 800867c:	1000 4001 0712 0000 000b 0000 1400 4001     ...@...........@
 800868c:	0812 0000 000f 0000 1000 4001 0712 0000     ...........@....
 800869c:	0016 0000 1000 4001 0712 0000 0026 0000     .......@....&...
 80086ac:	1400 4001 0812 0000 ffff 0000 ffff ffff     ...@............
 80086bc:	0000 0000                                   ....

080086c0 <AHBPrescTable>:
	...
 80086c8:	0201 0403 0706 0908                         ........

080086d0 <APBAHBPrescTable>:
 80086d0:	0000 0000 0201 0403 0201 0403 0706 0908     ................

080086e0 <vtable for mbed::Ticker>:
	...
 80086e8:	06bd 0800 06e1 0800 59f1 0800               .........Y..

080086f4 <vtable for mbed::RawSerial>:
	...
 80086fc:	5b39 0800 5b39 0800 5b51 0800 5b65 0800     9[..9[..Q[..e[..

0800870c <vtable for mbed::InterruptIn>:
	...
 8008714:	5b89 0800 5bb1 0800                         .[...[..

0800871c <vtable for mbed::SerialBase>:
	...
 8008724:	5d35 0800 5d37 0800 2189 0800 21c1 0800     5]..7]...!...!..

08008734 <vtable for mbed::TimerEvent>:
	...
 8008744:	2089 0800 704f 7265 7461 726f 6e20 7765     . ..Operator new
 8008754:	5d5b 6f20 7475 6f20 2066 656d 6f6d 7972     [] out of memory
 8008764:	0a0d 0000                                   ....

08008768 <__sf_fake_stderr>:
	...

08008788 <__sf_fake_stdin>:
	...

080087a8 <__sf_fake_stdout>:
	...

080087c8 <_global_impure_ptr>:
 80087c8:	01c0 2000 3130 3332 3534 3736 3938 4241     ... 0123456789AB
 80087d8:	4443 4645 3000 3231 3433 3635 3837 6139     CDEF.0123456789a
 80087e8:	6362 6564 0066 2d23 2b30 0020 6c68 004c     bcdef.#-0+ .hlL.
 80087f8:	6665 4567 4746 0000 7865 6670 0000 0000     efgEFG..expf....

08008808 <halF>:
 8008808:	0000 3f00 0000 bf00                         ...?....

08008810 <ln2HI>:
 8008810:	7180 3f31 7180 bf31                         .q1?.q1.

08008818 <ln2LO>:
 8008818:	f7d1 3717 f7d1 b717                         ...7....

08008820 <__EH_FRAME_BEGIN__>:
 8008820:	0000 0000                                   ....
