
NUCLEO_F411RE/dc_motor_controll_new.elf:     file format elf32-littlearm
architecture: arm, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x08005b51


Disassembly of section .text:

08000000 <g_pfnVectors>:
 8000000:	00 00 02 20 51 5b 00 08 85 5b 00 08 85 5b 00 08     ... Q[...[...[..
 8000010:	85 5b 00 08 85 5b 00 08 85 5b 00 08 00 00 00 00     .[...[...[......
	...
 800002c:	15 5a 00 08 85 5b 00 08 00 00 00 00 bb 5a 00 08     .Z...[.......Z..
 800003c:	1b 5b 00 08 85 5b 00 08 85 5b 00 08 85 5b 00 08     .[...[...[...[..
 800004c:	85 5b 00 08 85 5b 00 08 85 5b 00 08 85 5b 00 08     .[...[...[...[..
 800005c:	85 5b 00 08 85 5b 00 08 85 5b 00 08 85 5b 00 08     .[...[...[...[..
 800006c:	85 5b 00 08 85 5b 00 08 85 5b 00 08 85 5b 00 08     .[...[...[...[..
 800007c:	85 5b 00 08 85 5b 00 08 85 5b 00 08 85 5b 00 08     .[...[...[...[..
	...
 800009c:	85 5b 00 08 85 5b 00 08 85 5b 00 08 85 5b 00 08     .[...[...[...[..
 80000ac:	85 5b 00 08 85 5b 00 08 85 5b 00 08 85 5b 00 08     .[...[...[...[..
 80000bc:	85 5b 00 08 85 5b 00 08 85 5b 00 08 85 5b 00 08     .[...[...[...[..
 80000cc:	85 5b 00 08 85 5b 00 08 85 5b 00 08 85 5b 00 08     .[...[...[...[..
 80000dc:	00 00 00 00 85 5b 00 08 85 5b 00 08 85 5b 00 08     .....[...[...[..
	...
 80000fc:	85 5b 00 08 00 00 00 00 85 5b 00 08 85 5b 00 08     .[.......[...[..
 800010c:	85 5b 00 08 00 00 00 00 00 00 00 00 00 00 00 00     .[..............
 800011c:	00 00 00 00 85 5b 00 08 85 5b 00 08 85 5b 00 08     .....[...[...[..
 800012c:	85 5b 00 08 85 5b 00 08 00 00 00 00 00 00 00 00     .[...[..........
	...
 800014c:	85 5b 00 08 85 5b 00 08 85 5b 00 08 85 5b 00 08     .[...[...[...[..
 800015c:	85 5b 00 08 85 5b 00 08 85 5b 00 08 00 00 00 00     .[...[...[......
	...
 8000184:	85 5b 00 08 00 00 00 00 00 00 00 00 85 5b 00 08     .[...........[..
 8000194:	85 5b 00 08                                         .[..

08000198 <__do_global_dtors_aux>:
 8000198:	b510      	push	{r4, lr}
 800019a:	4c05      	ldr	r4, [pc, #20]	; (80001b0 <__do_global_dtors_aux+0x18>)
 800019c:	7823      	ldrb	r3, [r4, #0]
 800019e:	b933      	cbnz	r3, 80001ae <__do_global_dtors_aux+0x16>
 80001a0:	4b04      	ldr	r3, [pc, #16]	; (80001b4 <__do_global_dtors_aux+0x1c>)
 80001a2:	b113      	cbz	r3, 80001aa <__do_global_dtors_aux+0x12>
 80001a4:	4804      	ldr	r0, [pc, #16]	; (80001b8 <__do_global_dtors_aux+0x20>)
 80001a6:	f3af 8000 	nop.w
 80001aa:	2301      	movs	r3, #1
 80001ac:	7023      	strb	r3, [r4, #0]
 80001ae:	bd10      	pop	{r4, pc}
 80001b0:	20000238 	.word	0x20000238
 80001b4:	00000000 	.word	0x00000000
 80001b8:	08007460 	.word	0x08007460

080001bc <frame_dummy>:
 80001bc:	4b0c      	ldr	r3, [pc, #48]	; (80001f0 <frame_dummy+0x34>)
 80001be:	b143      	cbz	r3, 80001d2 <frame_dummy+0x16>
 80001c0:	480c      	ldr	r0, [pc, #48]	; (80001f4 <frame_dummy+0x38>)
 80001c2:	490d      	ldr	r1, [pc, #52]	; (80001f8 <frame_dummy+0x3c>)
 80001c4:	b510      	push	{r4, lr}
 80001c6:	f3af 8000 	nop.w
 80001ca:	480c      	ldr	r0, [pc, #48]	; (80001fc <frame_dummy+0x40>)
 80001cc:	6803      	ldr	r3, [r0, #0]
 80001ce:	b923      	cbnz	r3, 80001da <frame_dummy+0x1e>
 80001d0:	bd10      	pop	{r4, pc}
 80001d2:	480a      	ldr	r0, [pc, #40]	; (80001fc <frame_dummy+0x40>)
 80001d4:	6803      	ldr	r3, [r0, #0]
 80001d6:	b933      	cbnz	r3, 80001e6 <frame_dummy+0x2a>
 80001d8:	4770      	bx	lr
 80001da:	4b09      	ldr	r3, [pc, #36]	; (8000200 <frame_dummy+0x44>)
 80001dc:	2b00      	cmp	r3, #0
 80001de:	d0f7      	beq.n	80001d0 <frame_dummy+0x14>
 80001e0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80001e4:	4718      	bx	r3
 80001e6:	4b06      	ldr	r3, [pc, #24]	; (8000200 <frame_dummy+0x44>)
 80001e8:	2b00      	cmp	r3, #0
 80001ea:	d0f5      	beq.n	80001d8 <frame_dummy+0x1c>
 80001ec:	4718      	bx	r3
 80001ee:	bf00      	nop
 80001f0:	00000000 	.word	0x00000000
 80001f4:	08007460 	.word	0x08007460
 80001f8:	2000023c 	.word	0x2000023c
 80001fc:	20000230 	.word	0x20000230
 8000200:	00000000 	.word	0x00000000

08000204 <std_msgs::Time::serialize(unsigned char*) const>:
 8000204:	6843      	ldr	r3, [r0, #4]
 8000206:	700b      	strb	r3, [r1, #0]
 8000208:	6843      	ldr	r3, [r0, #4]
 800020a:	0a1b      	lsrs	r3, r3, #8
 800020c:	704b      	strb	r3, [r1, #1]
 800020e:	88c3      	ldrh	r3, [r0, #6]
 8000210:	708b      	strb	r3, [r1, #2]
 8000212:	79c3      	ldrb	r3, [r0, #7]
 8000214:	70cb      	strb	r3, [r1, #3]
 8000216:	6883      	ldr	r3, [r0, #8]
 8000218:	710b      	strb	r3, [r1, #4]
 800021a:	6883      	ldr	r3, [r0, #8]
 800021c:	0a1b      	lsrs	r3, r3, #8
 800021e:	714b      	strb	r3, [r1, #5]
 8000220:	8943      	ldrh	r3, [r0, #10]
 8000222:	718b      	strb	r3, [r1, #6]
 8000224:	7ac3      	ldrb	r3, [r0, #11]
 8000226:	71cb      	strb	r3, [r1, #7]
 8000228:	2008      	movs	r0, #8
 800022a:	4770      	bx	lr

0800022c <std_msgs::Time::deserialize(unsigned char*)>:
 800022c:	780b      	ldrb	r3, [r1, #0]
 800022e:	6043      	str	r3, [r0, #4]
 8000230:	784a      	ldrb	r2, [r1, #1]
 8000232:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8000236:	6043      	str	r3, [r0, #4]
 8000238:	788a      	ldrb	r2, [r1, #2]
 800023a:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800023e:	6043      	str	r3, [r0, #4]
 8000240:	78ca      	ldrb	r2, [r1, #3]
 8000242:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 8000246:	6043      	str	r3, [r0, #4]
 8000248:	790b      	ldrb	r3, [r1, #4]
 800024a:	6083      	str	r3, [r0, #8]
 800024c:	794a      	ldrb	r2, [r1, #5]
 800024e:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8000252:	6083      	str	r3, [r0, #8]
 8000254:	798a      	ldrb	r2, [r1, #6]
 8000256:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800025a:	6083      	str	r3, [r0, #8]
 800025c:	79ca      	ldrb	r2, [r1, #7]
 800025e:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 8000262:	6083      	str	r3, [r0, #8]
 8000264:	2008      	movs	r0, #8
 8000266:	4770      	bx	lr

08000268 <std_msgs::Time::getType()>:
 8000268:	4800      	ldr	r0, [pc, #0]	; (800026c <std_msgs::Time::getType()+0x4>)
 800026a:	4770      	bx	lr
 800026c:	08006d1b 	.word	0x08006d1b

08000270 <std_msgs::Time::getMD5()>:
 8000270:	4800      	ldr	r0, [pc, #0]	; (8000274 <std_msgs::Time::getMD5()+0x4>)
 8000272:	4770      	bx	lr
 8000274:	08006cfa 	.word	0x08006cfa

08000278 <rosserial_msgs::TopicInfo::getType()>:
 8000278:	4800      	ldr	r0, [pc, #0]	; (800027c <rosserial_msgs::TopicInfo::getType()+0x4>)
 800027a:	4770      	bx	lr
 800027c:	08006bd7 	.word	0x08006bd7

08000280 <rosserial_msgs::TopicInfo::getMD5()>:
 8000280:	4800      	ldr	r0, [pc, #0]	; (8000284 <rosserial_msgs::TopicInfo::getMD5()+0x4>)
 8000282:	4770      	bx	lr
 8000284:	08006bb6 	.word	0x08006bb6

08000288 <rosserial_msgs::Log::getType()>:
 8000288:	4800      	ldr	r0, [pc, #0]	; (800028c <rosserial_msgs::Log::getType()+0x4>)
 800028a:	4770      	bx	lr
 800028c:	08006ba3 	.word	0x08006ba3

08000290 <rosserial_msgs::Log::getMD5()>:
 8000290:	4800      	ldr	r0, [pc, #0]	; (8000294 <rosserial_msgs::Log::getMD5()+0x4>)
 8000292:	4770      	bx	lr
 8000294:	08006b82 	.word	0x08006b82

08000298 <rosserial_msgs::RequestParamResponse::getType()>:
 8000298:	4800      	ldr	r0, [pc, #0]	; (800029c <rosserial_msgs::RequestParamResponse::getType()+0x4>)
 800029a:	4770      	bx	lr
 800029c:	08006bf0 	.word	0x08006bf0

080002a0 <rosserial_msgs::RequestParamResponse::getMD5()>:
 80002a0:	4800      	ldr	r0, [pc, #0]	; (80002a4 <rosserial_msgs::RequestParamResponse::getMD5()+0x4>)
 80002a2:	4770      	bx	lr
 80002a4:	08006b61 	.word	0x08006b61

080002a8 <std_msgs::Empty::serialize(unsigned char*) const>:
 80002a8:	2000      	movs	r0, #0
 80002aa:	4770      	bx	lr

080002ac <std_msgs::Empty::deserialize(unsigned char*)>:
 80002ac:	2000      	movs	r0, #0
 80002ae:	4770      	bx	lr

080002b0 <std_msgs::Empty::getType()>:
 80002b0:	4800      	ldr	r0, [pc, #0]	; (80002b4 <std_msgs::Empty::getType()+0x4>)
 80002b2:	4770      	bx	lr
 80002b4:	08006d4a 	.word	0x08006d4a

080002b8 <std_msgs::Empty::getMD5()>:
 80002b8:	4800      	ldr	r0, [pc, #0]	; (80002bc <std_msgs::Empty::getMD5()+0x4>)
 80002ba:	4770      	bx	lr
 80002bc:	08006d29 	.word	0x08006d29

080002c0 <std_msgs::Float32::serialize(unsigned char*) const>:
 80002c0:	6843      	ldr	r3, [r0, #4]
 80002c2:	700b      	strb	r3, [r1, #0]
 80002c4:	0a1a      	lsrs	r2, r3, #8
 80002c6:	704a      	strb	r2, [r1, #1]
 80002c8:	0c1a      	lsrs	r2, r3, #16
 80002ca:	0e1b      	lsrs	r3, r3, #24
 80002cc:	708a      	strb	r2, [r1, #2]
 80002ce:	70cb      	strb	r3, [r1, #3]
 80002d0:	2004      	movs	r0, #4
 80002d2:	4770      	bx	lr

080002d4 <std_msgs::Float32::deserialize(unsigned char*)>:
 80002d4:	680b      	ldr	r3, [r1, #0]
 80002d6:	6043      	str	r3, [r0, #4]
 80002d8:	2004      	movs	r0, #4
 80002da:	4770      	bx	lr

080002dc <std_msgs::Float32::getType()>:
 80002dc:	4800      	ldr	r0, [pc, #0]	; (80002e0 <std_msgs::Float32::getType()+0x4>)
 80002de:	4770      	bx	lr
 80002e0:	08006d7a 	.word	0x08006d7a

080002e4 <std_msgs::Float32::getMD5()>:
 80002e4:	4800      	ldr	r0, [pc, #0]	; (80002e8 <std_msgs::Float32::getMD5()+0x4>)
 80002e6:	4770      	bx	lr
 80002e8:	08006d59 	.word	0x08006d59

080002ec <std_msgs::MultiArrayDimension::getType()>:
 80002ec:	4800      	ldr	r0, [pc, #0]	; (80002f0 <std_msgs::MultiArrayDimension::getType()+0x4>)
 80002ee:	4770      	bx	lr
 80002f0:	08006cdd 	.word	0x08006cdd

080002f4 <std_msgs::MultiArrayDimension::getMD5()>:
 80002f4:	4800      	ldr	r0, [pc, #0]	; (80002f8 <std_msgs::MultiArrayDimension::getMD5()+0x4>)
 80002f6:	4770      	bx	lr
 80002f8:	08006cbc 	.word	0x08006cbc

080002fc <std_msgs::MultiArrayLayout::serialize(unsigned char*) const>:
 80002fc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80002fe:	6843      	ldr	r3, [r0, #4]
 8000300:	700b      	strb	r3, [r1, #0]
 8000302:	6843      	ldr	r3, [r0, #4]
 8000304:	0a1b      	lsrs	r3, r3, #8
 8000306:	704b      	strb	r3, [r1, #1]
 8000308:	88c3      	ldrh	r3, [r0, #6]
 800030a:	708b      	strb	r3, [r1, #2]
 800030c:	79c3      	ldrb	r3, [r0, #7]
 800030e:	70cb      	strb	r3, [r1, #3]
 8000310:	4604      	mov	r4, r0
 8000312:	460d      	mov	r5, r1
 8000314:	2700      	movs	r7, #0
 8000316:	2604      	movs	r6, #4
 8000318:	6863      	ldr	r3, [r4, #4]
 800031a:	429f      	cmp	r7, r3
 800031c:	eb05 0106 	add.w	r1, r5, r6
 8000320:	d208      	bcs.n	8000334 <std_msgs::MultiArrayLayout::serialize(unsigned char*) const+0x38>
 8000322:	013b      	lsls	r3, r7, #4
 8000324:	69a0      	ldr	r0, [r4, #24]
 8000326:	58c2      	ldr	r2, [r0, r3]
 8000328:	4418      	add	r0, r3
 800032a:	6812      	ldr	r2, [r2, #0]
 800032c:	4790      	blx	r2
 800032e:	3701      	adds	r7, #1
 8000330:	4406      	add	r6, r0
 8000332:	e7f1      	b.n	8000318 <std_msgs::MultiArrayLayout::serialize(unsigned char*) const+0x1c>
 8000334:	69e3      	ldr	r3, [r4, #28]
 8000336:	55ab      	strb	r3, [r5, r6]
 8000338:	69e3      	ldr	r3, [r4, #28]
 800033a:	0a1b      	lsrs	r3, r3, #8
 800033c:	704b      	strb	r3, [r1, #1]
 800033e:	8be3      	ldrh	r3, [r4, #30]
 8000340:	708b      	strb	r3, [r1, #2]
 8000342:	7fe3      	ldrb	r3, [r4, #31]
 8000344:	70cb      	strb	r3, [r1, #3]
 8000346:	1d30      	adds	r0, r6, #4
 8000348:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0800034c <std_msgs::MultiArrayLayout::getType()>:
 800034c:	4800      	ldr	r0, [pc, #0]	; (8000350 <std_msgs::MultiArrayLayout::getType()+0x4>)
 800034e:	4770      	bx	lr
 8000350:	08006c66 	.word	0x08006c66

08000354 <std_msgs::MultiArrayLayout::getMD5()>:
 8000354:	4800      	ldr	r0, [pc, #0]	; (8000358 <std_msgs::MultiArrayLayout::getMD5()+0x4>)
 8000356:	4770      	bx	lr
 8000358:	08006c45 	.word	0x08006c45

0800035c <std_msgs::Float32MultiArray::serialize(unsigned char*) const>:
 800035c:	b538      	push	{r3, r4, r5, lr}
 800035e:	4604      	mov	r4, r0
 8000360:	3004      	adds	r0, #4
 8000362:	460d      	mov	r5, r1
 8000364:	f7ff ffca 	bl	80002fc <std_msgs::MultiArrayLayout::serialize(unsigned char*) const>
 8000368:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800036a:	542b      	strb	r3, [r5, r0]
 800036c:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800036e:	182b      	adds	r3, r5, r0
 8000370:	0a12      	lsrs	r2, r2, #8
 8000372:	705a      	strb	r2, [r3, #1]
 8000374:	8ce2      	ldrh	r2, [r4, #38]	; 0x26
 8000376:	709a      	strb	r2, [r3, #2]
 8000378:	f894 2027 	ldrb.w	r2, [r4, #39]	; 0x27
 800037c:	70da      	strb	r2, [r3, #3]
 800037e:	3004      	adds	r0, #4
 8000380:	182b      	adds	r3, r5, r0
 8000382:	2100      	movs	r1, #0
 8000384:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8000386:	4291      	cmp	r1, r2
 8000388:	eba3 0005 	sub.w	r0, r3, r5
 800038c:	f103 0304 	add.w	r3, r3, #4
 8000390:	d20f      	bcs.n	80003b2 <std_msgs::Float32MultiArray::serialize(unsigned char*) const+0x56>
 8000392:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8000394:	f852 2021 	ldr.w	r2, [r2, r1, lsl #2]
 8000398:	f803 2c04 	strb.w	r2, [r3, #-4]
 800039c:	0a10      	lsrs	r0, r2, #8
 800039e:	f803 0c03 	strb.w	r0, [r3, #-3]
 80003a2:	0c10      	lsrs	r0, r2, #16
 80003a4:	0e12      	lsrs	r2, r2, #24
 80003a6:	f803 0c02 	strb.w	r0, [r3, #-2]
 80003aa:	f803 2c01 	strb.w	r2, [r3, #-1]
 80003ae:	3101      	adds	r1, #1
 80003b0:	e7e8      	b.n	8000384 <std_msgs::Float32MultiArray::serialize(unsigned char*) const+0x28>
 80003b2:	bd38      	pop	{r3, r4, r5, pc}

080003b4 <std_msgs::Float32MultiArray::getType()>:
 80003b4:	4800      	ldr	r0, [pc, #0]	; (80003b8 <std_msgs::Float32MultiArray::getType()+0x4>)
 80003b6:	4770      	bx	lr
 80003b8:	08006ca1 	.word	0x08006ca1

080003bc <std_msgs::Float32MultiArray::getMD5()>:
 80003bc:	4800      	ldr	r0, [pc, #0]	; (80003c0 <std_msgs::Float32MultiArray::getMD5()+0x4>)
 80003be:	4770      	bx	lr
 80003c0:	08006c80 	.word	0x08006c80

080003c4 <geometry_msgs::Vector3::serialize(unsigned char*) const>:
 80003c4:	6882      	ldr	r2, [r0, #8]
 80003c6:	68c3      	ldr	r3, [r0, #12]
 80003c8:	700a      	strb	r2, [r1, #0]
 80003ca:	b510      	push	{r4, lr}
 80003cc:	0a14      	lsrs	r4, r2, #8
 80003ce:	704c      	strb	r4, [r1, #1]
 80003d0:	0c14      	lsrs	r4, r2, #16
 80003d2:	0e12      	lsrs	r2, r2, #24
 80003d4:	70ca      	strb	r2, [r1, #3]
 80003d6:	0a1a      	lsrs	r2, r3, #8
 80003d8:	710b      	strb	r3, [r1, #4]
 80003da:	714a      	strb	r2, [r1, #5]
 80003dc:	0c1a      	lsrs	r2, r3, #16
 80003de:	0e1b      	lsrs	r3, r3, #24
 80003e0:	708c      	strb	r4, [r1, #2]
 80003e2:	718a      	strb	r2, [r1, #6]
 80003e4:	71cb      	strb	r3, [r1, #7]
 80003e6:	6902      	ldr	r2, [r0, #16]
 80003e8:	6943      	ldr	r3, [r0, #20]
 80003ea:	720a      	strb	r2, [r1, #8]
 80003ec:	0a14      	lsrs	r4, r2, #8
 80003ee:	724c      	strb	r4, [r1, #9]
 80003f0:	0c14      	lsrs	r4, r2, #16
 80003f2:	0e12      	lsrs	r2, r2, #24
 80003f4:	72ca      	strb	r2, [r1, #11]
 80003f6:	0a1a      	lsrs	r2, r3, #8
 80003f8:	730b      	strb	r3, [r1, #12]
 80003fa:	734a      	strb	r2, [r1, #13]
 80003fc:	0c1a      	lsrs	r2, r3, #16
 80003fe:	0e1b      	lsrs	r3, r3, #24
 8000400:	728c      	strb	r4, [r1, #10]
 8000402:	738a      	strb	r2, [r1, #14]
 8000404:	73cb      	strb	r3, [r1, #15]
 8000406:	6982      	ldr	r2, [r0, #24]
 8000408:	69c3      	ldr	r3, [r0, #28]
 800040a:	740a      	strb	r2, [r1, #16]
 800040c:	0a10      	lsrs	r0, r2, #8
 800040e:	7448      	strb	r0, [r1, #17]
 8000410:	0c10      	lsrs	r0, r2, #16
 8000412:	0e12      	lsrs	r2, r2, #24
 8000414:	74ca      	strb	r2, [r1, #19]
 8000416:	0a1a      	lsrs	r2, r3, #8
 8000418:	750b      	strb	r3, [r1, #20]
 800041a:	754a      	strb	r2, [r1, #21]
 800041c:	0c1a      	lsrs	r2, r3, #16
 800041e:	0e1b      	lsrs	r3, r3, #24
 8000420:	7488      	strb	r0, [r1, #18]
 8000422:	758a      	strb	r2, [r1, #22]
 8000424:	75cb      	strb	r3, [r1, #23]
 8000426:	2018      	movs	r0, #24
 8000428:	bd10      	pop	{r4, pc}

0800042a <geometry_msgs::Vector3::deserialize(unsigned char*)>:
 800042a:	680a      	ldr	r2, [r1, #0]
 800042c:	684b      	ldr	r3, [r1, #4]
 800042e:	e9c0 2302 	strd	r2, r3, [r0, #8]
 8000432:	688a      	ldr	r2, [r1, #8]
 8000434:	68cb      	ldr	r3, [r1, #12]
 8000436:	e9c0 2304 	strd	r2, r3, [r0, #16]
 800043a:	690a      	ldr	r2, [r1, #16]
 800043c:	694b      	ldr	r3, [r1, #20]
 800043e:	e9c0 2306 	strd	r2, r3, [r0, #24]
 8000442:	2018      	movs	r0, #24
 8000444:	4770      	bx	lr
	...

08000448 <geometry_msgs::Vector3::getType()>:
 8000448:	4800      	ldr	r0, [pc, #0]	; (800044c <geometry_msgs::Vector3::getType()+0x4>)
 800044a:	4770      	bx	lr
 800044c:	08006b4b 	.word	0x08006b4b

08000450 <geometry_msgs::Vector3::getMD5()>:
 8000450:	4800      	ldr	r0, [pc, #0]	; (8000454 <geometry_msgs::Vector3::getMD5()+0x4>)
 8000452:	4770      	bx	lr
 8000454:	08006b2a 	.word	0x08006b2a

08000458 <stopMotor1(std_msgs::Empty const&)>:
 8000458:	4b01      	ldr	r3, [pc, #4]	; (8000460 <stopMotor1(std_msgs::Empty const&)+0x8>)
 800045a:	2200      	movs	r2, #0
 800045c:	601a      	str	r2, [r3, #0]
 800045e:	4770      	bx	lr
 8000460:	200003b0 	.word	0x200003b0

08000464 <stopMotor2(std_msgs::Empty const&)>:
 8000464:	4b01      	ldr	r3, [pc, #4]	; (800046c <stopMotor2(std_msgs::Empty const&)+0x8>)
 8000466:	2200      	movs	r2, #0
 8000468:	601a      	str	r2, [r3, #0]
 800046a:	4770      	bx	lr
 800046c:	20000474 	.word	0x20000474

08000470 <setAngleMotor1(std_msgs::Float32 const&)>:
 8000470:	4b01      	ldr	r3, [pc, #4]	; (8000478 <setAngleMotor1(std_msgs::Float32 const&)+0x8>)
 8000472:	6842      	ldr	r2, [r0, #4]
 8000474:	601a      	str	r2, [r3, #0]
 8000476:	4770      	bx	lr
 8000478:	200003b0 	.word	0x200003b0

0800047c <setAngleMotor2(std_msgs::Float32 const&)>:
 800047c:	4b01      	ldr	r3, [pc, #4]	; (8000484 <setAngleMotor2(std_msgs::Float32 const&)+0x8>)
 800047e:	6842      	ldr	r2, [r0, #4]
 8000480:	601a      	str	r2, [r3, #0]
 8000482:	4770      	bx	lr
 8000484:	20000474 	.word	0x20000474

08000488 <setMotor1PID(geometry_msgs::Vector3 const&)>:
 8000488:	4770      	bx	lr

0800048a <setMotor2PID(geometry_msgs::Vector3 const&)>:
 800048a:	4770      	bx	lr

0800048c <void mbed::Callback<void ()>::function_call<void (*)()>(void const*)>:
 800048c:	6803      	ldr	r3, [r0, #0]
 800048e:	4718      	bx	r3

08000490 <void mbed::Callback<void ()>::function_move<void (*)()>(void*, void const*)>:
 8000490:	b108      	cbz	r0, 8000496 <void mbed::Callback<void ()>::function_move<void (*)()>(void*, void const*)+0x6>
 8000492:	680b      	ldr	r3, [r1, #0]
 8000494:	6003      	str	r3, [r0, #0]
 8000496:	4770      	bx	lr

08000498 <void mbed::Callback<void ()>::function_dtor<void (*)()>(void*)>:
 8000498:	4770      	bx	lr

0800049a <ros::Subscriber<geometry_msgs::Vector3, void>::callback(unsigned char*)>:
 800049a:	b570      	push	{r4, r5, r6, lr}
 800049c:	4605      	mov	r5, r0
 800049e:	f100 0410 	add.w	r4, r0, #16
 80004a2:	4620      	mov	r0, r4
 80004a4:	f7ff ffc1 	bl	800042a <geometry_msgs::Vector3::deserialize(unsigned char*)>
 80004a8:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 80004aa:	4620      	mov	r0, r4
 80004ac:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80004b0:	4718      	bx	r3

080004b2 <ros::Subscriber<geometry_msgs::Vector3, void>::getEndpointType()>:
 80004b2:	6b40      	ldr	r0, [r0, #52]	; 0x34
 80004b4:	4770      	bx	lr
	...

080004b8 <ros::Subscriber<geometry_msgs::Vector3, void>::getMsgType()>:
 80004b8:	4800      	ldr	r0, [pc, #0]	; (80004bc <ros::Subscriber<geometry_msgs::Vector3, void>::getMsgType()+0x4>)
 80004ba:	4770      	bx	lr
 80004bc:	08006b4b 	.word	0x08006b4b

080004c0 <ros::Subscriber<geometry_msgs::Vector3, void>::getMsgMD5()>:
 80004c0:	4800      	ldr	r0, [pc, #0]	; (80004c4 <ros::Subscriber<geometry_msgs::Vector3, void>::getMsgMD5()+0x4>)
 80004c2:	4770      	bx	lr
 80004c4:	08006b2a 	.word	0x08006b2a

080004c8 <ros::Subscriber<std_msgs::Float32, void>::callback(unsigned char*)>:
 80004c8:	b570      	push	{r4, r5, r6, lr}
 80004ca:	4605      	mov	r5, r0
 80004cc:	f100 040c 	add.w	r4, r0, #12
 80004d0:	4620      	mov	r0, r4
 80004d2:	f7ff feff 	bl	80002d4 <std_msgs::Float32::deserialize(unsigned char*)>
 80004d6:	696b      	ldr	r3, [r5, #20]
 80004d8:	4620      	mov	r0, r4
 80004da:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80004de:	4718      	bx	r3

080004e0 <ros::Subscriber<std_msgs::Float32, void>::getEndpointType()>:
 80004e0:	6980      	ldr	r0, [r0, #24]
 80004e2:	4770      	bx	lr

080004e4 <ros::Subscriber<std_msgs::Float32, void>::getMsgType()>:
 80004e4:	4800      	ldr	r0, [pc, #0]	; (80004e8 <ros::Subscriber<std_msgs::Float32, void>::getMsgType()+0x4>)
 80004e6:	4770      	bx	lr
 80004e8:	08006d7a 	.word	0x08006d7a

080004ec <ros::Subscriber<std_msgs::Float32, void>::getMsgMD5()>:
 80004ec:	4800      	ldr	r0, [pc, #0]	; (80004f0 <ros::Subscriber<std_msgs::Float32, void>::getMsgMD5()+0x4>)
 80004ee:	4770      	bx	lr
 80004f0:	08006d59 	.word	0x08006d59

080004f4 <ros::Subscriber<std_msgs::Empty, void>::callback(unsigned char*)>:
 80004f4:	6903      	ldr	r3, [r0, #16]
 80004f6:	300c      	adds	r0, #12
 80004f8:	4718      	bx	r3

080004fa <ros::Subscriber<std_msgs::Empty, void>::getEndpointType()>:
 80004fa:	6940      	ldr	r0, [r0, #20]
 80004fc:	4770      	bx	lr
	...

08000500 <ros::Subscriber<std_msgs::Empty, void>::getMsgType()>:
 8000500:	4800      	ldr	r0, [pc, #0]	; (8000504 <ros::Subscriber<std_msgs::Empty, void>::getMsgType()+0x4>)
 8000502:	4770      	bx	lr
 8000504:	08006d4a 	.word	0x08006d4a

08000508 <ros::Subscriber<std_msgs::Empty, void>::getMsgMD5()>:
 8000508:	4800      	ldr	r0, [pc, #0]	; (800050c <ros::Subscriber<std_msgs::Empty, void>::getMsgMD5()+0x4>)
 800050a:	4770      	bx	lr
 800050c:	08006d29 	.word	0x08006d29

08000510 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::connected()>:
 8000510:	f890 05e8 	ldrb.w	r0, [r0, #1512]	; 0x5e8
 8000514:	4770      	bx	lr
	...

08000518 <getMotorInfo()>:
 8000518:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800051c:	4825      	ldr	r0, [pc, #148]	; (80005b4 <getMotorInfo()+0x9c>)
 800051e:	4c26      	ldr	r4, [pc, #152]	; (80005b8 <getMotorInfo()+0xa0>)
 8000520:	4d26      	ldr	r5, [pc, #152]	; (80005bc <getMotorInfo()+0xa4>)
 8000522:	4f27      	ldr	r7, [pc, #156]	; (80005c0 <getMotorInfo()+0xa8>)
 8000524:	f004 fe9a 	bl	800525c <mbed::Timer::read()>
 8000528:	6020      	str	r0, [r4, #0]
 800052a:	4628      	mov	r0, r5
 800052c:	f001 f8c1 	bl	80016b2 <Encoder::getEncTicks()>
 8000530:	4606      	mov	r6, r0
 8000532:	4628      	mov	r0, r5
 8000534:	4d23      	ldr	r5, [pc, #140]	; (80005c4 <getMotorInfo()+0xac>)
 8000536:	f001 f8bf 	bl	80016b8 <Encoder::getCurAngle()>
 800053a:	edd5 6a00 	vldr	s13, [r5]
 800053e:	4922      	ldr	r1, [pc, #136]	; (80005c8 <getMotorInfo()+0xb0>)
 8000540:	edd4 5a00 	vldr	s11, [r4]
 8000544:	edd1 7a00 	vldr	s15, [r1]
 8000548:	4b20      	ldr	r3, [pc, #128]	; (80005cc <getMotorInfo()+0xb4>)
 800054a:	4a21      	ldr	r2, [pc, #132]	; (80005d0 <getMotorInfo()+0xb8>)
 800054c:	f8df e08c 	ldr.w	lr, [pc, #140]	; 80005dc <getMotorInfo()+0xc4>
 8000550:	ee07 6a10 	vmov	s14, r6
 8000554:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8000558:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800055c:	ee75 7ae7 	vsub.f32	s15, s11, s15
 8000560:	ee37 7a66 	vsub.f32	s14, s14, s13
 8000564:	ee06 0a10 	vmov	s12, r0
 8000568:	eec7 6a27 	vdiv.f32	s13, s14, s15
 800056c:	4819      	ldr	r0, [pc, #100]	; (80005d4 <getMotorInfo()+0xbc>)
 800056e:	ed90 7a00 	vldr	s14, [r0]
 8000572:	edc3 6a00 	vstr	s13, [r3]
 8000576:	ee36 7a47 	vsub.f32	s14, s12, s14
 800057a:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
 800057c:	edce 7a00 	vstr	s15, [lr]
 8000580:	eec7 6a27 	vdiv.f32	s13, s14, s15
 8000584:	edc7 6a00 	vstr	s13, [r7]
 8000588:	edc3 5a00 	vstr	s11, [r3]
 800058c:	f8de e000 	ldr.w	lr, [lr]
 8000590:	683f      	ldr	r7, [r7, #0]
 8000592:	609f      	str	r7, [r3, #8]
 8000594:	f8c3 e004 	str.w	lr, [r3, #4]
 8000598:	6823      	ldr	r3, [r4, #0]
 800059a:	600b      	str	r3, [r1, #0]
 800059c:	4b0e      	ldr	r3, [pc, #56]	; (80005d8 <getMotorInfo()+0xc0>)
 800059e:	ed80 6a00 	vstr	s12, [r0]
 80005a2:	68d8      	ldr	r0, [r3, #12]
 80005a4:	602e      	str	r6, [r5, #0]
 80005a6:	6801      	ldr	r1, [r0, #0]
 80005a8:	680c      	ldr	r4, [r1, #0]
 80005aa:	6899      	ldr	r1, [r3, #8]
 80005ac:	4623      	mov	r3, r4
 80005ae:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80005b2:	4718      	bx	r3
 80005b4:	20000ca0 	.word	0x20000ca0
 80005b8:	20000c98 	.word	0x20000c98
 80005bc:	200002f0 	.word	0x200002f0
 80005c0:	20000c48 	.word	0x20000c48
 80005c4:	20000b9c 	.word	0x20000b9c
 80005c8:	20000c9c 	.word	0x20000c9c
 80005cc:	20000c4c 	.word	0x20000c4c
 80005d0:	200002c0 	.word	0x200002c0
 80005d4:	20000b98 	.word	0x20000b98
 80005d8:	20000560 	.word	0x20000560
 80005dc:	200002bc 	.word	0x200002bc

080005e0 <stopCalculation(std_msgs::Empty const&)>:
 80005e0:	b508      	push	{r3, lr}
 80005e2:	4b0b      	ldr	r3, [pc, #44]	; (8000610 <stopCalculation(std_msgs::Empty const&)+0x30>)
 80005e4:	68da      	ldr	r2, [r3, #12]
 80005e6:	681b      	ldr	r3, [r3, #0]
 80005e8:	041b      	lsls	r3, r3, #16
 80005ea:	6013      	str	r3, [r2, #0]
 80005ec:	4b09      	ldr	r3, [pc, #36]	; (8000614 <stopCalculation(std_msgs::Empty const&)+0x34>)
 80005ee:	68da      	ldr	r2, [r3, #12]
 80005f0:	681b      	ldr	r3, [r3, #0]
 80005f2:	041b      	lsls	r3, r3, #16
 80005f4:	6013      	str	r3, [r2, #0]
 80005f6:	f001 fc39 	bl	8001e6c <core_util_critical_section_enter>
 80005fa:	4807      	ldr	r0, [pc, #28]	; (8000618 <stopCalculation(std_msgs::Empty const&)+0x38>)
 80005fc:	2100      	movs	r1, #0
 80005fe:	f003 fa21 	bl	8003a44 <pwmout_write>
 8000602:	f001 fc49 	bl	8001e98 <core_util_critical_section_exit>
 8000606:	4805      	ldr	r0, [pc, #20]	; (800061c <stopCalculation(std_msgs::Empty const&)+0x3c>)
 8000608:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800060c:	f004 be08 	b.w	8005220 <mbed::Timer::stop()>
 8000610:	2000026c 	.word	0x2000026c
 8000614:	20000288 	.word	0x20000288
 8000618:	20000254 	.word	0x20000254
 800061c:	20000ca0 	.word	0x20000ca0

08000620 <startCalculation(std_msgs::Empty const&)>:
 8000620:	b508      	push	{r3, lr}
 8000622:	4b0b      	ldr	r3, [pc, #44]	; (8000650 <startCalculation(std_msgs::Empty const&)+0x30>)
 8000624:	689a      	ldr	r2, [r3, #8]
 8000626:	681b      	ldr	r3, [r3, #0]
 8000628:	6013      	str	r3, [r2, #0]
 800062a:	4b0a      	ldr	r3, [pc, #40]	; (8000654 <startCalculation(std_msgs::Empty const&)+0x34>)
 800062c:	68da      	ldr	r2, [r3, #12]
 800062e:	681b      	ldr	r3, [r3, #0]
 8000630:	041b      	lsls	r3, r3, #16
 8000632:	6013      	str	r3, [r2, #0]
 8000634:	f001 fc1a 	bl	8001e6c <core_util_critical_section_enter>
 8000638:	4807      	ldr	r0, [pc, #28]	; (8000658 <startCalculation(std_msgs::Empty const&)+0x38>)
 800063a:	f04f 517e 	mov.w	r1, #1065353216	; 0x3f800000
 800063e:	f003 fa01 	bl	8003a44 <pwmout_write>
 8000642:	f001 fc29 	bl	8001e98 <core_util_critical_section_exit>
 8000646:	4805      	ldr	r0, [pc, #20]	; (800065c <startCalculation(std_msgs::Empty const&)+0x3c>)
 8000648:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800064c:	f004 be1e 	b.w	800528c <mbed::Timer::reset()>
 8000650:	2000026c 	.word	0x2000026c
 8000654:	20000288 	.word	0x20000288
 8000658:	20000254 	.word	0x20000254
 800065c:	20000ca0 	.word	0x20000ca0

08000660 <mbed::Callback<void ()>::~Callback()>:
 8000660:	68c3      	ldr	r3, [r0, #12]
 8000662:	b510      	push	{r4, lr}
 8000664:	4604      	mov	r4, r0
 8000666:	b10b      	cbz	r3, 800066c <mbed::Callback<void ()>::~Callback()+0xc>
 8000668:	689b      	ldr	r3, [r3, #8]
 800066a:	4798      	blx	r3
 800066c:	4620      	mov	r0, r4
 800066e:	bd10      	pop	{r4, pc}

08000670 <mbed::Ticker::~Ticker()>:
 8000670:	b538      	push	{r3, r4, r5, lr}
 8000672:	4605      	mov	r5, r0
 8000674:	4b06      	ldr	r3, [pc, #24]	; (8000690 <mbed::Ticker::~Ticker()+0x20>)
 8000676:	f845 3b18 	str.w	r3, [r5], #24
 800067a:	4604      	mov	r4, r0
 800067c:	f004 fd90 	bl	80051a0 <mbed::Ticker::detach()>
 8000680:	4628      	mov	r0, r5
 8000682:	f7ff ffed 	bl	8000660 <mbed::Callback<void ()>::~Callback()>
 8000686:	4620      	mov	r0, r4
 8000688:	f005 f80e 	bl	80056a8 <mbed::TimerEvent::~TimerEvent()>
 800068c:	4620      	mov	r0, r4
 800068e:	bd38      	pop	{r3, r4, r5, pc}
 8000690:	08007348 	.word	0x08007348

08000694 <mbed::Ticker::~Ticker()>:
 8000694:	b510      	push	{r4, lr}
 8000696:	4604      	mov	r4, r0
 8000698:	f7ff ffea 	bl	8000670 <mbed::Ticker::~Ticker()>
 800069c:	4620      	mov	r0, r4
 800069e:	f005 f97f 	bl	80059a0 <operator delete(void*)>
 80006a2:	4620      	mov	r0, r4
 80006a4:	bd10      	pop	{r4, pc}

080006a6 <mbed::Callback<void ()>::Callback(mbed::Callback<void ()> const&)>:
 80006a6:	b538      	push	{r3, r4, r5, lr}
 80006a8:	68cb      	ldr	r3, [r1, #12]
 80006aa:	4604      	mov	r4, r0
 80006ac:	460d      	mov	r5, r1
 80006ae:	b10b      	cbz	r3, 80006b4 <mbed::Callback<void ()>::Callback(mbed::Callback<void ()> const&)+0xe>
 80006b0:	685b      	ldr	r3, [r3, #4]
 80006b2:	4798      	blx	r3
 80006b4:	68eb      	ldr	r3, [r5, #12]
 80006b6:	60e3      	str	r3, [r4, #12]
 80006b8:	4620      	mov	r0, r4
 80006ba:	bd38      	pop	{r3, r4, r5, pc}

080006bc <void ros::Msg::varToArr<unsigned char*, unsigned long>(unsigned char*, unsigned long)>:
 80006bc:	3801      	subs	r0, #1
 80006be:	2300      	movs	r3, #0
 80006c0:	fa21 f203 	lsr.w	r2, r1, r3
 80006c4:	3308      	adds	r3, #8
 80006c6:	2b20      	cmp	r3, #32
 80006c8:	f800 2f01 	strb.w	r2, [r0, #1]!
 80006cc:	d1f8      	bne.n	80006c0 <void ros::Msg::varToArr<unsigned char*, unsigned long>(unsigned char*, unsigned long)+0x4>
 80006ce:	4770      	bx	lr

080006d0 <std_msgs::MultiArrayDimension::serialize(unsigned char*) const>:
 80006d0:	b570      	push	{r4, r5, r6, lr}
 80006d2:	4605      	mov	r5, r0
 80006d4:	6840      	ldr	r0, [r0, #4]
 80006d6:	460c      	mov	r4, r1
 80006d8:	f005 ff63 	bl	80065a2 <strlen>
 80006dc:	4606      	mov	r6, r0
 80006de:	4601      	mov	r1, r0
 80006e0:	4620      	mov	r0, r4
 80006e2:	f7ff ffeb 	bl	80006bc <void ros::Msg::varToArr<unsigned char*, unsigned long>(unsigned char*, unsigned long)>
 80006e6:	6869      	ldr	r1, [r5, #4]
 80006e8:	4632      	mov	r2, r6
 80006ea:	1d20      	adds	r0, r4, #4
 80006ec:	f005 fc68 	bl	8005fc0 <memcpy>
 80006f0:	19a1      	adds	r1, r4, r6
 80006f2:	68ab      	ldr	r3, [r5, #8]
 80006f4:	710b      	strb	r3, [r1, #4]
 80006f6:	68ab      	ldr	r3, [r5, #8]
 80006f8:	0a1b      	lsrs	r3, r3, #8
 80006fa:	714b      	strb	r3, [r1, #5]
 80006fc:	896b      	ldrh	r3, [r5, #10]
 80006fe:	718b      	strb	r3, [r1, #6]
 8000700:	7aeb      	ldrb	r3, [r5, #11]
 8000702:	71cb      	strb	r3, [r1, #7]
 8000704:	68eb      	ldr	r3, [r5, #12]
 8000706:	720b      	strb	r3, [r1, #8]
 8000708:	68eb      	ldr	r3, [r5, #12]
 800070a:	0a1b      	lsrs	r3, r3, #8
 800070c:	724b      	strb	r3, [r1, #9]
 800070e:	89eb      	ldrh	r3, [r5, #14]
 8000710:	728b      	strb	r3, [r1, #10]
 8000712:	7beb      	ldrb	r3, [r5, #15]
 8000714:	72cb      	strb	r3, [r1, #11]
 8000716:	f106 000c 	add.w	r0, r6, #12
 800071a:	bd70      	pop	{r4, r5, r6, pc}

0800071c <rosserial_msgs::RequestParamResponse::serialize(unsigned char*) const>:
 800071c:	6843      	ldr	r3, [r0, #4]
 800071e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000722:	700b      	strb	r3, [r1, #0]
 8000724:	6843      	ldr	r3, [r0, #4]
 8000726:	0a1b      	lsrs	r3, r3, #8
 8000728:	704b      	strb	r3, [r1, #1]
 800072a:	88c3      	ldrh	r3, [r0, #6]
 800072c:	708b      	strb	r3, [r1, #2]
 800072e:	79c3      	ldrb	r3, [r0, #7]
 8000730:	70cb      	strb	r3, [r1, #3]
 8000732:	460d      	mov	r5, r1
 8000734:	1d0a      	adds	r2, r1, #4
 8000736:	4604      	mov	r4, r0
 8000738:	2100      	movs	r1, #0
 800073a:	6860      	ldr	r0, [r4, #4]
 800073c:	4281      	cmp	r1, r0
 800073e:	eba2 0305 	sub.w	r3, r2, r5
 8000742:	f102 0204 	add.w	r2, r2, #4
 8000746:	d20f      	bcs.n	8000768 <rosserial_msgs::RequestParamResponse::serialize(unsigned char*) const+0x4c>
 8000748:	68e3      	ldr	r3, [r4, #12]
 800074a:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 800074e:	f802 3c04 	strb.w	r3, [r2, #-4]
 8000752:	0a18      	lsrs	r0, r3, #8
 8000754:	f802 0c03 	strb.w	r0, [r2, #-3]
 8000758:	0c18      	lsrs	r0, r3, #16
 800075a:	0e1b      	lsrs	r3, r3, #24
 800075c:	f802 0c02 	strb.w	r0, [r2, #-2]
 8000760:	f802 3c01 	strb.w	r3, [r2, #-1]
 8000764:	3101      	adds	r1, #1
 8000766:	e7e8      	b.n	800073a <rosserial_msgs::RequestParamResponse::serialize(unsigned char*) const+0x1e>
 8000768:	6922      	ldr	r2, [r4, #16]
 800076a:	54ea      	strb	r2, [r5, r3]
 800076c:	6921      	ldr	r1, [r4, #16]
 800076e:	18ea      	adds	r2, r5, r3
 8000770:	0a09      	lsrs	r1, r1, #8
 8000772:	7051      	strb	r1, [r2, #1]
 8000774:	8a61      	ldrh	r1, [r4, #18]
 8000776:	7091      	strb	r1, [r2, #2]
 8000778:	7ce1      	ldrb	r1, [r4, #19]
 800077a:	70d1      	strb	r1, [r2, #3]
 800077c:	3304      	adds	r3, #4
 800077e:	442b      	add	r3, r5
 8000780:	2100      	movs	r1, #0
 8000782:	6922      	ldr	r2, [r4, #16]
 8000784:	4291      	cmp	r1, r2
 8000786:	eba3 0605 	sub.w	r6, r3, r5
 800078a:	f103 0304 	add.w	r3, r3, #4
 800078e:	d20f      	bcs.n	80007b0 <rosserial_msgs::RequestParamResponse::serialize(unsigned char*) const+0x94>
 8000790:	69a2      	ldr	r2, [r4, #24]
 8000792:	f852 2021 	ldr.w	r2, [r2, r1, lsl #2]
 8000796:	f803 2c04 	strb.w	r2, [r3, #-4]
 800079a:	0a10      	lsrs	r0, r2, #8
 800079c:	f803 0c03 	strb.w	r0, [r3, #-3]
 80007a0:	0c10      	lsrs	r0, r2, #16
 80007a2:	0e12      	lsrs	r2, r2, #24
 80007a4:	f803 0c02 	strb.w	r0, [r3, #-2]
 80007a8:	f803 2c01 	strb.w	r2, [r3, #-1]
 80007ac:	3101      	adds	r1, #1
 80007ae:	e7e8      	b.n	8000782 <rosserial_msgs::RequestParamResponse::serialize(unsigned char*) const+0x66>
 80007b0:	69e3      	ldr	r3, [r4, #28]
 80007b2:	55ab      	strb	r3, [r5, r6]
 80007b4:	69e2      	ldr	r2, [r4, #28]
 80007b6:	19ab      	adds	r3, r5, r6
 80007b8:	0a12      	lsrs	r2, r2, #8
 80007ba:	705a      	strb	r2, [r3, #1]
 80007bc:	8be2      	ldrh	r2, [r4, #30]
 80007be:	709a      	strb	r2, [r3, #2]
 80007c0:	7fe2      	ldrb	r2, [r4, #31]
 80007c2:	70da      	strb	r2, [r3, #3]
 80007c4:	3604      	adds	r6, #4
 80007c6:	2700      	movs	r7, #0
 80007c8:	69e3      	ldr	r3, [r4, #28]
 80007ca:	429f      	cmp	r7, r3
 80007cc:	d214      	bcs.n	80007f8 <rosserial_msgs::RequestParamResponse::serialize(unsigned char*) const+0xdc>
 80007ce:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80007d0:	f853 0027 	ldr.w	r0, [r3, r7, lsl #2]
 80007d4:	f005 fee5 	bl	80065a2 <strlen>
 80007d8:	4680      	mov	r8, r0
 80007da:	4601      	mov	r1, r0
 80007dc:	19a8      	adds	r0, r5, r6
 80007de:	f7ff ff6d 	bl	80006bc <void ros::Msg::varToArr<unsigned char*, unsigned long>(unsigned char*, unsigned long)>
 80007e2:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80007e4:	3604      	adds	r6, #4
 80007e6:	f853 1027 	ldr.w	r1, [r3, r7, lsl #2]
 80007ea:	19a8      	adds	r0, r5, r6
 80007ec:	4642      	mov	r2, r8
 80007ee:	f005 fbe7 	bl	8005fc0 <memcpy>
 80007f2:	4446      	add	r6, r8
 80007f4:	3701      	adds	r7, #1
 80007f6:	e7e7      	b.n	80007c8 <rosserial_msgs::RequestParamResponse::serialize(unsigned char*) const+0xac>
 80007f8:	4630      	mov	r0, r6
 80007fa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080007fe <rosserial_msgs::Log::serialize(unsigned char*) const>:
 80007fe:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000800:	460e      	mov	r6, r1
 8000802:	7903      	ldrb	r3, [r0, #4]
 8000804:	f806 3b01 	strb.w	r3, [r6], #1
 8000808:	4605      	mov	r5, r0
 800080a:	6880      	ldr	r0, [r0, #8]
 800080c:	460f      	mov	r7, r1
 800080e:	f005 fec8 	bl	80065a2 <strlen>
 8000812:	4604      	mov	r4, r0
 8000814:	4601      	mov	r1, r0
 8000816:	4630      	mov	r0, r6
 8000818:	f7ff ff50 	bl	80006bc <void ros::Msg::varToArr<unsigned char*, unsigned long>(unsigned char*, unsigned long)>
 800081c:	4622      	mov	r2, r4
 800081e:	68a9      	ldr	r1, [r5, #8]
 8000820:	1d78      	adds	r0, r7, #5
 8000822:	f005 fbcd 	bl	8005fc0 <memcpy>
 8000826:	1d60      	adds	r0, r4, #5
 8000828:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800082a <rosserial_msgs::TopicInfo::serialize(unsigned char*) const>:
 800082a:	8883      	ldrh	r3, [r0, #4]
 800082c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000830:	700b      	strb	r3, [r1, #0]
 8000832:	8883      	ldrh	r3, [r0, #4]
 8000834:	0a1b      	lsrs	r3, r3, #8
 8000836:	704b      	strb	r3, [r1, #1]
 8000838:	4605      	mov	r5, r0
 800083a:	6880      	ldr	r0, [r0, #8]
 800083c:	460c      	mov	r4, r1
 800083e:	f005 feb0 	bl	80065a2 <strlen>
 8000842:	4607      	mov	r7, r0
 8000844:	4601      	mov	r1, r0
 8000846:	1ca0      	adds	r0, r4, #2
 8000848:	f7ff ff38 	bl	80006bc <void ros::Msg::varToArr<unsigned char*, unsigned long>(unsigned char*, unsigned long)>
 800084c:	463a      	mov	r2, r7
 800084e:	68a9      	ldr	r1, [r5, #8]
 8000850:	1da0      	adds	r0, r4, #6
 8000852:	f005 fbb5 	bl	8005fc0 <memcpy>
 8000856:	68e8      	ldr	r0, [r5, #12]
 8000858:	f005 fea3 	bl	80065a2 <strlen>
 800085c:	f107 0806 	add.w	r8, r7, #6
 8000860:	4606      	mov	r6, r0
 8000862:	4601      	mov	r1, r0
 8000864:	370a      	adds	r7, #10
 8000866:	eb04 0008 	add.w	r0, r4, r8
 800086a:	f7ff ff27 	bl	80006bc <void ros::Msg::varToArr<unsigned char*, unsigned long>(unsigned char*, unsigned long)>
 800086e:	4632      	mov	r2, r6
 8000870:	68e9      	ldr	r1, [r5, #12]
 8000872:	19e0      	adds	r0, r4, r7
 8000874:	f005 fba4 	bl	8005fc0 <memcpy>
 8000878:	6928      	ldr	r0, [r5, #16]
 800087a:	f005 fe92 	bl	80065a2 <strlen>
 800087e:	443e      	add	r6, r7
 8000880:	4601      	mov	r1, r0
 8000882:	4607      	mov	r7, r0
 8000884:	19a0      	adds	r0, r4, r6
 8000886:	3604      	adds	r6, #4
 8000888:	f7ff ff18 	bl	80006bc <void ros::Msg::varToArr<unsigned char*, unsigned long>(unsigned char*, unsigned long)>
 800088c:	463a      	mov	r2, r7
 800088e:	19a0      	adds	r0, r4, r6
 8000890:	6929      	ldr	r1, [r5, #16]
 8000892:	443e      	add	r6, r7
 8000894:	f005 fb94 	bl	8005fc0 <memcpy>
 8000898:	696b      	ldr	r3, [r5, #20]
 800089a:	55a3      	strb	r3, [r4, r6]
 800089c:	4434      	add	r4, r6
 800089e:	0a1a      	lsrs	r2, r3, #8
 80008a0:	7062      	strb	r2, [r4, #1]
 80008a2:	0c1a      	lsrs	r2, r3, #16
 80008a4:	0e1b      	lsrs	r3, r3, #24
 80008a6:	70a2      	strb	r2, [r4, #2]
 80008a8:	70e3      	strb	r3, [r4, #3]
 80008aa:	1d30      	adds	r0, r6, #4
 80008ac:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080008b0 <void ros::Msg::arrToVar<unsigned long, unsigned char*>(unsigned long&, unsigned char*)>:
 80008b0:	b510      	push	{r4, lr}
 80008b2:	2300      	movs	r3, #0
 80008b4:	6003      	str	r3, [r0, #0]
 80008b6:	3901      	subs	r1, #1
 80008b8:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 80008bc:	fa02 f403 	lsl.w	r4, r2, r3
 80008c0:	6802      	ldr	r2, [r0, #0]
 80008c2:	3308      	adds	r3, #8
 80008c4:	4322      	orrs	r2, r4
 80008c6:	2b20      	cmp	r3, #32
 80008c8:	6002      	str	r2, [r0, #0]
 80008ca:	d1f5      	bne.n	80008b8 <void ros::Msg::arrToVar<unsigned long, unsigned char*>(unsigned long&, unsigned char*)+0x8>
 80008cc:	bd10      	pop	{r4, pc}

080008ce <rosserial_msgs::Log::deserialize(unsigned char*)>:
 80008ce:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80008d0:	460c      	mov	r4, r1
 80008d2:	f811 3b01 	ldrb.w	r3, [r1], #1
 80008d6:	7103      	strb	r3, [r0, #4]
 80008d8:	4605      	mov	r5, r0
 80008da:	a801      	add	r0, sp, #4
 80008dc:	f7ff ffe8 	bl	80008b0 <void ros::Msg::arrToVar<unsigned long, unsigned char*>(unsigned long&, unsigned char*)>
 80008e0:	9b01      	ldr	r3, [sp, #4]
 80008e2:	1d62      	adds	r2, r4, #5
 80008e4:	1d58      	adds	r0, r3, #5
 80008e6:	1b11      	subs	r1, r2, r4
 80008e8:	4288      	cmp	r0, r1
 80008ea:	d904      	bls.n	80008f6 <rosserial_msgs::Log::deserialize(unsigned char*)+0x28>
 80008ec:	f812 1b01 	ldrb.w	r1, [r2], #1
 80008f0:	f802 1c02 	strb.w	r1, [r2, #-2]
 80008f4:	e7f7      	b.n	80008e6 <rosserial_msgs::Log::deserialize(unsigned char*)+0x18>
 80008f6:	4423      	add	r3, r4
 80008f8:	2200      	movs	r2, #0
 80008fa:	3404      	adds	r4, #4
 80008fc:	711a      	strb	r2, [r3, #4]
 80008fe:	60ac      	str	r4, [r5, #8]
 8000900:	b003      	add	sp, #12
 8000902:	bd30      	pop	{r4, r5, pc}

08000904 <rosserial_msgs::TopicInfo::deserialize(unsigned char*)>:
 8000904:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000906:	780b      	ldrb	r3, [r1, #0]
 8000908:	8083      	strh	r3, [r0, #4]
 800090a:	784a      	ldrb	r2, [r1, #1]
 800090c:	b085      	sub	sp, #20
 800090e:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8000912:	8083      	strh	r3, [r0, #4]
 8000914:	460c      	mov	r4, r1
 8000916:	4606      	mov	r6, r0
 8000918:	3102      	adds	r1, #2
 800091a:	a801      	add	r0, sp, #4
 800091c:	f7ff ffc8 	bl	80008b0 <void ros::Msg::arrToVar<unsigned long, unsigned char*>(unsigned long&, unsigned char*)>
 8000920:	9f01      	ldr	r7, [sp, #4]
 8000922:	1da3      	adds	r3, r4, #6
 8000924:	1dbd      	adds	r5, r7, #6
 8000926:	1b1a      	subs	r2, r3, r4
 8000928:	4295      	cmp	r5, r2
 800092a:	d904      	bls.n	8000936 <rosserial_msgs::TopicInfo::deserialize(unsigned char*)+0x32>
 800092c:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000930:	f803 2c02 	strb.w	r2, [r3, #-2]
 8000934:	e7f7      	b.n	8000926 <rosserial_msgs::TopicInfo::deserialize(unsigned char*)+0x22>
 8000936:	19e3      	adds	r3, r4, r7
 8000938:	2200      	movs	r2, #0
 800093a:	715a      	strb	r2, [r3, #5]
 800093c:	1d63      	adds	r3, r4, #5
 800093e:	60b3      	str	r3, [r6, #8]
 8000940:	1961      	adds	r1, r4, r5
 8000942:	a802      	add	r0, sp, #8
 8000944:	f7ff ffb4 	bl	80008b0 <void ros::Msg::arrToVar<unsigned long, unsigned char*>(unsigned long&, unsigned char*)>
 8000948:	1d2b      	adds	r3, r5, #4
 800094a:	9d02      	ldr	r5, [sp, #8]
 800094c:	f107 020a 	add.w	r2, r7, #10
 8000950:	441d      	add	r5, r3
 8000952:	4422      	add	r2, r4
 8000954:	1b11      	subs	r1, r2, r4
 8000956:	428d      	cmp	r5, r1
 8000958:	d904      	bls.n	8000964 <rosserial_msgs::TopicInfo::deserialize(unsigned char*)+0x60>
 800095a:	f812 1b01 	ldrb.w	r1, [r2], #1
 800095e:	f802 1c02 	strb.w	r1, [r2, #-2]
 8000962:	e7f7      	b.n	8000954 <rosserial_msgs::TopicInfo::deserialize(unsigned char*)+0x50>
 8000964:	1961      	adds	r1, r4, r5
 8000966:	3b01      	subs	r3, #1
 8000968:	4423      	add	r3, r4
 800096a:	2200      	movs	r2, #0
 800096c:	f801 2c01 	strb.w	r2, [r1, #-1]
 8000970:	a803      	add	r0, sp, #12
 8000972:	60f3      	str	r3, [r6, #12]
 8000974:	f7ff ff9c 	bl	80008b0 <void ros::Msg::arrToVar<unsigned long, unsigned char*>(unsigned long&, unsigned char*)>
 8000978:	9803      	ldr	r0, [sp, #12]
 800097a:	3504      	adds	r5, #4
 800097c:	4428      	add	r0, r5
 800097e:	1963      	adds	r3, r4, r5
 8000980:	1b1a      	subs	r2, r3, r4
 8000982:	4290      	cmp	r0, r2
 8000984:	d904      	bls.n	8000990 <rosserial_msgs::TopicInfo::deserialize(unsigned char*)+0x8c>
 8000986:	f813 2b01 	ldrb.w	r2, [r3], #1
 800098a:	f803 2c02 	strb.w	r2, [r3, #-2]
 800098e:	e7f7      	b.n	8000980 <rosserial_msgs::TopicInfo::deserialize(unsigned char*)+0x7c>
 8000990:	1822      	adds	r2, r4, r0
 8000992:	3d01      	subs	r5, #1
 8000994:	2300      	movs	r3, #0
 8000996:	4425      	add	r5, r4
 8000998:	f802 3c01 	strb.w	r3, [r2, #-1]
 800099c:	6135      	str	r5, [r6, #16]
 800099e:	7893      	ldrb	r3, [r2, #2]
 80009a0:	7851      	ldrb	r1, [r2, #1]
 80009a2:	78d2      	ldrb	r2, [r2, #3]
 80009a4:	041b      	lsls	r3, r3, #16
 80009a6:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 80009aa:	5c21      	ldrb	r1, [r4, r0]
 80009ac:	430b      	orrs	r3, r1
 80009ae:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 80009b2:	3004      	adds	r0, #4
 80009b4:	6173      	str	r3, [r6, #20]
 80009b6:	b005      	add	sp, #20
 80009b8:	bdf0      	pop	{r4, r5, r6, r7, pc}

080009ba <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)>:
 80009ba:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 80009be:	6843      	ldr	r3, [r0, #4]
 80009c0:	680d      	ldr	r5, [r1, #0]
 80009c2:	429d      	cmp	r5, r3
 80009c4:	4604      	mov	r4, r0
 80009c6:	460e      	mov	r6, r1
 80009c8:	d904      	bls.n	80009d4 <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0x1a>
 80009ca:	00a9      	lsls	r1, r5, #2
 80009cc:	68c0      	ldr	r0, [r0, #12]
 80009ce:	f005 fd8d 	bl	80064ec <realloc>
 80009d2:	60e0      	str	r0, [r4, #12]
 80009d4:	6065      	str	r5, [r4, #4]
 80009d6:	1d32      	adds	r2, r6, #4
 80009d8:	2100      	movs	r1, #0
 80009da:	6860      	ldr	r0, [r4, #4]
 80009dc:	4281      	cmp	r1, r0
 80009de:	eba2 0306 	sub.w	r3, r2, r6
 80009e2:	f102 0204 	add.w	r2, r2, #4
 80009e6:	d213      	bcs.n	8000a10 <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0x56>
 80009e8:	f812 3c02 	ldrb.w	r3, [r2, #-2]
 80009ec:	f812 0c03 	ldrb.w	r0, [r2, #-3]
 80009f0:	041b      	lsls	r3, r3, #16
 80009f2:	ea43 2300 	orr.w	r3, r3, r0, lsl #8
 80009f6:	f812 0c04 	ldrb.w	r0, [r2, #-4]
 80009fa:	4303      	orrs	r3, r0
 80009fc:	f812 0c01 	ldrb.w	r0, [r2, #-1]
 8000a00:	ea43 6300 	orr.w	r3, r3, r0, lsl #24
 8000a04:	68e0      	ldr	r0, [r4, #12]
 8000a06:	60a3      	str	r3, [r4, #8]
 8000a08:	f840 3021 	str.w	r3, [r0, r1, lsl #2]
 8000a0c:	3101      	adds	r1, #1
 8000a0e:	e7e4      	b.n	80009da <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0x20>
 8000a10:	18f2      	adds	r2, r6, r3
 8000a12:	5cf1      	ldrb	r1, [r6, r3]
 8000a14:	7895      	ldrb	r5, [r2, #2]
 8000a16:	7850      	ldrb	r0, [r2, #1]
 8000a18:	78d2      	ldrb	r2, [r2, #3]
 8000a1a:	042d      	lsls	r5, r5, #16
 8000a1c:	ea45 2500 	orr.w	r5, r5, r0, lsl #8
 8000a20:	430d      	orrs	r5, r1
 8000a22:	1d1f      	adds	r7, r3, #4
 8000a24:	6923      	ldr	r3, [r4, #16]
 8000a26:	ea45 6502 	orr.w	r5, r5, r2, lsl #24
 8000a2a:	429d      	cmp	r5, r3
 8000a2c:	d904      	bls.n	8000a38 <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0x7e>
 8000a2e:	00a9      	lsls	r1, r5, #2
 8000a30:	69a0      	ldr	r0, [r4, #24]
 8000a32:	f005 fd5b 	bl	80064ec <realloc>
 8000a36:	61a0      	str	r0, [r4, #24]
 8000a38:	6125      	str	r5, [r4, #16]
 8000a3a:	19f3      	adds	r3, r6, r7
 8000a3c:	2100      	movs	r1, #0
 8000a3e:	6922      	ldr	r2, [r4, #16]
 8000a40:	4291      	cmp	r1, r2
 8000a42:	eba3 0506 	sub.w	r5, r3, r6
 8000a46:	f103 0304 	add.w	r3, r3, #4
 8000a4a:	d213      	bcs.n	8000a74 <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0xba>
 8000a4c:	f813 2c02 	ldrb.w	r2, [r3, #-2]
 8000a50:	f813 0c03 	ldrb.w	r0, [r3, #-3]
 8000a54:	0412      	lsls	r2, r2, #16
 8000a56:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 8000a5a:	f813 0c04 	ldrb.w	r0, [r3, #-4]
 8000a5e:	4302      	orrs	r2, r0
 8000a60:	f813 0c01 	ldrb.w	r0, [r3, #-1]
 8000a64:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
 8000a68:	69a0      	ldr	r0, [r4, #24]
 8000a6a:	6162      	str	r2, [r4, #20]
 8000a6c:	f840 2021 	str.w	r2, [r0, r1, lsl #2]
 8000a70:	3101      	adds	r1, #1
 8000a72:	e7e4      	b.n	8000a3e <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0x84>
 8000a74:	1973      	adds	r3, r6, r5
 8000a76:	5d72      	ldrb	r2, [r6, r5]
 8000a78:	789f      	ldrb	r7, [r3, #2]
 8000a7a:	7859      	ldrb	r1, [r3, #1]
 8000a7c:	78db      	ldrb	r3, [r3, #3]
 8000a7e:	043f      	lsls	r7, r7, #16
 8000a80:	ea47 2701 	orr.w	r7, r7, r1, lsl #8
 8000a84:	4317      	orrs	r7, r2
 8000a86:	ea47 6703 	orr.w	r7, r7, r3, lsl #24
 8000a8a:	69e3      	ldr	r3, [r4, #28]
 8000a8c:	429f      	cmp	r7, r3
 8000a8e:	f105 0504 	add.w	r5, r5, #4
 8000a92:	d904      	bls.n	8000a9e <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0xe4>
 8000a94:	00b9      	lsls	r1, r7, #2
 8000a96:	6a60      	ldr	r0, [r4, #36]	; 0x24
 8000a98:	f005 fd28 	bl	80064ec <realloc>
 8000a9c:	6260      	str	r0, [r4, #36]	; 0x24
 8000a9e:	61e7      	str	r7, [r4, #28]
 8000aa0:	2700      	movs	r7, #0
 8000aa2:	46b8      	mov	r8, r7
 8000aa4:	69e3      	ldr	r3, [r4, #28]
 8000aa6:	429f      	cmp	r7, r3
 8000aa8:	d21a      	bcs.n	8000ae0 <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0x126>
 8000aaa:	1971      	adds	r1, r6, r5
 8000aac:	a801      	add	r0, sp, #4
 8000aae:	f7ff feff 	bl	80008b0 <void ros::Msg::arrToVar<unsigned long, unsigned char*>(unsigned long&, unsigned char*)>
 8000ab2:	1d2b      	adds	r3, r5, #4
 8000ab4:	9d01      	ldr	r5, [sp, #4]
 8000ab6:	18f2      	adds	r2, r6, r3
 8000ab8:	441d      	add	r5, r3
 8000aba:	1b91      	subs	r1, r2, r6
 8000abc:	42a9      	cmp	r1, r5
 8000abe:	d204      	bcs.n	8000aca <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0x110>
 8000ac0:	f812 1b01 	ldrb.w	r1, [r2], #1
 8000ac4:	f802 1c02 	strb.w	r1, [r2, #-2]
 8000ac8:	e7f7      	b.n	8000aba <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0x100>
 8000aca:	1972      	adds	r2, r6, r5
 8000acc:	3b01      	subs	r3, #1
 8000ace:	f802 8c01 	strb.w	r8, [r2, #-1]
 8000ad2:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8000ad4:	4433      	add	r3, r6
 8000ad6:	6223      	str	r3, [r4, #32]
 8000ad8:	f842 3027 	str.w	r3, [r2, r7, lsl #2]
 8000adc:	3701      	adds	r7, #1
 8000ade:	e7e1      	b.n	8000aa4 <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0xea>
 8000ae0:	4628      	mov	r0, r5
 8000ae2:	b002      	add	sp, #8
 8000ae4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08000ae8 <std_msgs::MultiArrayDimension::deserialize(unsigned char*)>:
 8000ae8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8000aea:	4604      	mov	r4, r0
 8000aec:	a801      	add	r0, sp, #4
 8000aee:	460d      	mov	r5, r1
 8000af0:	f7ff fede 	bl	80008b0 <void ros::Msg::arrToVar<unsigned long, unsigned char*>(unsigned long&, unsigned char*)>
 8000af4:	9801      	ldr	r0, [sp, #4]
 8000af6:	1d2b      	adds	r3, r5, #4
 8000af8:	1d01      	adds	r1, r0, #4
 8000afa:	1b5a      	subs	r2, r3, r5
 8000afc:	4291      	cmp	r1, r2
 8000afe:	d904      	bls.n	8000b0a <std_msgs::MultiArrayDimension::deserialize(unsigned char*)+0x22>
 8000b00:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000b04:	f803 2c02 	strb.w	r2, [r3, #-2]
 8000b08:	e7f7      	b.n	8000afa <std_msgs::MultiArrayDimension::deserialize(unsigned char*)+0x12>
 8000b0a:	182a      	adds	r2, r5, r0
 8000b0c:	2300      	movs	r3, #0
 8000b0e:	70d3      	strb	r3, [r2, #3]
 8000b10:	1ceb      	adds	r3, r5, #3
 8000b12:	6063      	str	r3, [r4, #4]
 8000b14:	5c6b      	ldrb	r3, [r5, r1]
 8000b16:	60a3      	str	r3, [r4, #8]
 8000b18:	7951      	ldrb	r1, [r2, #5]
 8000b1a:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 8000b1e:	60a3      	str	r3, [r4, #8]
 8000b20:	7991      	ldrb	r1, [r2, #6]
 8000b22:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000b26:	60a3      	str	r3, [r4, #8]
 8000b28:	79d1      	ldrb	r1, [r2, #7]
 8000b2a:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
 8000b2e:	60a3      	str	r3, [r4, #8]
 8000b30:	7a13      	ldrb	r3, [r2, #8]
 8000b32:	60e3      	str	r3, [r4, #12]
 8000b34:	7a51      	ldrb	r1, [r2, #9]
 8000b36:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 8000b3a:	60e3      	str	r3, [r4, #12]
 8000b3c:	7a91      	ldrb	r1, [r2, #10]
 8000b3e:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000b42:	60e3      	str	r3, [r4, #12]
 8000b44:	7ad2      	ldrb	r2, [r2, #11]
 8000b46:	300c      	adds	r0, #12
 8000b48:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 8000b4c:	60e3      	str	r3, [r4, #12]
 8000b4e:	b003      	add	sp, #12
 8000b50:	bd30      	pop	{r4, r5, pc}

08000b52 <std_msgs::MultiArrayLayout::deserialize(unsigned char*)>:
 8000b52:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000b56:	6843      	ldr	r3, [r0, #4]
 8000b58:	680d      	ldr	r5, [r1, #0]
 8000b5a:	429d      	cmp	r5, r3
 8000b5c:	4604      	mov	r4, r0
 8000b5e:	460f      	mov	r7, r1
 8000b60:	d904      	bls.n	8000b6c <std_msgs::MultiArrayLayout::deserialize(unsigned char*)+0x1a>
 8000b62:	0129      	lsls	r1, r5, #4
 8000b64:	6980      	ldr	r0, [r0, #24]
 8000b66:	f005 fcc1 	bl	80064ec <realloc>
 8000b6a:	61a0      	str	r0, [r4, #24]
 8000b6c:	6065      	str	r5, [r4, #4]
 8000b6e:	2600      	movs	r6, #0
 8000b70:	2504      	movs	r5, #4
 8000b72:	f104 0808 	add.w	r8, r4, #8
 8000b76:	f104 0918 	add.w	r9, r4, #24
 8000b7a:	6863      	ldr	r3, [r4, #4]
 8000b7c:	429e      	cmp	r6, r3
 8000b7e:	eb07 0105 	add.w	r1, r7, r5
 8000b82:	d20f      	bcs.n	8000ba4 <std_msgs::MultiArrayLayout::deserialize(unsigned char*)+0x52>
 8000b84:	4640      	mov	r0, r8
 8000b86:	f7ff ffaf 	bl	8000ae8 <std_msgs::MultiArrayDimension::deserialize(unsigned char*)>
 8000b8a:	69a3      	ldr	r3, [r4, #24]
 8000b8c:	4405      	add	r5, r0
 8000b8e:	4642      	mov	r2, r8
 8000b90:	eb03 1306 	add.w	r3, r3, r6, lsl #4
 8000b94:	f852 1b04 	ldr.w	r1, [r2], #4
 8000b98:	f843 1b04 	str.w	r1, [r3], #4
 8000b9c:	454a      	cmp	r2, r9
 8000b9e:	d1f9      	bne.n	8000b94 <std_msgs::MultiArrayLayout::deserialize(unsigned char*)+0x42>
 8000ba0:	3601      	adds	r6, #1
 8000ba2:	e7ea      	b.n	8000b7a <std_msgs::MultiArrayLayout::deserialize(unsigned char*)+0x28>
 8000ba4:	5d7b      	ldrb	r3, [r7, r5]
 8000ba6:	61e3      	str	r3, [r4, #28]
 8000ba8:	784a      	ldrb	r2, [r1, #1]
 8000baa:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8000bae:	61e3      	str	r3, [r4, #28]
 8000bb0:	788a      	ldrb	r2, [r1, #2]
 8000bb2:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8000bb6:	61e3      	str	r3, [r4, #28]
 8000bb8:	78ca      	ldrb	r2, [r1, #3]
 8000bba:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 8000bbe:	61e3      	str	r3, [r4, #28]
 8000bc0:	1d28      	adds	r0, r5, #4
 8000bc2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

08000bc6 <std_msgs::Float32MultiArray::deserialize(unsigned char*)>:
 8000bc6:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000bc8:	4605      	mov	r5, r0
 8000bca:	3004      	adds	r0, #4
 8000bcc:	460e      	mov	r6, r1
 8000bce:	f7ff ffc0 	bl	8000b52 <std_msgs::MultiArrayLayout::deserialize(unsigned char*)>
 8000bd2:	1833      	adds	r3, r6, r0
 8000bd4:	5c32      	ldrb	r2, [r6, r0]
 8000bd6:	789c      	ldrb	r4, [r3, #2]
 8000bd8:	7859      	ldrb	r1, [r3, #1]
 8000bda:	78db      	ldrb	r3, [r3, #3]
 8000bdc:	0424      	lsls	r4, r4, #16
 8000bde:	ea44 2401 	orr.w	r4, r4, r1, lsl #8
 8000be2:	4314      	orrs	r4, r2
 8000be4:	ea44 6403 	orr.w	r4, r4, r3, lsl #24
 8000be8:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 8000bea:	429c      	cmp	r4, r3
 8000bec:	f100 0704 	add.w	r7, r0, #4
 8000bf0:	d904      	bls.n	8000bfc <std_msgs::Float32MultiArray::deserialize(unsigned char*)+0x36>
 8000bf2:	00a1      	lsls	r1, r4, #2
 8000bf4:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
 8000bf6:	f005 fc79 	bl	80064ec <realloc>
 8000bfa:	62e8      	str	r0, [r5, #44]	; 0x2c
 8000bfc:	626c      	str	r4, [r5, #36]	; 0x24
 8000bfe:	19f3      	adds	r3, r6, r7
 8000c00:	2100      	movs	r1, #0
 8000c02:	6a6a      	ldr	r2, [r5, #36]	; 0x24
 8000c04:	4291      	cmp	r1, r2
 8000c06:	eba3 0006 	sub.w	r0, r3, r6
 8000c0a:	f103 0304 	add.w	r3, r3, #4
 8000c0e:	d213      	bcs.n	8000c38 <std_msgs::Float32MultiArray::deserialize(unsigned char*)+0x72>
 8000c10:	f813 2c02 	ldrb.w	r2, [r3, #-2]
 8000c14:	f813 0c03 	ldrb.w	r0, [r3, #-3]
 8000c18:	0412      	lsls	r2, r2, #16
 8000c1a:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 8000c1e:	f813 0c04 	ldrb.w	r0, [r3, #-4]
 8000c22:	4302      	orrs	r2, r0
 8000c24:	f813 0c01 	ldrb.w	r0, [r3, #-1]
 8000c28:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
 8000c2c:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
 8000c2e:	62aa      	str	r2, [r5, #40]	; 0x28
 8000c30:	f840 2021 	str.w	r2, [r0, r1, lsl #2]
 8000c34:	3101      	adds	r1, #1
 8000c36:	e7e4      	b.n	8000c02 <std_msgs::Float32MultiArray::deserialize(unsigned char*)+0x3c>
 8000c38:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08000c3a <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::subscribe(ros::Subscriber_&)>:
 8000c3a:	b510      	push	{r4, lr}
 8000c3c:	f500 62ae 	add.w	r2, r0, #1392	; 0x570
 8000c40:	2300      	movs	r3, #0
 8000c42:	f852 4b04 	ldr.w	r4, [r2], #4
 8000c46:	b93c      	cbnz	r4, 8000c58 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::subscribe(ros::Subscriber_&)+0x1e>
 8000c48:	f503 72ae 	add.w	r2, r3, #348	; 0x15c
 8000c4c:	3364      	adds	r3, #100	; 0x64
 8000c4e:	f840 1022 	str.w	r1, [r0, r2, lsl #2]
 8000c52:	604b      	str	r3, [r1, #4]
 8000c54:	2001      	movs	r0, #1
 8000c56:	bd10      	pop	{r4, pc}
 8000c58:	3301      	adds	r3, #1
 8000c5a:	2b19      	cmp	r3, #25
 8000c5c:	d1f1      	bne.n	8000c42 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::subscribe(ros::Subscriber_&)+0x8>
 8000c5e:	2000      	movs	r0, #0
 8000c60:	bd10      	pop	{r4, pc}
	...

08000c64 <initRosTopics()>:
 8000c64:	4a19      	ldr	r2, [pc, #100]	; (8000ccc <initRosTopics()+0x68>)
 8000c66:	b508      	push	{r3, lr}
 8000c68:	2300      	movs	r3, #0
 8000c6a:	f852 1f04 	ldr.w	r1, [r2, #4]!
 8000c6e:	bb49      	cbnz	r1, 8000cc4 <initRosTopics()+0x60>
 8000c70:	4917      	ldr	r1, [pc, #92]	; (8000cd0 <initRosTopics()+0x6c>)
 8000c72:	4a18      	ldr	r2, [pc, #96]	; (8000cd4 <initRosTopics()+0x70>)
 8000c74:	eb01 0083 	add.w	r0, r1, r3, lsl #2
 8000c78:	337d      	adds	r3, #125	; 0x7d
 8000c7a:	f8c0 250c 	str.w	r2, [r0, #1292]	; 0x50c
 8000c7e:	6093      	str	r3, [r2, #8]
 8000c80:	60d1      	str	r1, [r2, #12]
 8000c82:	4915      	ldr	r1, [pc, #84]	; (8000cd8 <initRosTopics()+0x74>)
 8000c84:	4812      	ldr	r0, [pc, #72]	; (8000cd0 <initRosTopics()+0x6c>)
 8000c86:	f7ff ffd8 	bl	8000c3a <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::subscribe(ros::Subscriber_&)>
 8000c8a:	4914      	ldr	r1, [pc, #80]	; (8000cdc <initRosTopics()+0x78>)
 8000c8c:	4810      	ldr	r0, [pc, #64]	; (8000cd0 <initRosTopics()+0x6c>)
 8000c8e:	f7ff ffd4 	bl	8000c3a <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::subscribe(ros::Subscriber_&)>
 8000c92:	4913      	ldr	r1, [pc, #76]	; (8000ce0 <initRosTopics()+0x7c>)
 8000c94:	480e      	ldr	r0, [pc, #56]	; (8000cd0 <initRosTopics()+0x6c>)
 8000c96:	f7ff ffd0 	bl	8000c3a <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::subscribe(ros::Subscriber_&)>
 8000c9a:	4912      	ldr	r1, [pc, #72]	; (8000ce4 <initRosTopics()+0x80>)
 8000c9c:	480c      	ldr	r0, [pc, #48]	; (8000cd0 <initRosTopics()+0x6c>)
 8000c9e:	f7ff ffcc 	bl	8000c3a <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::subscribe(ros::Subscriber_&)>
 8000ca2:	4911      	ldr	r1, [pc, #68]	; (8000ce8 <initRosTopics()+0x84>)
 8000ca4:	480a      	ldr	r0, [pc, #40]	; (8000cd0 <initRosTopics()+0x6c>)
 8000ca6:	f7ff ffc8 	bl	8000c3a <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::subscribe(ros::Subscriber_&)>
 8000caa:	4910      	ldr	r1, [pc, #64]	; (8000cec <initRosTopics()+0x88>)
 8000cac:	4808      	ldr	r0, [pc, #32]	; (8000cd0 <initRosTopics()+0x6c>)
 8000cae:	f7ff ffc4 	bl	8000c3a <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::subscribe(ros::Subscriber_&)>
 8000cb2:	490f      	ldr	r1, [pc, #60]	; (8000cf0 <initRosTopics()+0x8c>)
 8000cb4:	4806      	ldr	r0, [pc, #24]	; (8000cd0 <initRosTopics()+0x6c>)
 8000cb6:	f7ff ffc0 	bl	8000c3a <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::subscribe(ros::Subscriber_&)>
 8000cba:	490e      	ldr	r1, [pc, #56]	; (8000cf4 <initRosTopics()+0x90>)
 8000cbc:	4804      	ldr	r0, [pc, #16]	; (8000cd0 <initRosTopics()+0x6c>)
 8000cbe:	f7ff ffbc 	bl	8000c3a <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::subscribe(ros::Subscriber_&)>
 8000cc2:	bd08      	pop	{r3, pc}
 8000cc4:	3301      	adds	r3, #1
 8000cc6:	2b19      	cmp	r3, #25
 8000cc8:	d1cf      	bne.n	8000c6a <initRosTopics()+0x6>
 8000cca:	e7da      	b.n	8000c82 <initRosTopics()+0x1e>
 8000ccc:	20000a7c 	.word	0x20000a7c
 8000cd0:	20000574 	.word	0x20000574
 8000cd4:	20000560 	.word	0x20000560
 8000cd8:	20000c68 	.word	0x20000c68
 8000cdc:	20000c80 	.word	0x20000c80
 8000ce0:	20000ba0 	.word	0x20000ba0
 8000ce4:	20000bbc 	.word	0x20000bbc
 8000ce8:	20000bd8 	.word	0x20000bd8
 8000cec:	20000c10 	.word	0x20000c10
 8000cf0:	200002a4 	.word	0x200002a4
 8000cf4:	20000c50 	.word	0x20000c50

08000cf8 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::log(char, char const*)>:
 8000cf8:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8000cfa:	4b06      	ldr	r3, [pc, #24]	; (8000d14 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::log(char, char const*)+0x1c>)
 8000cfc:	9301      	str	r3, [sp, #4]
 8000cfe:	6803      	ldr	r3, [r0, #0]
 8000d00:	f88d 1008 	strb.w	r1, [sp, #8]
 8000d04:	9203      	str	r2, [sp, #12]
 8000d06:	681b      	ldr	r3, [r3, #0]
 8000d08:	aa01      	add	r2, sp, #4
 8000d0a:	2107      	movs	r1, #7
 8000d0c:	4798      	blx	r3
 8000d0e:	b005      	add	sp, #20
 8000d10:	f85d fb04 	ldr.w	pc, [sp], #4
 8000d14:	08006984 	.word	0x08006984

08000d18 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::requestSyncTime()>:
 8000d18:	b530      	push	{r4, r5, lr}
 8000d1a:	b085      	sub	sp, #20
 8000d1c:	4604      	mov	r4, r0
 8000d1e:	4b09      	ldr	r3, [pc, #36]	; (8000d44 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::requestSyncTime()+0x2c>)
 8000d20:	9301      	str	r3, [sp, #4]
 8000d22:	2300      	movs	r3, #0
 8000d24:	9302      	str	r3, [sp, #8]
 8000d26:	9303      	str	r3, [sp, #12]
 8000d28:	f854 3bec 	ldr.w	r3, [r4], #236
 8000d2c:	aa01      	add	r2, sp, #4
 8000d2e:	681b      	ldr	r3, [r3, #0]
 8000d30:	210a      	movs	r1, #10
 8000d32:	4605      	mov	r5, r0
 8000d34:	4798      	blx	r3
 8000d36:	4620      	mov	r0, r4
 8000d38:	f004 faa0 	bl	800527c <mbed::Timer::read_ms()>
 8000d3c:	f8c5 00fc 	str.w	r0, [r5, #252]	; 0xfc
 8000d40:	b005      	add	sp, #20
 8000d42:	bd30      	pop	{r4, r5, pc}
 8000d44:	08006954 	.word	0x08006954

08000d48 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::negotiateTopics()>:
 8000d48:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000d4c:	b086      	sub	sp, #24
 8000d4e:	4b2b      	ldr	r3, [pc, #172]	; (8000dfc <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::negotiateTopics()+0xb4>)
 8000d50:	9300      	str	r3, [sp, #0]
 8000d52:	2200      	movs	r2, #0
 8000d54:	4b2a      	ldr	r3, [pc, #168]	; (8000e00 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::negotiateTopics()+0xb8>)
 8000d56:	f8ad 2004 	strh.w	r2, [sp, #4]
 8000d5a:	4605      	mov	r5, r0
 8000d5c:	9302      	str	r3, [sp, #8]
 8000d5e:	9303      	str	r3, [sp, #12]
 8000d60:	9304      	str	r3, [sp, #16]
 8000d62:	9205      	str	r2, [sp, #20]
 8000d64:	f200 540c 	addw	r4, r0, #1292	; 0x50c
 8000d68:	f500 66ae 	add.w	r6, r0, #1392	; 0x570
 8000d6c:	f44f 7700 	mov.w	r7, #512	; 0x200
 8000d70:	6823      	ldr	r3, [r4, #0]
 8000d72:	b1bb      	cbz	r3, 8000da4 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::negotiateTopics()+0x5c>
 8000d74:	6858      	ldr	r0, [r3, #4]
 8000d76:	689a      	ldr	r2, [r3, #8]
 8000d78:	f8ad 2004 	strh.w	r2, [sp, #4]
 8000d7c:	681a      	ldr	r2, [r3, #0]
 8000d7e:	6803      	ldr	r3, [r0, #0]
 8000d80:	9202      	str	r2, [sp, #8]
 8000d82:	689b      	ldr	r3, [r3, #8]
 8000d84:	4798      	blx	r3
 8000d86:	6823      	ldr	r3, [r4, #0]
 8000d88:	9003      	str	r0, [sp, #12]
 8000d8a:	6858      	ldr	r0, [r3, #4]
 8000d8c:	6803      	ldr	r3, [r0, #0]
 8000d8e:	68db      	ldr	r3, [r3, #12]
 8000d90:	4798      	blx	r3
 8000d92:	6821      	ldr	r1, [r4, #0]
 8000d94:	682b      	ldr	r3, [r5, #0]
 8000d96:	9004      	str	r0, [sp, #16]
 8000d98:	9705      	str	r7, [sp, #20]
 8000d9a:	681b      	ldr	r3, [r3, #0]
 8000d9c:	6909      	ldr	r1, [r1, #16]
 8000d9e:	466a      	mov	r2, sp
 8000da0:	4628      	mov	r0, r5
 8000da2:	4798      	blx	r3
 8000da4:	3404      	adds	r4, #4
 8000da6:	42b4      	cmp	r4, r6
 8000da8:	d1e2      	bne.n	8000d70 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::negotiateTopics()+0x28>
 8000daa:	f205 56d4 	addw	r6, r5, #1492	; 0x5d4
 8000dae:	f44f 7700 	mov.w	r7, #512	; 0x200
 8000db2:	6820      	ldr	r0, [r4, #0]
 8000db4:	b1c8      	cbz	r0, 8000dea <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::negotiateTopics()+0xa2>
 8000db6:	6843      	ldr	r3, [r0, #4]
 8000db8:	f8ad 3004 	strh.w	r3, [sp, #4]
 8000dbc:	6883      	ldr	r3, [r0, #8]
 8000dbe:	9302      	str	r3, [sp, #8]
 8000dc0:	6803      	ldr	r3, [r0, #0]
 8000dc2:	689b      	ldr	r3, [r3, #8]
 8000dc4:	4798      	blx	r3
 8000dc6:	9003      	str	r0, [sp, #12]
 8000dc8:	6820      	ldr	r0, [r4, #0]
 8000dca:	6803      	ldr	r3, [r0, #0]
 8000dcc:	68db      	ldr	r3, [r3, #12]
 8000dce:	4798      	blx	r3
 8000dd0:	682b      	ldr	r3, [r5, #0]
 8000dd2:	9004      	str	r0, [sp, #16]
 8000dd4:	6820      	ldr	r0, [r4, #0]
 8000dd6:	f8d3 8000 	ldr.w	r8, [r3]
 8000dda:	6803      	ldr	r3, [r0, #0]
 8000ddc:	9705      	str	r7, [sp, #20]
 8000dde:	685b      	ldr	r3, [r3, #4]
 8000de0:	4798      	blx	r3
 8000de2:	466a      	mov	r2, sp
 8000de4:	4601      	mov	r1, r0
 8000de6:	4628      	mov	r0, r5
 8000de8:	47c0      	blx	r8
 8000dea:	3404      	adds	r4, #4
 8000dec:	42a6      	cmp	r6, r4
 8000dee:	d1e0      	bne.n	8000db2 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::negotiateTopics()+0x6a>
 8000df0:	2301      	movs	r3, #1
 8000df2:	f885 35e8 	strb.w	r3, [r5, #1512]	; 0x5e8
 8000df6:	b006      	add	sp, #24
 8000df8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000dfc:	0800696c 	.word	0x0800696c
 8000e00:	08006e2c 	.word	0x08006e2c

08000e04 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::syncTime(unsigned char*)>:
 8000e04:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000e06:	b085      	sub	sp, #20
 8000e08:	f100 05ec 	add.w	r5, r0, #236	; 0xec
 8000e0c:	4b1f      	ldr	r3, [pc, #124]	; (8000e8c <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::syncTime(unsigned char*)+0x88>)
 8000e0e:	9301      	str	r3, [sp, #4]
 8000e10:	4604      	mov	r4, r0
 8000e12:	2300      	movs	r3, #0
 8000e14:	4628      	mov	r0, r5
 8000e16:	9302      	str	r3, [sp, #8]
 8000e18:	9303      	str	r3, [sp, #12]
 8000e1a:	460e      	mov	r6, r1
 8000e1c:	f004 fa2e 	bl	800527c <mbed::Timer::read_ms()>
 8000e20:	f8d4 20fc 	ldr.w	r2, [r4, #252]	; 0xfc
 8000e24:	4631      	mov	r1, r6
 8000e26:	1a87      	subs	r7, r0, r2
 8000e28:	a801      	add	r0, sp, #4
 8000e2a:	f7ff f9ff 	bl	800022c <std_msgs::Time::deserialize(unsigned char*)>
 8000e2e:	9b02      	ldr	r3, [sp, #8]
 8000e30:	f44f 767a 	mov.w	r6, #1000	; 0x3e8
 8000e34:	fbb7 f2f6 	udiv	r2, r7, r6
 8000e38:	4413      	add	r3, r2
 8000e3a:	9302      	str	r3, [sp, #8]
 8000e3c:	fb06 7212 	mls	r2, r6, r2, r7
 8000e40:	9b03      	ldr	r3, [sp, #12]
 8000e42:	4f13      	ldr	r7, [pc, #76]	; (8000e90 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::syncTime(unsigned char*)+0x8c>)
 8000e44:	4628      	mov	r0, r5
 8000e46:	fb07 3202 	mla	r2, r7, r2, r3
 8000e4a:	9203      	str	r2, [sp, #12]
 8000e4c:	f004 fa16 	bl	800527c <mbed::Timer::read_ms()>
 8000e50:	9a02      	ldr	r2, [sp, #8]
 8000e52:	fbb0 f3f6 	udiv	r3, r0, r6
 8000e56:	3a01      	subs	r2, #1
 8000e58:	1ad2      	subs	r2, r2, r3
 8000e5a:	9903      	ldr	r1, [sp, #12]
 8000e5c:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 8000e60:	4a0c      	ldr	r2, [pc, #48]	; (8000e94 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::syncTime(unsigned char*)+0x90>)
 8000e62:	fb06 0313 	mls	r3, r6, r3, r0
 8000e66:	440a      	add	r2, r1
 8000e68:	fb07 2313 	mls	r3, r7, r3, r2
 8000e6c:	f8c4 3104 	str.w	r3, [r4, #260]	; 0x104
 8000e70:	f504 7182 	add.w	r1, r4, #260	; 0x104
 8000e74:	f504 7080 	add.w	r0, r4, #256	; 0x100
 8000e78:	f000 fcc0 	bl	80017fc <ros::normalizeSecNSec(unsigned long&, unsigned long&)>
 8000e7c:	4628      	mov	r0, r5
 8000e7e:	f004 f9fd 	bl	800527c <mbed::Timer::read_ms()>
 8000e82:	f8c4 05f0 	str.w	r0, [r4, #1520]	; 0x5f0
 8000e86:	b005      	add	sp, #20
 8000e88:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000e8a:	bf00      	nop
 8000e8c:	08006954 	.word	0x08006954
 8000e90:	000f4240 	.word	0x000f4240
 8000e94:	3b9aca00 	.word	0x3b9aca00

08000e98 <_GLOBAL__sub_I_motor1_setpoint>:
 8000e98:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8000e9c:	4da8      	ldr	r5, [pc, #672]	; (8001140 <_GLOBAL__sub_I_motor1_setpoint+0x2a8>)
 8000e9e:	4fa9      	ldr	r7, [pc, #676]	; (8001144 <_GLOBAL__sub_I_motor1_setpoint+0x2ac>)
 8000ea0:	f8df 934c 	ldr.w	r9, [pc, #844]	; 80011f0 <_GLOBAL__sub_I_motor1_setpoint+0x358>
 8000ea4:	2400      	movs	r4, #0
 8000ea6:	4628      	mov	r0, r5
 8000ea8:	f004 fbe0 	bl	800566c <mbed::TimerEvent::TimerEvent()>
 8000eac:	4ba6      	ldr	r3, [pc, #664]	; (8001148 <_GLOBAL__sub_I_motor1_setpoint+0x2b0>)
 8000eae:	626c      	str	r4, [r5, #36]	; 0x24
 8000eb0:	463a      	mov	r2, r7
 8000eb2:	49a6      	ldr	r1, [pc, #664]	; (800114c <_GLOBAL__sub_I_motor1_setpoint+0x2b4>)
 8000eb4:	602b      	str	r3, [r5, #0]
 8000eb6:	4628      	mov	r0, r5
 8000eb8:	2601      	movs	r6, #1
 8000eba:	f004 fd53 	bl	8005964 <__aeabi_atexit>
 8000ebe:	f04f 0811 	mov.w	r8, #17
 8000ec2:	48a3      	ldr	r0, [pc, #652]	; (8001150 <_GLOBAL__sub_I_motor1_setpoint+0x2b8>)
 8000ec4:	4da3      	ldr	r5, [pc, #652]	; (8001154 <_GLOBAL__sub_I_motor1_setpoint+0x2bc>)
 8000ec6:	f004 f9ef 	bl	80052a8 <mbed::Timer::Timer()>
 8000eca:	9601      	str	r6, [sp, #4]
 8000ecc:	f8cd 8000 	str.w	r8, [sp]
 8000ed0:	2364      	movs	r3, #100	; 0x64
 8000ed2:	2228      	movs	r2, #40	; 0x28
 8000ed4:	210c      	movs	r1, #12
 8000ed6:	4648      	mov	r0, r9
 8000ed8:	f000 fc0a 	bl	80016f0 <Encoder::Encoder(PinName, PinName, int, int, bool)>
 8000edc:	4648      	mov	r0, r9
 8000ede:	f8df 9314 	ldr.w	r9, [pc, #788]	; 80011f4 <_GLOBAL__sub_I_motor1_setpoint+0x35c>
 8000ee2:	463a      	mov	r2, r7
 8000ee4:	4629      	mov	r1, r5
 8000ee6:	f004 fd3d 	bl	8005964 <__aeabi_atexit>
 8000eea:	9601      	str	r6, [sp, #4]
 8000eec:	f8cd 8000 	str.w	r8, [sp]
 8000ef0:	2364      	movs	r3, #100	; 0x64
 8000ef2:	2219      	movs	r2, #25
 8000ef4:	2105      	movs	r1, #5
 8000ef6:	4648      	mov	r0, r9
 8000ef8:	f000 fbfa 	bl	80016f0 <Encoder::Encoder(PinName, PinName, int, int, bool)>
 8000efc:	4648      	mov	r0, r9
 8000efe:	f8df 92f8 	ldr.w	r9, [pc, #760]	; 80011f8 <_GLOBAL__sub_I_motor1_setpoint+0x360>
 8000f02:	463a      	mov	r2, r7
 8000f04:	4629      	mov	r1, r5
 8000f06:	f004 fd2d 	bl	8005964 <__aeabi_atexit>
 8000f0a:	9601      	str	r6, [sp, #4]
 8000f0c:	f8cd 8000 	str.w	r8, [sp]
 8000f10:	2364      	movs	r3, #100	; 0x64
 8000f12:	2216      	movs	r2, #22
 8000f14:	2127      	movs	r1, #39	; 0x27
 8000f16:	4648      	mov	r0, r9
 8000f18:	f000 fbea 	bl	80016f0 <Encoder::Encoder(PinName, PinName, int, int, bool)>
 8000f1c:	4629      	mov	r1, r5
 8000f1e:	4d8e      	ldr	r5, [pc, #568]	; (8001158 <_GLOBAL__sub_I_motor1_setpoint+0x2c0>)
 8000f20:	463a      	mov	r2, r7
 8000f22:	4648      	mov	r0, r9
 8000f24:	f004 fd1e 	bl	8005964 <__aeabi_atexit>
 8000f28:	4628      	mov	r0, r5
 8000f2a:	4b8c      	ldr	r3, [pc, #560]	; (800115c <_GLOBAL__sub_I_motor1_setpoint+0x2c4>)
 8000f2c:	f840 3b04 	str.w	r3, [r0], #4
 8000f30:	2304      	movs	r3, #4
 8000f32:	2203      	movs	r2, #3
 8000f34:	2102      	movs	r1, #2
 8000f36:	f105 08ec 	add.w	r8, r5, #236	; 0xec
 8000f3a:	9300      	str	r3, [sp, #0]
 8000f3c:	9401      	str	r4, [sp, #4]
 8000f3e:	f44f 7380 	mov.w	r3, #256	; 0x100
 8000f42:	f000 fd49 	bl	80019d8 <BufferedSerial::BufferedSerial(PinName, PinName, unsigned long, unsigned long, char const*)>
 8000f46:	4640      	mov	r0, r8
 8000f48:	f004 f9ae 	bl	80052a8 <mbed::Timer::Timer()>
 8000f4c:	f44f 4361 	mov.w	r3, #57600	; 0xe100
 8000f50:	f8c5 30e8 	str.w	r3, [r5, #232]	; 0xe8
 8000f54:	4640      	mov	r0, r8
 8000f56:	f44f 7800 	mov.w	r8, #512	; 0x200
 8000f5a:	f004 f942 	bl	80051e2 <mbed::Timer::start()>
 8000f5e:	4642      	mov	r2, r8
 8000f60:	4621      	mov	r1, r4
 8000f62:	f505 7086 	add.w	r0, r5, #268	; 0x10c
 8000f66:	f8c5 40fc 	str.w	r4, [r5, #252]	; 0xfc
 8000f6a:	f8c5 4100 	str.w	r4, [r5, #256]	; 0x100
 8000f6e:	f8c5 4104 	str.w	r4, [r5, #260]	; 0x104
 8000f72:	f8c5 4108 	str.w	r4, [r5, #264]	; 0x108
 8000f76:	f005 f848 	bl	800600a <memset>
 8000f7a:	4642      	mov	r2, r8
 8000f7c:	4621      	mov	r1, r4
 8000f7e:	f04f 0864 	mov.w	r8, #100	; 0x64
 8000f82:	f505 7043 	add.w	r0, r5, #780	; 0x30c
 8000f86:	f005 f840 	bl	800600a <memset>
 8000f8a:	4642      	mov	r2, r8
 8000f8c:	4621      	mov	r1, r4
 8000f8e:	f205 500c 	addw	r0, r5, #1292	; 0x50c
 8000f92:	f005 f83a 	bl	800600a <memset>
 8000f96:	4642      	mov	r2, r8
 8000f98:	4621      	mov	r1, r4
 8000f9a:	f505 60ae 	add.w	r0, r5, #1392	; 0x570
 8000f9e:	f005 f834 	bl	800600a <memset>
 8000fa2:	4b6f      	ldr	r3, [pc, #444]	; (8001160 <_GLOBAL__sub_I_motor1_setpoint+0x2c8>)
 8000fa4:	f8c5 35fc 	str.w	r3, [r5, #1532]	; 0x5fc
 8000fa8:	f505 63c2 	add.w	r3, r5, #1552	; 0x610
 8000fac:	f04f 0800 	mov.w	r8, #0
 8000fb0:	f8c5 4600 	str.w	r4, [r5, #1536]	; 0x600
 8000fb4:	f8c5 4604 	str.w	r4, [r5, #1540]	; 0x604
 8000fb8:	f8c5 4608 	str.w	r4, [r5, #1544]	; 0x608
 8000fbc:	f8c5 460c 	str.w	r4, [r5, #1548]	; 0x60c
 8000fc0:	f8c3 8000 	str.w	r8, [r3]
 8000fc4:	f8c5 4614 	str.w	r4, [r5, #1556]	; 0x614
 8000fc8:	f8c5 4618 	str.w	r4, [r5, #1560]	; 0x618
 8000fcc:	f8c5 461c 	str.w	r4, [r5, #1564]	; 0x61c
 8000fd0:	f8c5 4620 	str.w	r4, [r5, #1568]	; 0x620
 8000fd4:	463a      	mov	r2, r7
 8000fd6:	4963      	ldr	r1, [pc, #396]	; (8001164 <_GLOBAL__sub_I_motor1_setpoint+0x2cc>)
 8000fd8:	f8c5 45d4 	str.w	r4, [r5, #1492]	; 0x5d4
 8000fdc:	4628      	mov	r0, r5
 8000fde:	f8c5 45d8 	str.w	r4, [r5, #1496]	; 0x5d8
 8000fe2:	f8c5 45dc 	str.w	r4, [r5, #1500]	; 0x5dc
 8000fe6:	f8c5 45e0 	str.w	r4, [r5, #1504]	; 0x5e0
 8000fea:	f8c5 45e4 	str.w	r4, [r5, #1508]	; 0x5e4
 8000fee:	f885 45e8 	strb.w	r4, [r5, #1512]	; 0x5e8
 8000ff2:	f8c5 45ec 	str.w	r4, [r5, #1516]	; 0x5ec
 8000ff6:	f8c5 45f0 	str.w	r4, [r5, #1520]	; 0x5f0
 8000ffa:	f8c5 45f4 	str.w	r4, [r5, #1524]	; 0x5f4
 8000ffe:	f885 45f8 	strb.w	r4, [r5, #1528]	; 0x5f8
 8001002:	f004 fcaf 	bl	8005964 <__aeabi_atexit>
 8001006:	4b58      	ldr	r3, [pc, #352]	; (8001168 <_GLOBAL__sub_I_motor1_setpoint+0x2d0>)
 8001008:	4a58      	ldr	r2, [pc, #352]	; (800116c <_GLOBAL__sub_I_motor1_setpoint+0x2d4>)
 800100a:	601a      	str	r2, [r3, #0]
 800100c:	4a58      	ldr	r2, [pc, #352]	; (8001170 <_GLOBAL__sub_I_motor1_setpoint+0x2d8>)
 800100e:	605a      	str	r2, [r3, #4]
 8001010:	4a58      	ldr	r2, [pc, #352]	; (8001174 <_GLOBAL__sub_I_motor1_setpoint+0x2dc>)
 8001012:	60da      	str	r2, [r3, #12]
 8001014:	4a58      	ldr	r2, [pc, #352]	; (8001178 <_GLOBAL__sub_I_motor1_setpoint+0x2e0>)
 8001016:	611a      	str	r2, [r3, #16]
 8001018:	4a58      	ldr	r2, [pc, #352]	; (800117c <_GLOBAL__sub_I_motor1_setpoint+0x2e4>)
 800101a:	4959      	ldr	r1, [pc, #356]	; (8001180 <_GLOBAL__sub_I_motor1_setpoint+0x2e8>)
 800101c:	6111      	str	r1, [r2, #16]
 800101e:	4f59      	ldr	r7, [pc, #356]	; (8001184 <_GLOBAL__sub_I_motor1_setpoint+0x2ec>)
 8001020:	4d59      	ldr	r5, [pc, #356]	; (8001188 <_GLOBAL__sub_I_motor1_setpoint+0x2f0>)
 8001022:	495a      	ldr	r1, [pc, #360]	; (800118c <_GLOBAL__sub_I_motor1_setpoint+0x2f4>)
 8001024:	6017      	str	r7, [r2, #0]
 8001026:	60d5      	str	r5, [r2, #12]
 8001028:	6156      	str	r6, [r2, #20]
 800102a:	6091      	str	r1, [r2, #8]
 800102c:	4a58      	ldr	r2, [pc, #352]	; (8001190 <_GLOBAL__sub_I_motor1_setpoint+0x2f8>)
 800102e:	4959      	ldr	r1, [pc, #356]	; (8001194 <_GLOBAL__sub_I_motor1_setpoint+0x2fc>)
 8001030:	6111      	str	r1, [r2, #16]
 8001032:	4959      	ldr	r1, [pc, #356]	; (8001198 <_GLOBAL__sub_I_motor1_setpoint+0x300>)
 8001034:	6017      	str	r7, [r2, #0]
 8001036:	60d5      	str	r5, [r2, #12]
 8001038:	6156      	str	r6, [r2, #20]
 800103a:	6091      	str	r1, [r2, #8]
 800103c:	4a57      	ldr	r2, [pc, #348]	; (800119c <_GLOBAL__sub_I_motor1_setpoint+0x304>)
 800103e:	f8df e1bc 	ldr.w	lr, [pc, #444]	; 80011fc <_GLOBAL__sub_I_motor1_setpoint+0x364>
 8001042:	f8c2 e014 	str.w	lr, [r2, #20]
 8001046:	4856      	ldr	r0, [pc, #344]	; (80011a0 <_GLOBAL__sub_I_motor1_setpoint+0x308>)
 8001048:	4956      	ldr	r1, [pc, #344]	; (80011a4 <_GLOBAL__sub_I_motor1_setpoint+0x30c>)
 800104a:	f8df e1b4 	ldr.w	lr, [pc, #436]	; 8001200 <_GLOBAL__sub_I_motor1_setpoint+0x368>
 800104e:	6010      	str	r0, [r2, #0]
 8001050:	60d1      	str	r1, [r2, #12]
 8001052:	f8c2 8010 	str.w	r8, [r2, #16]
 8001056:	6196      	str	r6, [r2, #24]
 8001058:	f8c2 e008 	str.w	lr, [r2, #8]
 800105c:	4a52      	ldr	r2, [pc, #328]	; (80011a8 <_GLOBAL__sub_I_motor1_setpoint+0x310>)
 800105e:	609c      	str	r4, [r3, #8]
 8001060:	60d1      	str	r1, [r2, #12]
 8001062:	4952      	ldr	r1, [pc, #328]	; (80011ac <_GLOBAL__sub_I_motor1_setpoint+0x314>)
 8001064:	6151      	str	r1, [r2, #20]
 8001066:	4952      	ldr	r1, [pc, #328]	; (80011b0 <_GLOBAL__sub_I_motor1_setpoint+0x318>)
 8001068:	615c      	str	r4, [r3, #20]
 800106a:	619c      	str	r4, [r3, #24]
 800106c:	61dc      	str	r4, [r3, #28]
 800106e:	621c      	str	r4, [r3, #32]
 8001070:	625c      	str	r4, [r3, #36]	; 0x24
 8001072:	f8c3 8028 	str.w	r8, [r3, #40]	; 0x28
 8001076:	62dc      	str	r4, [r3, #44]	; 0x2c
 8001078:	6010      	str	r0, [r2, #0]
 800107a:	f8c2 8010 	str.w	r8, [r2, #16]
 800107e:	6196      	str	r6, [r2, #24]
 8001080:	6091      	str	r1, [r2, #8]
 8001082:	4a4c      	ldr	r2, [pc, #304]	; (80011b4 <_GLOBAL__sub_I_motor1_setpoint+0x31c>)
 8001084:	f8df 817c 	ldr.w	r8, [pc, #380]	; 8001204 <_GLOBAL__sub_I_motor1_setpoint+0x36c>
 8001088:	f8df c17c 	ldr.w	r12, [pc, #380]	; 8001208 <_GLOBAL__sub_I_motor1_setpoint+0x370>
 800108c:	f8df e17c 	ldr.w	lr, [pc, #380]	; 800120c <_GLOBAL__sub_I_motor1_setpoint+0x374>
 8001090:	f8c2 8030 	str.w	r8, [r2, #48]	; 0x30
 8001094:	2000      	movs	r0, #0
 8001096:	2100      	movs	r1, #0
 8001098:	f8df 8174 	ldr.w	r8, [pc, #372]	; 8001210 <_GLOBAL__sub_I_motor1_setpoint+0x378>
 800109c:	f8c2 c000 	str.w	r12, [r2]
 80010a0:	f8c2 e010 	str.w	lr, [r2, #16]
 80010a4:	e9c2 0106 	strd	r0, r1, [r2, #24]
 80010a8:	e9c2 0108 	strd	r0, r1, [r2, #32]
 80010ac:	e9c2 010a 	strd	r0, r1, [r2, #40]	; 0x28
 80010b0:	6356      	str	r6, [r2, #52]	; 0x34
 80010b2:	f8c2 8008 	str.w	r8, [r2, #8]
 80010b6:	4a40      	ldr	r2, [pc, #256]	; (80011b8 <_GLOBAL__sub_I_motor1_setpoint+0x320>)
 80010b8:	e9c2 0106 	strd	r0, r1, [r2, #24]
 80010bc:	e9c2 0108 	strd	r0, r1, [r2, #32]
 80010c0:	e9c2 010a 	strd	r0, r1, [r2, #40]	; 0x28
 80010c4:	493d      	ldr	r1, [pc, #244]	; (80011bc <_GLOBAL__sub_I_motor1_setpoint+0x324>)
 80010c6:	6311      	str	r1, [r2, #48]	; 0x30
 80010c8:	493d      	ldr	r1, [pc, #244]	; (80011c0 <_GLOBAL__sub_I_motor1_setpoint+0x328>)
 80010ca:	f8c2 c000 	str.w	r12, [r2]
 80010ce:	f8c2 e010 	str.w	lr, [r2, #16]
 80010d2:	6356      	str	r6, [r2, #52]	; 0x34
 80010d4:	6091      	str	r1, [r2, #8]
 80010d6:	4a3b      	ldr	r2, [pc, #236]	; (80011c4 <_GLOBAL__sub_I_motor1_setpoint+0x32c>)
 80010d8:	493b      	ldr	r1, [pc, #236]	; (80011c8 <_GLOBAL__sub_I_motor1_setpoint+0x330>)
 80010da:	6114      	str	r4, [r2, #16]
 80010dc:	e882 000a 	stmia.w	r2, {r1, r3}
 80010e0:	4b3a      	ldr	r3, [pc, #232]	; (80011cc <_GLOBAL__sub_I_motor1_setpoint+0x334>)
 80010e2:	4a3b      	ldr	r2, [pc, #236]	; (80011d0 <_GLOBAL__sub_I_motor1_setpoint+0x338>)
 80010e4:	611a      	str	r2, [r3, #16]
 80010e6:	4a3b      	ldr	r2, [pc, #236]	; (80011d4 <_GLOBAL__sub_I_motor1_setpoint+0x33c>)
 80010e8:	601f      	str	r7, [r3, #0]
 80010ea:	60dd      	str	r5, [r3, #12]
 80010ec:	615e      	str	r6, [r3, #20]
 80010ee:	609a      	str	r2, [r3, #8]
 80010f0:	4b39      	ldr	r3, [pc, #228]	; (80011d8 <_GLOBAL__sub_I_motor1_setpoint+0x340>)
 80010f2:	4a3a      	ldr	r2, [pc, #232]	; (80011dc <_GLOBAL__sub_I_motor1_setpoint+0x344>)
 80010f4:	60dd      	str	r5, [r3, #12]
 80010f6:	4d3a      	ldr	r5, [pc, #232]	; (80011e0 <_GLOBAL__sub_I_motor1_setpoint+0x348>)
 80010f8:	611a      	str	r2, [r3, #16]
 80010fa:	615e      	str	r6, [r3, #20]
 80010fc:	4a39      	ldr	r2, [pc, #228]	; (80011e4 <_GLOBAL__sub_I_motor1_setpoint+0x34c>)
 80010fe:	609a      	str	r2, [r3, #8]
 8001100:	261c      	movs	r6, #28
 8001102:	4632      	mov	r2, r6
 8001104:	4621      	mov	r1, r4
 8001106:	4628      	mov	r0, r5
 8001108:	601f      	str	r7, [r3, #0]
 800110a:	f004 ff7e 	bl	800600a <memset>
 800110e:	4628      	mov	r0, r5
 8001110:	4d35      	ldr	r5, [pc, #212]	; (80011e8 <_GLOBAL__sub_I_motor1_setpoint+0x350>)
 8001112:	2129      	movs	r1, #41	; 0x29
 8001114:	f000 fda8 	bl	8001c68 <gpio_init_out>
 8001118:	4632      	mov	r2, r6
 800111a:	4621      	mov	r1, r4
 800111c:	4628      	mov	r0, r5
 800111e:	f004 ff74 	bl	800600a <memset>
 8001122:	4628      	mov	r0, r5
 8001124:	2118      	movs	r1, #24
 8001126:	f000 fd9f 	bl	8001c68 <gpio_init_out>
 800112a:	f000 fe9f 	bl	8001e6c <core_util_critical_section_enter>
 800112e:	2113      	movs	r1, #19
 8001130:	482e      	ldr	r0, [pc, #184]	; (80011ec <_GLOBAL__sub_I_motor1_setpoint+0x354>)
 8001132:	f002 fda1 	bl	8003c78 <pwmout_init>
 8001136:	b003      	add	sp, #12
 8001138:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800113c:	f000 beac 	b.w	8001e98 <core_util_critical_section_exit>
 8001140:	20000538 	.word	0x20000538
 8001144:	20000198 	.word	0x20000198
 8001148:	08007348 	.word	0x08007348
 800114c:	08000671 	.word	0x08000671
 8001150:	20000ca0 	.word	0x20000ca0
 8001154:	080015a9 	.word	0x080015a9
 8001158:	20000574 	.word	0x20000574
 800115c:	08006a44 	.word	0x08006a44
 8001160:	0800699c 	.word	0x0800699c
 8001164:	08001591 	.word	0x08001591
 8001168:	200002c0 	.word	0x200002c0
 800116c:	08006a14 	.word	0x08006a14
 8001170:	080069fc 	.word	0x080069fc
 8001174:	080069e4 	.word	0x080069e4
 8001178:	08006e2c 	.word	0x08006e2c
 800117c:	20000c68 	.word	0x20000c68
 8001180:	08000459 	.word	0x08000459
 8001184:	08006a58 	.word	0x08006a58
 8001188:	080069b4 	.word	0x080069b4
 800118c:	08006aa4 	.word	0x08006aa4
 8001190:	20000c80 	.word	0x20000c80
 8001194:	08000465 	.word	0x08000465
 8001198:	08006ab0 	.word	0x08006ab0
 800119c:	20000ba0 	.word	0x20000ba0
 80011a0:	08006a70 	.word	0x08006a70
 80011a4:	080069cc 	.word	0x080069cc
 80011a8:	20000bbc 	.word	0x20000bbc
 80011ac:	0800047d 	.word	0x0800047d
 80011b0:	08006acd 	.word	0x08006acd
 80011b4:	20000bd8 	.word	0x20000bd8
 80011b8:	20000c10 	.word	0x20000c10
 80011bc:	0800048b 	.word	0x0800048b
 80011c0:	08006aed 	.word	0x08006aed
 80011c4:	20000560 	.word	0x20000560
 80011c8:	08006afc 	.word	0x08006afc
 80011cc:	200002a4 	.word	0x200002a4
 80011d0:	08000621 	.word	0x08000621
 80011d4:	08006b07 	.word	0x08006b07
 80011d8:	20000c50 	.word	0x20000c50
 80011dc:	080005e1 	.word	0x080005e1
 80011e0:	2000026c 	.word	0x2000026c
 80011e4:	08006b19 	.word	0x08006b19
 80011e8:	20000288 	.word	0x20000288
 80011ec:	20000254 	.word	0x20000254
 80011f0:	200002f0 	.word	0x200002f0
 80011f4:	200003b4 	.word	0x200003b4
 80011f8:	20000478 	.word	0x20000478
 80011fc:	08000471 	.word	0x08000471
 8001200:	08006abc 	.word	0x08006abc
 8001204:	08000489 	.word	0x08000489
 8001208:	08006a88 	.word	0x08006a88
 800120c:	08006a2c 	.word	0x08006a2c
 8001210:	08006ade 	.word	0x08006ade

08001214 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)>:
 8001214:	2963      	cmp	r1, #99	; 0x63
 8001216:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001218:	4604      	mov	r4, r0
 800121a:	460e      	mov	r6, r1
 800121c:	dd03      	ble.n	8001226 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0x12>
 800121e:	f890 55e8 	ldrb.w	r5, [r0, #1512]	; 0x5e8
 8001222:	2d00      	cmp	r5, #0
 8001224:	d045      	beq.n	80012b2 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0x9e>
 8001226:	6813      	ldr	r3, [r2, #0]
 8001228:	f204 3113 	addw	r1, r4, #787	; 0x313
 800122c:	681b      	ldr	r3, [r3, #0]
 800122e:	4610      	mov	r0, r2
 8001230:	4798      	blx	r3
 8001232:	23ff      	movs	r3, #255	; 0xff
 8001234:	f884 330c 	strb.w	r3, [r4, #780]	; 0x30c
 8001238:	23fe      	movs	r3, #254	; 0xfe
 800123a:	f3c0 2207 	ubfx	r2, r0, #8, #8
 800123e:	f884 330d 	strb.w	r3, [r4, #781]	; 0x30d
 8001242:	b2c3      	uxtb	r3, r0
 8001244:	f884 330e 	strb.w	r3, [r4, #782]	; 0x30e
 8001248:	4413      	add	r3, r2
 800124a:	43db      	mvns	r3, r3
 800124c:	f884 6311 	strb.w	r6, [r4, #785]	; 0x311
 8001250:	f346 2607 	sbfx	r6, r6, #8, #8
 8001254:	f884 230f 	strb.w	r2, [r4, #783]	; 0x30f
 8001258:	f884 3310 	strb.w	r3, [r4, #784]	; 0x310
 800125c:	f884 6312 	strb.w	r6, [r4, #786]	; 0x312
 8001260:	f204 3111 	addw	r1, r4, #785	; 0x311
 8001264:	2205      	movs	r2, #5
 8001266:	2300      	movs	r3, #0
 8001268:	1d86      	adds	r6, r0, #6
 800126a:	42b2      	cmp	r2, r6
 800126c:	dc04      	bgt.n	8001278 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0x64>
 800126e:	f811 5b01 	ldrb.w	r5, [r1], #1
 8001272:	3201      	adds	r2, #1
 8001274:	442b      	add	r3, r5
 8001276:	e7f8      	b.n	800126a <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0x56>
 8001278:	f100 0508 	add.w	r5, r0, #8
 800127c:	4420      	add	r0, r4
 800127e:	43db      	mvns	r3, r3
 8001280:	f5b5 7f00 	cmp.w	r5, #512	; 0x200
 8001284:	f880 3313 	strb.w	r3, [r0, #787]	; 0x313
 8001288:	dc0c      	bgt.n	80012a4 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0x90>
 800128a:	f504 7743 	add.w	r7, r4, #780	; 0x30c
 800128e:	463e      	mov	r6, r7
 8001290:	3404      	adds	r4, #4
 8001292:	1bf3      	subs	r3, r6, r7
 8001294:	429d      	cmp	r5, r3
 8001296:	dd0c      	ble.n	80012b2 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0x9e>
 8001298:	f816 1b01 	ldrb.w	r1, [r6], #1
 800129c:	4620      	mov	r0, r4
 800129e:	f000 fc0b 	bl	8001ab8 <BufferedSerial::putc(int)>
 80012a2:	e7f6      	b.n	8001292 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0x7e>
 80012a4:	4a04      	ldr	r2, [pc, #16]	; (80012b8 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0xa4>)
 80012a6:	2103      	movs	r1, #3
 80012a8:	4620      	mov	r0, r4
 80012aa:	f7ff fd25 	bl	8000cf8 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::log(char, char const*)>
 80012ae:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
 80012b2:	4628      	mov	r0, r5
 80012b4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80012b6:	bf00      	nop
 80012b8:	08006c0c 	.word	0x08006c0c

080012bc <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()>:
 80012bc:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, r10, r11, lr}
 80012c0:	f100 09ec 	add.w	r9, r0, #236	; 0xec
 80012c4:	4604      	mov	r4, r0
 80012c6:	4648      	mov	r0, r9
 80012c8:	f003 ffd8 	bl	800527c <mbed::Timer::read_ms()>
 80012cc:	f8d4 35f0 	ldr.w	r3, [r4, #1520]	; 0x5f0
 80012d0:	f642 22f8 	movw	r2, #11000	; 0x2af8
 80012d4:	1ac3      	subs	r3, r0, r3
 80012d6:	4293      	cmp	r3, r2
 80012d8:	bf84      	itt	hi
 80012da:	2300      	movhi	r3, #0
 80012dc:	f884 35e8 	strbhi.w	r3, [r4, #1512]	; 0x5e8
 80012e0:	f8d4 35d4 	ldr.w	r3, [r4, #1492]	; 0x5d4
 80012e4:	4605      	mov	r5, r0
 80012e6:	b133      	cbz	r3, 80012f6 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x3a>
 80012e8:	f8d4 35f4 	ldr.w	r3, [r4, #1524]	; 0x5f4
 80012ec:	4283      	cmp	r3, r0
 80012ee:	bf3c      	itt	cc
 80012f0:	2300      	movcc	r3, #0
 80012f2:	f8c4 35d4 	strcc.w	r3, [r4, #1492]	; 0x5d4
 80012f6:	2700      	movs	r7, #0
 80012f8:	46ba      	mov	r10, r7
 80012fa:	f104 0b04 	add.w	r11, r4, #4
 80012fe:	463e      	mov	r6, r7
 8001300:	f504 7886 	add.w	r8, r4, #268	; 0x10c
 8001304:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8001308:	b9e3      	cbnz	r3, 8001344 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x88>
 800130a:	4658      	mov	r0, r11
 800130c:	f000 fa84 	bl	8001818 <BufferedSerial::readable()>
 8001310:	bb18      	cbnz	r0, 800135a <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x9e>
 8001312:	f894 35e8 	ldrb.w	r3, [r4, #1512]	; 0x5e8
 8001316:	b15b      	cbz	r3, 8001330 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x74>
 8001318:	f8d4 35ec 	ldr.w	r3, [r4, #1516]	; 0x5ec
 800131c:	f640 12c4 	movw	r2, #2500	; 0x9c4
 8001320:	1aeb      	subs	r3, r5, r3
 8001322:	4293      	cmp	r3, r2
 8001324:	d904      	bls.n	8001330 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x74>
 8001326:	4620      	mov	r0, r4
 8001328:	f7ff fcf6 	bl	8000d18 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::requestSyncTime()>
 800132c:	f8c4 55ec 	str.w	r5, [r4, #1516]	; 0x5ec
 8001330:	2f00      	cmp	r7, #0
 8001332:	f040 80d7 	bne.w	80014e4 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x228>
 8001336:	f1ba 0f00 	cmp.w	r10, #0
 800133a:	bf14      	ite	ne
 800133c:	f06f 0002 	mvnne.w	r0, #2
 8001340:	2000      	moveq	r0, #0
 8001342:	e0a7      	b.n	8001494 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x1d8>
 8001344:	4648      	mov	r0, r9
 8001346:	f003 ff99 	bl	800527c <mbed::Timer::read_ms()>
 800134a:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 800134e:	1b40      	subs	r0, r0, r5
 8001350:	4298      	cmp	r0, r3
 8001352:	d9da      	bls.n	800130a <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x4e>
 8001354:	f06f 0001 	mvn.w	r0, #1
 8001358:	e09c      	b.n	8001494 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x1d8>
 800135a:	4658      	mov	r0, r11
 800135c:	f000 fa66 	bl	800182c <BufferedSerial::getc()>
 8001360:	2800      	cmp	r0, #0
 8001362:	dbd6      	blt.n	8001312 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x56>
 8001364:	f8d4 35e4 	ldr.w	r3, [r4, #1508]	; 0x5e4
 8001368:	f8d4 25d4 	ldr.w	r2, [r4, #1492]	; 0x5d4
 800136c:	4403      	add	r3, r0
 800136e:	2a07      	cmp	r2, #7
 8001370:	f8c4 35e4 	str.w	r3, [r4, #1508]	; 0x5e4
 8001374:	d110      	bne.n	8001398 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0xdc>
 8001376:	f8d4 35e0 	ldr.w	r3, [r4, #1504]	; 0x5e0
 800137a:	1c5a      	adds	r2, r3, #1
 800137c:	4423      	add	r3, r4
 800137e:	f8c4 25e0 	str.w	r2, [r4, #1504]	; 0x5e0
 8001382:	f883 010c 	strb.w	r0, [r3, #268]	; 0x10c
 8001386:	f8d4 35d8 	ldr.w	r3, [r4, #1496]	; 0x5d8
 800138a:	3b01      	subs	r3, #1
 800138c:	f8c4 35d8 	str.w	r3, [r4, #1496]	; 0x5d8
 8001390:	2b00      	cmp	r3, #0
 8001392:	d1b7      	bne.n	8001304 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x48>
 8001394:	2308      	movs	r3, #8
 8001396:	e01c      	b.n	80013d2 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x116>
 8001398:	b9b2      	cbnz	r2, 80013c8 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x10c>
 800139a:	28ff      	cmp	r0, #255	; 0xff
 800139c:	d107      	bne.n	80013ae <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0xf2>
 800139e:	2301      	movs	r3, #1
 80013a0:	f8c4 35d4 	str.w	r3, [r4, #1492]	; 0x5d4
 80013a4:	f105 0314 	add.w	r3, r5, #20
 80013a8:	f8c4 35f4 	str.w	r3, [r4, #1524]	; 0x5f4
 80013ac:	e7aa      	b.n	8001304 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x48>
 80013ae:	4648      	mov	r0, r9
 80013b0:	9201      	str	r2, [sp, #4]
 80013b2:	f003 ff63 	bl	800527c <mbed::Timer::read_ms()>
 80013b6:	f241 3388 	movw	r3, #5000	; 0x1388
 80013ba:	1b40      	subs	r0, r0, r5
 80013bc:	4298      	cmp	r0, r3
 80013be:	9a01      	ldr	r2, [sp, #4]
 80013c0:	d9a0      	bls.n	8001304 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x48>
 80013c2:	f884 25e8 	strb.w	r2, [r4, #1512]	; 0x5e8
 80013c6:	e7c5      	b.n	8001354 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x98>
 80013c8:	2a01      	cmp	r2, #1
 80013ca:	d10f      	bne.n	80013ec <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x130>
 80013cc:	28fe      	cmp	r0, #254	; 0xfe
 80013ce:	d103      	bne.n	80013d8 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x11c>
 80013d0:	2302      	movs	r3, #2
 80013d2:	f8c4 35d4 	str.w	r3, [r4, #1492]	; 0x5d4
 80013d6:	e795      	b.n	8001304 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x48>
 80013d8:	f894 35e8 	ldrb.w	r3, [r4, #1512]	; 0x5e8
 80013dc:	f8c4 65d4 	str.w	r6, [r4, #1492]	; 0x5d4
 80013e0:	2b00      	cmp	r3, #0
 80013e2:	d18f      	bne.n	8001304 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x48>
 80013e4:	4620      	mov	r0, r4
 80013e6:	f7ff fc97 	bl	8000d18 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::requestSyncTime()>
 80013ea:	e78b      	b.n	8001304 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x48>
 80013ec:	2a02      	cmp	r2, #2
 80013ee:	d109      	bne.n	8001404 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x148>
 80013f0:	f8c4 05d8 	str.w	r0, [r4, #1496]	; 0x5d8
 80013f4:	f8c4 65e0 	str.w	r6, [r4, #1504]	; 0x5e0
 80013f8:	2303      	movs	r3, #3
 80013fa:	f8c4 35d4 	str.w	r3, [r4, #1492]	; 0x5d4
 80013fe:	f8c4 05e4 	str.w	r0, [r4, #1508]	; 0x5e4
 8001402:	e77f      	b.n	8001304 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x48>
 8001404:	2a03      	cmp	r2, #3
 8001406:	d107      	bne.n	8001418 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x15c>
 8001408:	f8d4 35d8 	ldr.w	r3, [r4, #1496]	; 0x5d8
 800140c:	eb03 2000 	add.w	r0, r3, r0, lsl #8
 8001410:	f8c4 05d8 	str.w	r0, [r4, #1496]	; 0x5d8
 8001414:	2304      	movs	r3, #4
 8001416:	e7dc      	b.n	80013d2 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x116>
 8001418:	2a04      	cmp	r2, #4
 800141a:	d10b      	bne.n	8001434 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x178>
 800141c:	425a      	negs	r2, r3
 800141e:	b2d2      	uxtb	r2, r2
 8001420:	b2db      	uxtb	r3, r3
 8001422:	bf58      	it	pl
 8001424:	4253      	negpl	r3, r2
 8001426:	2bff      	cmp	r3, #255	; 0xff
 8001428:	d101      	bne.n	800142e <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x172>
 800142a:	2305      	movs	r3, #5
 800142c:	e7d1      	b.n	80013d2 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x116>
 800142e:	f8c4 65d4 	str.w	r6, [r4, #1492]	; 0x5d4
 8001432:	e767      	b.n	8001304 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x48>
 8001434:	2a05      	cmp	r2, #5
 8001436:	d103      	bne.n	8001440 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x184>
 8001438:	f8c4 05dc 	str.w	r0, [r4, #1500]	; 0x5dc
 800143c:	2306      	movs	r3, #6
 800143e:	e7dc      	b.n	80013fa <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x13e>
 8001440:	2a06      	cmp	r2, #6
 8001442:	d10b      	bne.n	800145c <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x1a0>
 8001444:	f8d4 35dc 	ldr.w	r3, [r4, #1500]	; 0x5dc
 8001448:	eb03 2000 	add.w	r0, r3, r0, lsl #8
 800144c:	2307      	movs	r3, #7
 800144e:	f8c4 35d4 	str.w	r3, [r4, #1492]	; 0x5d4
 8001452:	f8c4 05dc 	str.w	r0, [r4, #1500]	; 0x5dc
 8001456:	f8d4 35d8 	ldr.w	r3, [r4, #1496]	; 0x5d8
 800145a:	e799      	b.n	8001390 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0xd4>
 800145c:	2a08      	cmp	r2, #8
 800145e:	f47f af51 	bne.w	8001304 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x48>
 8001462:	425a      	negs	r2, r3
 8001464:	b2d2      	uxtb	r2, r2
 8001466:	b2db      	uxtb	r3, r3
 8001468:	bf58      	it	pl
 800146a:	4253      	negpl	r3, r2
 800146c:	2bff      	cmp	r3, #255	; 0xff
 800146e:	f8c4 65d4 	str.w	r6, [r4, #1492]	; 0x5d4
 8001472:	f47f af47 	bne.w	8001304 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x48>
 8001476:	f8d4 35dc 	ldr.w	r3, [r4, #1500]	; 0x5dc
 800147a:	b973      	cbnz	r3, 800149a <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x1de>
 800147c:	4620      	mov	r0, r4
 800147e:	f7ff fc4b 	bl	8000d18 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::requestSyncTime()>
 8001482:	4620      	mov	r0, r4
 8001484:	f7ff fc60 	bl	8000d48 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::negotiateTopics()>
 8001488:	f8c4 55ec 	str.w	r5, [r4, #1516]	; 0x5ec
 800148c:	f8c4 55f0 	str.w	r5, [r4, #1520]	; 0x5f0
 8001490:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8001494:	b003      	add	sp, #12
 8001496:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, pc}
 800149a:	2b0a      	cmp	r3, #10
 800149c:	d105      	bne.n	80014aa <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x1ee>
 800149e:	4641      	mov	r1, r8
 80014a0:	4620      	mov	r0, r4
 80014a2:	f7ff fcaf 	bl	8000e04 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::syncTime(unsigned char*)>
 80014a6:	2701      	movs	r7, #1
 80014a8:	e72c      	b.n	8001304 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x48>
 80014aa:	2b06      	cmp	r3, #6
 80014ac:	d108      	bne.n	80014c0 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x204>
 80014ae:	4641      	mov	r1, r8
 80014b0:	f204 50fc 	addw	r0, r4, #1532	; 0x5fc
 80014b4:	f7ff fa81 	bl	80009ba <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)>
 80014b8:	2301      	movs	r3, #1
 80014ba:	f884 35f8 	strb.w	r3, [r4, #1528]	; 0x5f8
 80014be:	e721      	b.n	8001304 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x48>
 80014c0:	2b0b      	cmp	r3, #11
 80014c2:	d104      	bne.n	80014ce <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x212>
 80014c4:	f884 65e8 	strb.w	r6, [r4, #1512]	; 0x5e8
 80014c8:	f04f 0a01 	mov.w	r10, #1
 80014cc:	e71a      	b.n	8001304 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x48>
 80014ce:	33f8      	adds	r3, #248	; 0xf8
 80014d0:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 80014d4:	2800      	cmp	r0, #0
 80014d6:	f43f af15 	beq.w	8001304 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x48>
 80014da:	6803      	ldr	r3, [r0, #0]
 80014dc:	4641      	mov	r1, r8
 80014de:	681b      	ldr	r3, [r3, #0]
 80014e0:	4798      	blx	r3
 80014e2:	e70f      	b.n	8001304 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x48>
 80014e4:	f06f 0003 	mvn.w	r0, #3
 80014e8:	e7d4      	b.n	8001494 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x1d8>
	...

080014ec <main>:
 80014ec:	b500      	push	{lr}
 80014ee:	4c1f      	ldr	r4, [pc, #124]	; (800156c <main+0x80>)
 80014f0:	4a1f      	ldr	r2, [pc, #124]	; (8001570 <main+0x84>)
 80014f2:	4d20      	ldr	r5, [pc, #128]	; (8001574 <main+0x88>)
 80014f4:	b089      	sub	sp, #36	; 0x24
 80014f6:	2100      	movs	r1, #0
 80014f8:	4620      	mov	r0, r4
 80014fa:	f7ff fbfd 	bl	8000cf8 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::log(char, char const*)>
 80014fe:	2303      	movs	r3, #3
 8001500:	200c      	movs	r0, #12
 8001502:	626b      	str	r3, [r5, #36]	; 0x24
 8001504:	f004 fcf8 	bl	8005ef8 <malloc>
 8001508:	f8d4 10e8 	ldr.w	r1, [r4, #232]	; 0xe8
 800150c:	62e8      	str	r0, [r5, #44]	; 0x2c
 800150e:	1d20      	adds	r0, r4, #4
 8001510:	f003 fff6 	bl	8005500 <mbed::SerialBase::baud(int)>
 8001514:	2300      	movs	r3, #0
 8001516:	f8c4 35d4 	str.w	r3, [r4, #1492]	; 0x5d4
 800151a:	f8c4 35d8 	str.w	r3, [r4, #1496]	; 0x5d8
 800151e:	f8c4 35e0 	str.w	r3, [r4, #1504]	; 0x5e0
 8001522:	f8c4 35dc 	str.w	r3, [r4, #1500]	; 0x5dc
 8001526:	f7ff fb9d 	bl	8000c64 <initRosTopics()>
 800152a:	4813      	ldr	r0, [pc, #76]	; (8001578 <main+0x8c>)
 800152c:	f003 fe59 	bl	80051e2 <mbed::Timer::start()>
 8001530:	4b12      	ldr	r3, [pc, #72]	; (800157c <main+0x90>)
 8001532:	9300      	str	r3, [sp, #0]
 8001534:	4669      	mov	r1, sp
 8001536:	4b12      	ldr	r3, [pc, #72]	; (8001580 <main+0x94>)
 8001538:	9303      	str	r3, [sp, #12]
 800153a:	a804      	add	r0, sp, #16
 800153c:	f7ff f8b3 	bl	80006a6 <mbed::Callback<void ()>::Callback(mbed::Callback<void ()> const&)>
 8001540:	4810      	ldr	r0, [pc, #64]	; (8001584 <main+0x98>)
 8001542:	f7ff f88d 	bl	8000660 <mbed::Callback<void ()>::~Callback()>
 8001546:	a904      	add	r1, sp, #16
 8001548:	480e      	ldr	r0, [pc, #56]	; (8001584 <main+0x98>)
 800154a:	f7ff f8ac 	bl	80006a6 <mbed::Callback<void ()>::Callback(mbed::Callback<void ()> const&)>
 800154e:	490e      	ldr	r1, [pc, #56]	; (8001588 <main+0x9c>)
 8001550:	480e      	ldr	r0, [pc, #56]	; (800158c <main+0xa0>)
 8001552:	f003 fe11 	bl	8005178 <mbed::Ticker::setup(unsigned long)>
 8001556:	a804      	add	r0, sp, #16
 8001558:	f7ff f882 	bl	8000660 <mbed::Callback<void ()>::~Callback()>
 800155c:	4668      	mov	r0, sp
 800155e:	f7ff f87f 	bl	8000660 <mbed::Callback<void ()>::~Callback()>
 8001562:	4620      	mov	r0, r4
 8001564:	f7ff feaa 	bl	80012bc <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()>
 8001568:	e7fb      	b.n	8001562 <main+0x76>
 800156a:	bf00      	nop
 800156c:	20000574 	.word	0x20000574
 8001570:	08006d8b 	.word	0x08006d8b
 8001574:	200002c0 	.word	0x200002c0
 8001578:	20000ca0 	.word	0x20000ca0
 800157c:	08000519 	.word	0x08000519
 8001580:	08006a98 	.word	0x08006a98
 8001584:	20000550 	.word	0x20000550
 8001588:	000186a0 	.word	0x000186a0
 800158c:	20000538 	.word	0x20000538

08001590 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::~NodeHandle_()>:
 8001590:	b510      	push	{r4, lr}
 8001592:	4b04      	ldr	r3, [pc, #16]	; (80015a4 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::~NodeHandle_()+0x14>)
 8001594:	4604      	mov	r4, r0
 8001596:	f840 3b04 	str.w	r3, [r0], #4
 800159a:	f000 f9d1 	bl	8001940 <BufferedSerial::~BufferedSerial()>
 800159e:	4620      	mov	r0, r4
 80015a0:	bd10      	pop	{r4, pc}
 80015a2:	bf00      	nop
 80015a4:	08006a44 	.word	0x08006a44

080015a8 <Encoder::~Encoder()>:
 80015a8:	b510      	push	{r4, lr}
 80015aa:	4604      	mov	r4, r0
 80015ac:	3050      	adds	r0, #80	; 0x50
 80015ae:	f003 feb1 	bl	8005314 <mbed::InterruptIn::~InterruptIn()>
 80015b2:	4620      	mov	r0, r4
 80015b4:	f003 feae 	bl	8005314 <mbed::InterruptIn::~InterruptIn()>
 80015b8:	4620      	mov	r0, r4
 80015ba:	bd10      	pop	{r4, pc}

080015bc <void mbed::Callback<void ()>::function_move<mbed::Callback<void ()>::method_context<Encoder, void (Encoder::*)()> >(void*, void const*)>:
 80015bc:	4603      	mov	r3, r0
 80015be:	b110      	cbz	r0, 80015c6 <void mbed::Callback<void ()>::function_move<mbed::Callback<void ()>::method_context<Encoder, void (Encoder::*)()> >(void*, void const*)+0xa>
 80015c0:	c907      	ldmia	r1, {r0, r1, r2}
 80015c2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80015c6:	4770      	bx	lr

080015c8 <void mbed::Callback<void ()>::function_dtor<mbed::Callback<void ()>::method_context<Encoder, void (Encoder::*)()> >(void*)>:
 80015c8:	4770      	bx	lr

080015ca <void mbed::Callback<void ()>::function_call<mbed::Callback<void ()>::method_context<Encoder, void (Encoder::*)()> >(void const*)>:
 80015ca:	6842      	ldr	r2, [r0, #4]
 80015cc:	6881      	ldr	r1, [r0, #8]
 80015ce:	6803      	ldr	r3, [r0, #0]
 80015d0:	f012 0f01 	tst.w	r2, #1
 80015d4:	ea4f 0262 	mov.w	r2, r2, asr #1
 80015d8:	bf1c      	itt	ne
 80015da:	5888      	ldrne	r0, [r1, r2]
 80015dc:	58c3      	ldrne	r3, [r0, r3]
 80015de:	1888      	adds	r0, r1, r2
 80015e0:	4718      	bx	r3

080015e2 <Encoder::incrementEncTicks()>:
 80015e2:	b538      	push	{r3, r4, r5, lr}
 80015e4:	4604      	mov	r4, r0
 80015e6:	f003 fe8d 	bl	8005304 <mbed::InterruptIn::read()>
 80015ea:	4605      	mov	r5, r0
 80015ec:	f104 0050 	add.w	r0, r4, #80	; 0x50
 80015f0:	f003 fe88 	bl	8005304 <mbed::InterruptIn::read()>
 80015f4:	f894 30a0 	ldrb.w	r3, [r4, #160]	; 0xa0
 80015f8:	ea40 0045 	orr.w	r0, r0, r5, lsl #1
 80015fc:	f8c4 00b4 	str.w	r0, [r4, #180]	; 0xb4
 8001600:	b9b3      	cbnz	r3, 8001630 <Encoder::incrementEncTicks()+0x4e>
 8001602:	f8d4 30b8 	ldr.w	r3, [r4, #184]	; 0xb8
 8001606:	2b03      	cmp	r3, #3
 8001608:	d102      	bne.n	8001610 <Encoder::incrementEncTicks()+0x2e>
 800160a:	f8d4 30b4 	ldr.w	r3, [r4, #180]	; 0xb4
 800160e:	b133      	cbz	r3, 800161e <Encoder::incrementEncTicks()+0x3c>
 8001610:	f8d4 30b8 	ldr.w	r3, [r4, #184]	; 0xb8
 8001614:	bb4b      	cbnz	r3, 800166a <Encoder::incrementEncTicks()+0x88>
 8001616:	f8d4 30b4 	ldr.w	r3, [r4, #180]	; 0xb4
 800161a:	2b03      	cmp	r3, #3
 800161c:	d125      	bne.n	800166a <Encoder::incrementEncTicks()+0x88>
 800161e:	f8d4 30b0 	ldr.w	r3, [r4, #176]	; 0xb0
 8001622:	3301      	adds	r3, #1
 8001624:	f8c4 30b0 	str.w	r3, [r4, #176]	; 0xb0
 8001628:	2300      	movs	r3, #0
 800162a:	f884 30bd 	strb.w	r3, [r4, #189]	; 0xbd
 800162e:	e00c      	b.n	800164a <Encoder::incrementEncTicks()+0x68>
 8001630:	f8d4 30b4 	ldr.w	r3, [r4, #180]	; 0xb4
 8001634:	f8d4 20b8 	ldr.w	r2, [r4, #184]	; 0xb8
 8001638:	4053      	eors	r3, r2
 800163a:	2b03      	cmp	r3, #3
 800163c:	d005      	beq.n	800164a <Encoder::incrementEncTicks()+0x68>
 800163e:	f8d4 20b4 	ldr.w	r2, [r4, #180]	; 0xb4
 8001642:	f8d4 30b8 	ldr.w	r3, [r4, #184]	; 0xb8
 8001646:	429a      	cmp	r2, r3
 8001648:	d126      	bne.n	8001698 <Encoder::incrementEncTicks()+0xb6>
 800164a:	f8d4 30b4 	ldr.w	r3, [r4, #180]	; 0xb4
 800164e:	f8c4 30b8 	str.w	r3, [r4, #184]	; 0xb8
 8001652:	bd38      	pop	{r3, r4, r5, pc}
 8001654:	2301      	movs	r3, #1
 8001656:	f884 30bd 	strb.w	r3, [r4, #189]	; 0xbd
 800165a:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800165e:	f8d4 20b0 	ldr.w	r2, [r4, #176]	; 0xb0
 8001662:	1ad3      	subs	r3, r2, r3
 8001664:	f8c4 30b0 	str.w	r3, [r4, #176]	; 0xb0
 8001668:	e7ef      	b.n	800164a <Encoder::incrementEncTicks()+0x68>
 800166a:	f8d4 30b8 	ldr.w	r3, [r4, #184]	; 0xb8
 800166e:	2b02      	cmp	r3, #2
 8001670:	d103      	bne.n	800167a <Encoder::incrementEncTicks()+0x98>
 8001672:	f8d4 30b4 	ldr.w	r3, [r4, #180]	; 0xb4
 8001676:	2b01      	cmp	r3, #1
 8001678:	d007      	beq.n	800168a <Encoder::incrementEncTicks()+0xa8>
 800167a:	f8d4 30b8 	ldr.w	r3, [r4, #184]	; 0xb8
 800167e:	2b01      	cmp	r3, #1
 8001680:	d1e3      	bne.n	800164a <Encoder::incrementEncTicks()+0x68>
 8001682:	f8d4 30b4 	ldr.w	r3, [r4, #180]	; 0xb4
 8001686:	2b02      	cmp	r3, #2
 8001688:	d1df      	bne.n	800164a <Encoder::incrementEncTicks()+0x68>
 800168a:	f8d4 30b0 	ldr.w	r3, [r4, #176]	; 0xb0
 800168e:	3b01      	subs	r3, #1
 8001690:	f8c4 30b0 	str.w	r3, [r4, #176]	; 0xb0
 8001694:	2301      	movs	r3, #1
 8001696:	e7c8      	b.n	800162a <Encoder::incrementEncTicks()+0x48>
 8001698:	f8d4 30b8 	ldr.w	r3, [r4, #184]	; 0xb8
 800169c:	f8d4 20b4 	ldr.w	r2, [r4, #180]	; 0xb4
 80016a0:	ea83 0362 	eor.w	r3, r3, r2, asr #1
 80016a4:	f013 0301 	ands.w	r3, r3, #1
 80016a8:	d0d4      	beq.n	8001654 <Encoder::incrementEncTicks()+0x72>
 80016aa:	2200      	movs	r2, #0
 80016ac:	f884 20bd 	strb.w	r2, [r4, #189]	; 0xbd
 80016b0:	e7d5      	b.n	800165e <Encoder::incrementEncTicks()+0x7c>

080016b2 <Encoder::getEncTicks()>:
 80016b2:	f8d0 00b0 	ldr.w	r0, [r0, #176]	; 0xb0
 80016b6:	4770      	bx	lr

080016b8 <Encoder::getCurAngle()>:
 80016b8:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 80016bc:	f8d0 20a8 	ldr.w	r2, [r0, #168]	; 0xa8
 80016c0:	ed90 7a2c 	vldr	s14, [r0, #176]	; 0xb0
 80016c4:	eddf 7a09 	vldr	s15, [pc, #36]	; 80016ec <Encoder::getCurAngle()+0x34>
 80016c8:	435a      	muls	r2, r3
 80016ca:	f8d0 30ac 	ldr.w	r3, [r0, #172]	; 0xac
 80016ce:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80016d2:	4353      	muls	r3, r2
 80016d4:	ee27 7a27 	vmul.f32	s14, s14, s15
 80016d8:	ee07 3a90 	vmov	s15, r3
 80016dc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80016e0:	eec7 6a27 	vdiv.f32	s13, s14, s15
 80016e4:	ee16 0a90 	vmov	r0, s13
 80016e8:	4770      	bx	lr
 80016ea:	bf00      	nop
 80016ec:	43b40000 	.word	0x43b40000

080016f0 <Encoder::Encoder(PinName, PinName, int, int, bool)>:
 80016f0:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 80016f4:	4604      	mov	r4, r0
 80016f6:	4617      	mov	r7, r2
 80016f8:	f104 0550 	add.w	r5, r4, #80	; 0x50
 80016fc:	461e      	mov	r6, r3
 80016fe:	f003 fe39 	bl	8005374 <mbed::InterruptIn::InterruptIn(PinName)>
 8001702:	4639      	mov	r1, r7
 8001704:	4628      	mov	r0, r5
 8001706:	f003 fe35 	bl	8005374 <mbed::InterruptIn::InterruptIn(PinName)>
 800170a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800170c:	f8c4 30a4 	str.w	r3, [r4, #164]	; 0xa4
 8001710:	f89d 302c 	ldrb.w	r3, [sp, #44]	; 0x2c
 8001714:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
 8001718:	f8c4 60a8 	str.w	r6, [r4, #168]	; 0xa8
 800171c:	4620      	mov	r0, r4
 800171e:	f003 fdf1 	bl	8005304 <mbed::InterruptIn::read()>
 8001722:	4606      	mov	r6, r0
 8001724:	4628      	mov	r0, r5
 8001726:	f003 fded 	bl	8005304 <mbed::InterruptIn::read()>
 800172a:	ea40 0046 	orr.w	r0, r0, r6, lsl #1
 800172e:	f8c4 00b4 	str.w	r0, [r4, #180]	; 0xb4
 8001732:	f8d4 30b4 	ldr.w	r3, [r4, #180]	; 0xb4
 8001736:	f8c4 30b8 	str.w	r3, [r4, #184]	; 0xb8
 800173a:	4669      	mov	r1, sp
 800173c:	f8df 8080 	ldr.w	r8, [pc, #128]	; 80017c0 <Encoder::Encoder(PinName, PinName, int, int, bool)+0xd0>
 8001740:	4e1e      	ldr	r6, [pc, #120]	; (80017bc <Encoder::Encoder(PinName, PinName, int, int, bool)+0xcc>)
 8001742:	f8cd 8000 	str.w	r8, [sp]
 8001746:	2700      	movs	r7, #0
 8001748:	4620      	mov	r0, r4
 800174a:	9701      	str	r7, [sp, #4]
 800174c:	9402      	str	r4, [sp, #8]
 800174e:	9603      	str	r6, [sp, #12]
 8001750:	f003 fe5a 	bl	8005408 <mbed::InterruptIn::rise(mbed::Callback<void ()>)>
 8001754:	4668      	mov	r0, sp
 8001756:	f7fe ff83 	bl	8000660 <mbed::Callback<void ()>::~Callback()>
 800175a:	4669      	mov	r1, sp
 800175c:	4620      	mov	r0, r4
 800175e:	f8cd 8000 	str.w	r8, [sp]
 8001762:	9701      	str	r7, [sp, #4]
 8001764:	9402      	str	r4, [sp, #8]
 8001766:	9603      	str	r6, [sp, #12]
 8001768:	f003 fe74 	bl	8005454 <mbed::InterruptIn::fall(mbed::Callback<void ()>)>
 800176c:	4668      	mov	r0, sp
 800176e:	f7fe ff77 	bl	8000660 <mbed::Callback<void ()>::~Callback()>
 8001772:	f894 30a0 	ldrb.w	r3, [r4, #160]	; 0xa0
 8001776:	b1f3      	cbz	r3, 80017b6 <Encoder::Encoder(PinName, PinName, int, int, bool)+0xc6>
 8001778:	4669      	mov	r1, sp
 800177a:	4628      	mov	r0, r5
 800177c:	f8cd 8000 	str.w	r8, [sp]
 8001780:	9701      	str	r7, [sp, #4]
 8001782:	9402      	str	r4, [sp, #8]
 8001784:	9603      	str	r6, [sp, #12]
 8001786:	f003 fe3f 	bl	8005408 <mbed::InterruptIn::rise(mbed::Callback<void ()>)>
 800178a:	4668      	mov	r0, sp
 800178c:	f7fe ff68 	bl	8000660 <mbed::Callback<void ()>::~Callback()>
 8001790:	4669      	mov	r1, sp
 8001792:	4628      	mov	r0, r5
 8001794:	f8cd 8000 	str.w	r8, [sp]
 8001798:	9701      	str	r7, [sp, #4]
 800179a:	9402      	str	r4, [sp, #8]
 800179c:	9603      	str	r6, [sp, #12]
 800179e:	f003 fe59 	bl	8005454 <mbed::InterruptIn::fall(mbed::Callback<void ()>)>
 80017a2:	4668      	mov	r0, sp
 80017a4:	f7fe ff5c 	bl	8000660 <mbed::Callback<void ()>::~Callback()>
 80017a8:	2304      	movs	r3, #4
 80017aa:	4620      	mov	r0, r4
 80017ac:	f8c4 30ac 	str.w	r3, [r4, #172]	; 0xac
 80017b0:	b004      	add	sp, #16
 80017b2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80017b6:	2302      	movs	r3, #2
 80017b8:	e7f7      	b.n	80017aa <Encoder::Encoder(PinName, PinName, int, int, bool)+0xba>
 80017ba:	bf00      	nop
 80017bc:	08006d9c 	.word	0x08006d9c
 80017c0:	080015e3 	.word	0x080015e3

080017c4 <_start>:
 80017c4:	4807      	ldr	r0, [pc, #28]	; (80017e4 <_start+0x20>)
 80017c6:	4a08      	ldr	r2, [pc, #32]	; (80017e8 <_start+0x24>)
 80017c8:	b508      	push	{r3, lr}
 80017ca:	1a12      	subs	r2, r2, r0
 80017cc:	2100      	movs	r1, #0
 80017ce:	f004 fc1c 	bl	800600a <memset>
 80017d2:	f004 f885 	bl	80058e0 <software_init_hook>
 80017d6:	f004 fb6b 	bl	8005eb0 <__libc_init_array>
 80017da:	f004 f888 	bl	80058ee <__wrap_main>
 80017de:	f004 f8c3 	bl	8005968 <__wrap_exit>
 80017e2:	bf00      	nop
 80017e4:	20000238 	.word	0x20000238
 80017e8:	20002e28 	.word	0x20002e28

080017ec <abort>:
 80017ec:	b508      	push	{r3, lr}
 80017ee:	2001      	movs	r0, #1
 80017f0:	f004 f8ba 	bl	8005968 <__wrap_exit>

080017f4 <__cxa_pure_virtual>:
 80017f4:	b508      	push	{r3, lr}
 80017f6:	f7ff fff9 	bl	80017ec <abort>
	...

080017fc <ros::normalizeSecNSec(unsigned long&, unsigned long&)>:
 80017fc:	b530      	push	{r4, r5, lr}
 80017fe:	6802      	ldr	r2, [r0, #0]
 8001800:	680d      	ldr	r5, [r1, #0]
 8001802:	4c04      	ldr	r4, [pc, #16]	; (8001814 <ros::normalizeSecNSec(unsigned long&, unsigned long&)+0x18>)
 8001804:	fbb5 f3f4 	udiv	r3, r5, r4
 8001808:	441a      	add	r2, r3
 800180a:	fb04 5313 	mls	r3, r4, r3, r5
 800180e:	6002      	str	r2, [r0, #0]
 8001810:	600b      	str	r3, [r1, #0]
 8001812:	bd30      	pop	{r4, r5, pc}
 8001814:	3b9aca00 	.word	0x3b9aca00

08001818 <BufferedSerial::readable()>:
 8001818:	f8d0 20c0 	ldr.w	r2, [r0, #192]	; 0xc0
 800181c:	f8d0 00c4 	ldr.w	r0, [r0, #196]	; 0xc4
 8001820:	1a10      	subs	r0, r2, r0
 8001822:	bf18      	it	ne
 8001824:	2001      	movne	r0, #1
 8001826:	4770      	bx	lr

08001828 <BufferedSerial::writeable()>:
 8001828:	2001      	movs	r0, #1
 800182a:	4770      	bx	lr

0800182c <BufferedSerial::getc()>:
 800182c:	b510      	push	{r4, lr}
 800182e:	f8d0 20c4 	ldr.w	r2, [r0, #196]	; 0xc4
 8001832:	f8d0 10bc 	ldr.w	r1, [r0, #188]	; 0xbc
 8001836:	4603      	mov	r3, r0
 8001838:	1c50      	adds	r0, r2, #1
 800183a:	f8c3 00c4 	str.w	r0, [r3, #196]	; 0xc4
 800183e:	5c88      	ldrb	r0, [r1, r2]
 8001840:	f8d3 20c8 	ldr.w	r2, [r3, #200]	; 0xc8
 8001844:	f8d3 40c4 	ldr.w	r4, [r3, #196]	; 0xc4
 8001848:	3a01      	subs	r2, #1
 800184a:	fbb4 f1f2 	udiv	r1, r4, r2
 800184e:	fb02 4211 	mls	r2, r2, r1, r4
 8001852:	f8c3 20c4 	str.w	r2, [r3, #196]	; 0xc4
 8001856:	bd10      	pop	{r4, pc}

08001858 <void mbed::Callback<void ()>::function_move<mbed::Callback<void ()>::method_context<BufferedSerial, void (BufferedSerial::*)()> >(void*, void const*)>:
 8001858:	4603      	mov	r3, r0
 800185a:	b110      	cbz	r0, 8001862 <void mbed::Callback<void ()>::function_move<mbed::Callback<void ()>::method_context<BufferedSerial, void (BufferedSerial::*)()> >(void*, void const*)+0xa>
 800185c:	c907      	ldmia	r1, {r0, r1, r2}
 800185e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8001862:	4770      	bx	lr

08001864 <void mbed::Callback<void ()>::function_dtor<mbed::Callback<void ()>::method_context<BufferedSerial, void (BufferedSerial::*)()> >(void*)>:
 8001864:	4770      	bx	lr

08001866 <void mbed::Callback<void ()>::function_call<mbed::Callback<void ()>::method_context<BufferedSerial, void (BufferedSerial::*)()> >(void const*)>:
 8001866:	6842      	ldr	r2, [r0, #4]
 8001868:	6881      	ldr	r1, [r0, #8]
 800186a:	6803      	ldr	r3, [r0, #0]
 800186c:	f012 0f01 	tst.w	r2, #1
 8001870:	ea4f 0262 	mov.w	r2, r2, asr #1
 8001874:	bf1c      	itt	ne
 8001876:	5888      	ldrne	r0, [r1, r2]
 8001878:	58c3      	ldrne	r3, [r0, r3]
 800187a:	1888      	adds	r0, r1, r2
 800187c:	4718      	bx	r3

0800187e <BufferedSerial::txIrq()>:
 800187e:	b530      	push	{r4, r5, lr}
 8001880:	4604      	mov	r4, r0
 8001882:	b085      	sub	sp, #20
 8001884:	f100 054c 	add.w	r5, r0, #76	; 0x4c
 8001888:	4628      	mov	r0, r5
 800188a:	f002 fd1d 	bl	80042c8 <serial_writable>
 800188e:	b330      	cbz	r0, 80018de <BufferedSerial::txIrq()+0x60>
 8001890:	f8d4 20d0 	ldr.w	r2, [r4, #208]	; 0xd0
 8001894:	f8d4 30d4 	ldr.w	r3, [r4, #212]	; 0xd4
 8001898:	429a      	cmp	r2, r3
 800189a:	d016      	beq.n	80018ca <BufferedSerial::txIrq()+0x4c>
 800189c:	f8d4 30d4 	ldr.w	r3, [r4, #212]	; 0xd4
 80018a0:	f8d4 20cc 	ldr.w	r2, [r4, #204]	; 0xcc
 80018a4:	1c59      	adds	r1, r3, #1
 80018a6:	f8c4 10d4 	str.w	r1, [r4, #212]	; 0xd4
 80018aa:	5cd1      	ldrb	r1, [r2, r3]
 80018ac:	f8d4 30d8 	ldr.w	r3, [r4, #216]	; 0xd8
 80018b0:	f8d4 00d4 	ldr.w	r0, [r4, #212]	; 0xd4
 80018b4:	3b01      	subs	r3, #1
 80018b6:	fbb0 f2f3 	udiv	r2, r0, r3
 80018ba:	fb03 0312 	mls	r3, r3, r2, r0
 80018be:	f8c4 30d4 	str.w	r3, [r4, #212]	; 0xd4
 80018c2:	4628      	mov	r0, r5
 80018c4:	f002 fd0a 	bl	80042dc <serial_putc>
 80018c8:	e7de      	b.n	8001888 <BufferedSerial::txIrq()+0xa>
 80018ca:	2300      	movs	r3, #0
 80018cc:	4620      	mov	r0, r4
 80018ce:	2201      	movs	r2, #1
 80018d0:	4669      	mov	r1, sp
 80018d2:	9303      	str	r3, [sp, #12]
 80018d4:	f003 fe90 	bl	80055f8 <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)>
 80018d8:	4668      	mov	r0, sp
 80018da:	f7fe fec1 	bl	8000660 <mbed::Callback<void ()>::~Callback()>
 80018de:	b005      	add	sp, #20
 80018e0:	bd30      	pop	{r4, r5, pc}

080018e2 <mbed::Callback<void (int)>::~Callback()>:
 80018e2:	68c3      	ldr	r3, [r0, #12]
 80018e4:	b510      	push	{r4, lr}
 80018e6:	4604      	mov	r4, r0
 80018e8:	b10b      	cbz	r3, 80018ee <mbed::Callback<void (int)>::~Callback()+0xc>
 80018ea:	689b      	ldr	r3, [r3, #8]
 80018ec:	4798      	blx	r3
 80018ee:	4620      	mov	r0, r4
 80018f0:	bd10      	pop	{r4, pc}
	...

080018f4 <mbed::SerialBase::~SerialBase()>:
 80018f4:	b570      	push	{r4, r5, r6, lr}
 80018f6:	4606      	mov	r6, r0
 80018f8:	4b0b      	ldr	r3, [pc, #44]	; (8001928 <mbed::SerialBase::~SerialBase()+0x34>)
 80018fa:	f846 3b98 	str.w	r3, [r6], #152
 80018fe:	4604      	mov	r4, r0
 8001900:	b146      	cbz	r6, 8001914 <mbed::SerialBase::~SerialBase()+0x20>
 8001902:	f100 05b8 	add.w	r5, r0, #184	; 0xb8
 8001906:	42b5      	cmp	r5, r6
 8001908:	d004      	beq.n	8001914 <mbed::SerialBase::~SerialBase()+0x20>
 800190a:	3d10      	subs	r5, #16
 800190c:	4628      	mov	r0, r5
 800190e:	f7fe fea7 	bl	8000660 <mbed::Callback<void ()>::~Callback()>
 8001912:	e7f8      	b.n	8001906 <mbed::SerialBase::~SerialBase()+0x12>
 8001914:	f104 0038 	add.w	r0, r4, #56	; 0x38
 8001918:	f7ff ffe3 	bl	80018e2 <mbed::Callback<void (int)>::~Callback()>
 800191c:	f104 0028 	add.w	r0, r4, #40	; 0x28
 8001920:	f7ff ffdf 	bl	80018e2 <mbed::Callback<void (int)>::~Callback()>
 8001924:	4620      	mov	r0, r4
 8001926:	bd70      	pop	{r4, r5, r6, pc}
 8001928:	08007384 	.word	0x08007384

0800192c <mbed::SerialBase::~SerialBase()>:
 800192c:	b510      	push	{r4, lr}
 800192e:	4604      	mov	r4, r0
 8001930:	f7ff ffe0 	bl	80018f4 <mbed::SerialBase::~SerialBase()>
 8001934:	4620      	mov	r0, r4
 8001936:	f004 f833 	bl	80059a0 <operator delete(void*)>
 800193a:	4620      	mov	r0, r4
 800193c:	bd10      	pop	{r4, pc}
	...

08001940 <BufferedSerial::~BufferedSerial()>:
 8001940:	b530      	push	{r4, r5, lr}
 8001942:	4b13      	ldr	r3, [pc, #76]	; (8001990 <BufferedSerial::~BufferedSerial()+0x50>)
 8001944:	6003      	str	r3, [r0, #0]
 8001946:	b085      	sub	sp, #20
 8001948:	2500      	movs	r5, #0
 800194a:	462a      	mov	r2, r5
 800194c:	4669      	mov	r1, sp
 800194e:	4604      	mov	r4, r0
 8001950:	9503      	str	r5, [sp, #12]
 8001952:	f003 fe51 	bl	80055f8 <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)>
 8001956:	4668      	mov	r0, sp
 8001958:	f7fe fe82 	bl	8000660 <mbed::Callback<void ()>::~Callback()>
 800195c:	2201      	movs	r2, #1
 800195e:	4669      	mov	r1, sp
 8001960:	4620      	mov	r0, r4
 8001962:	9503      	str	r5, [sp, #12]
 8001964:	f003 fe48 	bl	80055f8 <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)>
 8001968:	4668      	mov	r0, sp
 800196a:	f7fe fe79 	bl	8000660 <mbed::Callback<void ()>::~Callback()>
 800196e:	f104 00cc 	add.w	r0, r4, #204	; 0xcc
 8001972:	f000 f923 	bl	8001bbc <Buffer<char>::~Buffer()>
 8001976:	f104 00bc 	add.w	r0, r4, #188	; 0xbc
 800197a:	f000 f91f 	bl	8001bbc <Buffer<char>::~Buffer()>
 800197e:	4b05      	ldr	r3, [pc, #20]	; (8001994 <BufferedSerial::~BufferedSerial()+0x54>)
 8001980:	6023      	str	r3, [r4, #0]
 8001982:	4620      	mov	r0, r4
 8001984:	f7ff ffb6 	bl	80018f4 <mbed::SerialBase::~SerialBase()>
 8001988:	4620      	mov	r0, r4
 800198a:	b005      	add	sp, #20
 800198c:	bd30      	pop	{r4, r5, pc}
 800198e:	bf00      	nop
 8001990:	08006e38 	.word	0x08006e38
 8001994:	0800735c 	.word	0x0800735c

08001998 <BufferedSerial::~BufferedSerial()>:
 8001998:	b510      	push	{r4, lr}
 800199a:	4604      	mov	r4, r0
 800199c:	f7ff ffd0 	bl	8001940 <BufferedSerial::~BufferedSerial()>
 80019a0:	4620      	mov	r0, r4
 80019a2:	f003 fffd 	bl	80059a0 <operator delete(void*)>
 80019a6:	4620      	mov	r0, r4
 80019a8:	bd10      	pop	{r4, pc}
	...

080019ac <void mbed::SerialBase::attach<BufferedSerial>(BufferedSerial*, void (BufferedSerial::*)(), mbed::SerialBase::IrqType)>:
 80019ac:	b510      	push	{r4, lr}
 80019ae:	b086      	sub	sp, #24
 80019b0:	e88d 000c 	stmia.w	sp, {r2, r3}
 80019b4:	9b01      	ldr	r3, [sp, #4]
 80019b6:	9202      	str	r2, [sp, #8]
 80019b8:	9303      	str	r3, [sp, #12]
 80019ba:	9104      	str	r1, [sp, #16]
 80019bc:	4b05      	ldr	r3, [pc, #20]	; (80019d4 <void mbed::SerialBase::attach<BufferedSerial>(BufferedSerial*, void (BufferedSerial::*)(), mbed::SerialBase::IrqType)+0x28>)
 80019be:	f89d 2020 	ldrb.w	r2, [sp, #32]
 80019c2:	9305      	str	r3, [sp, #20]
 80019c4:	a902      	add	r1, sp, #8
 80019c6:	f003 fe17 	bl	80055f8 <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)>
 80019ca:	a802      	add	r0, sp, #8
 80019cc:	f7fe fe48 	bl	8000660 <mbed::Callback<void ()>::~Callback()>
 80019d0:	b006      	add	sp, #24
 80019d2:	bd10      	pop	{r4, pc}
 80019d4:	08006da8 	.word	0x08006da8

080019d8 <BufferedSerial::BufferedSerial(PinName, PinName, unsigned long, unsigned long, char const*)>:
 80019d8:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 80019da:	4604      	mov	r4, r0
 80019dc:	461d      	mov	r5, r3
 80019de:	f44f 5316 	mov.w	r3, #9600	; 0x2580
 80019e2:	9e08      	ldr	r6, [sp, #32]
 80019e4:	f003 fc70 	bl	80052c8 <mbed::RawSerial::RawSerial(PinName, PinName, int)>
 80019e8:	4620      	mov	r0, r4
 80019ea:	4b0f      	ldr	r3, [pc, #60]	; (8001a28 <BufferedSerial::BufferedSerial(PinName, PinName, unsigned long, unsigned long, char const*)+0x50>)
 80019ec:	f840 3bbc 	str.w	r3, [r0], #188
 80019f0:	4629      	mov	r1, r5
 80019f2:	f000 f8f2 	bl	8001bda <Buffer<char>::Buffer(unsigned long)>
 80019f6:	fb06 f105 	mul.w	r1, r6, r5
 80019fa:	f104 00cc 	add.w	r0, r4, #204	; 0xcc
 80019fe:	f000 f8ec 	bl	8001bda <Buffer<char>::Buffer(unsigned long)>
 8001a02:	4b0a      	ldr	r3, [pc, #40]	; (8001a2c <BufferedSerial::BufferedSerial(PinName, PinName, unsigned long, unsigned long, char const*)+0x54>)
 8001a04:	9302      	str	r3, [sp, #8]
 8001a06:	2300      	movs	r3, #0
 8001a08:	9303      	str	r3, [sp, #12]
 8001a0a:	9300      	str	r3, [sp, #0]
 8001a0c:	ab04      	add	r3, sp, #16
 8001a0e:	4620      	mov	r0, r4
 8001a10:	e913 000c 	ldmdb	r3, {r2, r3}
 8001a14:	4621      	mov	r1, r4
 8001a16:	f7ff ffc9 	bl	80019ac <void mbed::SerialBase::attach<BufferedSerial>(BufferedSerial*, void (BufferedSerial::*)(), mbed::SerialBase::IrqType)>
 8001a1a:	4620      	mov	r0, r4
 8001a1c:	f8c4 50dc 	str.w	r5, [r4, #220]	; 0xdc
 8001a20:	f8c4 60e0 	str.w	r6, [r4, #224]	; 0xe0
 8001a24:	b004      	add	sp, #16
 8001a26:	bd70      	pop	{r4, r5, r6, pc}
 8001a28:	08006e38 	.word	0x08006e38
 8001a2c:	08001a97 	.word	0x08001a97

08001a30 <BufferedSerial::prime()>:
 8001a30:	b570      	push	{r4, r5, r6, lr}
 8001a32:	4604      	mov	r4, r0
 8001a34:	b086      	sub	sp, #24
 8001a36:	304c      	adds	r0, #76	; 0x4c
 8001a38:	f002 fc46 	bl	80042c8 <serial_writable>
 8001a3c:	b1c0      	cbz	r0, 8001a70 <BufferedSerial::prime()+0x40>
 8001a3e:	ad02      	add	r5, sp, #8
 8001a40:	2201      	movs	r2, #1
 8001a42:	4629      	mov	r1, r5
 8001a44:	2600      	movs	r6, #0
 8001a46:	4620      	mov	r0, r4
 8001a48:	9605      	str	r6, [sp, #20]
 8001a4a:	f003 fdd5 	bl	80055f8 <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)>
 8001a4e:	4628      	mov	r0, r5
 8001a50:	f7fe fe06 	bl	8000660 <mbed::Callback<void ()>::~Callback()>
 8001a54:	4620      	mov	r0, r4
 8001a56:	f7ff ff12 	bl	800187e <BufferedSerial::txIrq()>
 8001a5a:	4b06      	ldr	r3, [pc, #24]	; (8001a74 <BufferedSerial::prime()+0x44>)
 8001a5c:	9302      	str	r3, [sp, #8]
 8001a5e:	2301      	movs	r3, #1
 8001a60:	9603      	str	r6, [sp, #12]
 8001a62:	9300      	str	r3, [sp, #0]
 8001a64:	e895 000c 	ldmia.w	r5, {r2, r3}
 8001a68:	4621      	mov	r1, r4
 8001a6a:	4620      	mov	r0, r4
 8001a6c:	f7ff ff9e 	bl	80019ac <void mbed::SerialBase::attach<BufferedSerial>(BufferedSerial*, void (BufferedSerial::*)(), mbed::SerialBase::IrqType)>
 8001a70:	b006      	add	sp, #24
 8001a72:	bd70      	pop	{r4, r5, r6, pc}
 8001a74:	0800187f 	.word	0x0800187f

08001a78 <Buffer<char>::put(char)>:
 8001a78:	6843      	ldr	r3, [r0, #4]
 8001a7a:	6802      	ldr	r2, [r0, #0]
 8001a7c:	b510      	push	{r4, lr}
 8001a7e:	1c5c      	adds	r4, r3, #1
 8001a80:	6044      	str	r4, [r0, #4]
 8001a82:	54d1      	strb	r1, [r2, r3]
 8001a84:	68c3      	ldr	r3, [r0, #12]
 8001a86:	6841      	ldr	r1, [r0, #4]
 8001a88:	3b01      	subs	r3, #1
 8001a8a:	fbb1 f2f3 	udiv	r2, r1, r3
 8001a8e:	fb03 1312 	mls	r3, r3, r2, r1
 8001a92:	6043      	str	r3, [r0, #4]
 8001a94:	bd10      	pop	{r4, pc}

08001a96 <BufferedSerial::rxIrq()>:
 8001a96:	b538      	push	{r3, r4, r5, lr}
 8001a98:	f100 054c 	add.w	r5, r0, #76	; 0x4c
 8001a9c:	4604      	mov	r4, r0
 8001a9e:	4628      	mov	r0, r5
 8001aa0:	f002 fbf6 	bl	8004290 <serial_readable>
 8001aa4:	b138      	cbz	r0, 8001ab6 <BufferedSerial::rxIrq()+0x20>
 8001aa6:	4628      	mov	r0, r5
 8001aa8:	f002 fbfc 	bl	80042a4 <serial_getc>
 8001aac:	b2c1      	uxtb	r1, r0
 8001aae:	f104 00bc 	add.w	r0, r4, #188	; 0xbc
 8001ab2:	f7ff ffe1 	bl	8001a78 <Buffer<char>::put(char)>
 8001ab6:	bd38      	pop	{r3, r4, r5, pc}

08001ab8 <BufferedSerial::putc(int)>:
 8001ab8:	b538      	push	{r3, r4, r5, lr}
 8001aba:	4605      	mov	r5, r0
 8001abc:	460c      	mov	r4, r1
 8001abe:	30cc      	adds	r0, #204	; 0xcc
 8001ac0:	b2c9      	uxtb	r1, r1
 8001ac2:	f7ff ffd9 	bl	8001a78 <Buffer<char>::put(char)>
 8001ac6:	4628      	mov	r0, r5
 8001ac8:	f7ff ffb2 	bl	8001a30 <BufferedSerial::prime()>
 8001acc:	4620      	mov	r0, r4
 8001ace:	bd38      	pop	{r3, r4, r5, pc}

08001ad0 <BufferedSerial::puts(char const*)>:
 8001ad0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001ad4:	4607      	mov	r7, r0
 8001ad6:	460c      	mov	r4, r1
 8001ad8:	b1b1      	cbz	r1, 8001b08 <BufferedSerial::puts(char const*)+0x38>
 8001ada:	460d      	mov	r5, r1
 8001adc:	f100 08cc 	add.w	r8, r0, #204	; 0xcc
 8001ae0:	462e      	mov	r6, r5
 8001ae2:	f816 1b01 	ldrb.w	r1, [r6], #1
 8001ae6:	b121      	cbz	r1, 8001af2 <BufferedSerial::puts(char const*)+0x22>
 8001ae8:	4640      	mov	r0, r8
 8001aea:	f7ff ffc5 	bl	8001a78 <Buffer<char>::put(char)>
 8001aee:	4635      	mov	r5, r6
 8001af0:	e7f6      	b.n	8001ae0 <BufferedSerial::puts(char const*)+0x10>
 8001af2:	210a      	movs	r1, #10
 8001af4:	4640      	mov	r0, r8
 8001af6:	f7ff ffbf 	bl	8001a78 <Buffer<char>::put(char)>
 8001afa:	1b2c      	subs	r4, r5, r4
 8001afc:	4638      	mov	r0, r7
 8001afe:	f7ff ff97 	bl	8001a30 <BufferedSerial::prime()>
 8001b02:	1c60      	adds	r0, r4, #1
 8001b04:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001b08:	4608      	mov	r0, r1
 8001b0a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08001b0e <BufferedSerial::write(void const*, unsigned int)>:
 8001b0e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001b12:	4607      	mov	r7, r0
 8001b14:	460d      	mov	r5, r1
 8001b16:	b191      	cbz	r1, 8001b3e <BufferedSerial::write(void const*, unsigned int)+0x30>
 8001b18:	b1a2      	cbz	r2, 8001b44 <BufferedSerial::write(void const*, unsigned int)+0x36>
 8001b1a:	188c      	adds	r4, r1, r2
 8001b1c:	460e      	mov	r6, r1
 8001b1e:	f100 08cc 	add.w	r8, r0, #204	; 0xcc
 8001b22:	42b4      	cmp	r4, r6
 8001b24:	d005      	beq.n	8001b32 <BufferedSerial::write(void const*, unsigned int)+0x24>
 8001b26:	f816 1b01 	ldrb.w	r1, [r6], #1
 8001b2a:	4640      	mov	r0, r8
 8001b2c:	f7ff ffa4 	bl	8001a78 <Buffer<char>::put(char)>
 8001b30:	e7f7      	b.n	8001b22 <BufferedSerial::write(void const*, unsigned int)+0x14>
 8001b32:	4638      	mov	r0, r7
 8001b34:	f7ff ff7c 	bl	8001a30 <BufferedSerial::prime()>
 8001b38:	1b60      	subs	r0, r4, r5
 8001b3a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001b3e:	4608      	mov	r0, r1
 8001b40:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001b44:	4610      	mov	r0, r2
 8001b46:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

08001b4c <BufferedSerial::printf(char const*, ...)>:
 8001b4c:	b40e      	push	{r1, r2, r3}
 8001b4e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001b52:	b085      	sub	sp, #20
 8001b54:	f8d0 20dc 	ldr.w	r2, [r0, #220]	; 0xdc
 8001b58:	af02      	add	r7, sp, #8
 8001b5a:	1dd3      	adds	r3, r2, #7
 8001b5c:	f023 0307 	bic.w	r3, r3, #7
 8001b60:	f107 0424 	add.w	r4, r7, #36	; 0x24
 8001b64:	ebad 0d03 	sub.w	sp, sp, r3
 8001b68:	f854 8b04 	ldr.w	r8, [r4], #4
 8001b6c:	ae02      	add	r6, sp, #8
 8001b6e:	4605      	mov	r5, r0
 8001b70:	2100      	movs	r1, #0
 8001b72:	4630      	mov	r0, r6
 8001b74:	f004 fa49 	bl	800600a <memset>
 8001b78:	4622      	mov	r2, r4
 8001b7a:	4641      	mov	r1, r8
 8001b7c:	4630      	mov	r0, r6
 8001b7e:	607c      	str	r4, [r7, #4]
 8001b80:	f004 fd30 	bl	80065e4 <vsiprintf>
 8001b84:	f8d5 30dc 	ldr.w	r3, [r5, #220]	; 0xdc
 8001b88:	4283      	cmp	r3, r0
 8001b8a:	4602      	mov	r2, r0
 8001b8c:	d20c      	bcs.n	8001ba8 <BufferedSerial::printf(char const*, ...)+0x5c>
 8001b8e:	9000      	str	r0, [sp, #0]
 8001b90:	225d      	movs	r2, #93	; 0x5d
 8001b92:	4808      	ldr	r0, [pc, #32]	; (8001bb4 <BufferedSerial::printf(char const*, ...)+0x68>)
 8001b94:	4908      	ldr	r1, [pc, #32]	; (8001bb8 <BufferedSerial::printf(char const*, ...)+0x6c>)
 8001b96:	f000 f993 	bl	8001ec0 <error>
 8001b9a:	2000      	movs	r0, #0
 8001b9c:	370c      	adds	r7, #12
 8001b9e:	46bd      	mov	sp, r7
 8001ba0:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8001ba4:	b003      	add	sp, #12
 8001ba6:	4770      	bx	lr
 8001ba8:	4631      	mov	r1, r6
 8001baa:	4628      	mov	r0, r5
 8001bac:	f7ff ffaf 	bl	8001b0e <BufferedSerial::write(void const*, unsigned int)>
 8001bb0:	e7f4      	b.n	8001b9c <BufferedSerial::printf(char const*, ...)+0x50>
 8001bb2:	bf00      	nop
 8001bb4:	08006df3 	.word	0x08006df3
 8001bb8:	08006db4 	.word	0x08006db4

08001bbc <Buffer<char>::~Buffer()>:
 8001bbc:	b510      	push	{r4, lr}
 8001bbe:	4604      	mov	r4, r0
 8001bc0:	6800      	ldr	r0, [r0, #0]
 8001bc2:	b108      	cbz	r0, 8001bc8 <Buffer<char>::~Buffer()+0xc>
 8001bc4:	f003 fee8 	bl	8005998 <operator delete[](void*)>
 8001bc8:	4620      	mov	r0, r4
 8001bca:	bd10      	pop	{r4, pc}

08001bcc <Buffer<char>::clear()>:
 8001bcc:	2100      	movs	r1, #0
 8001bce:	6041      	str	r1, [r0, #4]
 8001bd0:	68c2      	ldr	r2, [r0, #12]
 8001bd2:	6081      	str	r1, [r0, #8]
 8001bd4:	6800      	ldr	r0, [r0, #0]
 8001bd6:	f004 ba18 	b.w	800600a <memset>

08001bda <Buffer<char>::Buffer(unsigned long)>:
 8001bda:	b538      	push	{r3, r4, r5, lr}
 8001bdc:	4604      	mov	r4, r0
 8001bde:	4608      	mov	r0, r1
 8001be0:	460d      	mov	r5, r1
 8001be2:	f003 fecd 	bl	8005980 <operator new[](unsigned int)>
 8001be6:	60e5      	str	r5, [r4, #12]
 8001be8:	6020      	str	r0, [r4, #0]
 8001bea:	4620      	mov	r0, r4
 8001bec:	f7ff ffee 	bl	8001bcc <Buffer<char>::clear()>
 8001bf0:	4620      	mov	r0, r4
 8001bf2:	bd38      	pop	{r3, r4, r5, pc}

08001bf4 <_gpio_init_in>:
 8001bf4:	b570      	push	{r4, r5, r6, lr}
 8001bf6:	460e      	mov	r6, r1
 8001bf8:	4604      	mov	r4, r0
 8001bfa:	4615      	mov	r5, r2
 8001bfc:	f001 fe84 	bl	8003908 <gpio_init>
 8001c00:	3601      	adds	r6, #1
 8001c02:	d009      	beq.n	8001c18 <_gpio_init_in+0x24>
 8001c04:	4620      	mov	r0, r4
 8001c06:	2100      	movs	r1, #0
 8001c08:	f001 fea2 	bl	8003950 <gpio_dir>
 8001c0c:	4629      	mov	r1, r5
 8001c0e:	4620      	mov	r0, r4
 8001c10:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8001c14:	f001 be98 	b.w	8003948 <gpio_mode>
 8001c18:	bd70      	pop	{r4, r5, r6, pc}

08001c1a <_gpio_init_out.part.2>:
 8001c1a:	b538      	push	{r3, r4, r5, lr}
 8001c1c:	4604      	mov	r4, r0
 8001c1e:	460d      	mov	r5, r1
 8001c20:	6803      	ldr	r3, [r0, #0]
 8001c22:	b15a      	cbz	r2, 8001c3c <_gpio_init_out.part.2+0x22>
 8001c24:	6882      	ldr	r2, [r0, #8]
 8001c26:	6013      	str	r3, [r2, #0]
 8001c28:	4620      	mov	r0, r4
 8001c2a:	2101      	movs	r1, #1
 8001c2c:	f001 fe90 	bl	8003950 <gpio_dir>
 8001c30:	4629      	mov	r1, r5
 8001c32:	4620      	mov	r0, r4
 8001c34:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8001c38:	f001 be86 	b.w	8003948 <gpio_mode>
 8001c3c:	68c2      	ldr	r2, [r0, #12]
 8001c3e:	041b      	lsls	r3, r3, #16
 8001c40:	e7f1      	b.n	8001c26 <_gpio_init_out.part.2+0xc>

08001c42 <gpio_init_in>:
 8001c42:	2200      	movs	r2, #0
 8001c44:	f7ff bfd6 	b.w	8001bf4 <_gpio_init_in>

08001c48 <gpio_init_out_ex>:
 8001c48:	b570      	push	{r4, r5, r6, lr}
 8001c4a:	460e      	mov	r6, r1
 8001c4c:	4604      	mov	r4, r0
 8001c4e:	4615      	mov	r5, r2
 8001c50:	f001 fe5a 	bl	8003908 <gpio_init>
 8001c54:	3601      	adds	r6, #1
 8001c56:	d006      	beq.n	8001c66 <gpio_init_out_ex+0x1e>
 8001c58:	462a      	mov	r2, r5
 8001c5a:	4620      	mov	r0, r4
 8001c5c:	2100      	movs	r1, #0
 8001c5e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8001c62:	f7ff bfda 	b.w	8001c1a <_gpio_init_out.part.2>
 8001c66:	bd70      	pop	{r4, r5, r6, pc}

08001c68 <gpio_init_out>:
 8001c68:	2200      	movs	r2, #0
 8001c6a:	f7ff bfed 	b.w	8001c48 <gpio_init_out_ex>
	...

08001c70 <get_us_ticker_data>:
 8001c70:	4800      	ldr	r0, [pc, #0]	; (8001c74 <get_us_ticker_data+0x4>)
 8001c72:	4770      	bx	lr
 8001c74:	08006e64 	.word	0x08006e64

08001c78 <us_ticker_irq_handler>:
 8001c78:	4801      	ldr	r0, [pc, #4]	; (8001c80 <us_ticker_irq_handler+0x8>)
 8001c7a:	f000 b80c 	b.w	8001c96 <ticker_irq_handler>
 8001c7e:	bf00      	nop
 8001c80:	08006e64 	.word	0x08006e64

08001c84 <ticker_set_handler>:
 8001c84:	b538      	push	{r3, r4, r5, lr}
 8001c86:	6803      	ldr	r3, [r0, #0]
 8001c88:	4604      	mov	r4, r0
 8001c8a:	681b      	ldr	r3, [r3, #0]
 8001c8c:	460d      	mov	r5, r1
 8001c8e:	4798      	blx	r3
 8001c90:	6863      	ldr	r3, [r4, #4]
 8001c92:	601d      	str	r5, [r3, #0]
 8001c94:	bd38      	pop	{r3, r4, r5, pc}

08001c96 <ticker_irq_handler>:
 8001c96:	6803      	ldr	r3, [r0, #0]
 8001c98:	b570      	push	{r4, r5, r6, lr}
 8001c9a:	68db      	ldr	r3, [r3, #12]
 8001c9c:	4604      	mov	r4, r0
 8001c9e:	4798      	blx	r3
 8001ca0:	6863      	ldr	r3, [r4, #4]
 8001ca2:	685a      	ldr	r2, [r3, #4]
 8001ca4:	6823      	ldr	r3, [r4, #0]
 8001ca6:	b91a      	cbnz	r2, 8001cb0 <ticker_irq_handler+0x1a>
 8001ca8:	689b      	ldr	r3, [r3, #8]
 8001caa:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8001cae:	4718      	bx	r3
 8001cb0:	685b      	ldr	r3, [r3, #4]
 8001cb2:	6815      	ldr	r5, [r2, #0]
 8001cb4:	4798      	blx	r3
 8001cb6:	6863      	ldr	r3, [r4, #4]
 8001cb8:	1a28      	subs	r0, r5, r0
 8001cba:	2800      	cmp	r0, #0
 8001cbc:	685a      	ldr	r2, [r3, #4]
 8001cbe:	dc07      	bgt.n	8001cd0 <ticker_irq_handler+0x3a>
 8001cc0:	6891      	ldr	r1, [r2, #8]
 8001cc2:	6059      	str	r1, [r3, #4]
 8001cc4:	681b      	ldr	r3, [r3, #0]
 8001cc6:	2b00      	cmp	r3, #0
 8001cc8:	d0ea      	beq.n	8001ca0 <ticker_irq_handler+0xa>
 8001cca:	6850      	ldr	r0, [r2, #4]
 8001ccc:	4798      	blx	r3
 8001cce:	e7e7      	b.n	8001ca0 <ticker_irq_handler+0xa>
 8001cd0:	6823      	ldr	r3, [r4, #0]
 8001cd2:	6810      	ldr	r0, [r2, #0]
 8001cd4:	691b      	ldr	r3, [r3, #16]
 8001cd6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8001cda:	4718      	bx	r3

08001cdc <ticker_insert_event>:
 8001cdc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001cde:	4606      	mov	r6, r0
 8001ce0:	460c      	mov	r4, r1
 8001ce2:	461f      	mov	r7, r3
 8001ce4:	4615      	mov	r5, r2
 8001ce6:	f000 f8c1 	bl	8001e6c <core_util_critical_section_enter>
 8001cea:	6870      	ldr	r0, [r6, #4]
 8001cec:	e884 00a0 	stmia.w	r4, {r5, r7}
 8001cf0:	6843      	ldr	r3, [r0, #4]
 8001cf2:	2100      	movs	r1, #0
 8001cf4:	b953      	cbnz	r3, 8001d0c <ticker_insert_event+0x30>
 8001cf6:	60a3      	str	r3, [r4, #8]
 8001cf8:	b979      	cbnz	r1, 8001d1a <ticker_insert_event+0x3e>
 8001cfa:	6833      	ldr	r3, [r6, #0]
 8001cfc:	6044      	str	r4, [r0, #4]
 8001cfe:	691b      	ldr	r3, [r3, #16]
 8001d00:	4628      	mov	r0, r5
 8001d02:	4798      	blx	r3
 8001d04:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8001d08:	f000 b8c6 	b.w	8001e98 <core_util_critical_section_exit>
 8001d0c:	681a      	ldr	r2, [r3, #0]
 8001d0e:	1aaa      	subs	r2, r5, r2
 8001d10:	2a00      	cmp	r2, #0
 8001d12:	dbf0      	blt.n	8001cf6 <ticker_insert_event+0x1a>
 8001d14:	4619      	mov	r1, r3
 8001d16:	689b      	ldr	r3, [r3, #8]
 8001d18:	e7ec      	b.n	8001cf4 <ticker_insert_event+0x18>
 8001d1a:	608c      	str	r4, [r1, #8]
 8001d1c:	e7f2      	b.n	8001d04 <ticker_insert_event+0x28>

08001d1e <ticker_remove_event>:
 8001d1e:	b538      	push	{r3, r4, r5, lr}
 8001d20:	4605      	mov	r5, r0
 8001d22:	460c      	mov	r4, r1
 8001d24:	f000 f8a2 	bl	8001e6c <core_util_critical_section_enter>
 8001d28:	686a      	ldr	r2, [r5, #4]
 8001d2a:	6853      	ldr	r3, [r2, #4]
 8001d2c:	42a3      	cmp	r3, r4
 8001d2e:	d10e      	bne.n	8001d4e <ticker_remove_event+0x30>
 8001d30:	689b      	ldr	r3, [r3, #8]
 8001d32:	6053      	str	r3, [r2, #4]
 8001d34:	682a      	ldr	r2, [r5, #0]
 8001d36:	b92b      	cbnz	r3, 8001d44 <ticker_remove_event+0x26>
 8001d38:	6893      	ldr	r3, [r2, #8]
 8001d3a:	4798      	blx	r3
 8001d3c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8001d40:	f000 b8aa 	b.w	8001e98 <core_util_critical_section_exit>
 8001d44:	6912      	ldr	r2, [r2, #16]
 8001d46:	6818      	ldr	r0, [r3, #0]
 8001d48:	4790      	blx	r2
 8001d4a:	e7f7      	b.n	8001d3c <ticker_remove_event+0x1e>
 8001d4c:	4613      	mov	r3, r2
 8001d4e:	2b00      	cmp	r3, #0
 8001d50:	d0f4      	beq.n	8001d3c <ticker_remove_event+0x1e>
 8001d52:	689a      	ldr	r2, [r3, #8]
 8001d54:	4294      	cmp	r4, r2
 8001d56:	d1f9      	bne.n	8001d4c <ticker_remove_event+0x2e>
 8001d58:	68a2      	ldr	r2, [r4, #8]
 8001d5a:	609a      	str	r2, [r3, #8]
 8001d5c:	e7ee      	b.n	8001d3c <ticker_remove_event+0x1e>

08001d5e <ticker_read>:
 8001d5e:	6803      	ldr	r3, [r0, #0]
 8001d60:	685b      	ldr	r3, [r3, #4]
 8001d62:	4718      	bx	r3

08001d64 <pinmap_pinout>:
 8001d64:	b510      	push	{r4, lr}
 8001d66:	4604      	mov	r4, r0
 8001d68:	3001      	adds	r0, #1
 8001d6a:	d10d      	bne.n	8001d88 <pinmap_pinout+0x24>
 8001d6c:	bd10      	pop	{r4, pc}
 8001d6e:	429c      	cmp	r4, r3
 8001d70:	d109      	bne.n	8001d86 <pinmap_pinout+0x22>
 8001d72:	4620      	mov	r0, r4
 8001d74:	6889      	ldr	r1, [r1, #8]
 8001d76:	f002 f84d 	bl	8003e14 <pin_function>
 8001d7a:	4620      	mov	r0, r4
 8001d7c:	2100      	movs	r1, #0
 8001d7e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8001d82:	f002 b8cb 	b.w	8003f1c <pin_mode>
 8001d86:	310c      	adds	r1, #12
 8001d88:	f9b1 3000 	ldrsh.w	r3, [r1]
 8001d8c:	1c5a      	adds	r2, r3, #1
 8001d8e:	d1ee      	bne.n	8001d6e <pinmap_pinout+0xa>
 8001d90:	4802      	ldr	r0, [pc, #8]	; (8001d9c <pinmap_pinout+0x38>)
 8001d92:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8001d96:	f000 b893 	b.w	8001ec0 <error>
 8001d9a:	bf00      	nop
 8001d9c:	08006ecf 	.word	0x08006ecf

08001da0 <pinmap_merge>:
 8001da0:	4288      	cmp	r0, r1
 8001da2:	b508      	push	{r3, lr}
 8001da4:	d008      	beq.n	8001db8 <pinmap_merge+0x18>
 8001da6:	1c43      	adds	r3, r0, #1
 8001da8:	d006      	beq.n	8001db8 <pinmap_merge+0x18>
 8001daa:	3101      	adds	r1, #1
 8001dac:	d006      	beq.n	8001dbc <pinmap_merge+0x1c>
 8001dae:	4804      	ldr	r0, [pc, #16]	; (8001dc0 <pinmap_merge+0x20>)
 8001db0:	f000 f886 	bl	8001ec0 <error>
 8001db4:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8001db8:	4608      	mov	r0, r1
 8001dba:	bd08      	pop	{r3, pc}
 8001dbc:	4601      	mov	r1, r0
 8001dbe:	e7fb      	b.n	8001db8 <pinmap_merge+0x18>
 8001dc0:	08006e9e 	.word	0x08006e9e

08001dc4 <pinmap_find_peripheral>:
 8001dc4:	f9b1 3000 	ldrsh.w	r3, [r1]
 8001dc8:	1c5a      	adds	r2, r3, #1
 8001dca:	d101      	bne.n	8001dd0 <pinmap_find_peripheral+0xc>
 8001dcc:	4618      	mov	r0, r3
 8001dce:	4770      	bx	lr
 8001dd0:	4283      	cmp	r3, r0
 8001dd2:	d101      	bne.n	8001dd8 <pinmap_find_peripheral+0x14>
 8001dd4:	6848      	ldr	r0, [r1, #4]
 8001dd6:	4770      	bx	lr
 8001dd8:	310c      	adds	r1, #12
 8001dda:	e7f3      	b.n	8001dc4 <pinmap_find_peripheral>

08001ddc <pinmap_peripheral>:
 8001ddc:	1c42      	adds	r2, r0, #1
 8001dde:	b510      	push	{r4, lr}
 8001de0:	4604      	mov	r4, r0
 8001de2:	d007      	beq.n	8001df4 <pinmap_peripheral+0x18>
 8001de4:	f7ff ffee 	bl	8001dc4 <pinmap_find_peripheral>
 8001de8:	1c43      	adds	r3, r0, #1
 8001dea:	4604      	mov	r4, r0
 8001dec:	d102      	bne.n	8001df4 <pinmap_peripheral+0x18>
 8001dee:	4802      	ldr	r0, [pc, #8]	; (8001df8 <pinmap_peripheral+0x1c>)
 8001df0:	f000 f866 	bl	8001ec0 <error>
 8001df4:	4620      	mov	r0, r4
 8001df6:	bd10      	pop	{r4, pc}
 8001df8:	08006eaf 	.word	0x08006eaf

08001dfc <pinmap_find_function>:
 8001dfc:	f9b1 3000 	ldrsh.w	r3, [r1]
 8001e00:	1c5a      	adds	r2, r3, #1
 8001e02:	d101      	bne.n	8001e08 <pinmap_find_function+0xc>
 8001e04:	4618      	mov	r0, r3
 8001e06:	4770      	bx	lr
 8001e08:	4283      	cmp	r3, r0
 8001e0a:	d101      	bne.n	8001e10 <pinmap_find_function+0x14>
 8001e0c:	6888      	ldr	r0, [r1, #8]
 8001e0e:	4770      	bx	lr
 8001e10:	310c      	adds	r1, #12
 8001e12:	e7f3      	b.n	8001dfc <pinmap_find_function>

08001e14 <pinmap_function>:
 8001e14:	1c42      	adds	r2, r0, #1
 8001e16:	b510      	push	{r4, lr}
 8001e18:	4604      	mov	r4, r0
 8001e1a:	d007      	beq.n	8001e2c <pinmap_function+0x18>
 8001e1c:	f7ff ffee 	bl	8001dfc <pinmap_find_function>
 8001e20:	1c43      	adds	r3, r0, #1
 8001e22:	4604      	mov	r4, r0
 8001e24:	d102      	bne.n	8001e2c <pinmap_function+0x18>
 8001e26:	4802      	ldr	r0, [pc, #8]	; (8001e30 <pinmap_function+0x1c>)
 8001e28:	f000 f84a 	bl	8001ec0 <error>
 8001e2c:	4620      	mov	r0, r4
 8001e2e:	bd10      	pop	{r4, pc}
 8001e30:	08006e80 	.word	0x08006e80

08001e34 <mbed_die>:
 8001e34:	b500      	push	{lr}
 8001e36:	b089      	sub	sp, #36	; 0x24
 8001e38:	f000 f818 	bl	8001e6c <core_util_critical_section_enter>
 8001e3c:	2105      	movs	r1, #5
 8001e3e:	a801      	add	r0, sp, #4
 8001e40:	f7ff ff12 	bl	8001c68 <gpio_init_out>
 8001e44:	9b03      	ldr	r3, [sp, #12]
 8001e46:	9a01      	ldr	r2, [sp, #4]
 8001e48:	601a      	str	r2, [r3, #0]
 8001e4a:	2096      	movs	r0, #150	; 0x96
 8001e4c:	f003 fc88 	bl	8005760 <wait_ms>
 8001e50:	9b01      	ldr	r3, [sp, #4]
 8001e52:	9a04      	ldr	r2, [sp, #16]
 8001e54:	041b      	lsls	r3, r3, #16
 8001e56:	6013      	str	r3, [r2, #0]
 8001e58:	2096      	movs	r0, #150	; 0x96
 8001e5a:	f003 fc81 	bl	8005760 <wait_ms>
 8001e5e:	e7f1      	b.n	8001e44 <mbed_die+0x10>

08001e60 <core_util_are_interrupts_enabled>:
 8001e60:	f3ef 8010 	mrs	r0, PRIMASK
 8001e64:	43c0      	mvns	r0, r0
 8001e66:	f000 0001 	and.w	r0, r0, #1
 8001e6a:	4770      	bx	lr

08001e6c <core_util_critical_section_enter>:
 8001e6c:	b508      	push	{r3, lr}
 8001e6e:	f7ff fff7 	bl	8001e60 <core_util_are_interrupts_enabled>
 8001e72:	b672      	cpsid	i
 8001e74:	4b06      	ldr	r3, [pc, #24]	; (8001e90 <core_util_critical_section_enter+0x24>)
 8001e76:	681a      	ldr	r2, [r3, #0]
 8001e78:	b922      	cbnz	r2, 8001e84 <core_util_critical_section_enter+0x18>
 8001e7a:	f080 0001 	eor.w	r0, r0, #1
 8001e7e:	4a05      	ldr	r2, [pc, #20]	; (8001e94 <core_util_critical_section_enter+0x28>)
 8001e80:	b2c0      	uxtb	r0, r0
 8001e82:	7010      	strb	r0, [r2, #0]
 8001e84:	681a      	ldr	r2, [r3, #0]
 8001e86:	681a      	ldr	r2, [r3, #0]
 8001e88:	3201      	adds	r2, #1
 8001e8a:	601a      	str	r2, [r3, #0]
 8001e8c:	bd08      	pop	{r3, pc}
 8001e8e:	bf00      	nop
 8001e90:	20000cbc 	.word	0x20000cbc
 8001e94:	20000cb8 	.word	0x20000cb8

08001e98 <core_util_critical_section_exit>:
 8001e98:	b508      	push	{r3, lr}
 8001e9a:	4b07      	ldr	r3, [pc, #28]	; (8001eb8 <core_util_critical_section_exit+0x20>)
 8001e9c:	681a      	ldr	r2, [r3, #0]
 8001e9e:	b152      	cbz	r2, 8001eb6 <core_util_critical_section_exit+0x1e>
 8001ea0:	f7ff ffde 	bl	8001e60 <core_util_are_interrupts_enabled>
 8001ea4:	681a      	ldr	r2, [r3, #0]
 8001ea6:	3a01      	subs	r2, #1
 8001ea8:	601a      	str	r2, [r3, #0]
 8001eaa:	681b      	ldr	r3, [r3, #0]
 8001eac:	b91b      	cbnz	r3, 8001eb6 <core_util_critical_section_exit+0x1e>
 8001eae:	4b03      	ldr	r3, [pc, #12]	; (8001ebc <core_util_critical_section_exit+0x24>)
 8001eb0:	781b      	ldrb	r3, [r3, #0]
 8001eb2:	b903      	cbnz	r3, 8001eb6 <core_util_critical_section_exit+0x1e>
 8001eb4:	b662      	cpsie	i
 8001eb6:	bd08      	pop	{r3, pc}
 8001eb8:	20000cbc 	.word	0x20000cbc
 8001ebc:	20000cb8 	.word	0x20000cb8

08001ec0 <error>:
 8001ec0:	b40f      	push	{r0, r1, r2, r3}
 8001ec2:	2001      	movs	r0, #1
 8001ec4:	b508      	push	{r3, lr}
 8001ec6:	f003 fd4f 	bl	8005968 <__wrap_exit>

08001eca <default_idle_hook>:
 8001eca:	f001 bd6a 	b.w	80039a2 <hal_sleep>
	...

08001ed0 <rtos_idle_loop>:
 8001ed0:	b508      	push	{r3, lr}
 8001ed2:	4c02      	ldr	r4, [pc, #8]	; (8001edc <rtos_idle_loop+0xc>)
 8001ed4:	6823      	ldr	r3, [r4, #0]
 8001ed6:	4798      	blx	r3
 8001ed8:	e7fc      	b.n	8001ed4 <rtos_idle_loop+0x4>
 8001eda:	bf00      	nop
 8001edc:	2000019c 	.word	0x2000019c

08001ee0 <pre_main>:
 8001ee0:	b508      	push	{r3, lr}
 8001ee2:	480b      	ldr	r0, [pc, #44]	; (8001f10 <pre_main+0x30>)
 8001ee4:	f000 fd9c 	bl	8002a20 <osMutexCreate>
 8001ee8:	4b0a      	ldr	r3, [pc, #40]	; (8001f14 <pre_main+0x34>)
 8001eea:	6018      	str	r0, [r3, #0]
 8001eec:	480a      	ldr	r0, [pc, #40]	; (8001f18 <pre_main+0x38>)
 8001eee:	f000 fd97 	bl	8002a20 <osMutexCreate>
 8001ef2:	4b0a      	ldr	r3, [pc, #40]	; (8001f1c <pre_main+0x3c>)
 8001ef4:	6018      	str	r0, [r3, #0]
 8001ef6:	480a      	ldr	r0, [pc, #40]	; (8001f20 <pre_main+0x40>)
 8001ef8:	f000 fd92 	bl	8002a20 <osMutexCreate>
 8001efc:	4b09      	ldr	r3, [pc, #36]	; (8001f24 <pre_main+0x44>)
 8001efe:	6018      	str	r0, [r3, #0]
 8001f00:	f003 ffd6 	bl	8005eb0 <__libc_init_array>
 8001f04:	2100      	movs	r1, #0
 8001f06:	4608      	mov	r0, r1
 8001f08:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8001f0c:	f003 bcef 	b.w	80058ee <__wrap_main>
 8001f10:	08006f2c 	.word	0x08006f2c
 8001f14:	2000260c 	.word	0x2000260c
 8001f18:	08006f28 	.word	0x08006f28
 8001f1c:	20000cc8 	.word	0x20000cc8
 8001f20:	08006f24 	.word	0x08006f24
 8001f24:	20000cc0 	.word	0x20000cc0

08001f28 <os_idle_demon>:
 8001f28:	f7ff bfd2 	b.w	8001ed0 <rtos_idle_loop>

08001f2c <os_error>:
 8001f2c:	b510      	push	{r4, lr}
 8001f2e:	4604      	mov	r4, r0
 8001f30:	f000 fce4 	bl	80028fc <svcThreadGetId>
 8001f34:	4621      	mov	r1, r4
 8001f36:	4602      	mov	r2, r0
 8001f38:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8001f3c:	4801      	ldr	r0, [pc, #4]	; (8001f44 <os_error+0x18>)
 8001f3e:	f7ff bfbf 	b.w	8001ec0 <error>
 8001f42:	bf00      	nop
 8001f44:	08006eec 	.word	0x08006eec

08001f48 <sysThreadTerminate>:
 8001f48:	f003 bd2c 	b.w	80059a4 <thread_terminate_hook>

08001f4c <set_stack_heap>:
 8001f4c:	4a0b      	ldr	r2, [pc, #44]	; (8001f7c <set_stack_heap+0x30>)
 8001f4e:	4b0c      	ldr	r3, [pc, #48]	; (8001f80 <set_stack_heap+0x34>)
 8001f50:	480c      	ldr	r0, [pc, #48]	; (8001f84 <set_stack_heap+0x38>)
 8001f52:	b430      	push	{r4, r5}
 8001f54:	601a      	str	r2, [r3, #0]
 8001f56:	f1c2 5300 	rsb	r3, r2, #536870912	; 0x20000000
 8001f5a:	f503 3300 	add.w	r3, r3, #131072	; 0x20000
 8001f5e:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8001f62:	4619      	mov	r1, r3
 8001f64:	bf28      	it	cs
 8001f66:	f44f 6180 	movcs.w	r1, #1024	; 0x400
 8001f6a:	4d07      	ldr	r5, [pc, #28]	; (8001f88 <set_stack_heap+0x3c>)
 8001f6c:	4c07      	ldr	r4, [pc, #28]	; (8001f8c <set_stack_heap+0x40>)
 8001f6e:	6001      	str	r1, [r0, #0]
 8001f70:	1a5b      	subs	r3, r3, r1
 8001f72:	441a      	add	r2, r3
 8001f74:	602a      	str	r2, [r5, #0]
 8001f76:	6023      	str	r3, [r4, #0]
 8001f78:	bc30      	pop	{r4, r5}
 8001f7a:	4770      	bx	lr
 8001f7c:	20002e28 	.word	0x20002e28
 8001f80:	20002324 	.word	0x20002324
 8001f84:	20000ccc 	.word	0x20000ccc
 8001f88:	20000cd0 	.word	0x20000cd0
 8001f8c:	20002320 	.word	0x20002320

08001f90 <software_init_hook_rtos>:
 8001f90:	f000 fe1a 	bl	8002bc8 <osKernelInitialize>
 8001f94:	f7ff ffda 	bl	8001f4c <set_stack_heap>
 8001f98:	4803      	ldr	r0, [pc, #12]	; (8001fa8 <software_init_hook_rtos+0x18>)
 8001f9a:	2100      	movs	r1, #0
 8001f9c:	f000 fdc8 	bl	8002b30 <osThreadCreate>
 8001fa0:	f000 fc2e 	bl	8002800 <osKernelStart>
 8001fa4:	e7fe      	b.n	8001fa4 <software_init_hook_rtos+0x14>
 8001fa6:	0000      	.short	0x0000
 8001fa8:	200001a0 	.word	0x200001a0

08001fac <__rtos_malloc_lock>:
 8001fac:	4b02      	ldr	r3, [pc, #8]	; (8001fb8 <__rtos_malloc_lock+0xc>)
 8001fae:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8001fb2:	6818      	ldr	r0, [r3, #0]
 8001fb4:	f000 bd52 	b.w	8002a5c <osMutexWait>
 8001fb8:	20000cc8 	.word	0x20000cc8

08001fbc <__rtos_malloc_unlock>:
 8001fbc:	4b01      	ldr	r3, [pc, #4]	; (8001fc4 <__rtos_malloc_unlock+0x8>)
 8001fbe:	6818      	ldr	r0, [r3, #0]
 8001fc0:	f000 bd74 	b.w	8002aac <osMutexRelease>
 8001fc4:	20000cc8 	.word	0x20000cc8

08001fc8 <rt_put_prio>:
 8001fc8:	b530      	push	{r4, r5, lr}
 8001fca:	7802      	ldrb	r2, [r0, #0]
 8001fcc:	788c      	ldrb	r4, [r1, #2]
 8001fce:	6843      	ldr	r3, [r0, #4]
 8001fd0:	3a01      	subs	r2, #1
 8001fd2:	b2d2      	uxtb	r2, r2
 8001fd4:	b113      	cbz	r3, 8001fdc <rt_put_prio+0x14>
 8001fd6:	789d      	ldrb	r5, [r3, #2]
 8001fd8:	42a5      	cmp	r5, r4
 8001fda:	d207      	bcs.n	8001fec <rt_put_prio+0x24>
 8001fdc:	2a02      	cmp	r2, #2
 8001fde:	604b      	str	r3, [r1, #4]
 8001fe0:	6041      	str	r1, [r0, #4]
 8001fe2:	d806      	bhi.n	8001ff2 <rt_put_prio+0x2a>
 8001fe4:	b103      	cbz	r3, 8001fe8 <rt_put_prio+0x20>
 8001fe6:	6099      	str	r1, [r3, #8]
 8001fe8:	6088      	str	r0, [r1, #8]
 8001fea:	bd30      	pop	{r4, r5, pc}
 8001fec:	4618      	mov	r0, r3
 8001fee:	685b      	ldr	r3, [r3, #4]
 8001ff0:	e7f0      	b.n	8001fd4 <rt_put_prio+0xc>
 8001ff2:	2300      	movs	r3, #0
 8001ff4:	608b      	str	r3, [r1, #8]
 8001ff6:	bd30      	pop	{r4, r5, pc}

08001ff8 <rt_get_first>:
 8001ff8:	7802      	ldrb	r2, [r0, #0]
 8001ffa:	6843      	ldr	r3, [r0, #4]
 8001ffc:	3a01      	subs	r2, #1
 8001ffe:	6859      	ldr	r1, [r3, #4]
 8002000:	6041      	str	r1, [r0, #4]
 8002002:	2a02      	cmp	r2, #2
 8002004:	f04f 0200 	mov.w	r2, #0
 8002008:	d805      	bhi.n	8002016 <rt_get_first+0x1e>
 800200a:	b109      	cbz	r1, 8002010 <rt_get_first+0x18>
 800200c:	6088      	str	r0, [r1, #8]
 800200e:	605a      	str	r2, [r3, #4]
 8002010:	609a      	str	r2, [r3, #8]
 8002012:	4618      	mov	r0, r3
 8002014:	4770      	bx	lr
 8002016:	605a      	str	r2, [r3, #4]
 8002018:	e7fb      	b.n	8002012 <rt_get_first+0x1a>
	...

0800201c <rt_put_rdy_first>:
 800201c:	4b03      	ldr	r3, [pc, #12]	; (800202c <rt_put_rdy_first+0x10>)
 800201e:	685a      	ldr	r2, [r3, #4]
 8002020:	6042      	str	r2, [r0, #4]
 8002022:	2200      	movs	r2, #0
 8002024:	6082      	str	r2, [r0, #8]
 8002026:	6058      	str	r0, [r3, #4]
 8002028:	4770      	bx	lr
 800202a:	bf00      	nop
 800202c:	20002d00 	.word	0x20002d00

08002030 <rt_put_dly>:
 8002030:	4b10      	ldr	r3, [pc, #64]	; (8002074 <rt_put_dly+0x44>)
 8002032:	68da      	ldr	r2, [r3, #12]
 8002034:	b510      	push	{r4, lr}
 8002036:	b18a      	cbz	r2, 800205c <rt_put_dly+0x2c>
 8002038:	8a9a      	ldrh	r2, [r3, #20]
 800203a:	68dc      	ldr	r4, [r3, #12]
 800203c:	428a      	cmp	r2, r1
 800203e:	d30c      	bcc.n	800205a <rt_put_dly+0x2a>
 8002040:	60c4      	str	r4, [r0, #12]
 8002042:	60d8      	str	r0, [r3, #12]
 8002044:	68c4      	ldr	r4, [r0, #12]
 8002046:	6103      	str	r3, [r0, #16]
 8002048:	b104      	cbz	r4, 800204c <rt_put_dly+0x1c>
 800204a:	6120      	str	r0, [r4, #16]
 800204c:	1a52      	subs	r2, r2, r1
 800204e:	b292      	uxth	r2, r2
 8002050:	8282      	strh	r2, [r0, #20]
 8002052:	8a99      	ldrh	r1, [r3, #20]
 8002054:	1a8a      	subs	r2, r1, r2
 8002056:	829a      	strh	r2, [r3, #20]
 8002058:	bd10      	pop	{r4, pc}
 800205a:	b93c      	cbnz	r4, 800206c <rt_put_dly+0x3c>
 800205c:	2400      	movs	r4, #0
 800205e:	1a8a      	subs	r2, r1, r2
 8002060:	60c4      	str	r4, [r0, #12]
 8002062:	60d8      	str	r0, [r3, #12]
 8002064:	6103      	str	r3, [r0, #16]
 8002066:	829a      	strh	r2, [r3, #20]
 8002068:	8284      	strh	r4, [r0, #20]
 800206a:	bd10      	pop	{r4, pc}
 800206c:	8aa3      	ldrh	r3, [r4, #20]
 800206e:	441a      	add	r2, r3
 8002070:	4623      	mov	r3, r4
 8002072:	e7e2      	b.n	800203a <rt_put_dly+0xa>
 8002074:	20002d18 	.word	0x20002d18

08002078 <rt_dec_dly>:
 8002078:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800207c:	4d17      	ldr	r5, [pc, #92]	; (80020dc <rt_dec_dly+0x64>)
 800207e:	68eb      	ldr	r3, [r5, #12]
 8002080:	b153      	cbz	r3, 8002098 <rt_dec_dly+0x20>
 8002082:	8aab      	ldrh	r3, [r5, #20]
 8002084:	4f16      	ldr	r7, [pc, #88]	; (80020e0 <rt_dec_dly+0x68>)
 8002086:	f8df 805c 	ldr.w	r8, [pc, #92]	; 80020e4 <rt_dec_dly+0x6c>
 800208a:	3b01      	subs	r3, #1
 800208c:	82ab      	strh	r3, [r5, #20]
 800208e:	2600      	movs	r6, #0
 8002090:	8aaa      	ldrh	r2, [r5, #20]
 8002092:	b90a      	cbnz	r2, 8002098 <rt_dec_dly+0x20>
 8002094:	68ec      	ldr	r4, [r5, #12]
 8002096:	b90c      	cbnz	r4, 800209c <rt_dec_dly+0x24>
 8002098:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800209c:	68a3      	ldr	r3, [r4, #8]
 800209e:	b133      	cbz	r3, 80020ae <rt_dec_dly+0x36>
 80020a0:	6861      	ldr	r1, [r4, #4]
 80020a2:	6059      	str	r1, [r3, #4]
 80020a4:	6861      	ldr	r1, [r4, #4]
 80020a6:	b109      	cbz	r1, 80020ac <rt_dec_dly+0x34>
 80020a8:	608b      	str	r3, [r1, #8]
 80020aa:	6062      	str	r2, [r4, #4]
 80020ac:	60a6      	str	r6, [r4, #8]
 80020ae:	4621      	mov	r1, r4
 80020b0:	4638      	mov	r0, r7
 80020b2:	f7ff ff89 	bl	8001fc8 <rt_put_prio>
 80020b6:	8aa3      	ldrh	r3, [r4, #20]
 80020b8:	82ab      	strh	r3, [r5, #20]
 80020ba:	7863      	ldrb	r3, [r4, #1]
 80020bc:	2b04      	cmp	r3, #4
 80020be:	bf01      	itttt	eq
 80020c0:	f8d8 3000 	ldreq.w	r3, [r8]
 80020c4:	8ae2      	ldrheq	r2, [r4, #22]
 80020c6:	189b      	addeq	r3, r3, r2
 80020c8:	82a3      	strheq	r3, [r4, #20]
 80020ca:	2301      	movs	r3, #1
 80020cc:	7063      	strb	r3, [r4, #1]
 80020ce:	68e3      	ldr	r3, [r4, #12]
 80020d0:	60eb      	str	r3, [r5, #12]
 80020d2:	b10b      	cbz	r3, 80020d8 <rt_dec_dly+0x60>
 80020d4:	611d      	str	r5, [r3, #16]
 80020d6:	60e6      	str	r6, [r4, #12]
 80020d8:	6126      	str	r6, [r4, #16]
 80020da:	e7d9      	b.n	8002090 <rt_dec_dly+0x18>
 80020dc:	20002d18 	.word	0x20002d18
 80020e0:	20002d00 	.word	0x20002d00
 80020e4:	20002d94 	.word	0x20002d94

080020e8 <rt_rmv_list>:
 80020e8:	6883      	ldr	r3, [r0, #8]
 80020ea:	b12b      	cbz	r3, 80020f8 <rt_rmv_list+0x10>
 80020ec:	6842      	ldr	r2, [r0, #4]
 80020ee:	605a      	str	r2, [r3, #4]
 80020f0:	6842      	ldr	r2, [r0, #4]
 80020f2:	b15a      	cbz	r2, 800210c <rt_rmv_list+0x24>
 80020f4:	6093      	str	r3, [r2, #8]
 80020f6:	4770      	bx	lr
 80020f8:	4b05      	ldr	r3, [pc, #20]	; (8002110 <rt_rmv_list+0x28>)
 80020fa:	685a      	ldr	r2, [r3, #4]
 80020fc:	4290      	cmp	r0, r2
 80020fe:	d102      	bne.n	8002106 <rt_rmv_list+0x1e>
 8002100:	6842      	ldr	r2, [r0, #4]
 8002102:	605a      	str	r2, [r3, #4]
 8002104:	4770      	bx	lr
 8002106:	4613      	mov	r3, r2
 8002108:	2a00      	cmp	r2, #0
 800210a:	d1f6      	bne.n	80020fa <rt_rmv_list+0x12>
 800210c:	4770      	bx	lr
 800210e:	bf00      	nop
 8002110:	20002d00 	.word	0x20002d00

08002114 <rt_resort_prio>:
 8002114:	b510      	push	{r4, lr}
 8002116:	6884      	ldr	r4, [r0, #8]
 8002118:	4601      	mov	r1, r0
 800211a:	b92c      	cbnz	r4, 8002128 <rt_resort_prio+0x14>
 800211c:	7843      	ldrb	r3, [r0, #1]
 800211e:	2b01      	cmp	r3, #1
 8002120:	d10d      	bne.n	800213e <rt_resort_prio+0x2a>
 8002122:	4c07      	ldr	r4, [pc, #28]	; (8002140 <rt_resort_prio+0x2c>)
 8002124:	e003      	b.n	800212e <rt_resort_prio+0x1a>
 8002126:	68a4      	ldr	r4, [r4, #8]
 8002128:	7823      	ldrb	r3, [r4, #0]
 800212a:	2b00      	cmp	r3, #0
 800212c:	d0fb      	beq.n	8002126 <rt_resort_prio+0x12>
 800212e:	4608      	mov	r0, r1
 8002130:	f7ff ffda 	bl	80020e8 <rt_rmv_list>
 8002134:	4620      	mov	r0, r4
 8002136:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800213a:	f7ff bf45 	b.w	8001fc8 <rt_put_prio>
 800213e:	bd10      	pop	{r4, pc}
 8002140:	20002d00 	.word	0x20002d00

08002144 <rt_rmv_dly>:
 8002144:	6903      	ldr	r3, [r0, #16]
 8002146:	b510      	push	{r4, lr}
 8002148:	b163      	cbz	r3, 8002164 <rt_rmv_dly+0x20>
 800214a:	68c2      	ldr	r2, [r0, #12]
 800214c:	60da      	str	r2, [r3, #12]
 800214e:	68c2      	ldr	r2, [r0, #12]
 8002150:	b14a      	cbz	r2, 8002166 <rt_rmv_dly+0x22>
 8002152:	8a99      	ldrh	r1, [r3, #20]
 8002154:	8a84      	ldrh	r4, [r0, #20]
 8002156:	4421      	add	r1, r4
 8002158:	8299      	strh	r1, [r3, #20]
 800215a:	6113      	str	r3, [r2, #16]
 800215c:	2300      	movs	r3, #0
 800215e:	60c3      	str	r3, [r0, #12]
 8002160:	2300      	movs	r3, #0
 8002162:	6103      	str	r3, [r0, #16]
 8002164:	bd10      	pop	{r4, pc}
 8002166:	829a      	strh	r2, [r3, #20]
 8002168:	e7fa      	b.n	8002160 <rt_rmv_dly+0x1c>
	...

0800216c <rt_psq_enq>:
 800216c:	b470      	push	{r4, r5, r6}
 800216e:	4b11      	ldr	r3, [pc, #68]	; (80021b4 <rt_psq_enq+0x48>)
 8002170:	78dd      	ldrb	r5, [r3, #3]
 8002172:	f3ef 8610 	mrs	r6, PRIMASK
 8002176:	f3ef 8210 	mrs	r2, PRIMASK
 800217a:	b672      	cpsid	i
 800217c:	789a      	ldrb	r2, [r3, #2]
 800217e:	4295      	cmp	r5, r2
 8002180:	d911      	bls.n	80021a6 <rt_psq_enq+0x3a>
 8002182:	3201      	adds	r2, #1
 8002184:	709a      	strb	r2, [r3, #2]
 8002186:	781a      	ldrb	r2, [r3, #0]
 8002188:	1c54      	adds	r4, r2, #1
 800218a:	42a5      	cmp	r5, r4
 800218c:	bf08      	it	eq
 800218e:	2400      	moveq	r4, #0
 8002190:	701c      	strb	r4, [r3, #0]
 8002192:	b906      	cbnz	r6, 8002196 <rt_psq_enq+0x2a>
 8002194:	b662      	cpsie	i
 8002196:	4295      	cmp	r5, r2
 8002198:	d907      	bls.n	80021aa <rt_psq_enq+0x3e>
 800219a:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800219e:	bc70      	pop	{r4, r5, r6}
 80021a0:	6058      	str	r0, [r3, #4]
 80021a2:	6099      	str	r1, [r3, #8]
 80021a4:	4770      	bx	lr
 80021a6:	2e00      	cmp	r6, #0
 80021a8:	d0f4      	beq.n	8002194 <rt_psq_enq+0x28>
 80021aa:	2002      	movs	r0, #2
 80021ac:	bc70      	pop	{r4, r5, r6}
 80021ae:	f7ff bebd 	b.w	8001f2c <os_error>
 80021b2:	bf00      	nop
 80021b4:	20002584 	.word	0x20002584

080021b8 <rt_init_stack>:
 80021b8:	6a83      	ldr	r3, [r0, #40]	; 0x28
 80021ba:	089b      	lsrs	r3, r3, #2
 80021bc:	bf04      	itt	eq
 80021be:	4b22      	ldreq	r3, [pc, #136]	; (8002248 <rt_init_stack+0x90>)
 80021c0:	881b      	ldrheq	r3, [r3, #0]
 80021c2:	b5f0      	push	{r4, r5, r6, r7, lr}
 80021c4:	6b05      	ldr	r5, [r0, #48]	; 0x30
 80021c6:	bf08      	it	eq
 80021c8:	089b      	lsreq	r3, r3, #2
 80021ca:	eb05 0283 	add.w	r2, r5, r3, lsl #2
 80021ce:	0754      	lsls	r4, r2, #29
 80021d0:	bf48      	it	mi
 80021d2:	3a04      	submi	r2, #4
 80021d4:	f04f 7680 	mov.w	r6, #16777216	; 0x1000000
 80021d8:	e902 0042 	stmdb	r2, {r1, r6}
 80021dc:	f1a2 0440 	sub.w	r4, r2, #64	; 0x40
 80021e0:	f1a2 0644 	sub.w	r6, r2, #68	; 0x44
 80021e4:	f1a2 070c 	sub.w	r7, r2, #12
 80021e8:	f04f 0e00 	mov.w	lr, #0
 80021ec:	f846 ef04 	str.w	lr, [r6, #4]!
 80021f0:	42be      	cmp	r6, r7
 80021f2:	d1fb      	bne.n	80021ec <rt_init_stack+0x34>
 80021f4:	69c6      	ldr	r6, [r0, #28]
 80021f6:	f842 6c20 	str.w	r6, [r2, #-32]
 80021fa:	6341      	str	r1, [r0, #52]	; 0x34
 80021fc:	4912      	ldr	r1, [pc, #72]	; (8002248 <rt_init_stack+0x90>)
 80021fe:	62c4      	str	r4, [r0, #44]	; 0x2c
 8002200:	6809      	ldr	r1, [r1, #0]
 8002202:	00c9      	lsls	r1, r1, #3
 8002204:	d517      	bpl.n	8002236 <rt_init_stack+0x7e>
 8002206:	2b11      	cmp	r3, #17
 8002208:	d915      	bls.n	8002236 <rt_init_stack+0x7e>
 800220a:	3b10      	subs	r3, #16
 800220c:	f06f 0107 	mvn.w	r1, #7
 8002210:	085b      	lsrs	r3, r3, #1
 8002212:	434b      	muls	r3, r1
 8002214:	f1a3 0138 	sub.w	r1, r3, #56	; 0x38
 8002218:	440a      	add	r2, r1
 800221a:	f04f 30cc 	mov.w	r0, #3435973836	; 0xcccccccc
 800221e:	4621      	mov	r1, r4
 8002220:	4291      	cmp	r1, r2
 8002222:	d10b      	bne.n	800223c <rt_init_stack+0x84>
 8002224:	3308      	adds	r3, #8
 8002226:	441c      	add	r4, r3
 8002228:	1f23      	subs	r3, r4, #4
 800222a:	429d      	cmp	r5, r3
 800222c:	bf3c      	itt	cc
 800222e:	f04f 33cc 	movcc.w	r3, #3435973836	; 0xcccccccc
 8002232:	f844 3c04 	strcc.w	r3, [r4, #-4]
 8002236:	4b05      	ldr	r3, [pc, #20]	; (800224c <rt_init_stack+0x94>)
 8002238:	602b      	str	r3, [r5, #0]
 800223a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800223c:	f841 0c04 	str.w	r0, [r1, #-4]
 8002240:	f841 0d08 	str.w	r0, [r1, #-8]!
 8002244:	e7ec      	b.n	8002220 <rt_init_stack+0x68>
 8002246:	bf00      	nop
 8002248:	08006f34 	.word	0x08006f34
 800224c:	e25a2ea5 	.word	0xe25a2ea5

08002250 <rt_ret_val>:
 8002250:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8002254:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8002256:	b112      	cbz	r2, 800225e <rt_ret_val+0xe>
 8002258:	3360      	adds	r3, #96	; 0x60
 800225a:	6019      	str	r1, [r3, #0]
 800225c:	4770      	bx	lr
 800225e:	3320      	adds	r3, #32
 8002260:	e7fb      	b.n	800225a <rt_ret_val+0xa>

08002262 <rt_ret_val2>:
 8002262:	b510      	push	{r4, lr}
 8002264:	f890 4025 	ldrb.w	r4, [r0, #37]	; 0x25
 8002268:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800226a:	b11c      	cbz	r4, 8002274 <rt_ret_val2+0x12>
 800226c:	3360      	adds	r3, #96	; 0x60
 800226e:	e883 0006 	stmia.w	r3, {r1, r2}
 8002272:	bd10      	pop	{r4, pc}
 8002274:	3320      	adds	r3, #32
 8002276:	e7fa      	b.n	800226e <rt_ret_val2+0xc>

08002278 <rt_psh_req>:
 8002278:	4b05      	ldr	r3, [pc, #20]	; (8002290 <rt_psh_req+0x18>)
 800227a:	781b      	ldrb	r3, [r3, #0]
 800227c:	b923      	cbnz	r3, 8002288 <rt_psh_req+0x10>
 800227e:	4b05      	ldr	r3, [pc, #20]	; (8002294 <rt_psh_req+0x1c>)
 8002280:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8002284:	601a      	str	r2, [r3, #0]
 8002286:	4770      	bx	lr
 8002288:	4b03      	ldr	r3, [pc, #12]	; (8002298 <rt_psh_req+0x20>)
 800228a:	2201      	movs	r2, #1
 800228c:	701a      	strb	r2, [r3, #0]
 800228e:	4770      	bx	lr
 8002290:	20001d24 	.word	0x20001d24
 8002294:	e000ed04 	.word	0xe000ed04
 8002298:	20001d25 	.word	0x20001d25

0800229c <rt_pop_req>:
 800229c:	b538      	push	{r3, r4, r5, lr}
 800229e:	4b1a      	ldr	r3, [pc, #104]	; (8002308 <rt_pop_req+0x6c>)
 80022a0:	4c1a      	ldr	r4, [pc, #104]	; (800230c <rt_pop_req+0x70>)
 80022a2:	6818      	ldr	r0, [r3, #0]
 80022a4:	2301      	movs	r3, #1
 80022a6:	7043      	strb	r3, [r0, #1]
 80022a8:	f7ff feb8 	bl	800201c <rt_put_rdy_first>
 80022ac:	7865      	ldrb	r5, [r4, #1]
 80022ae:	78a3      	ldrb	r3, [r4, #2]
 80022b0:	b93b      	cbnz	r3, 80022c2 <rt_pop_req+0x26>
 80022b2:	4817      	ldr	r0, [pc, #92]	; (8002310 <rt_pop_req+0x74>)
 80022b4:	7065      	strb	r5, [r4, #1]
 80022b6:	f7ff fe9f 	bl	8001ff8 <rt_get_first>
 80022ba:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80022be:	f000 bd5d 	b.w	8002d7c <rt_switch_req>
 80022c2:	eb04 03c5 	add.w	r3, r4, r5, lsl #3
 80022c6:	6858      	ldr	r0, [r3, #4]
 80022c8:	7802      	ldrb	r2, [r0, #0]
 80022ca:	b99a      	cbnz	r2, 80022f4 <rt_pop_req+0x58>
 80022cc:	8919      	ldrh	r1, [r3, #8]
 80022ce:	f000 f9bb 	bl	8002648 <rt_evt_psh>
 80022d2:	78e3      	ldrb	r3, [r4, #3]
 80022d4:	3501      	adds	r5, #1
 80022d6:	429d      	cmp	r5, r3
 80022d8:	bf08      	it	eq
 80022da:	2500      	moveq	r5, #0
 80022dc:	f3ef 8310 	mrs	r3, PRIMASK
 80022e0:	f3ef 8210 	mrs	r2, PRIMASK
 80022e4:	b672      	cpsid	i
 80022e6:	78a2      	ldrb	r2, [r4, #2]
 80022e8:	3a01      	subs	r2, #1
 80022ea:	70a2      	strb	r2, [r4, #2]
 80022ec:	2b00      	cmp	r3, #0
 80022ee:	d1de      	bne.n	80022ae <rt_pop_req+0x12>
 80022f0:	b662      	cpsie	i
 80022f2:	e7dc      	b.n	80022ae <rt_pop_req+0x12>
 80022f4:	2a01      	cmp	r2, #1
 80022f6:	d103      	bne.n	8002300 <rt_pop_req+0x64>
 80022f8:	6899      	ldr	r1, [r3, #8]
 80022fa:	f000 f933 	bl	8002564 <rt_mbx_psh>
 80022fe:	e7e8      	b.n	80022d2 <rt_pop_req+0x36>
 8002300:	f001 f844 	bl	800338c <rt_sem_psh>
 8002304:	e7e5      	b.n	80022d2 <rt_pop_req+0x36>
 8002306:	bf00      	nop
 8002308:	20002d4c 	.word	0x20002d4c
 800230c:	20002584 	.word	0x20002584
 8002310:	20002d00 	.word	0x20002d00

08002314 <os_tick_init>:
 8002314:	4b08      	ldr	r3, [pc, #32]	; (8002338 <os_tick_init+0x24>)
 8002316:	681a      	ldr	r2, [r3, #0]
 8002318:	4b08      	ldr	r3, [pc, #32]	; (800233c <os_tick_init+0x28>)
 800231a:	601a      	str	r2, [r3, #0]
 800231c:	2200      	movs	r2, #0
 800231e:	605a      	str	r2, [r3, #4]
 8002320:	2207      	movs	r2, #7
 8002322:	f843 2c04 	str.w	r2, [r3, #-4]
 8002326:	4a06      	ldr	r2, [pc, #24]	; (8002340 <os_tick_init+0x2c>)
 8002328:	6813      	ldr	r3, [r2, #0]
 800232a:	f043 437f 	orr.w	r3, r3, #4278190080	; 0xff000000
 800232e:	6013      	str	r3, [r2, #0]
 8002330:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8002334:	4770      	bx	lr
 8002336:	bf00      	nop
 8002338:	08006f4c 	.word	0x08006f4c
 800233c:	e000e014 	.word	0xe000e014
 8002340:	e000ed20 	.word	0xe000ed20

08002344 <os_tick_irqack>:
 8002344:	4770      	bx	lr
	...

08002348 <rt_systick>:
 8002348:	b508      	push	{r3, lr}
 800234a:	4b0b      	ldr	r3, [pc, #44]	; (8002378 <rt_systick+0x30>)
 800234c:	6818      	ldr	r0, [r3, #0]
 800234e:	2301      	movs	r3, #1
 8002350:	7043      	strb	r3, [r0, #1]
 8002352:	f7ff fe63 	bl	800201c <rt_put_rdy_first>
 8002356:	f000 f9ad 	bl	80026b4 <rt_chk_robin>
 800235a:	4a08      	ldr	r2, [pc, #32]	; (800237c <rt_systick+0x34>)
 800235c:	6813      	ldr	r3, [r2, #0]
 800235e:	3301      	adds	r3, #1
 8002360:	6013      	str	r3, [r2, #0]
 8002362:	f7ff fe89 	bl	8002078 <rt_dec_dly>
 8002366:	f000 fc91 	bl	8002c8c <sysTimerTick>
 800236a:	4805      	ldr	r0, [pc, #20]	; (8002380 <rt_systick+0x38>)
 800236c:	f7ff fe44 	bl	8001ff8 <rt_get_first>
 8002370:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8002374:	f000 bd02 	b.w	8002d7c <rt_switch_req>
 8002378:	20002d4c 	.word	0x20002d4c
 800237c:	20002d94 	.word	0x20002d94
 8002380:	20002d00 	.word	0x20002d00

08002384 <rt_stk_check>:
 8002384:	4b06      	ldr	r3, [pc, #24]	; (80023a0 <rt_stk_check+0x1c>)
 8002386:	681a      	ldr	r2, [r3, #0]
 8002388:	6b13      	ldr	r3, [r2, #48]	; 0x30
 800238a:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 800238c:	4293      	cmp	r3, r2
 800238e:	d803      	bhi.n	8002398 <rt_stk_check+0x14>
 8002390:	681a      	ldr	r2, [r3, #0]
 8002392:	4b04      	ldr	r3, [pc, #16]	; (80023a4 <rt_stk_check+0x20>)
 8002394:	429a      	cmp	r2, r3
 8002396:	d002      	beq.n	800239e <rt_stk_check+0x1a>
 8002398:	2001      	movs	r0, #1
 800239a:	f7ff bdc7 	b.w	8001f2c <os_error>
 800239e:	4770      	bx	lr
 80023a0:	20002d4c 	.word	0x20002d4c
 80023a4:	e25a2ea5 	.word	0xe25a2ea5

080023a8 <_init_box>:
 80023a8:	2a00      	cmp	r2, #0
 80023aa:	bfbb      	ittet	lt
 80023ac:	f022 4200 	biclt.w	r2, r2, #2147483648	; 0x80000000
 80023b0:	3207      	addlt	r2, #7
 80023b2:	3203      	addge	r2, #3
 80023b4:	f022 0207 	biclt.w	r2, r2, #7
 80023b8:	bfa8      	it	ge
 80023ba:	f022 0203 	bicge.w	r2, r2, #3
 80023be:	b510      	push	{r4, lr}
 80023c0:	bfb4      	ite	lt
 80023c2:	2310      	movlt	r3, #16
 80023c4:	230c      	movge	r3, #12
 80023c6:	b192      	cbz	r2, 80023ee <_init_box+0x46>
 80023c8:	18d4      	adds	r4, r2, r3
 80023ca:	428c      	cmp	r4, r1
 80023cc:	d80f      	bhi.n	80023ee <_init_box+0x46>
 80023ce:	4401      	add	r1, r0
 80023d0:	4403      	add	r3, r0
 80023d2:	4254      	negs	r4, r2
 80023d4:	6041      	str	r1, [r0, #4]
 80023d6:	6003      	str	r3, [r0, #0]
 80023d8:	6082      	str	r2, [r0, #8]
 80023da:	4421      	add	r1, r4
 80023dc:	1898      	adds	r0, r3, r2
 80023de:	4281      	cmp	r1, r0
 80023e0:	d302      	bcc.n	80023e8 <_init_box+0x40>
 80023e2:	5100      	str	r0, [r0, r4]
 80023e4:	4603      	mov	r3, r0
 80023e6:	e7f9      	b.n	80023dc <_init_box+0x34>
 80023e8:	2000      	movs	r0, #0
 80023ea:	6018      	str	r0, [r3, #0]
 80023ec:	bd10      	pop	{r4, pc}
 80023ee:	2001      	movs	r0, #1
 80023f0:	bd10      	pop	{r4, pc}

080023f2 <rt_alloc_box>:
 80023f2:	f3ef 8310 	mrs	r3, PRIMASK
 80023f6:	b672      	cpsid	i
 80023f8:	6802      	ldr	r2, [r0, #0]
 80023fa:	f003 0301 	and.w	r3, r3, #1
 80023fe:	b10a      	cbz	r2, 8002404 <rt_alloc_box+0x12>
 8002400:	6811      	ldr	r1, [r2, #0]
 8002402:	6001      	str	r1, [r0, #0]
 8002404:	b903      	cbnz	r3, 8002408 <rt_alloc_box+0x16>
 8002406:	b662      	cpsie	i
 8002408:	4610      	mov	r0, r2
 800240a:	4770      	bx	lr

0800240c <rt_free_box>:
 800240c:	4281      	cmp	r1, r0
 800240e:	d30d      	bcc.n	800242c <rt_free_box+0x20>
 8002410:	6843      	ldr	r3, [r0, #4]
 8002412:	4299      	cmp	r1, r3
 8002414:	d20a      	bcs.n	800242c <rt_free_box+0x20>
 8002416:	f3ef 8310 	mrs	r3, PRIMASK
 800241a:	b672      	cpsid	i
 800241c:	6802      	ldr	r2, [r0, #0]
 800241e:	600a      	str	r2, [r1, #0]
 8002420:	6001      	str	r1, [r0, #0]
 8002422:	f013 0001 	ands.w	r0, r3, #1
 8002426:	d103      	bne.n	8002430 <rt_free_box+0x24>
 8002428:	b662      	cpsie	i
 800242a:	4770      	bx	lr
 800242c:	2001      	movs	r0, #1
 800242e:	4770      	bx	lr
 8002430:	2000      	movs	r0, #0
 8002432:	4770      	bx	lr

08002434 <rt_mbx_init>:
 8002434:	2301      	movs	r3, #1
 8002436:	3910      	subs	r1, #16
 8002438:	7003      	strb	r3, [r0, #0]
 800243a:	0889      	lsrs	r1, r1, #2
 800243c:	2300      	movs	r3, #0
 800243e:	7043      	strb	r3, [r0, #1]
 8002440:	7083      	strb	r3, [r0, #2]
 8002442:	6043      	str	r3, [r0, #4]
 8002444:	8103      	strh	r3, [r0, #8]
 8002446:	8143      	strh	r3, [r0, #10]
 8002448:	8183      	strh	r3, [r0, #12]
 800244a:	81c1      	strh	r1, [r0, #14]
 800244c:	4770      	bx	lr
	...

08002450 <rt_mbx_wait>:
 8002450:	b570      	push	{r4, r5, r6, lr}
 8002452:	8985      	ldrh	r5, [r0, #12]
 8002454:	4604      	mov	r4, r0
 8002456:	4616      	mov	r6, r2
 8002458:	2d00      	cmp	r5, #0
 800245a:	d038      	beq.n	80024ce <rt_mbx_wait+0x7e>
 800245c:	8943      	ldrh	r3, [r0, #10]
 800245e:	1d1a      	adds	r2, r3, #4
 8002460:	3301      	adds	r3, #1
 8002462:	f850 2022 	ldr.w	r2, [r0, r2, lsl #2]
 8002466:	600a      	str	r2, [r1, #0]
 8002468:	89c2      	ldrh	r2, [r0, #14]
 800246a:	b29b      	uxth	r3, r3
 800246c:	429a      	cmp	r2, r3
 800246e:	8143      	strh	r3, [r0, #10]
 8002470:	bf04      	itt	eq
 8002472:	2300      	moveq	r3, #0
 8002474:	8143      	strheq	r3, [r0, #10]
 8002476:	6843      	ldr	r3, [r0, #4]
 8002478:	b1f3      	cbz	r3, 80024b8 <rt_mbx_wait+0x68>
 800247a:	7843      	ldrb	r3, [r0, #1]
 800247c:	2b02      	cmp	r3, #2
 800247e:	d11b      	bne.n	80024b8 <rt_mbx_wait+0x68>
 8002480:	f7ff fdba 	bl	8001ff8 <rt_get_first>
 8002484:	2100      	movs	r1, #0
 8002486:	4605      	mov	r5, r0
 8002488:	f7ff fee2 	bl	8002250 <rt_ret_val>
 800248c:	8923      	ldrh	r3, [r4, #8]
 800248e:	69e9      	ldr	r1, [r5, #28]
 8002490:	1d1a      	adds	r2, r3, #4
 8002492:	3301      	adds	r3, #1
 8002494:	f844 1022 	str.w	r1, [r4, r2, lsl #2]
 8002498:	89e2      	ldrh	r2, [r4, #14]
 800249a:	b29b      	uxth	r3, r3
 800249c:	429a      	cmp	r2, r3
 800249e:	8123      	strh	r3, [r4, #8]
 80024a0:	bf08      	it	eq
 80024a2:	2300      	moveq	r3, #0
 80024a4:	4628      	mov	r0, r5
 80024a6:	bf08      	it	eq
 80024a8:	8123      	strheq	r3, [r4, #8]
 80024aa:	f7ff fe4b 	bl	8002144 <rt_rmv_dly>
 80024ae:	4628      	mov	r0, r5
 80024b0:	f000 fc7e 	bl	8002db0 <rt_dispatch>
 80024b4:	2000      	movs	r0, #0
 80024b6:	bd70      	pop	{r4, r5, r6, pc}
 80024b8:	f3ef 8010 	mrs	r0, PRIMASK
 80024bc:	f3ef 8310 	mrs	r3, PRIMASK
 80024c0:	b672      	cpsid	i
 80024c2:	3d01      	subs	r5, #1
 80024c4:	81a5      	strh	r5, [r4, #12]
 80024c6:	2800      	cmp	r0, #0
 80024c8:	d1f4      	bne.n	80024b4 <rt_mbx_wait+0x64>
 80024ca:	b662      	cpsie	i
 80024cc:	bd70      	pop	{r4, r5, r6, pc}
 80024ce:	b14a      	cbz	r2, 80024e4 <rt_mbx_wait+0x94>
 80024d0:	6842      	ldr	r2, [r0, #4]
 80024d2:	4b09      	ldr	r3, [pc, #36]	; (80024f8 <rt_mbx_wait+0xa8>)
 80024d4:	b142      	cbz	r2, 80024e8 <rt_mbx_wait+0x98>
 80024d6:	6819      	ldr	r1, [r3, #0]
 80024d8:	f7ff fd76 	bl	8001fc8 <rt_put_prio>
 80024dc:	2108      	movs	r1, #8
 80024de:	4630      	mov	r0, r6
 80024e0:	f000 fc8a 	bl	8002df8 <rt_block>
 80024e4:	2001      	movs	r0, #1
 80024e6:	bd70      	pop	{r4, r5, r6, pc}
 80024e8:	681b      	ldr	r3, [r3, #0]
 80024ea:	6043      	str	r3, [r0, #4]
 80024ec:	605a      	str	r2, [r3, #4]
 80024ee:	6098      	str	r0, [r3, #8]
 80024f0:	2301      	movs	r3, #1
 80024f2:	7043      	strb	r3, [r0, #1]
 80024f4:	e7f2      	b.n	80024dc <rt_mbx_wait+0x8c>
 80024f6:	bf00      	nop
 80024f8:	20002d4c 	.word	0x20002d4c

080024fc <rt_mbx_check>:
 80024fc:	89c2      	ldrh	r2, [r0, #14]
 80024fe:	8980      	ldrh	r0, [r0, #12]
 8002500:	1a10      	subs	r0, r2, r0
 8002502:	4770      	bx	lr

08002504 <isr_mbx_send>:
 8002504:	b508      	push	{r3, lr}
 8002506:	f7ff fe31 	bl	800216c <rt_psq_enq>
 800250a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800250e:	f7ff beb3 	b.w	8002278 <rt_psh_req>

08002512 <isr_mbx_receive>:
 8002512:	8983      	ldrh	r3, [r0, #12]
 8002514:	b510      	push	{r4, lr}
 8002516:	4604      	mov	r4, r0
 8002518:	b30b      	cbz	r3, 800255e <isr_mbx_receive+0x4c>
 800251a:	8943      	ldrh	r3, [r0, #10]
 800251c:	3304      	adds	r3, #4
 800251e:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 8002522:	600b      	str	r3, [r1, #0]
 8002524:	7843      	ldrb	r3, [r0, #1]
 8002526:	2b02      	cmp	r3, #2
 8002528:	d104      	bne.n	8002534 <isr_mbx_receive+0x22>
 800252a:	2100      	movs	r1, #0
 800252c:	f7ff fe1e 	bl	800216c <rt_psq_enq>
 8002530:	f7ff fea2 	bl	8002278 <rt_psh_req>
 8002534:	f3ef 8310 	mrs	r3, PRIMASK
 8002538:	f3ef 8210 	mrs	r2, PRIMASK
 800253c:	b672      	cpsid	i
 800253e:	89a2      	ldrh	r2, [r4, #12]
 8002540:	3a01      	subs	r2, #1
 8002542:	81a2      	strh	r2, [r4, #12]
 8002544:	b903      	cbnz	r3, 8002548 <isr_mbx_receive+0x36>
 8002546:	b662      	cpsie	i
 8002548:	8963      	ldrh	r3, [r4, #10]
 800254a:	89e2      	ldrh	r2, [r4, #14]
 800254c:	3301      	adds	r3, #1
 800254e:	b29b      	uxth	r3, r3
 8002550:	429a      	cmp	r2, r3
 8002552:	8163      	strh	r3, [r4, #10]
 8002554:	d101      	bne.n	800255a <isr_mbx_receive+0x48>
 8002556:	2300      	movs	r3, #0
 8002558:	8163      	strh	r3, [r4, #10]
 800255a:	2004      	movs	r0, #4
 800255c:	bd10      	pop	{r4, pc}
 800255e:	4618      	mov	r0, r3
 8002560:	bd10      	pop	{r4, pc}
	...

08002564 <rt_mbx_psh>:
 8002564:	6843      	ldr	r3, [r0, #4]
 8002566:	b570      	push	{r4, r5, r6, lr}
 8002568:	4604      	mov	r4, r0
 800256a:	460e      	mov	r6, r1
 800256c:	2b00      	cmp	r3, #0
 800256e:	d04b      	beq.n	8002608 <rt_mbx_psh+0xa4>
 8002570:	7845      	ldrb	r5, [r0, #1]
 8002572:	2d02      	cmp	r5, #2
 8002574:	d020      	beq.n	80025b8 <rt_mbx_psh+0x54>
 8002576:	2d03      	cmp	r5, #3
 8002578:	d00a      	beq.n	8002590 <rt_mbx_psh+0x2c>
 800257a:	2d01      	cmp	r5, #1
 800257c:	d161      	bne.n	8002642 <rt_mbx_psh+0xde>
 800257e:	f7ff fd3b 	bl	8001ff8 <rt_get_first>
 8002582:	4604      	mov	r4, r0
 8002584:	4632      	mov	r2, r6
 8002586:	2110      	movs	r1, #16
 8002588:	f7ff fe6b 	bl	8002262 <rt_ret_val2>
 800258c:	7065      	strb	r5, [r4, #1]
 800258e:	e00e      	b.n	80025ae <rt_mbx_psh+0x4a>
 8002590:	4608      	mov	r0, r1
 8002592:	f7ff ff2e 	bl	80023f2 <rt_alloc_box>
 8002596:	4605      	mov	r5, r0
 8002598:	2800      	cmp	r0, #0
 800259a:	d052      	beq.n	8002642 <rt_mbx_psh+0xde>
 800259c:	4620      	mov	r0, r4
 800259e:	f7ff fd2b 	bl	8001ff8 <rt_get_first>
 80025a2:	4629      	mov	r1, r5
 80025a4:	4604      	mov	r4, r0
 80025a6:	f7ff fe53 	bl	8002250 <rt_ret_val>
 80025aa:	2301      	movs	r3, #1
 80025ac:	7063      	strb	r3, [r4, #1]
 80025ae:	4620      	mov	r0, r4
 80025b0:	f7ff fdc8 	bl	8002144 <rt_rmv_dly>
 80025b4:	4621      	mov	r1, r4
 80025b6:	e022      	b.n	80025fe <rt_mbx_psh+0x9a>
 80025b8:	f7ff fd1e 	bl	8001ff8 <rt_get_first>
 80025bc:	2100      	movs	r1, #0
 80025be:	4605      	mov	r5, r0
 80025c0:	f7ff fe46 	bl	8002250 <rt_ret_val>
 80025c4:	8923      	ldrh	r3, [r4, #8]
 80025c6:	69e9      	ldr	r1, [r5, #28]
 80025c8:	1d1a      	adds	r2, r3, #4
 80025ca:	f844 1022 	str.w	r1, [r4, r2, lsl #2]
 80025ce:	f3ef 8210 	mrs	r2, PRIMASK
 80025d2:	f3ef 8110 	mrs	r1, PRIMASK
 80025d6:	b672      	cpsid	i
 80025d8:	89a1      	ldrh	r1, [r4, #12]
 80025da:	3101      	adds	r1, #1
 80025dc:	81a1      	strh	r1, [r4, #12]
 80025de:	b902      	cbnz	r2, 80025e2 <rt_mbx_psh+0x7e>
 80025e0:	b662      	cpsie	i
 80025e2:	89e2      	ldrh	r2, [r4, #14]
 80025e4:	3301      	adds	r3, #1
 80025e6:	b29b      	uxth	r3, r3
 80025e8:	429a      	cmp	r2, r3
 80025ea:	8123      	strh	r3, [r4, #8]
 80025ec:	bf04      	itt	eq
 80025ee:	2300      	moveq	r3, #0
 80025f0:	8123      	strheq	r3, [r4, #8]
 80025f2:	2301      	movs	r3, #1
 80025f4:	706b      	strb	r3, [r5, #1]
 80025f6:	4628      	mov	r0, r5
 80025f8:	f7ff fda4 	bl	8002144 <rt_rmv_dly>
 80025fc:	4629      	mov	r1, r5
 80025fe:	4811      	ldr	r0, [pc, #68]	; (8002644 <rt_mbx_psh+0xe0>)
 8002600:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8002604:	f7ff bce0 	b.w	8001fc8 <rt_put_prio>
 8002608:	8980      	ldrh	r0, [r0, #12]
 800260a:	89e1      	ldrh	r1, [r4, #14]
 800260c:	4288      	cmp	r0, r1
 800260e:	d213      	bcs.n	8002638 <rt_mbx_psh+0xd4>
 8002610:	8923      	ldrh	r3, [r4, #8]
 8002612:	1d1a      	adds	r2, r3, #4
 8002614:	f844 6022 	str.w	r6, [r4, r2, lsl #2]
 8002618:	f3ef 8210 	mrs	r2, PRIMASK
 800261c:	f3ef 8510 	mrs	r5, PRIMASK
 8002620:	b672      	cpsid	i
 8002622:	3001      	adds	r0, #1
 8002624:	81a0      	strh	r0, [r4, #12]
 8002626:	b902      	cbnz	r2, 800262a <rt_mbx_psh+0xc6>
 8002628:	b662      	cpsie	i
 800262a:	3301      	adds	r3, #1
 800262c:	b29b      	uxth	r3, r3
 800262e:	4299      	cmp	r1, r3
 8002630:	bf08      	it	eq
 8002632:	2300      	moveq	r3, #0
 8002634:	8123      	strh	r3, [r4, #8]
 8002636:	bd70      	pop	{r4, r5, r6, pc}
 8002638:	2003      	movs	r0, #3
 800263a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800263e:	f7ff bc75 	b.w	8001f2c <os_error>
 8002642:	bd70      	pop	{r4, r5, r6, pc}
 8002644:	20002d00 	.word	0x20002d00

08002648 <rt_evt_psh>:
 8002648:	b510      	push	{r4, lr}
 800264a:	8b03      	ldrh	r3, [r0, #24]
 800264c:	7842      	ldrb	r2, [r0, #1]
 800264e:	4319      	orrs	r1, r3
 8002650:	2a06      	cmp	r2, #6
 8002652:	4604      	mov	r4, r0
 8002654:	8301      	strh	r1, [r0, #24]
 8002656:	8b43      	ldrh	r3, [r0, #26]
 8002658:	d115      	bne.n	8002686 <rt_evt_psh+0x3e>
 800265a:	ea33 0201 	bics.w	r2, r3, r1
 800265e:	d119      	bne.n	8002694 <rt_evt_psh+0x4c>
 8002660:	ea21 0103 	bic.w	r1, r1, r3
 8002664:	8321      	strh	r1, [r4, #24]
 8002666:	4620      	mov	r0, r4
 8002668:	f7ff fd6c 	bl	8002144 <rt_rmv_dly>
 800266c:	2301      	movs	r3, #1
 800266e:	4620      	mov	r0, r4
 8002670:	7063      	strb	r3, [r4, #1]
 8002672:	8b62      	ldrh	r2, [r4, #26]
 8002674:	2108      	movs	r1, #8
 8002676:	f7ff fdf4 	bl	8002262 <rt_ret_val2>
 800267a:	4621      	mov	r1, r4
 800267c:	4806      	ldr	r0, [pc, #24]	; (8002698 <rt_evt_psh+0x50>)
 800267e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8002682:	f7ff bca1 	b.w	8001fc8 <rt_put_prio>
 8002686:	2a05      	cmp	r2, #5
 8002688:	d104      	bne.n	8002694 <rt_evt_psh+0x4c>
 800268a:	ea11 0203 	ands.w	r2, r1, r3
 800268e:	d001      	beq.n	8002694 <rt_evt_psh+0x4c>
 8002690:	8342      	strh	r2, [r0, #26]
 8002692:	e7e5      	b.n	8002660 <rt_evt_psh+0x18>
 8002694:	bd10      	pop	{r4, pc}
 8002696:	bf00      	nop
 8002698:	20002d00 	.word	0x20002d00

0800269c <rt_init_robin>:
 800269c:	4b03      	ldr	r3, [pc, #12]	; (80026ac <rt_init_robin+0x10>)
 800269e:	2200      	movs	r2, #0
 80026a0:	601a      	str	r2, [r3, #0]
 80026a2:	4a03      	ldr	r2, [pc, #12]	; (80026b0 <rt_init_robin+0x14>)
 80026a4:	6812      	ldr	r2, [r2, #0]
 80026a6:	80da      	strh	r2, [r3, #6]
 80026a8:	4770      	bx	lr
 80026aa:	bf00      	nop
 80026ac:	20002d38 	.word	0x20002d38
 80026b0:	08006f30 	.word	0x08006f30

080026b4 <rt_chk_robin>:
 80026b4:	b508      	push	{r3, lr}
 80026b6:	4b0e      	ldr	r3, [pc, #56]	; (80026f0 <rt_chk_robin+0x3c>)
 80026b8:	685a      	ldr	r2, [r3, #4]
 80026ba:	4b0e      	ldr	r3, [pc, #56]	; (80026f4 <rt_chk_robin+0x40>)
 80026bc:	6819      	ldr	r1, [r3, #0]
 80026be:	4291      	cmp	r1, r2
 80026c0:	490d      	ldr	r1, [pc, #52]	; (80026f8 <rt_chk_robin+0x44>)
 80026c2:	d005      	beq.n	80026d0 <rt_chk_robin+0x1c>
 80026c4:	601a      	str	r2, [r3, #0]
 80026c6:	88da      	ldrh	r2, [r3, #6]
 80026c8:	6808      	ldr	r0, [r1, #0]
 80026ca:	3a01      	subs	r2, #1
 80026cc:	4402      	add	r2, r0
 80026ce:	809a      	strh	r2, [r3, #4]
 80026d0:	8898      	ldrh	r0, [r3, #4]
 80026d2:	880a      	ldrh	r2, [r1, #0]
 80026d4:	4290      	cmp	r0, r2
 80026d6:	d10a      	bne.n	80026ee <rt_chk_robin+0x3a>
 80026d8:	2200      	movs	r2, #0
 80026da:	4805      	ldr	r0, [pc, #20]	; (80026f0 <rt_chk_robin+0x3c>)
 80026dc:	601a      	str	r2, [r3, #0]
 80026de:	f7ff fc8b 	bl	8001ff8 <rt_get_first>
 80026e2:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80026e6:	4601      	mov	r1, r0
 80026e8:	4801      	ldr	r0, [pc, #4]	; (80026f0 <rt_chk_robin+0x3c>)
 80026ea:	f7ff bc6d 	b.w	8001fc8 <rt_put_prio>
 80026ee:	bd08      	pop	{r3, pc}
 80026f0:	20002d00 	.word	0x20002d00
 80026f4:	20002d38 	.word	0x20002d38
 80026f8:	20002d94 	.word	0x20002d94

080026fc <rt_timer_insert>:
 80026fc:	4a0b      	ldr	r2, [pc, #44]	; (800272c <rt_timer_insert+0x30>)
 80026fe:	6813      	ldr	r3, [r2, #0]
 8002700:	b530      	push	{r4, r5, lr}
 8002702:	2400      	movs	r4, #0
 8002704:	b943      	cbnz	r3, 8002718 <rt_timer_insert+0x1c>
 8002706:	6003      	str	r3, [r0, #0]
 8002708:	6081      	str	r1, [r0, #8]
 800270a:	b113      	cbz	r3, 8002712 <rt_timer_insert+0x16>
 800270c:	689d      	ldr	r5, [r3, #8]
 800270e:	1a69      	subs	r1, r5, r1
 8002710:	6099      	str	r1, [r3, #8]
 8002712:	b144      	cbz	r4, 8002726 <rt_timer_insert+0x2a>
 8002714:	6020      	str	r0, [r4, #0]
 8002716:	bd30      	pop	{r4, r5, pc}
 8002718:	689d      	ldr	r5, [r3, #8]
 800271a:	42a9      	cmp	r1, r5
 800271c:	d3f3      	bcc.n	8002706 <rt_timer_insert+0xa>
 800271e:	461c      	mov	r4, r3
 8002720:	1b49      	subs	r1, r1, r5
 8002722:	681b      	ldr	r3, [r3, #0]
 8002724:	e7ee      	b.n	8002704 <rt_timer_insert+0x8>
 8002726:	6010      	str	r0, [r2, #0]
 8002728:	bd30      	pop	{r4, r5, pc}
 800272a:	bf00      	nop
 800272c:	20002d48 	.word	0x20002d48

08002730 <rt_ms2tick>:
 8002730:	b1c0      	cbz	r0, 8002764 <rt_ms2tick+0x34>
 8002732:	1c43      	adds	r3, r0, #1
 8002734:	d011      	beq.n	800275a <rt_ms2tick+0x2a>
 8002736:	4b0c      	ldr	r3, [pc, #48]	; (8002768 <rt_ms2tick+0x38>)
 8002738:	4298      	cmp	r0, r3
 800273a:	d811      	bhi.n	8002760 <rt_ms2tick+0x30>
 800273c:	4b0b      	ldr	r3, [pc, #44]	; (800276c <rt_ms2tick+0x3c>)
 800273e:	681b      	ldr	r3, [r3, #0]
 8002740:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 8002744:	1e5a      	subs	r2, r3, #1
 8002746:	fb01 2000 	mla	r0, r1, r0, r2
 800274a:	fbb0 f3f3 	udiv	r3, r0, r3
 800274e:	f64f 70fe 	movw	r0, #65534	; 0xfffe
 8002752:	4283      	cmp	r3, r0
 8002754:	d806      	bhi.n	8002764 <rt_ms2tick+0x34>
 8002756:	b298      	uxth	r0, r3
 8002758:	4770      	bx	lr
 800275a:	f64f 70ff 	movw	r0, #65535	; 0xffff
 800275e:	4770      	bx	lr
 8002760:	f64f 70fe 	movw	r0, #65534	; 0xfffe
 8002764:	4770      	bx	lr
 8002766:	bf00      	nop
 8002768:	003d0900 	.word	0x003d0900
 800276c:	08006ee8 	.word	0x08006ee8

08002770 <rt_tid2ptcb>:
 8002770:	b138      	cbz	r0, 8002782 <rt_tid2ptcb+0x12>
 8002772:	0783      	lsls	r3, r0, #30
 8002774:	d104      	bne.n	8002780 <rt_tid2ptcb+0x10>
 8002776:	7803      	ldrb	r3, [r0, #0]
 8002778:	2b00      	cmp	r3, #0
 800277a:	bf18      	it	ne
 800277c:	2000      	movne	r0, #0
 800277e:	4770      	bx	lr
 8002780:	2000      	movs	r0, #0
 8002782:	4770      	bx	lr

08002784 <svcKernelStart>:
 8002784:	b5b0      	push	{r4, r5, r7, lr}
 8002786:	4d0e      	ldr	r5, [pc, #56]	; (80027c0 <svcKernelStart+0x3c>)
 8002788:	7828      	ldrb	r0, [r5, #0]
 800278a:	af00      	add	r7, sp, #0
 800278c:	b9a8      	cbnz	r0, 80027ba <svcKernelStart+0x36>
 800278e:	4c0d      	ldr	r4, [pc, #52]	; (80027c4 <svcKernelStart+0x40>)
 8002790:	6823      	ldr	r3, [r4, #0]
 8002792:	f893 1024 	ldrb.w	r1, [r3, #36]	; 0x24
 8002796:	f000 fb51 	bl	8002e3c <rt_tsk_prio>
 800279a:	6823      	ldr	r3, [r4, #0]
 800279c:	78da      	ldrb	r2, [r3, #3]
 800279e:	2aff      	cmp	r2, #255	; 0xff
 80027a0:	d103      	bne.n	80027aa <svcKernelStart+0x26>
 80027a2:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80027a4:	3220      	adds	r2, #32
 80027a6:	f382 8809 	msr	PSP, r2
 80027aa:	6862      	ldr	r2, [r4, #4]
 80027ac:	b90a      	cbnz	r2, 80027b2 <svcKernelStart+0x2e>
 80027ae:	e884 000c 	stmia.w	r4, {r2, r3}
 80027b2:	f000 fcfb 	bl	80031ac <rt_sys_start>
 80027b6:	2301      	movs	r3, #1
 80027b8:	702b      	strb	r3, [r5, #0]
 80027ba:	2000      	movs	r0, #0
 80027bc:	bdb0      	pop	{r4, r5, r7, pc}
 80027be:	bf00      	nop
 80027c0:	20002d45 	.word	0x20002d45
 80027c4:	20002d4c 	.word	0x20002d4c

080027c8 <svcKernelRunning>:
 80027c8:	4b01      	ldr	r3, [pc, #4]	; (80027d0 <svcKernelRunning+0x8>)
 80027ca:	7818      	ldrb	r0, [r3, #0]
 80027cc:	4770      	bx	lr
 80027ce:	bf00      	nop
 80027d0:	20002d45 	.word	0x20002d45

080027d4 <osKernelRunning>:
 80027d4:	b510      	push	{r4, lr}
 80027d6:	f3ef 8410 	mrs	r4, PRIMASK
 80027da:	b934      	cbnz	r4, 80027ea <osKernelRunning+0x16>
 80027dc:	f3ef 8405 	mrs	r4, IPSR
 80027e0:	b91c      	cbnz	r4, 80027ea <osKernelRunning+0x16>
 80027e2:	f3ef 8414 	mrs	r4, CONTROL
 80027e6:	07e4      	lsls	r4, r4, #31
 80027e8:	d402      	bmi.n	80027f0 <osKernelRunning+0x1c>
 80027ea:	4b03      	ldr	r3, [pc, #12]	; (80027f8 <osKernelRunning+0x24>)
 80027ec:	7818      	ldrb	r0, [r3, #0]
 80027ee:	bd10      	pop	{r4, pc}
 80027f0:	f8df c008 	ldr.w	r12, [pc, #8]	; 80027fc <osKernelRunning+0x28>
 80027f4:	df00      	svc	0
 80027f6:	bd10      	pop	{r4, pc}
 80027f8:	20002d45 	.word	0x20002d45
 80027fc:	080027c9 	.word	0x080027c9

08002800 <osKernelStart>:
 8002800:	b590      	push	{r4, r7, lr}
 8002802:	b089      	sub	sp, #36	; 0x24
 8002804:	af00      	add	r7, sp, #0
 8002806:	f3ef 8310 	mrs	r3, PRIMASK
 800280a:	2b00      	cmp	r3, #0
 800280c:	d137      	bne.n	800287e <osKernelStart+0x7e>
 800280e:	f3ef 8305 	mrs	r3, IPSR
 8002812:	2b00      	cmp	r3, #0
 8002814:	d133      	bne.n	800287e <osKernelStart+0x7e>
 8002816:	f7ff ffdd 	bl	80027d4 <osKernelRunning>
 800281a:	b928      	cbnz	r0, 8002828 <osKernelStart+0x28>
 800281c:	4c19      	ldr	r4, [pc, #100]	; (8002884 <osKernelStart+0x84>)
 800281e:	6824      	ldr	r4, [r4, #0]
 8002820:	b114      	cbz	r4, 8002828 <osKernelStart+0x28>
 8002822:	6864      	ldr	r4, [r4, #4]
 8002824:	b104      	cbz	r4, 8002828 <osKernelStart+0x28>
 8002826:	47a0      	blx	r4
 8002828:	f3ef 8414 	mrs	r4, CONTROL
 800282c:	f004 0403 	and.w	r4, r4, #3
 8002830:	2c02      	cmp	r4, #2
 8002832:	d018      	beq.n	8002866 <osKernelStart+0x66>
 8002834:	2c03      	cmp	r4, #3
 8002836:	d01c      	beq.n	8002872 <osKernelStart+0x72>
 8002838:	2c01      	cmp	r4, #1
 800283a:	d01e      	beq.n	800287a <osKernelStart+0x7a>
 800283c:	f107 0420 	add.w	r4, r7, #32
 8002840:	f384 8809 	msr	PSP, r4
 8002844:	4c10      	ldr	r4, [pc, #64]	; (8002888 <osKernelStart+0x88>)
 8002846:	7824      	ldrb	r4, [r4, #0]
 8002848:	07e4      	lsls	r4, r4, #31
 800284a:	d510      	bpl.n	800286e <osKernelStart+0x6e>
 800284c:	2402      	movs	r4, #2
 800284e:	f384 8814 	msr	CONTROL, r4
 8002852:	f3bf 8f4f 	dsb	sy
 8002856:	f3bf 8f6f 	isb	sy
 800285a:	f8df c030 	ldr.w	r12, [pc, #48]	; 800288c <osKernelStart+0x8c>
 800285e:	df00      	svc	0
 8002860:	3724      	adds	r7, #36	; 0x24
 8002862:	46bd      	mov	sp, r7
 8002864:	bd90      	pop	{r4, r7, pc}
 8002866:	4c08      	ldr	r4, [pc, #32]	; (8002888 <osKernelStart+0x88>)
 8002868:	7824      	ldrb	r4, [r4, #0]
 800286a:	07e4      	lsls	r4, r4, #31
 800286c:	d4f5      	bmi.n	800285a <osKernelStart+0x5a>
 800286e:	2403      	movs	r4, #3
 8002870:	e7ed      	b.n	800284e <osKernelStart+0x4e>
 8002872:	4c05      	ldr	r4, [pc, #20]	; (8002888 <osKernelStart+0x88>)
 8002874:	7824      	ldrb	r4, [r4, #0]
 8002876:	07e4      	lsls	r4, r4, #31
 8002878:	d5ef      	bpl.n	800285a <osKernelStart+0x5a>
 800287a:	20ff      	movs	r0, #255	; 0xff
 800287c:	e7f0      	b.n	8002860 <osKernelStart+0x60>
 800287e:	2082      	movs	r0, #130	; 0x82
 8002880:	e7ee      	b.n	8002860 <osKernelStart+0x60>
 8002882:	bf00      	nop
 8002884:	20002d34 	.word	0x20002d34
 8002888:	08006f16 	.word	0x08006f16
 800288c:	08002785 	.word	0x08002785

08002890 <svcThreadCreate>:
 8002890:	b570      	push	{r4, r5, r6, lr}
 8002892:	460b      	mov	r3, r1
 8002894:	4616      	mov	r6, r2
 8002896:	4602      	mov	r2, r0
 8002898:	b910      	cbnz	r0, 80028a0 <svcThreadCreate+0x10>
 800289a:	2400      	movs	r4, #0
 800289c:	4620      	mov	r0, r4
 800289e:	bd70      	pop	{r4, r5, r6, pc}
 80028a0:	6800      	ldr	r0, [r0, #0]
 80028a2:	2800      	cmp	r0, #0
 80028a4:	d0f9      	beq.n	800289a <svcThreadCreate+0xa>
 80028a6:	f9b2 4004 	ldrsh.w	r4, [r2, #4]
 80028aa:	1ce5      	adds	r5, r4, #3
 80028ac:	b2ad      	uxth	r5, r5
 80028ae:	2d06      	cmp	r5, #6
 80028b0:	d8f3      	bhi.n	800289a <svcThreadCreate+0xa>
 80028b2:	68d1      	ldr	r1, [r2, #12]
 80028b4:	b1c1      	cbz	r1, 80028e8 <svcThreadCreate+0x58>
 80028b6:	6912      	ldr	r2, [r2, #16]
 80028b8:	3404      	adds	r4, #4
 80028ba:	ea44 2101 	orr.w	r1, r4, r1, lsl #8
 80028be:	f000 fafb 	bl	8002eb8 <rt_tsk_create>
 80028c2:	2800      	cmp	r0, #0
 80028c4:	d0e9      	beq.n	800289a <svcThreadCreate+0xa>
 80028c6:	4b0a      	ldr	r3, [pc, #40]	; (80028f0 <svcThreadCreate+0x60>)
 80028c8:	4a0a      	ldr	r2, [pc, #40]	; (80028f4 <svcThreadCreate+0x64>)
 80028ca:	3801      	subs	r0, #1
 80028cc:	f853 4020 	ldr.w	r4, [r3, r0, lsl #2]
 80028d0:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80028d2:	635a      	str	r2, [r3, #52]	; 0x34
 80028d4:	4b08      	ldr	r3, [pc, #32]	; (80028f8 <svcThreadCreate+0x68>)
 80028d6:	681b      	ldr	r3, [r3, #0]
 80028d8:	b143      	cbz	r3, 80028ec <svcThreadCreate+0x5c>
 80028da:	689b      	ldr	r3, [r3, #8]
 80028dc:	b133      	cbz	r3, 80028ec <svcThreadCreate+0x5c>
 80028de:	4631      	mov	r1, r6
 80028e0:	78e0      	ldrb	r0, [r4, #3]
 80028e2:	4798      	blx	r3
 80028e4:	63e0      	str	r0, [r4, #60]	; 0x3c
 80028e6:	e7d9      	b.n	800289c <svcThreadCreate+0xc>
 80028e8:	460a      	mov	r2, r1
 80028ea:	e7e5      	b.n	80028b8 <svcThreadCreate+0x28>
 80028ec:	63e6      	str	r6, [r4, #60]	; 0x3c
 80028ee:	e7d5      	b.n	800289c <svcThreadCreate+0xc>
 80028f0:	20002548 	.word	0x20002548
 80028f4:	08002a7d 	.word	0x08002a7d
 80028f8:	20002d34 	.word	0x20002d34

080028fc <svcThreadGetId>:
 80028fc:	b508      	push	{r3, lr}
 80028fe:	f000 fa95 	bl	8002e2c <rt_tsk_self>
 8002902:	b118      	cbz	r0, 800290c <svcThreadGetId+0x10>
 8002904:	3801      	subs	r0, #1
 8002906:	4b02      	ldr	r3, [pc, #8]	; (8002910 <svcThreadGetId+0x14>)
 8002908:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
 800290c:	bd08      	pop	{r3, pc}
 800290e:	bf00      	nop
 8002910:	20002548 	.word	0x20002548

08002914 <svcThreadTerminate>:
 8002914:	b510      	push	{r4, lr}
 8002916:	f7ff ff2b 	bl	8002770 <rt_tid2ptcb>
 800291a:	4604      	mov	r4, r0
 800291c:	b170      	cbz	r0, 800293c <svcThreadTerminate+0x28>
 800291e:	4b08      	ldr	r3, [pc, #32]	; (8002940 <svcThreadTerminate+0x2c>)
 8002920:	681b      	ldr	r3, [r3, #0]
 8002922:	b11b      	cbz	r3, 800292c <svcThreadTerminate+0x18>
 8002924:	68db      	ldr	r3, [r3, #12]
 8002926:	b10b      	cbz	r3, 800292c <svcThreadTerminate+0x18>
 8002928:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 800292a:	4798      	blx	r3
 800292c:	78e0      	ldrb	r0, [r4, #3]
 800292e:	f000 fb19 	bl	8002f64 <rt_tsk_delete>
 8002932:	28ff      	cmp	r0, #255	; 0xff
 8002934:	bf0c      	ite	eq
 8002936:	2081      	moveq	r0, #129	; 0x81
 8002938:	2000      	movne	r0, #0
 800293a:	bd10      	pop	{r4, pc}
 800293c:	2080      	movs	r0, #128	; 0x80
 800293e:	bd10      	pop	{r4, pc}
 8002940:	20002d34 	.word	0x20002d34

08002944 <svcDelay>:
 8002944:	b508      	push	{r3, lr}
 8002946:	b128      	cbz	r0, 8002954 <svcDelay+0x10>
 8002948:	f7ff fef2 	bl	8002730 <rt_ms2tick>
 800294c:	f000 fd1a 	bl	8003384 <rt_dly_wait>
 8002950:	2040      	movs	r0, #64	; 0x40
 8002952:	bd08      	pop	{r3, pc}
 8002954:	bd08      	pop	{r3, pc}
	...

08002958 <osDelay>:
 8002958:	b510      	push	{r4, lr}
 800295a:	f3ef 8410 	mrs	r4, PRIMASK
 800295e:	b934      	cbnz	r4, 800296e <osDelay+0x16>
 8002960:	f3ef 8405 	mrs	r4, IPSR
 8002964:	b91c      	cbnz	r4, 800296e <osDelay+0x16>
 8002966:	f8df c00c 	ldr.w	r12, [pc, #12]	; 8002974 <osDelay+0x1c>
 800296a:	df00      	svc	0
 800296c:	bd10      	pop	{r4, pc}
 800296e:	2082      	movs	r0, #130	; 0x82
 8002970:	bd10      	pop	{r4, pc}
 8002972:	0000      	.short	0x0000
 8002974:	08002945 	.word	0x08002945

08002978 <svcTimerCall>:
 8002978:	0783      	lsls	r3, r0, #30
 800297a:	d105      	bne.n	8002988 <svcTimerCall+0x10>
 800297c:	b138      	cbz	r0, 800298e <svcTimerCall+0x16>
 800297e:	6943      	ldr	r3, [r0, #20]
 8002980:	6901      	ldr	r1, [r0, #16]
 8002982:	681b      	ldr	r3, [r3, #0]
 8002984:	4618      	mov	r0, r3
 8002986:	4770      	bx	lr
 8002988:	2300      	movs	r3, #0
 800298a:	4619      	mov	r1, r3
 800298c:	e7fa      	b.n	8002984 <svcTimerCall+0xc>
 800298e:	4603      	mov	r3, r0
 8002990:	e7fb      	b.n	800298a <svcTimerCall+0x12>
	...

08002994 <osTimerCall>:
 8002994:	b510      	push	{r4, lr}
 8002996:	4604      	mov	r4, r0
 8002998:	4608      	mov	r0, r1
 800299a:	f8df c00c 	ldr.w	r12, [pc, #12]	; 80029a8 <osTimerCall+0x14>
 800299e:	df00      	svc	0
 80029a0:	e884 0003 	stmia.w	r4, {r0, r1}
 80029a4:	4620      	mov	r0, r4
 80029a6:	bd10      	pop	{r4, pc}
 80029a8:	08002979 	.word	0x08002979

080029ac <svcMutexCreate>:
 80029ac:	b510      	push	{r4, lr}
 80029ae:	b148      	cbz	r0, 80029c4 <svcMutexCreate+0x18>
 80029b0:	6804      	ldr	r4, [r0, #0]
 80029b2:	b124      	cbz	r4, 80029be <svcMutexCreate+0x12>
 80029b4:	7823      	ldrb	r3, [r4, #0]
 80029b6:	b923      	cbnz	r3, 80029c2 <svcMutexCreate+0x16>
 80029b8:	4620      	mov	r0, r4
 80029ba:	f000 fc3d 	bl	8003238 <rt_mut_init>
 80029be:	4620      	mov	r0, r4
 80029c0:	bd10      	pop	{r4, pc}
 80029c2:	2000      	movs	r0, #0
 80029c4:	bd10      	pop	{r4, pc}

080029c6 <svcMutexWait>:
 80029c6:	b570      	push	{r4, r5, r6, lr}
 80029c8:	f010 0403 	ands.w	r4, r0, #3
 80029cc:	4605      	mov	r5, r0
 80029ce:	460e      	mov	r6, r1
 80029d0:	d111      	bne.n	80029f6 <svcMutexWait+0x30>
 80029d2:	b180      	cbz	r0, 80029f6 <svcMutexWait+0x30>
 80029d4:	7803      	ldrb	r3, [r0, #0]
 80029d6:	2b03      	cmp	r3, #3
 80029d8:	d10d      	bne.n	80029f6 <svcMutexWait+0x30>
 80029da:	4608      	mov	r0, r1
 80029dc:	f7ff fea8 	bl	8002730 <rt_ms2tick>
 80029e0:	4601      	mov	r1, r0
 80029e2:	4628      	mov	r0, r5
 80029e4:	f000 fca0 	bl	8003328 <rt_mut_wait>
 80029e8:	2801      	cmp	r0, #1
 80029ea:	d106      	bne.n	80029fa <svcMutexWait+0x34>
 80029ec:	2e00      	cmp	r6, #0
 80029ee:	bf14      	ite	ne
 80029f0:	20c1      	movne	r0, #193	; 0xc1
 80029f2:	2081      	moveq	r0, #129	; 0x81
 80029f4:	bd70      	pop	{r4, r5, r6, pc}
 80029f6:	2080      	movs	r0, #128	; 0x80
 80029f8:	bd70      	pop	{r4, r5, r6, pc}
 80029fa:	4620      	mov	r0, r4
 80029fc:	bd70      	pop	{r4, r5, r6, pc}

080029fe <svcMutexRelease>:
 80029fe:	0782      	lsls	r2, r0, #30
 8002a00:	b508      	push	{r3, lr}
 8002a02:	d10a      	bne.n	8002a1a <svcMutexRelease+0x1c>
 8002a04:	b148      	cbz	r0, 8002a1a <svcMutexRelease+0x1c>
 8002a06:	7803      	ldrb	r3, [r0, #0]
 8002a08:	2b03      	cmp	r3, #3
 8002a0a:	d106      	bne.n	8002a1a <svcMutexRelease+0x1c>
 8002a0c:	f000 fc1c 	bl	8003248 <rt_mut_release>
 8002a10:	28ff      	cmp	r0, #255	; 0xff
 8002a12:	bf0c      	ite	eq
 8002a14:	2081      	moveq	r0, #129	; 0x81
 8002a16:	2000      	movne	r0, #0
 8002a18:	bd08      	pop	{r3, pc}
 8002a1a:	2080      	movs	r0, #128	; 0x80
 8002a1c:	bd08      	pop	{r3, pc}
	...

08002a20 <osMutexCreate>:
 8002a20:	b570      	push	{r4, r5, r6, lr}
 8002a22:	4605      	mov	r5, r0
 8002a24:	f3ef 8410 	mrs	r4, PRIMASK
 8002a28:	b994      	cbnz	r4, 8002a50 <osMutexCreate+0x30>
 8002a2a:	f3ef 8605 	mrs	r6, IPSR
 8002a2e:	b97e      	cbnz	r6, 8002a50 <osMutexCreate+0x30>
 8002a30:	f3ef 8414 	mrs	r4, CONTROL
 8002a34:	07e4      	lsls	r4, r4, #31
 8002a36:	d406      	bmi.n	8002a46 <osMutexCreate+0x26>
 8002a38:	4c06      	ldr	r4, [pc, #24]	; (8002a54 <osMutexCreate+0x34>)
 8002a3a:	7824      	ldrb	r4, [r4, #0]
 8002a3c:	b91c      	cbnz	r4, 8002a46 <osMutexCreate+0x26>
 8002a3e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8002a42:	f7ff bfb3 	b.w	80029ac <svcMutexCreate>
 8002a46:	4628      	mov	r0, r5
 8002a48:	f8df c00c 	ldr.w	r12, [pc, #12]	; 8002a58 <osMutexCreate+0x38>
 8002a4c:	df00      	svc	0
 8002a4e:	bd70      	pop	{r4, r5, r6, pc}
 8002a50:	2000      	movs	r0, #0
 8002a52:	bd70      	pop	{r4, r5, r6, pc}
 8002a54:	20002d45 	.word	0x20002d45
 8002a58:	080029ad 	.word	0x080029ad

08002a5c <osMutexWait>:
 8002a5c:	b510      	push	{r4, lr}
 8002a5e:	f3ef 8410 	mrs	r4, PRIMASK
 8002a62:	b934      	cbnz	r4, 8002a72 <osMutexWait+0x16>
 8002a64:	f3ef 8405 	mrs	r4, IPSR
 8002a68:	b91c      	cbnz	r4, 8002a72 <osMutexWait+0x16>
 8002a6a:	f8df c00c 	ldr.w	r12, [pc, #12]	; 8002a78 <osMutexWait+0x1c>
 8002a6e:	df00      	svc	0
 8002a70:	bd10      	pop	{r4, pc}
 8002a72:	2082      	movs	r0, #130	; 0x82
 8002a74:	bd10      	pop	{r4, pc}
 8002a76:	0000      	.short	0x0000
 8002a78:	080029c7 	.word	0x080029c7

08002a7c <osThreadExit>:
 8002a7c:	4808      	ldr	r0, [pc, #32]	; (8002aa0 <osThreadExit+0x24>)
 8002a7e:	b508      	push	{r3, lr}
 8002a80:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8002a84:	6800      	ldr	r0, [r0, #0]
 8002a86:	f7ff ffe9 	bl	8002a5c <osMutexWait>
 8002a8a:	f8df c018 	ldr.w	r12, [pc, #24]	; 8002aa4 <osThreadExit+0x28>
 8002a8e:	df00      	svc	0
 8002a90:	4604      	mov	r4, r0
 8002a92:	f7ff fa59 	bl	8001f48 <sysThreadTerminate>
 8002a96:	4620      	mov	r0, r4
 8002a98:	f8df c00c 	ldr.w	r12, [pc, #12]	; 8002aa8 <osThreadExit+0x2c>
 8002a9c:	df00      	svc	0
 8002a9e:	e7fe      	b.n	8002a9e <osThreadExit+0x22>
 8002aa0:	20002d40 	.word	0x20002d40
 8002aa4:	080028fd 	.word	0x080028fd
 8002aa8:	08002915 	.word	0x08002915

08002aac <osMutexRelease>:
 8002aac:	b510      	push	{r4, lr}
 8002aae:	f3ef 8410 	mrs	r4, PRIMASK
 8002ab2:	b934      	cbnz	r4, 8002ac2 <osMutexRelease+0x16>
 8002ab4:	f3ef 8405 	mrs	r4, IPSR
 8002ab8:	b91c      	cbnz	r4, 8002ac2 <osMutexRelease+0x16>
 8002aba:	f8df c00c 	ldr.w	r12, [pc, #12]	; 8002ac8 <osMutexRelease+0x1c>
 8002abe:	df00      	svc	0
 8002ac0:	bd10      	pop	{r4, pc}
 8002ac2:	2082      	movs	r0, #130	; 0x82
 8002ac4:	bd10      	pop	{r4, pc}
 8002ac6:	0000      	.short	0x0000
 8002ac8:	080029ff 	.word	0x080029ff

08002acc <osThreadContextCreate>:
 8002acc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8002ad0:	4680      	mov	r8, r0
 8002ad2:	460f      	mov	r7, r1
 8002ad4:	4616      	mov	r6, r2
 8002ad6:	f3ef 8410 	mrs	r4, PRIMASK
 8002ada:	bb04      	cbnz	r4, 8002b1e <osThreadContextCreate+0x52>
 8002adc:	f3ef 8305 	mrs	r3, IPSR
 8002ae0:	b9d3      	cbnz	r3, 8002b18 <osThreadContextCreate+0x4c>
 8002ae2:	f3ef 8314 	mrs	r3, CONTROL
 8002ae6:	07db      	lsls	r3, r3, #31
 8002ae8:	d406      	bmi.n	8002af8 <osThreadContextCreate+0x2c>
 8002aea:	4b0e      	ldr	r3, [pc, #56]	; (8002b24 <osThreadContextCreate+0x58>)
 8002aec:	781b      	ldrb	r3, [r3, #0]
 8002aee:	b91b      	cbnz	r3, 8002af8 <osThreadContextCreate+0x2c>
 8002af0:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8002af4:	f7ff becc 	b.w	8002890 <svcThreadCreate>
 8002af8:	4d0b      	ldr	r5, [pc, #44]	; (8002b28 <osThreadContextCreate+0x5c>)
 8002afa:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8002afe:	6828      	ldr	r0, [r5, #0]
 8002b00:	f7ff ffac 	bl	8002a5c <osMutexWait>
 8002b04:	4640      	mov	r0, r8
 8002b06:	4639      	mov	r1, r7
 8002b08:	4632      	mov	r2, r6
 8002b0a:	f8df c020 	ldr.w	r12, [pc, #32]	; 8002b2c <osThreadContextCreate+0x60>
 8002b0e:	df00      	svc	0
 8002b10:	4604      	mov	r4, r0
 8002b12:	6828      	ldr	r0, [r5, #0]
 8002b14:	f7ff ffca 	bl	8002aac <osMutexRelease>
 8002b18:	4620      	mov	r0, r4
 8002b1a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8002b1e:	2400      	movs	r4, #0
 8002b20:	e7fa      	b.n	8002b18 <osThreadContextCreate+0x4c>
 8002b22:	bf00      	nop
 8002b24:	20002d45 	.word	0x20002d45
 8002b28:	20002d40 	.word	0x20002d40
 8002b2c:	08002891 	.word	0x08002891

08002b30 <osThreadCreate>:
 8002b30:	2200      	movs	r2, #0
 8002b32:	f7ff bfcb 	b.w	8002acc <osThreadContextCreate>

08002b36 <svcMessageCreate>:
 8002b36:	b510      	push	{r4, lr}
 8002b38:	4604      	mov	r4, r0
 8002b3a:	b160      	cbz	r0, 8002b56 <svcMessageCreate+0x20>
 8002b3c:	6801      	ldr	r1, [r0, #0]
 8002b3e:	b151      	cbz	r1, 8002b56 <svcMessageCreate+0x20>
 8002b40:	6840      	ldr	r0, [r0, #4]
 8002b42:	b148      	cbz	r0, 8002b58 <svcMessageCreate+0x22>
 8002b44:	7803      	ldrb	r3, [r0, #0]
 8002b46:	b933      	cbnz	r3, 8002b56 <svcMessageCreate+0x20>
 8002b48:	3104      	adds	r1, #4
 8002b4a:	0089      	lsls	r1, r1, #2
 8002b4c:	b289      	uxth	r1, r1
 8002b4e:	f7ff fc71 	bl	8002434 <rt_mbx_init>
 8002b52:	6860      	ldr	r0, [r4, #4]
 8002b54:	bd10      	pop	{r4, pc}
 8002b56:	2000      	movs	r0, #0
 8002b58:	bd10      	pop	{r4, pc}
	...

08002b5c <svcKernelInitialize>:
 8002b5c:	b538      	push	{r3, r4, r5, lr}
 8002b5e:	4c11      	ldr	r4, [pc, #68]	; (8002ba4 <svcKernelInitialize+0x48>)
 8002b60:	7823      	ldrb	r3, [r4, #0]
 8002b62:	b90b      	cbnz	r3, 8002b68 <svcKernelInitialize+0xc>
 8002b64:	f000 faa8 	bl	80030b8 <rt_sys_init>
 8002b68:	4b0f      	ldr	r3, [pc, #60]	; (8002ba8 <svcKernelInitialize+0x4c>)
 8002b6a:	7825      	ldrb	r5, [r4, #0]
 8002b6c:	681b      	ldr	r3, [r3, #0]
 8002b6e:	22ff      	movs	r2, #255	; 0xff
 8002b70:	709a      	strb	r2, [r3, #2]
 8002b72:	b98d      	cbnz	r5, 8002b98 <svcKernelInitialize+0x3c>
 8002b74:	4629      	mov	r1, r5
 8002b76:	480d      	ldr	r0, [pc, #52]	; (8002bac <svcKernelInitialize+0x50>)
 8002b78:	f7ff ffdd 	bl	8002b36 <svcMessageCreate>
 8002b7c:	4b0c      	ldr	r3, [pc, #48]	; (8002bb0 <svcKernelInitialize+0x54>)
 8002b7e:	462a      	mov	r2, r5
 8002b80:	6018      	str	r0, [r3, #0]
 8002b82:	4629      	mov	r1, r5
 8002b84:	480b      	ldr	r0, [pc, #44]	; (8002bb4 <svcKernelInitialize+0x58>)
 8002b86:	f7ff fe83 	bl	8002890 <svcThreadCreate>
 8002b8a:	4b0b      	ldr	r3, [pc, #44]	; (8002bb8 <svcKernelInitialize+0x5c>)
 8002b8c:	6018      	str	r0, [r3, #0]
 8002b8e:	480b      	ldr	r0, [pc, #44]	; (8002bbc <svcKernelInitialize+0x60>)
 8002b90:	f7ff ff46 	bl	8002a20 <osMutexCreate>
 8002b94:	4b0a      	ldr	r3, [pc, #40]	; (8002bc0 <svcKernelInitialize+0x64>)
 8002b96:	6018      	str	r0, [r3, #0]
 8002b98:	2301      	movs	r3, #1
 8002b9a:	7023      	strb	r3, [r4, #0]
 8002b9c:	4b09      	ldr	r3, [pc, #36]	; (8002bc4 <svcKernelInitialize+0x68>)
 8002b9e:	2000      	movs	r0, #0
 8002ba0:	7018      	strb	r0, [r3, #0]
 8002ba2:	bd38      	pop	{r3, r4, r5, pc}
 8002ba4:	20002d44 	.word	0x20002d44
 8002ba8:	20002d4c 	.word	0x20002d4c
 8002bac:	08006f1c 	.word	0x08006f1c
 8002bb0:	20002608 	.word	0x20002608
 8002bb4:	08006f38 	.word	0x08006f38
 8002bb8:	20002cfc 	.word	0x20002cfc
 8002bbc:	08006f50 	.word	0x08006f50
 8002bc0:	20002d40 	.word	0x20002d40
 8002bc4:	20002d45 	.word	0x20002d45

08002bc8 <osKernelInitialize>:
 8002bc8:	b510      	push	{r4, lr}
 8002bca:	f3ef 8410 	mrs	r4, PRIMASK
 8002bce:	b974      	cbnz	r4, 8002bee <osKernelInitialize+0x26>
 8002bd0:	f3ef 8405 	mrs	r4, IPSR
 8002bd4:	b95c      	cbnz	r4, 8002bee <osKernelInitialize+0x26>
 8002bd6:	f3ef 8414 	mrs	r4, CONTROL
 8002bda:	07e4      	lsls	r4, r4, #31
 8002bdc:	d403      	bmi.n	8002be6 <osKernelInitialize+0x1e>
 8002bde:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8002be2:	f7ff bfbb 	b.w	8002b5c <svcKernelInitialize>
 8002be6:	f8df c00c 	ldr.w	r12, [pc, #12]	; 8002bf4 <osKernelInitialize+0x2c>
 8002bea:	df00      	svc	0
 8002bec:	bd10      	pop	{r4, pc}
 8002bee:	2082      	movs	r0, #130	; 0x82
 8002bf0:	bd10      	pop	{r4, pc}
 8002bf2:	0000      	.short	0x0000
 8002bf4:	08002b5d 	.word	0x08002b5d

08002bf8 <svcMessageGet>:
 8002bf8:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8002bfc:	460c      	mov	r4, r1
 8002bfe:	4680      	mov	r8, r0
 8002c00:	b318      	cbz	r0, 8002c4a <svcMessageGet+0x52>
 8002c02:	7803      	ldrb	r3, [r0, #0]
 8002c04:	2b01      	cmp	r3, #1
 8002c06:	d125      	bne.n	8002c54 <svcMessageGet+0x5c>
 8002c08:	4608      	mov	r0, r1
 8002c0a:	f7ff fd91 	bl	8002730 <rt_ms2tick>
 8002c0e:	a902      	add	r1, sp, #8
 8002c10:	4602      	mov	r2, r0
 8002c12:	4640      	mov	r0, r8
 8002c14:	f7ff fc1c 	bl	8002450 <rt_mbx_wait>
 8002c18:	2801      	cmp	r0, #1
 8002c1a:	d111      	bne.n	8002c40 <svcMessageGet+0x48>
 8002c1c:	2000      	movs	r0, #0
 8002c1e:	2c00      	cmp	r4, #0
 8002c20:	4602      	mov	r2, r0
 8002c22:	4603      	mov	r3, r0
 8002c24:	bf18      	it	ne
 8002c26:	2040      	movne	r0, #64	; 0x40
 8002c28:	9902      	ldr	r1, [sp, #8]
 8002c2a:	4604      	mov	r4, r0
 8002c2c:	460d      	mov	r5, r1
 8002c2e:	4616      	mov	r6, r2
 8002c30:	461f      	mov	r7, r3
 8002c32:	4620      	mov	r0, r4
 8002c34:	4629      	mov	r1, r5
 8002c36:	4632      	mov	r2, r6
 8002c38:	463b      	mov	r3, r7
 8002c3a:	b004      	add	sp, #16
 8002c3c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8002c40:	2000      	movs	r0, #0
 8002c42:	4602      	mov	r2, r0
 8002c44:	4603      	mov	r3, r0
 8002c46:	2010      	movs	r0, #16
 8002c48:	e7ee      	b.n	8002c28 <svcMessageGet+0x30>
 8002c4a:	2480      	movs	r4, #128	; 0x80
 8002c4c:	4605      	mov	r5, r0
 8002c4e:	4606      	mov	r6, r0
 8002c50:	4607      	mov	r7, r0
 8002c52:	e7ee      	b.n	8002c32 <svcMessageGet+0x3a>
 8002c54:	2500      	movs	r5, #0
 8002c56:	2480      	movs	r4, #128	; 0x80
 8002c58:	462e      	mov	r6, r5
 8002c5a:	462f      	mov	r7, r5
 8002c5c:	e7e9      	b.n	8002c32 <svcMessageGet+0x3a>

08002c5e <isrMessagePut>:
 8002c5e:	b570      	push	{r4, r5, r6, lr}
 8002c60:	460e      	mov	r6, r1
 8002c62:	4614      	mov	r4, r2
 8002c64:	4605      	mov	r5, r0
 8002c66:	b160      	cbz	r0, 8002c82 <isrMessagePut+0x24>
 8002c68:	b95a      	cbnz	r2, 8002c82 <isrMessagePut+0x24>
 8002c6a:	7803      	ldrb	r3, [r0, #0]
 8002c6c:	2b01      	cmp	r3, #1
 8002c6e:	d108      	bne.n	8002c82 <isrMessagePut+0x24>
 8002c70:	f7ff fc44 	bl	80024fc <rt_mbx_check>
 8002c74:	b138      	cbz	r0, 8002c86 <isrMessagePut+0x28>
 8002c76:	4628      	mov	r0, r5
 8002c78:	4631      	mov	r1, r6
 8002c7a:	f7ff fc43 	bl	8002504 <isr_mbx_send>
 8002c7e:	4620      	mov	r0, r4
 8002c80:	bd70      	pop	{r4, r5, r6, pc}
 8002c82:	2080      	movs	r0, #128	; 0x80
 8002c84:	bd70      	pop	{r4, r5, r6, pc}
 8002c86:	2081      	movs	r0, #129	; 0x81
 8002c88:	bd70      	pop	{r4, r5, r6, pc}
	...

08002c8c <sysTimerTick>:
 8002c8c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002c8e:	4e11      	ldr	r6, [pc, #68]	; (8002cd4 <sysTimerTick+0x48>)
 8002c90:	6834      	ldr	r4, [r6, #0]
 8002c92:	b12c      	cbz	r4, 8002ca0 <sysTimerTick+0x14>
 8002c94:	68a3      	ldr	r3, [r4, #8]
 8002c96:	4f10      	ldr	r7, [pc, #64]	; (8002cd8 <sysTimerTick+0x4c>)
 8002c98:	3b01      	subs	r3, #1
 8002c9a:	60a3      	str	r3, [r4, #8]
 8002c9c:	68a2      	ldr	r2, [r4, #8]
 8002c9e:	b102      	cbz	r2, 8002ca2 <sysTimerTick+0x16>
 8002ca0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002ca2:	6825      	ldr	r5, [r4, #0]
 8002ca4:	6838      	ldr	r0, [r7, #0]
 8002ca6:	6035      	str	r5, [r6, #0]
 8002ca8:	4621      	mov	r1, r4
 8002caa:	f7ff ffd8 	bl	8002c5e <isrMessagePut>
 8002cae:	b110      	cbz	r0, 8002cb6 <sysTimerTick+0x2a>
 8002cb0:	2004      	movs	r0, #4
 8002cb2:	f7ff f93b 	bl	8001f2c <os_error>
 8002cb6:	7963      	ldrb	r3, [r4, #5]
 8002cb8:	2b01      	cmp	r3, #1
 8002cba:	d107      	bne.n	8002ccc <sysTimerTick+0x40>
 8002cbc:	68e1      	ldr	r1, [r4, #12]
 8002cbe:	4620      	mov	r0, r4
 8002cc0:	f7ff fd1c 	bl	80026fc <rt_timer_insert>
 8002cc4:	2d00      	cmp	r5, #0
 8002cc6:	d0eb      	beq.n	8002ca0 <sysTimerTick+0x14>
 8002cc8:	462c      	mov	r4, r5
 8002cca:	e7e7      	b.n	8002c9c <sysTimerTick+0x10>
 8002ccc:	2301      	movs	r3, #1
 8002cce:	7123      	strb	r3, [r4, #4]
 8002cd0:	e7f8      	b.n	8002cc4 <sysTimerTick+0x38>
 8002cd2:	bf00      	nop
 8002cd4:	20002d48 	.word	0x20002d48
 8002cd8:	20002608 	.word	0x20002608

08002cdc <isrMessageGet>:
 8002cdc:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8002cde:	4604      	mov	r4, r0
 8002ce0:	4616      	mov	r6, r2
 8002ce2:	4608      	mov	r0, r1
 8002ce4:	b101      	cbz	r1, 8002ce8 <isrMessageGet+0xc>
 8002ce6:	b122      	cbz	r2, 8002cf2 <isrMessageGet+0x16>
 8002ce8:	2380      	movs	r3, #128	; 0x80
 8002cea:	6023      	str	r3, [r4, #0]
 8002cec:	4620      	mov	r0, r4
 8002cee:	b004      	add	sp, #16
 8002cf0:	bd70      	pop	{r4, r5, r6, pc}
 8002cf2:	780b      	ldrb	r3, [r1, #0]
 8002cf4:	2b01      	cmp	r3, #1
 8002cf6:	d1f7      	bne.n	8002ce8 <isrMessageGet+0xc>
 8002cf8:	a902      	add	r1, sp, #8
 8002cfa:	f7ff fc0a 	bl	8002512 <isr_mbx_receive>
 8002cfe:	2804      	cmp	r0, #4
 8002d00:	bf08      	it	eq
 8002d02:	2310      	moveq	r3, #16
 8002d04:	ad01      	add	r5, sp, #4
 8002d06:	bf14      	ite	ne
 8002d08:	9601      	strne	r6, [sp, #4]
 8002d0a:	9301      	streq	r3, [sp, #4]
 8002d0c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002d10:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 8002d14:	e7ea      	b.n	8002cec <isrMessageGet+0x10>
	...

08002d18 <osMessageGet>:
 8002d18:	b538      	push	{r3, r4, r5, lr}
 8002d1a:	4604      	mov	r4, r0
 8002d1c:	4615      	mov	r5, r2
 8002d1e:	f3ef 8010 	mrs	r0, PRIMASK
 8002d22:	b910      	cbnz	r0, 8002d2a <osMessageGet+0x12>
 8002d24:	f3ef 8005 	mrs	r0, IPSR
 8002d28:	b128      	cbz	r0, 8002d36 <osMessageGet+0x1e>
 8002d2a:	462a      	mov	r2, r5
 8002d2c:	4620      	mov	r0, r4
 8002d2e:	f7ff ffd5 	bl	8002cdc <isrMessageGet>
 8002d32:	4620      	mov	r0, r4
 8002d34:	bd38      	pop	{r3, r4, r5, pc}
 8002d36:	4608      	mov	r0, r1
 8002d38:	4611      	mov	r1, r2
 8002d3a:	f8df c00c 	ldr.w	r12, [pc, #12]	; 8002d48 <osMessageGet+0x30>
 8002d3e:	df00      	svc	0
 8002d40:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 8002d44:	e7f5      	b.n	8002d32 <osMessageGet+0x1a>
 8002d46:	0000      	.short	0x0000
 8002d48:	08002bf9 	.word	0x08002bf9

08002d4c <osTimerThread>:
 8002d4c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8002d4e:	4c0a      	ldr	r4, [pc, #40]	; (8002d78 <osTimerThread+0x2c>)
 8002d50:	6821      	ldr	r1, [r4, #0]
 8002d52:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8002d56:	a803      	add	r0, sp, #12
 8002d58:	f7ff ffde 	bl	8002d18 <osMessageGet>
 8002d5c:	9b03      	ldr	r3, [sp, #12]
 8002d5e:	2b10      	cmp	r3, #16
 8002d60:	d1f6      	bne.n	8002d50 <osTimerThread+0x4>
 8002d62:	9904      	ldr	r1, [sp, #16]
 8002d64:	a801      	add	r0, sp, #4
 8002d66:	f7ff fe15 	bl	8002994 <osTimerCall>
 8002d6a:	9b01      	ldr	r3, [sp, #4]
 8002d6c:	2b00      	cmp	r3, #0
 8002d6e:	d0ef      	beq.n	8002d50 <osTimerThread+0x4>
 8002d70:	9802      	ldr	r0, [sp, #8]
 8002d72:	4798      	blx	r3
 8002d74:	e7ec      	b.n	8002d50 <osTimerThread+0x4>
 8002d76:	bf00      	nop
 8002d78:	20002608 	.word	0x20002608

08002d7c <rt_switch_req>:
 8002d7c:	4b05      	ldr	r3, [pc, #20]	; (8002d94 <rt_switch_req+0x18>)
 8002d7e:	6058      	str	r0, [r3, #4]
 8002d80:	2302      	movs	r3, #2
 8002d82:	7043      	strb	r3, [r0, #1]
 8002d84:	4b04      	ldr	r3, [pc, #16]	; (8002d98 <rt_switch_req+0x1c>)
 8002d86:	681b      	ldr	r3, [r3, #0]
 8002d88:	b11b      	cbz	r3, 8002d92 <rt_switch_req+0x16>
 8002d8a:	691b      	ldr	r3, [r3, #16]
 8002d8c:	b10b      	cbz	r3, 8002d92 <rt_switch_req+0x16>
 8002d8e:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 8002d90:	4718      	bx	r3
 8002d92:	4770      	bx	lr
 8002d94:	20002d4c 	.word	0x20002d4c
 8002d98:	20002d34 	.word	0x20002d34

08002d9c <rt_dispatch.part.0>:
 8002d9c:	b508      	push	{r3, lr}
 8002d9e:	4803      	ldr	r0, [pc, #12]	; (8002dac <rt_dispatch.part.0+0x10>)
 8002da0:	f7ff f92a 	bl	8001ff8 <rt_get_first>
 8002da4:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8002da8:	f7ff bfe8 	b.w	8002d7c <rt_switch_req>
 8002dac:	20002d00 	.word	0x20002d00

08002db0 <rt_dispatch>:
 8002db0:	b570      	push	{r4, r5, r6, lr}
 8002db2:	4604      	mov	r4, r0
 8002db4:	b918      	cbnz	r0, 8002dbe <rt_dispatch+0xe>
 8002db6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8002dba:	f7ff bfef 	b.w	8002d9c <rt_dispatch.part.0>
 8002dbe:	4e0c      	ldr	r6, [pc, #48]	; (8002df0 <rt_dispatch+0x40>)
 8002dc0:	78a2      	ldrb	r2, [r4, #2]
 8002dc2:	6830      	ldr	r0, [r6, #0]
 8002dc4:	7883      	ldrb	r3, [r0, #2]
 8002dc6:	429a      	cmp	r2, r3
 8002dc8:	f04f 0501 	mov.w	r5, #1
 8002dcc:	d908      	bls.n	8002de0 <rt_dispatch+0x30>
 8002dce:	f7ff f925 	bl	800201c <rt_put_rdy_first>
 8002dd2:	6833      	ldr	r3, [r6, #0]
 8002dd4:	705d      	strb	r5, [r3, #1]
 8002dd6:	4620      	mov	r0, r4
 8002dd8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8002ddc:	f7ff bfce 	b.w	8002d7c <rt_switch_req>
 8002de0:	7065      	strb	r5, [r4, #1]
 8002de2:	4621      	mov	r1, r4
 8002de4:	4803      	ldr	r0, [pc, #12]	; (8002df4 <rt_dispatch+0x44>)
 8002de6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8002dea:	f7ff b8ed 	b.w	8001fc8 <rt_put_prio>
 8002dee:	bf00      	nop
 8002df0:	20002d4c 	.word	0x20002d4c
 8002df4:	20002d00 	.word	0x20002d00

08002df8 <rt_block>:
 8002df8:	b538      	push	{r3, r4, r5, lr}
 8002dfa:	460d      	mov	r5, r1
 8002dfc:	4601      	mov	r1, r0
 8002dfe:	b180      	cbz	r0, 8002e22 <rt_block+0x2a>
 8002e00:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8002e04:	4298      	cmp	r0, r3
 8002e06:	4c07      	ldr	r4, [pc, #28]	; (8002e24 <rt_block+0x2c>)
 8002e08:	d002      	beq.n	8002e10 <rt_block+0x18>
 8002e0a:	6820      	ldr	r0, [r4, #0]
 8002e0c:	f7ff f910 	bl	8002030 <rt_put_dly>
 8002e10:	6823      	ldr	r3, [r4, #0]
 8002e12:	4805      	ldr	r0, [pc, #20]	; (8002e28 <rt_block+0x30>)
 8002e14:	705d      	strb	r5, [r3, #1]
 8002e16:	f7ff f8ef 	bl	8001ff8 <rt_get_first>
 8002e1a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8002e1e:	f7ff bfad 	b.w	8002d7c <rt_switch_req>
 8002e22:	bd38      	pop	{r3, r4, r5, pc}
 8002e24:	20002d4c 	.word	0x20002d4c
 8002e28:	20002d00 	.word	0x20002d00

08002e2c <rt_tsk_self>:
 8002e2c:	4b02      	ldr	r3, [pc, #8]	; (8002e38 <rt_tsk_self+0xc>)
 8002e2e:	6818      	ldr	r0, [r3, #0]
 8002e30:	b100      	cbz	r0, 8002e34 <rt_tsk_self+0x8>
 8002e32:	78c0      	ldrb	r0, [r0, #3]
 8002e34:	4770      	bx	lr
 8002e36:	bf00      	nop
 8002e38:	20002d4c 	.word	0x20002d4c

08002e3c <rt_tsk_prio>:
 8002e3c:	b510      	push	{r4, lr}
 8002e3e:	b9a8      	cbnz	r0, 8002e6c <rt_tsk_prio+0x30>
 8002e40:	4b19      	ldr	r3, [pc, #100]	; (8002ea8 <rt_tsk_prio+0x6c>)
 8002e42:	681b      	ldr	r3, [r3, #0]
 8002e44:	7099      	strb	r1, [r3, #2]
 8002e46:	f883 1024 	strb.w	r1, [r3, #36]	; 0x24
 8002e4a:	4818      	ldr	r0, [pc, #96]	; (8002eac <rt_tsk_prio+0x70>)
 8002e4c:	6843      	ldr	r3, [r0, #4]
 8002e4e:	789b      	ldrb	r3, [r3, #2]
 8002e50:	428b      	cmp	r3, r1
 8002e52:	d801      	bhi.n	8002e58 <rt_tsk_prio+0x1c>
 8002e54:	2000      	movs	r0, #0
 8002e56:	bd10      	pop	{r4, pc}
 8002e58:	4c13      	ldr	r4, [pc, #76]	; (8002ea8 <rt_tsk_prio+0x6c>)
 8002e5a:	6821      	ldr	r1, [r4, #0]
 8002e5c:	f7ff f8b4 	bl	8001fc8 <rt_put_prio>
 8002e60:	6823      	ldr	r3, [r4, #0]
 8002e62:	2201      	movs	r2, #1
 8002e64:	705a      	strb	r2, [r3, #1]
 8002e66:	f7ff ff99 	bl	8002d9c <rt_dispatch.part.0>
 8002e6a:	e7f3      	b.n	8002e54 <rt_tsk_prio+0x18>
 8002e6c:	4b10      	ldr	r3, [pc, #64]	; (8002eb0 <rt_tsk_prio+0x74>)
 8002e6e:	881b      	ldrh	r3, [r3, #0]
 8002e70:	4298      	cmp	r0, r3
 8002e72:	d817      	bhi.n	8002ea4 <rt_tsk_prio+0x68>
 8002e74:	3801      	subs	r0, #1
 8002e76:	4b0f      	ldr	r3, [pc, #60]	; (8002eb4 <rt_tsk_prio+0x78>)
 8002e78:	f853 4020 	ldr.w	r4, [r3, r0, lsl #2]
 8002e7c:	b194      	cbz	r4, 8002ea4 <rt_tsk_prio+0x68>
 8002e7e:	4b0a      	ldr	r3, [pc, #40]	; (8002ea8 <rt_tsk_prio+0x6c>)
 8002e80:	70a1      	strb	r1, [r4, #2]
 8002e82:	681b      	ldr	r3, [r3, #0]
 8002e84:	f884 1024 	strb.w	r1, [r4, #36]	; 0x24
 8002e88:	429c      	cmp	r4, r3
 8002e8a:	d0de      	beq.n	8002e4a <rt_tsk_prio+0xe>
 8002e8c:	4620      	mov	r0, r4
 8002e8e:	f7ff f941 	bl	8002114 <rt_resort_prio>
 8002e92:	7863      	ldrb	r3, [r4, #1]
 8002e94:	2b01      	cmp	r3, #1
 8002e96:	d1dd      	bne.n	8002e54 <rt_tsk_prio+0x18>
 8002e98:	4804      	ldr	r0, [pc, #16]	; (8002eac <rt_tsk_prio+0x70>)
 8002e9a:	f7ff f8ad 	bl	8001ff8 <rt_get_first>
 8002e9e:	f7ff ff87 	bl	8002db0 <rt_dispatch>
 8002ea2:	e7d7      	b.n	8002e54 <rt_tsk_prio+0x18>
 8002ea4:	20ff      	movs	r0, #255	; 0xff
 8002ea6:	bd10      	pop	{r4, pc}
 8002ea8:	20002d4c 	.word	0x20002d4c
 8002eac:	20002d00 	.word	0x20002d00
 8002eb0:	08006f18 	.word	0x08006f18
 8002eb4:	20002548 	.word	0x20002548

08002eb8 <rt_tsk_create>:
 8002eb8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, lr}
 8002ebc:	f011 0fff 	tst.w	r1, #255	; 0xff
 8002ec0:	460d      	mov	r5, r1
 8002ec2:	4680      	mov	r8, r0
 8002ec4:	4823      	ldr	r0, [pc, #140]	; (8002f54 <rt_tsk_create+0x9c>)
 8002ec6:	4616      	mov	r6, r2
 8002ec8:	469a      	mov	r10, r3
 8002eca:	bf08      	it	eq
 8002ecc:	3501      	addeq	r5, #1
 8002ece:	f7ff fa90 	bl	80023f2 <rt_alloc_box>
 8002ed2:	4604      	mov	r4, r0
 8002ed4:	b920      	cbnz	r0, 8002ee0 <rt_tsk_create+0x28>
 8002ed6:	f04f 0900 	mov.w	r9, #0
 8002eda:	4648      	mov	r0, r9
 8002edc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 8002ee0:	4b1d      	ldr	r3, [pc, #116]	; (8002f58 <rt_tsk_create+0xa0>)
 8002ee2:	6306      	str	r6, [r0, #48]	; 0x30
 8002ee4:	881b      	ldrh	r3, [r3, #0]
 8002ee6:	4e1d      	ldr	r6, [pc, #116]	; (8002f5c <rt_tsk_create+0xa4>)
 8002ee8:	0a28      	lsrs	r0, r5, #8
 8002eea:	62a0      	str	r0, [r4, #40]	; 0x28
 8002eec:	2100      	movs	r1, #0
 8002eee:	428b      	cmp	r3, r1
 8002ef0:	f101 0901 	add.w	r9, r1, #1
 8002ef4:	d0ef      	beq.n	8002ed6 <rt_tsk_create+0x1e>
 8002ef6:	eb06 0289 	add.w	r2, r6, r9, lsl #2
 8002efa:	460f      	mov	r7, r1
 8002efc:	f852 2c04 	ldr.w	r2, [r2, #-4]
 8002f00:	4649      	mov	r1, r9
 8002f02:	2a00      	cmp	r2, #0
 8002f04:	d1f3      	bne.n	8002eee <rt_tsk_create+0x36>
 8002f06:	b2ed      	uxtb	r5, r5
 8002f08:	2301      	movs	r3, #1
 8002f0a:	f884 9003 	strb.w	r9, [r4, #3]
 8002f0e:	f8c4 a01c 	str.w	r10, [r4, #28]
 8002f12:	f8c4 a038 	str.w	r10, [r4, #56]	; 0x38
 8002f16:	7022      	strb	r2, [r4, #0]
 8002f18:	7063      	strb	r3, [r4, #1]
 8002f1a:	70a5      	strb	r5, [r4, #2]
 8002f1c:	f884 5024 	strb.w	r5, [r4, #36]	; 0x24
 8002f20:	6062      	str	r2, [r4, #4]
 8002f22:	60a2      	str	r2, [r4, #8]
 8002f24:	60e2      	str	r2, [r4, #12]
 8002f26:	6122      	str	r2, [r4, #16]
 8002f28:	6222      	str	r2, [r4, #32]
 8002f2a:	82a2      	strh	r2, [r4, #20]
 8002f2c:	82e2      	strh	r2, [r4, #22]
 8002f2e:	8322      	strh	r2, [r4, #24]
 8002f30:	8362      	strh	r2, [r4, #26]
 8002f32:	f884 2025 	strb.w	r2, [r4, #37]	; 0x25
 8002f36:	b918      	cbnz	r0, 8002f40 <rt_tsk_create+0x88>
 8002f38:	4809      	ldr	r0, [pc, #36]	; (8002f60 <rt_tsk_create+0xa8>)
 8002f3a:	f7ff fa5a 	bl	80023f2 <rt_alloc_box>
 8002f3e:	6320      	str	r0, [r4, #48]	; 0x30
 8002f40:	4620      	mov	r0, r4
 8002f42:	4641      	mov	r1, r8
 8002f44:	f7ff f938 	bl	80021b8 <rt_init_stack>
 8002f48:	4620      	mov	r0, r4
 8002f4a:	f846 4027 	str.w	r4, [r6, r7, lsl #2]
 8002f4e:	f7ff ff2f 	bl	8002db0 <rt_dispatch>
 8002f52:	e7c2      	b.n	8002eda <rt_tsk_create+0x22>
 8002f54:	20002930 	.word	0x20002930
 8002f58:	08006f18 	.word	0x08006f18
 8002f5c:	20002548 	.word	0x20002548
 8002f60:	20002338 	.word	0x20002338

08002f64 <rt_tsk_delete>:
 8002f64:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, r10, r11, lr}
 8002f68:	4d4d      	ldr	r5, [pc, #308]	; (80030a0 <rt_tsk_delete+0x13c>)
 8002f6a:	b118      	cbz	r0, 8002f74 <rt_tsk_delete+0x10>
 8002f6c:	682b      	ldr	r3, [r5, #0]
 8002f6e:	78db      	ldrb	r3, [r3, #3]
 8002f70:	4298      	cmp	r0, r3
 8002f72:	d141      	bne.n	8002ff8 <rt_tsk_delete+0x94>
 8002f74:	682c      	ldr	r4, [r5, #0]
 8002f76:	f8df 813c 	ldr.w	r8, [pc, #316]	; 80030b4 <rt_tsk_delete+0x150>
 8002f7a:	2300      	movs	r3, #0
 8002f7c:	7063      	strb	r3, [r4, #1]
 8002f7e:	f002 fd1e 	bl	80059be <rt_get_PSP>
 8002f82:	62e0      	str	r0, [r4, #44]	; 0x2c
 8002f84:	f7ff f9fe 	bl	8002384 <rt_stk_check>
 8002f88:	682b      	ldr	r3, [r5, #0]
 8002f8a:	6a1c      	ldr	r4, [r3, #32]
 8002f8c:	2701      	movs	r7, #1
 8002f8e:	b9a4      	cbnz	r4, 8002fba <rt_tsk_delete+0x56>
 8002f90:	682a      	ldr	r2, [r5, #0]
 8002f92:	4944      	ldr	r1, [pc, #272]	; (80030a4 <rt_tsk_delete+0x140>)
 8002f94:	78d3      	ldrb	r3, [r2, #3]
 8002f96:	4844      	ldr	r0, [pc, #272]	; (80030a8 <rt_tsk_delete+0x144>)
 8002f98:	3b01      	subs	r3, #1
 8002f9a:	f841 4023 	str.w	r4, [r1, r3, lsl #2]
 8002f9e:	6b11      	ldr	r1, [r2, #48]	; 0x30
 8002fa0:	f7ff fa34 	bl	800240c <rt_free_box>
 8002fa4:	6829      	ldr	r1, [r5, #0]
 8002fa6:	4841      	ldr	r0, [pc, #260]	; (80030ac <rt_tsk_delete+0x148>)
 8002fa8:	630c      	str	r4, [r1, #48]	; 0x30
 8002faa:	f7ff fa2f 	bl	800240c <rt_free_box>
 8002fae:	602c      	str	r4, [r5, #0]
 8002fb0:	f7ff fef4 	bl	8002d9c <rt_dispatch.part.0>
 8002fb4:	4620      	mov	r0, r4
 8002fb6:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, r10, r11, pc}
 8002fba:	6863      	ldr	r3, [r4, #4]
 8002fbc:	b1b3      	cbz	r3, 8002fec <rt_tsk_delete+0x88>
 8002fbe:	4620      	mov	r0, r4
 8002fc0:	f7ff f81a 	bl	8001ff8 <rt_get_first>
 8002fc4:	2100      	movs	r1, #0
 8002fc6:	4606      	mov	r6, r0
 8002fc8:	f7ff f942 	bl	8002250 <rt_ret_val>
 8002fcc:	4630      	mov	r0, r6
 8002fce:	f7ff f8b9 	bl	8002144 <rt_rmv_dly>
 8002fd2:	7077      	strb	r7, [r6, #1]
 8002fd4:	4631      	mov	r1, r6
 8002fd6:	4640      	mov	r0, r8
 8002fd8:	f7fe fff6 	bl	8001fc8 <rt_put_prio>
 8002fdc:	68e3      	ldr	r3, [r4, #12]
 8002fde:	6a32      	ldr	r2, [r6, #32]
 8002fe0:	8067      	strh	r7, [r4, #2]
 8002fe2:	60a6      	str	r6, [r4, #8]
 8002fe4:	60e2      	str	r2, [r4, #12]
 8002fe6:	6234      	str	r4, [r6, #32]
 8002fe8:	461c      	mov	r4, r3
 8002fea:	e7d0      	b.n	8002f8e <rt_tsk_delete+0x2a>
 8002fec:	68e2      	ldr	r2, [r4, #12]
 8002fee:	8063      	strh	r3, [r4, #2]
 8002ff0:	60a3      	str	r3, [r4, #8]
 8002ff2:	60e3      	str	r3, [r4, #12]
 8002ff4:	4614      	mov	r4, r2
 8002ff6:	e7ca      	b.n	8002f8e <rt_tsk_delete+0x2a>
 8002ff8:	4b2d      	ldr	r3, [pc, #180]	; (80030b0 <rt_tsk_delete+0x14c>)
 8002ffa:	881b      	ldrh	r3, [r3, #0]
 8002ffc:	4298      	cmp	r0, r3
 8002ffe:	d84d      	bhi.n	800309c <rt_tsk_delete+0x138>
 8003000:	4b28      	ldr	r3, [pc, #160]	; (80030a4 <rt_tsk_delete+0x140>)
 8003002:	1e47      	subs	r7, r0, #1
 8003004:	4699      	mov	r9, r3
 8003006:	f853 6027 	ldr.w	r6, [r3, r7, lsl #2]
 800300a:	2e00      	cmp	r6, #0
 800300c:	d046      	beq.n	800309c <rt_tsk_delete+0x138>
 800300e:	4630      	mov	r0, r6
 8003010:	f7ff f86a 	bl	80020e8 <rt_rmv_list>
 8003014:	4630      	mov	r0, r6
 8003016:	f7ff f895 	bl	8002144 <rt_rmv_dly>
 800301a:	f8df b098 	ldr.w	r11, [pc, #152]	; 80030b4 <rt_tsk_delete+0x150>
 800301e:	6a34      	ldr	r4, [r6, #32]
 8003020:	f04f 0a01 	mov.w	r10, #1
 8003024:	b9b4      	cbnz	r4, 8003054 <rt_tsk_delete+0xf0>
 8003026:	6b31      	ldr	r1, [r6, #48]	; 0x30
 8003028:	481f      	ldr	r0, [pc, #124]	; (80030a8 <rt_tsk_delete+0x144>)
 800302a:	f849 4027 	str.w	r4, [r9, r7, lsl #2]
 800302e:	f7ff f9ed 	bl	800240c <rt_free_box>
 8003032:	4631      	mov	r1, r6
 8003034:	6334      	str	r4, [r6, #48]	; 0x30
 8003036:	481d      	ldr	r0, [pc, #116]	; (80030ac <rt_tsk_delete+0x148>)
 8003038:	f7ff f9e8 	bl	800240c <rt_free_box>
 800303c:	481d      	ldr	r0, [pc, #116]	; (80030b4 <rt_tsk_delete+0x150>)
 800303e:	6829      	ldr	r1, [r5, #0]
 8003040:	6843      	ldr	r3, [r0, #4]
 8003042:	789a      	ldrb	r2, [r3, #2]
 8003044:	788b      	ldrb	r3, [r1, #2]
 8003046:	429a      	cmp	r2, r3
 8003048:	d9b4      	bls.n	8002fb4 <rt_tsk_delete+0x50>
 800304a:	2301      	movs	r3, #1
 800304c:	704b      	strb	r3, [r1, #1]
 800304e:	f7fe ffbb 	bl	8001fc8 <rt_put_prio>
 8003052:	e7ad      	b.n	8002fb0 <rt_tsk_delete+0x4c>
 8003054:	6863      	ldr	r3, [r4, #4]
 8003056:	b1db      	cbz	r3, 8003090 <rt_tsk_delete+0x12c>
 8003058:	4620      	mov	r0, r4
 800305a:	f7fe ffcd 	bl	8001ff8 <rt_get_first>
 800305e:	2100      	movs	r1, #0
 8003060:	4680      	mov	r8, r0
 8003062:	f7ff f8f5 	bl	8002250 <rt_ret_val>
 8003066:	4640      	mov	r0, r8
 8003068:	f7ff f86c 	bl	8002144 <rt_rmv_dly>
 800306c:	f888 a001 	strb.w	r10, [r8, #1]
 8003070:	4641      	mov	r1, r8
 8003072:	4658      	mov	r0, r11
 8003074:	f7fe ffa8 	bl	8001fc8 <rt_put_prio>
 8003078:	68e3      	ldr	r3, [r4, #12]
 800307a:	f8d8 2020 	ldr.w	r2, [r8, #32]
 800307e:	f8a4 a002 	strh.w	r10, [r4, #2]
 8003082:	f8c4 8008 	str.w	r8, [r4, #8]
 8003086:	60e2      	str	r2, [r4, #12]
 8003088:	f8c8 4020 	str.w	r4, [r8, #32]
 800308c:	461c      	mov	r4, r3
 800308e:	e7c9      	b.n	8003024 <rt_tsk_delete+0xc0>
 8003090:	68e2      	ldr	r2, [r4, #12]
 8003092:	8063      	strh	r3, [r4, #2]
 8003094:	60a3      	str	r3, [r4, #8]
 8003096:	60e3      	str	r3, [r4, #12]
 8003098:	4614      	mov	r4, r2
 800309a:	e7c3      	b.n	8003024 <rt_tsk_delete+0xc0>
 800309c:	24ff      	movs	r4, #255	; 0xff
 800309e:	e789      	b.n	8002fb4 <rt_tsk_delete+0x50>
 80030a0:	20002d4c 	.word	0x20002d4c
 80030a4:	20002548 	.word	0x20002548
 80030a8:	20002338 	.word	0x20002338
 80030ac:	20002930 	.word	0x20002930
 80030b0:	08006f18 	.word	0x08006f18
 80030b4:	20002d00 	.word	0x20002d00

080030b8 <rt_sys_init>:
 80030b8:	b538      	push	{r3, r4, r5, lr}
 80030ba:	4b2c      	ldr	r3, [pc, #176]	; (800316c <rt_sys_init+0xb4>)
 80030bc:	492c      	ldr	r1, [pc, #176]	; (8003170 <rt_sys_init+0xb8>)
 80030be:	881a      	ldrh	r2, [r3, #0]
 80030c0:	2300      	movs	r3, #0
 80030c2:	4618      	mov	r0, r3
 80030c4:	4293      	cmp	r3, r2
 80030c6:	d34d      	bcc.n	8003164 <rt_sys_init+0xac>
 80030c8:	4b2a      	ldr	r3, [pc, #168]	; (8003174 <rt_sys_init+0xbc>)
 80030ca:	482b      	ldr	r0, [pc, #172]	; (8003178 <rt_sys_init+0xc0>)
 80030cc:	8819      	ldrh	r1, [r3, #0]
 80030ce:	4c2b      	ldr	r4, [pc, #172]	; (800317c <rt_sys_init+0xc4>)
 80030d0:	2240      	movs	r2, #64	; 0x40
 80030d2:	f7ff f969 	bl	80023a8 <_init_box>
 80030d6:	4b2a      	ldr	r3, [pc, #168]	; (8003180 <rt_sys_init+0xc8>)
 80030d8:	482a      	ldr	r0, [pc, #168]	; (8003184 <rt_sys_init+0xcc>)
 80030da:	881a      	ldrh	r2, [r3, #0]
 80030dc:	4b2a      	ldr	r3, [pc, #168]	; (8003188 <rt_sys_init+0xd0>)
 80030de:	f042 4200 	orr.w	r2, r2, #2147483648	; 0x80000000
 80030e2:	6819      	ldr	r1, [r3, #0]
 80030e4:	f7ff f960 	bl	80023a8 <_init_box>
 80030e8:	4b28      	ldr	r3, [pc, #160]	; (800318c <rt_sys_init+0xd4>)
 80030ea:	8819      	ldrh	r1, [r3, #0]
 80030ec:	4b28      	ldr	r3, [pc, #160]	; (8003190 <rt_sys_init+0xd8>)
 80030ee:	2208      	movs	r2, #8
 80030f0:	6818      	ldr	r0, [r3, #0]
 80030f2:	f7ff f959 	bl	80023a8 <_init_box>
 80030f6:	23ff      	movs	r3, #255	; 0xff
 80030f8:	2500      	movs	r5, #0
 80030fa:	70e3      	strb	r3, [r4, #3]
 80030fc:	4821      	ldr	r0, [pc, #132]	; (8003184 <rt_sys_init+0xcc>)
 80030fe:	62a5      	str	r5, [r4, #40]	; 0x28
 8003100:	2301      	movs	r3, #1
 8003102:	7063      	strb	r3, [r4, #1]
 8003104:	7025      	strb	r5, [r4, #0]
 8003106:	70a5      	strb	r5, [r4, #2]
 8003108:	f884 5024 	strb.w	r5, [r4, #36]	; 0x24
 800310c:	6065      	str	r5, [r4, #4]
 800310e:	60a5      	str	r5, [r4, #8]
 8003110:	60e5      	str	r5, [r4, #12]
 8003112:	6125      	str	r5, [r4, #16]
 8003114:	6225      	str	r5, [r4, #32]
 8003116:	82a5      	strh	r5, [r4, #20]
 8003118:	82e5      	strh	r5, [r4, #22]
 800311a:	8325      	strh	r5, [r4, #24]
 800311c:	8365      	strh	r5, [r4, #26]
 800311e:	f884 5025 	strb.w	r5, [r4, #37]	; 0x25
 8003122:	f7ff f966 	bl	80023f2 <rt_alloc_box>
 8003126:	491b      	ldr	r1, [pc, #108]	; (8003194 <rt_sys_init+0xdc>)
 8003128:	6320      	str	r0, [r4, #48]	; 0x30
 800312a:	4620      	mov	r0, r4
 800312c:	f7ff f844 	bl	80021b8 <rt_init_stack>
 8003130:	4b19      	ldr	r3, [pc, #100]	; (8003198 <rt_sys_init+0xe0>)
 8003132:	2204      	movs	r2, #4
 8003134:	701a      	strb	r2, [r3, #0]
 8003136:	605d      	str	r5, [r3, #4]
 8003138:	4b18      	ldr	r3, [pc, #96]	; (800319c <rt_sys_init+0xe4>)
 800313a:	701a      	strb	r2, [r3, #0]
 800313c:	60dd      	str	r5, [r3, #12]
 800313e:	611d      	str	r5, [r3, #16]
 8003140:	829d      	strh	r5, [r3, #20]
 8003142:	4b17      	ldr	r3, [pc, #92]	; (80031a0 <rt_sys_init+0xe8>)
 8003144:	4620      	mov	r0, r4
 8003146:	601c      	str	r4, [r3, #0]
 8003148:	2302      	movs	r3, #2
 800314a:	7063      	strb	r3, [r4, #1]
 800314c:	f7ff fe16 	bl	8002d7c <rt_switch_req>
 8003150:	4a14      	ldr	r2, [pc, #80]	; (80031a4 <rt_sys_init+0xec>)
 8003152:	4b15      	ldr	r3, [pc, #84]	; (80031a8 <rt_sys_init+0xf0>)
 8003154:	7812      	ldrb	r2, [r2, #0]
 8003156:	701d      	strb	r5, [r3, #0]
 8003158:	705d      	strb	r5, [r3, #1]
 800315a:	70da      	strb	r2, [r3, #3]
 800315c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8003160:	f7ff ba9c 	b.w	800269c <rt_init_robin>
 8003164:	f841 0023 	str.w	r0, [r1, r3, lsl #2]
 8003168:	3301      	adds	r3, #1
 800316a:	e7ab      	b.n	80030c4 <rt_sys_init+0xc>
 800316c:	08006f18 	.word	0x08006f18
 8003170:	20002548 	.word	0x20002548
 8003174:	08006ee4 	.word	0x08006ee4
 8003178:	20002930 	.word	0x20002930
 800317c:	20002d54 	.word	0x20002d54
 8003180:	08006f34 	.word	0x08006f34
 8003184:	20002338 	.word	0x20002338
 8003188:	08006ee0 	.word	0x08006ee0
 800318c:	08006ee6 	.word	0x08006ee6
 8003190:	20000cc4 	.word	0x20000cc4
 8003194:	08001f29 	.word	0x08001f29
 8003198:	20002d00 	.word	0x20002d00
 800319c:	20002d18 	.word	0x20002d18
 80031a0:	20002d4c 	.word	0x20002d4c
 80031a4:	08006f15 	.word	0x08006f15
 80031a8:	20002584 	.word	0x20002584

080031ac <rt_sys_start>:
 80031ac:	b508      	push	{r3, lr}
 80031ae:	4b1e      	ldr	r3, [pc, #120]	; (8003228 <rt_sys_start+0x7c>)
 80031b0:	681a      	ldr	r2, [r3, #0]
 80031b2:	f442 027f 	orr.w	r2, r2, #16711680	; 0xff0000
 80031b6:	601a      	str	r2, [r3, #0]
 80031b8:	681b      	ldr	r3, [r3, #0]
 80031ba:	021b      	lsls	r3, r3, #8
 80031bc:	f003 437f 	and.w	r3, r3, #4278190080	; 0xff000000
 80031c0:	43db      	mvns	r3, r3
 80031c2:	fab3 f383 	clz	r3, r3
 80031c6:	4a19      	ldr	r2, [pc, #100]	; (800322c <rt_sys_start+0x80>)
 80031c8:	4819      	ldr	r0, [pc, #100]	; (8003230 <rt_sys_start+0x84>)
 80031ca:	6812      	ldr	r2, [r2, #0]
 80031cc:	6801      	ldr	r1, [r0, #0]
 80031ce:	b2db      	uxtb	r3, r3
 80031d0:	f1c3 0308 	rsb	r3, r3, #8
 80031d4:	f3c2 2202 	ubfx	r2, r2, #8, #3
 80031d8:	4293      	cmp	r3, r2
 80031da:	bf98      	it	ls
 80031dc:	1c53      	addls	r3, r2, #1
 80031de:	f06f 7280 	mvn.w	r2, #16777216	; 0x1000000
 80031e2:	fa02 f303 	lsl.w	r3, r2, r3
 80031e6:	f003 437f 	and.w	r3, r3, #4278190080	; 0xff000000
 80031ea:	f021 427f 	bic.w	r2, r1, #4278190080	; 0xff000000
 80031ee:	4313      	orrs	r3, r2
 80031f0:	6003      	str	r3, [r0, #0]
 80031f2:	f7ff f88f 	bl	8002314 <os_tick_init>
 80031f6:	4b0f      	ldr	r3, [pc, #60]	; (8003234 <rt_sys_start+0x88>)
 80031f8:	2800      	cmp	r0, #0
 80031fa:	6018      	str	r0, [r3, #0]
 80031fc:	db12      	blt.n	8003224 <rt_sys_start+0x78>
 80031fe:	f100 4060 	add.w	r0, r0, #3758096384	; 0xe0000000
 8003202:	f500 4064 	add.w	r0, r0, #58368	; 0xe400
 8003206:	22ff      	movs	r2, #255	; 0xff
 8003208:	7002      	strb	r2, [r0, #0]
 800320a:	681a      	ldr	r2, [r3, #0]
 800320c:	0953      	lsrs	r3, r2, #5
 800320e:	009b      	lsls	r3, r3, #2
 8003210:	f103 4360 	add.w	r3, r3, #3758096384	; 0xe0000000
 8003214:	f503 4361 	add.w	r3, r3, #57600	; 0xe100
 8003218:	f002 021f 	and.w	r2, r2, #31
 800321c:	2101      	movs	r1, #1
 800321e:	fa01 f202 	lsl.w	r2, r1, r2
 8003222:	601a      	str	r2, [r3, #0]
 8003224:	bd08      	pop	{r3, pc}
 8003226:	bf00      	nop
 8003228:	e000ed20 	.word	0xe000ed20
 800322c:	e000ed0c 	.word	0xe000ed0c
 8003230:	e000ed1c 	.word	0xe000ed1c
 8003234:	20002d30 	.word	0x20002d30

08003238 <rt_mut_init>:
 8003238:	2303      	movs	r3, #3
 800323a:	7003      	strb	r3, [r0, #0]
 800323c:	2300      	movs	r3, #0
 800323e:	8043      	strh	r3, [r0, #2]
 8003240:	6043      	str	r3, [r0, #4]
 8003242:	6083      	str	r3, [r0, #8]
 8003244:	60c3      	str	r3, [r0, #12]
 8003246:	4770      	bx	lr

08003248 <rt_mut_release>:
 8003248:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800324c:	8843      	ldrh	r3, [r0, #2]
 800324e:	4605      	mov	r5, r0
 8003250:	2b00      	cmp	r3, #0
 8003252:	d063      	beq.n	800331c <rt_mut_release+0xd4>
 8003254:	4f32      	ldr	r7, [pc, #200]	; (8003320 <rt_mut_release+0xd8>)
 8003256:	6881      	ldr	r1, [r0, #8]
 8003258:	683a      	ldr	r2, [r7, #0]
 800325a:	4291      	cmp	r1, r2
 800325c:	d15e      	bne.n	800331c <rt_mut_release+0xd4>
 800325e:	3b01      	subs	r3, #1
 8003260:	b29b      	uxth	r3, r3
 8003262:	8043      	strh	r3, [r0, #2]
 8003264:	b11b      	cbz	r3, 800326e <rt_mut_release+0x26>
 8003266:	2400      	movs	r4, #0
 8003268:	4620      	mov	r0, r4
 800326a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800326e:	6a0b      	ldr	r3, [r1, #32]
 8003270:	4298      	cmp	r0, r3
 8003272:	d129      	bne.n	80032c8 <rt_mut_release+0x80>
 8003274:	68c3      	ldr	r3, [r0, #12]
 8003276:	620b      	str	r3, [r1, #32]
 8003278:	f891 3024 	ldrb.w	r3, [r1, #36]	; 0x24
 800327c:	6a0c      	ldr	r4, [r1, #32]
 800327e:	bb5c      	cbnz	r4, 80032d8 <rt_mut_release+0x90>
 8003280:	708b      	strb	r3, [r1, #2]
 8003282:	686a      	ldr	r2, [r5, #4]
 8003284:	f8df 809c 	ldr.w	r8, [pc, #156]	; 8003324 <rt_mut_release+0xdc>
 8003288:	2a00      	cmp	r2, #0
 800328a:	d03b      	beq.n	8003304 <rt_mut_release+0xbc>
 800328c:	4628      	mov	r0, r5
 800328e:	f7fe feb3 	bl	8001ff8 <rt_get_first>
 8003292:	4621      	mov	r1, r4
 8003294:	4606      	mov	r6, r0
 8003296:	f7fe ffdb 	bl	8002250 <rt_ret_val>
 800329a:	4630      	mov	r0, r6
 800329c:	f7fe ff52 	bl	8002144 <rt_rmv_dly>
 80032a0:	6a33      	ldr	r3, [r6, #32]
 80032a2:	60eb      	str	r3, [r5, #12]
 80032a4:	f04f 0901 	mov.w	r9, #1
 80032a8:	6839      	ldr	r1, [r7, #0]
 80032aa:	f8d8 3004 	ldr.w	r3, [r8, #4]
 80032ae:	f8a5 9002 	strh.w	r9, [r5, #2]
 80032b2:	60ae      	str	r6, [r5, #8]
 80032b4:	6235      	str	r5, [r6, #32]
 80032b6:	788a      	ldrb	r2, [r1, #2]
 80032b8:	789b      	ldrb	r3, [r3, #2]
 80032ba:	429a      	cmp	r2, r3
 80032bc:	d314      	bcc.n	80032e8 <rt_mut_release+0xa0>
 80032be:	4630      	mov	r0, r6
 80032c0:	f7ff fd76 	bl	8002db0 <rt_dispatch>
 80032c4:	e7d0      	b.n	8003268 <rt_mut_release+0x20>
 80032c6:	4613      	mov	r3, r2
 80032c8:	2b00      	cmp	r3, #0
 80032ca:	d0d5      	beq.n	8003278 <rt_mut_release+0x30>
 80032cc:	68da      	ldr	r2, [r3, #12]
 80032ce:	4295      	cmp	r5, r2
 80032d0:	d1f9      	bne.n	80032c6 <rt_mut_release+0x7e>
 80032d2:	68ea      	ldr	r2, [r5, #12]
 80032d4:	60da      	str	r2, [r3, #12]
 80032d6:	e7cf      	b.n	8003278 <rt_mut_release+0x30>
 80032d8:	6862      	ldr	r2, [r4, #4]
 80032da:	b11a      	cbz	r2, 80032e4 <rt_mut_release+0x9c>
 80032dc:	7892      	ldrb	r2, [r2, #2]
 80032de:	4293      	cmp	r3, r2
 80032e0:	bf38      	it	cc
 80032e2:	4613      	movcc	r3, r2
 80032e4:	68e4      	ldr	r4, [r4, #12]
 80032e6:	e7ca      	b.n	800327e <rt_mut_release+0x36>
 80032e8:	4640      	mov	r0, r8
 80032ea:	f7fe fe6d 	bl	8001fc8 <rt_put_prio>
 80032ee:	4631      	mov	r1, r6
 80032f0:	4640      	mov	r0, r8
 80032f2:	f7fe fe69 	bl	8001fc8 <rt_put_prio>
 80032f6:	683b      	ldr	r3, [r7, #0]
 80032f8:	f883 9001 	strb.w	r9, [r3, #1]
 80032fc:	f886 9001 	strb.w	r9, [r6, #1]
 8003300:	4620      	mov	r0, r4
 8003302:	e7dd      	b.n	80032c0 <rt_mut_release+0x78>
 8003304:	f8d8 2004 	ldr.w	r2, [r8, #4]
 8003308:	7892      	ldrb	r2, [r2, #2]
 800330a:	429a      	cmp	r2, r3
 800330c:	d9ab      	bls.n	8003266 <rt_mut_release+0x1e>
 800330e:	4640      	mov	r0, r8
 8003310:	f7fe fe5a 	bl	8001fc8 <rt_put_prio>
 8003314:	683b      	ldr	r3, [r7, #0]
 8003316:	2201      	movs	r2, #1
 8003318:	705a      	strb	r2, [r3, #1]
 800331a:	e7f1      	b.n	8003300 <rt_mut_release+0xb8>
 800331c:	24ff      	movs	r4, #255	; 0xff
 800331e:	e7a3      	b.n	8003268 <rt_mut_release+0x20>
 8003320:	20002d4c 	.word	0x20002d4c
 8003324:	20002d00 	.word	0x20002d00

08003328 <rt_mut_wait>:
 8003328:	8843      	ldrh	r3, [r0, #2]
 800332a:	b570      	push	{r4, r5, r6, lr}
 800332c:	4604      	mov	r4, r0
 800332e:	460e      	mov	r6, r1
 8003330:	4d13      	ldr	r5, [pc, #76]	; (8003380 <rt_mut_wait+0x58>)
 8003332:	b943      	cbnz	r3, 8003346 <rt_mut_wait+0x1e>
 8003334:	682a      	ldr	r2, [r5, #0]
 8003336:	6082      	str	r2, [r0, #8]
 8003338:	6a11      	ldr	r1, [r2, #32]
 800333a:	60c1      	str	r1, [r0, #12]
 800333c:	6210      	str	r0, [r2, #32]
 800333e:	3301      	adds	r3, #1
 8003340:	8063      	strh	r3, [r4, #2]
 8003342:	2000      	movs	r0, #0
 8003344:	bd70      	pop	{r4, r5, r6, pc}
 8003346:	6880      	ldr	r0, [r0, #8]
 8003348:	682a      	ldr	r2, [r5, #0]
 800334a:	4290      	cmp	r0, r2
 800334c:	d0f7      	beq.n	800333e <rt_mut_wait+0x16>
 800334e:	b181      	cbz	r1, 8003372 <rt_mut_wait+0x4a>
 8003350:	7893      	ldrb	r3, [r2, #2]
 8003352:	7882      	ldrb	r2, [r0, #2]
 8003354:	429a      	cmp	r2, r3
 8003356:	d202      	bcs.n	800335e <rt_mut_wait+0x36>
 8003358:	7083      	strb	r3, [r0, #2]
 800335a:	f7fe fedb 	bl	8002114 <rt_resort_prio>
 800335e:	6862      	ldr	r2, [r4, #4]
 8003360:	b14a      	cbz	r2, 8003376 <rt_mut_wait+0x4e>
 8003362:	6829      	ldr	r1, [r5, #0]
 8003364:	4620      	mov	r0, r4
 8003366:	f7fe fe2f 	bl	8001fc8 <rt_put_prio>
 800336a:	2109      	movs	r1, #9
 800336c:	4630      	mov	r0, r6
 800336e:	f7ff fd43 	bl	8002df8 <rt_block>
 8003372:	2001      	movs	r0, #1
 8003374:	bd70      	pop	{r4, r5, r6, pc}
 8003376:	682b      	ldr	r3, [r5, #0]
 8003378:	6063      	str	r3, [r4, #4]
 800337a:	605a      	str	r2, [r3, #4]
 800337c:	609c      	str	r4, [r3, #8]
 800337e:	e7f4      	b.n	800336a <rt_mut_wait+0x42>
 8003380:	20002d4c 	.word	0x20002d4c

08003384 <rt_dly_wait>:
 8003384:	2103      	movs	r1, #3
 8003386:	f7ff bd37 	b.w	8002df8 <rt_block>
	...

0800338c <rt_sem_psh>:
 800338c:	6842      	ldr	r2, [r0, #4]
 800338e:	b510      	push	{r4, lr}
 8003390:	b17a      	cbz	r2, 80033b2 <rt_sem_psh+0x26>
 8003392:	f7fe fe31 	bl	8001ff8 <rt_get_first>
 8003396:	4604      	mov	r4, r0
 8003398:	f7fe fed4 	bl	8002144 <rt_rmv_dly>
 800339c:	2101      	movs	r1, #1
 800339e:	7061      	strb	r1, [r4, #1]
 80033a0:	4620      	mov	r0, r4
 80033a2:	f7fe ff55 	bl	8002250 <rt_ret_val>
 80033a6:	4621      	mov	r1, r4
 80033a8:	4804      	ldr	r0, [pc, #16]	; (80033bc <rt_sem_psh+0x30>)
 80033aa:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80033ae:	f7fe be0b 	b.w	8001fc8 <rt_put_prio>
 80033b2:	8842      	ldrh	r2, [r0, #2]
 80033b4:	3201      	adds	r2, #1
 80033b6:	8042      	strh	r2, [r0, #2]
 80033b8:	bd10      	pop	{r4, pc}
 80033ba:	bf00      	nop
 80033bc:	20002d00 	.word	0x20002d00

080033c0 <timer_irq_handler>:
 80033c0:	b570      	push	{r4, r5, r6, lr}
 80033c2:	4c13      	ldr	r4, [pc, #76]	; (8003410 <timer_irq_handler+0x50>)
 80033c4:	6823      	ldr	r3, [r4, #0]
 80033c6:	691a      	ldr	r2, [r3, #16]
 80033c8:	0795      	lsls	r5, r2, #30
 80033ca:	d507      	bpl.n	80033dc <timer_irq_handler+0x1c>
 80033cc:	68da      	ldr	r2, [r3, #12]
 80033ce:	0790      	lsls	r0, r2, #30
 80033d0:	d504      	bpl.n	80033dc <timer_irq_handler+0x1c>
 80033d2:	f06f 0202 	mvn.w	r2, #2
 80033d6:	611a      	str	r2, [r3, #16]
 80033d8:	f7fe fc4e 	bl	8001c78 <us_ticker_irq_handler>
 80033dc:	6823      	ldr	r3, [r4, #0]
 80033de:	691a      	ldr	r2, [r3, #16]
 80033e0:	0751      	lsls	r1, r2, #29
 80033e2:	d513      	bpl.n	800340c <timer_irq_handler+0x4c>
 80033e4:	68da      	ldr	r2, [r3, #12]
 80033e6:	0752      	lsls	r2, r2, #29
 80033e8:	d510      	bpl.n	800340c <timer_irq_handler+0x4c>
 80033ea:	f06f 0204 	mvn.w	r2, #4
 80033ee:	4e09      	ldr	r6, [pc, #36]	; (8003414 <timer_irq_handler+0x54>)
 80033f0:	611a      	str	r2, [r3, #16]
 80033f2:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 80033f4:	6833      	ldr	r3, [r6, #0]
 80033f6:	1aeb      	subs	r3, r5, r3
 80033f8:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 80033fc:	d306      	bcc.n	800340c <timer_irq_handler+0x4c>
 80033fe:	f001 fe9f 	bl	8005140 <HAL_IncTick>
 8003402:	6823      	ldr	r3, [r4, #0]
 8003404:	f505 727a 	add.w	r2, r5, #1000	; 0x3e8
 8003408:	639a      	str	r2, [r3, #56]	; 0x38
 800340a:	6035      	str	r5, [r6, #0]
 800340c:	bd70      	pop	{r4, r5, r6, pc}
 800340e:	bf00      	nop
 8003410:	20002d98 	.word	0x20002d98
 8003414:	20001d38 	.word	0x20001d38

08003418 <HAL_InitTick>:
 8003418:	b530      	push	{r4, r5, lr}
 800341a:	b089      	sub	sp, #36	; 0x24
 800341c:	a901      	add	r1, sp, #4
 800341e:	a803      	add	r0, sp, #12
 8003420:	f001 fe56 	bl	80050d0 <HAL_RCC_GetClockConfig>
 8003424:	f001 fe24 	bl	8005070 <HAL_RCC_GetPCLK1Freq>
 8003428:	2300      	movs	r3, #0
 800342a:	9302      	str	r3, [sp, #8]
 800342c:	4b24      	ldr	r3, [pc, #144]	; (80034c0 <HAL_InitTick+0xa8>)
 800342e:	9001      	str	r0, [sp, #4]
 8003430:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8003432:	4c24      	ldr	r4, [pc, #144]	; (80034c4 <HAL_InitTick+0xac>)
 8003434:	f042 0208 	orr.w	r2, r2, #8
 8003438:	641a      	str	r2, [r3, #64]	; 0x40
 800343a:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800343c:	f002 0208 	and.w	r2, r2, #8
 8003440:	9202      	str	r2, [sp, #8]
 8003442:	9a02      	ldr	r2, [sp, #8]
 8003444:	6a1a      	ldr	r2, [r3, #32]
 8003446:	f042 0208 	orr.w	r2, r2, #8
 800344a:	621a      	str	r2, [r3, #32]
 800344c:	6a1a      	ldr	r2, [r3, #32]
 800344e:	f022 0208 	bic.w	r2, r2, #8
 8003452:	621a      	str	r2, [r3, #32]
 8003454:	9a06      	ldr	r2, [sp, #24]
 8003456:	f5a3 330b 	sub.w	r3, r3, #142336	; 0x22c00
 800345a:	6023      	str	r3, [r4, #0]
 800345c:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8003460:	60e3      	str	r3, [r4, #12]
 8003462:	4b19      	ldr	r3, [pc, #100]	; (80034c8 <HAL_InitTick+0xb0>)
 8003464:	bb4a      	cbnz	r2, 80034ba <HAL_InitTick+0xa2>
 8003466:	fbb0 f0f3 	udiv	r0, r0, r3
 800346a:	3801      	subs	r0, #1
 800346c:	2500      	movs	r5, #0
 800346e:	6060      	str	r0, [r4, #4]
 8003470:	4814      	ldr	r0, [pc, #80]	; (80034c4 <HAL_InitTick+0xac>)
 8003472:	6125      	str	r5, [r4, #16]
 8003474:	60a5      	str	r5, [r4, #8]
 8003476:	6165      	str	r5, [r4, #20]
 8003478:	f001 f93c 	bl	80046f4 <HAL_TIM_OC_Init>
 800347c:	4913      	ldr	r1, [pc, #76]	; (80034cc <HAL_InitTick+0xb4>)
 800347e:	2032      	movs	r0, #50	; 0x32
 8003480:	f001 f856 	bl	8004530 <__NVIC_SetVector>
 8003484:	4b12      	ldr	r3, [pc, #72]	; (80034d0 <HAL_InitTick+0xb8>)
 8003486:	480f      	ldr	r0, [pc, #60]	; (80034c4 <HAL_InitTick+0xac>)
 8003488:	f44f 2280 	mov.w	r2, #262144	; 0x40000
 800348c:	605a      	str	r2, [r3, #4]
 800348e:	4629      	mov	r1, r5
 8003490:	f001 fa14 	bl	80048bc <HAL_TIM_OC_Start>
 8003494:	2104      	movs	r1, #4
 8003496:	480b      	ldr	r0, [pc, #44]	; (80034c4 <HAL_InitTick+0xac>)
 8003498:	f001 fa10 	bl	80048bc <HAL_TIM_OC_Start>
 800349c:	6823      	ldr	r3, [r4, #0]
 800349e:	4a0d      	ldr	r2, [pc, #52]	; (80034d4 <HAL_InitTick+0xbc>)
 80034a0:	6a59      	ldr	r1, [r3, #36]	; 0x24
 80034a2:	6011      	str	r1, [r2, #0]
 80034a4:	6812      	ldr	r2, [r2, #0]
 80034a6:	f502 727a 	add.w	r2, r2, #1000	; 0x3e8
 80034aa:	639a      	str	r2, [r3, #56]	; 0x38
 80034ac:	68da      	ldr	r2, [r3, #12]
 80034ae:	4628      	mov	r0, r5
 80034b0:	f042 0204 	orr.w	r2, r2, #4
 80034b4:	60da      	str	r2, [r3, #12]
 80034b6:	b009      	add	sp, #36	; 0x24
 80034b8:	bd30      	pop	{r4, r5, pc}
 80034ba:	0040      	lsls	r0, r0, #1
 80034bc:	e7d3      	b.n	8003466 <HAL_InitTick+0x4e>
 80034be:	bf00      	nop
 80034c0:	40023800 	.word	0x40023800
 80034c4:	20002d98 	.word	0x20002d98
 80034c8:	000f4240 	.word	0x000f4240
 80034cc:	080033c1 	.word	0x080033c1
 80034d0:	e000e100 	.word	0xe000e100
 80034d4:	20001d38 	.word	0x20001d38

080034d8 <HAL_SuspendTick>:
 80034d8:	4b03      	ldr	r3, [pc, #12]	; (80034e8 <HAL_SuspendTick+0x10>)
 80034da:	4a04      	ldr	r2, [pc, #16]	; (80034ec <HAL_SuspendTick+0x14>)
 80034dc:	6013      	str	r3, [r2, #0]
 80034de:	68da      	ldr	r2, [r3, #12]
 80034e0:	f022 0204 	bic.w	r2, r2, #4
 80034e4:	60da      	str	r2, [r3, #12]
 80034e6:	4770      	bx	lr
 80034e8:	40000c00 	.word	0x40000c00
 80034ec:	20002d98 	.word	0x20002d98

080034f0 <HAL_ResumeTick>:
 80034f0:	4b03      	ldr	r3, [pc, #12]	; (8003500 <HAL_ResumeTick+0x10>)
 80034f2:	4a04      	ldr	r2, [pc, #16]	; (8003504 <HAL_ResumeTick+0x14>)
 80034f4:	6013      	str	r3, [r2, #0]
 80034f6:	68da      	ldr	r2, [r3, #12]
 80034f8:	f042 0204 	orr.w	r2, r2, #4
 80034fc:	60da      	str	r2, [r3, #12]
 80034fe:	4770      	bx	lr
 8003500:	40000c00 	.word	0x40000c00
 8003504:	20002d98 	.word	0x20002d98

08003508 <handle_interrupt_in>:
 8003508:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800350a:	264c      	movs	r6, #76	; 0x4c
 800350c:	4b13      	ldr	r3, [pc, #76]	; (800355c <handle_interrupt_in+0x54>)
 800350e:	4346      	muls	r6, r0
 8003510:	1d34      	adds	r4, r6, #4
 8003512:	460f      	mov	r7, r1
 8003514:	441c      	add	r4, r3
 8003516:	2500      	movs	r5, #0
 8003518:	441e      	add	r6, r3
 800351a:	42bd      	cmp	r5, r7
 800351c:	d100      	bne.n	8003520 <handle_interrupt_in+0x18>
 800351e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8003520:	2101      	movs	r1, #1
 8003522:	6833      	ldr	r3, [r6, #0]
 8003524:	fa01 f205 	lsl.w	r2, r1, r5
 8003528:	421a      	tst	r2, r3
 800352a:	d013      	beq.n	8003554 <handle_interrupt_in+0x4c>
 800352c:	4a0c      	ldr	r2, [pc, #48]	; (8003560 <handle_interrupt_in+0x58>)
 800352e:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8003530:	6950      	ldr	r0, [r2, #20]
 8003532:	fa01 f303 	lsl.w	r3, r1, r3
 8003536:	4203      	tst	r3, r0
 8003538:	d00c      	beq.n	8003554 <handle_interrupt_in+0x4c>
 800353a:	f8d4 e018 	ldr.w	lr, [r4, #24]
 800353e:	6153      	str	r3, [r2, #20]
 8003540:	6820      	ldr	r0, [r4, #0]
 8003542:	b138      	cbz	r0, 8003554 <handle_interrupt_in+0x4c>
 8003544:	f8de 2010 	ldr.w	r2, [lr, #16]
 8003548:	4213      	tst	r3, r2
 800354a:	4b06      	ldr	r3, [pc, #24]	; (8003564 <handle_interrupt_in+0x5c>)
 800354c:	bf08      	it	eq
 800354e:	2102      	moveq	r1, #2
 8003550:	681b      	ldr	r3, [r3, #0]
 8003552:	4798      	blx	r3
 8003554:	3501      	adds	r5, #1
 8003556:	3404      	adds	r4, #4
 8003558:	e7df      	b.n	800351a <handle_interrupt_in+0x12>
 800355a:	bf00      	nop
 800355c:	20001d3c 	.word	0x20001d3c
 8003560:	40013c00 	.word	0x40013c00
 8003564:	20001f50 	.word	0x20001f50

08003568 <gpio_irq0>:
 8003568:	2101      	movs	r1, #1
 800356a:	2000      	movs	r0, #0
 800356c:	f7ff bfcc 	b.w	8003508 <handle_interrupt_in>

08003570 <gpio_irq1>:
 8003570:	2101      	movs	r1, #1
 8003572:	4608      	mov	r0, r1
 8003574:	f7ff bfc8 	b.w	8003508 <handle_interrupt_in>

08003578 <gpio_irq2>:
 8003578:	2101      	movs	r1, #1
 800357a:	2002      	movs	r0, #2
 800357c:	f7ff bfc4 	b.w	8003508 <handle_interrupt_in>

08003580 <gpio_irq3>:
 8003580:	2101      	movs	r1, #1
 8003582:	2003      	movs	r0, #3
 8003584:	f7ff bfc0 	b.w	8003508 <handle_interrupt_in>

08003588 <gpio_irq4>:
 8003588:	2101      	movs	r1, #1
 800358a:	2004      	movs	r0, #4
 800358c:	f7ff bfbc 	b.w	8003508 <handle_interrupt_in>

08003590 <gpio_irq5>:
 8003590:	2105      	movs	r1, #5
 8003592:	4608      	mov	r0, r1
 8003594:	f7ff bfb8 	b.w	8003508 <handle_interrupt_in>

08003598 <gpio_irq6>:
 8003598:	2106      	movs	r1, #6
 800359a:	4608      	mov	r0, r1
 800359c:	f7ff bfb4 	b.w	8003508 <handle_interrupt_in>

080035a0 <gpio_irq_set>:
 80035a0:	2901      	cmp	r1, #1
 80035a2:	b510      	push	{r4, lr}
 80035a4:	d110      	bne.n	80035c8 <gpio_irq_set+0x28>
 80035a6:	4c14      	ldr	r4, [pc, #80]	; (80035f8 <gpio_irq_set+0x58>)
 80035a8:	8983      	ldrh	r3, [r0, #12]
 80035aa:	b132      	cbz	r2, 80035ba <gpio_irq_set+0x1a>
 80035ac:	68a2      	ldr	r2, [r4, #8]
 80035ae:	f003 030f 	and.w	r3, r3, #15
 80035b2:	4099      	lsls	r1, r3
 80035b4:	4311      	orrs	r1, r2
 80035b6:	60a1      	str	r1, [r4, #8]
 80035b8:	bd10      	pop	{r4, pc}
 80035ba:	68a2      	ldr	r2, [r4, #8]
 80035bc:	f003 030f 	and.w	r3, r3, #15
 80035c0:	4099      	lsls	r1, r3
 80035c2:	ea22 0101 	bic.w	r1, r2, r1
 80035c6:	e7f6      	b.n	80035b6 <gpio_irq_set+0x16>
 80035c8:	2902      	cmp	r1, #2
 80035ca:	d10a      	bne.n	80035e2 <gpio_irq_set+0x42>
 80035cc:	490a      	ldr	r1, [pc, #40]	; (80035f8 <gpio_irq_set+0x58>)
 80035ce:	8983      	ldrh	r3, [r0, #12]
 80035d0:	b142      	cbz	r2, 80035e4 <gpio_irq_set+0x44>
 80035d2:	68c8      	ldr	r0, [r1, #12]
 80035d4:	f003 030f 	and.w	r3, r3, #15
 80035d8:	2201      	movs	r2, #1
 80035da:	fa02 f303 	lsl.w	r3, r2, r3
 80035de:	4303      	orrs	r3, r0
 80035e0:	60cb      	str	r3, [r1, #12]
 80035e2:	bd10      	pop	{r4, pc}
 80035e4:	68ca      	ldr	r2, [r1, #12]
 80035e6:	f003 030f 	and.w	r3, r3, #15
 80035ea:	2001      	movs	r0, #1
 80035ec:	fa00 f303 	lsl.w	r3, r0, r3
 80035f0:	ea22 0303 	bic.w	r3, r2, r3
 80035f4:	e7f4      	b.n	80035e0 <gpio_irq_set+0x40>
 80035f6:	bf00      	nop
 80035f8:	40013c00 	.word	0x40013c00

080035fc <gpio_irq_enable>:
 80035fc:	f9b0 300c 	ldrsh.w	r3, [r0, #12]
 8003600:	b29a      	uxth	r2, r3
 8003602:	f002 010f 	and.w	r1, r2, #15
 8003606:	b570      	push	{r4, r5, r6, lr}
 8003608:	f001 040c 	and.w	r4, r1, #12
 800360c:	f104 4480 	add.w	r4, r4, #1073741824	; 0x40000000
 8003610:	f504 349c 	add.w	r4, r4, #79872	; 0x13800
 8003614:	f002 0203 	and.w	r2, r2, #3
 8003618:	68a5      	ldr	r5, [r4, #8]
 800361a:	0092      	lsls	r2, r2, #2
 800361c:	260f      	movs	r6, #15
 800361e:	4096      	lsls	r6, r2
 8003620:	f3c3 1303 	ubfx	r3, r3, #4, #4
 8003624:	4093      	lsls	r3, r2
 8003626:	ea25 0506 	bic.w	r5, r5, r6
 800362a:	4a09      	ldr	r2, [pc, #36]	; (8003650 <gpio_irq_enable+0x54>)
 800362c:	432b      	orrs	r3, r5
 800362e:	60a3      	str	r3, [r4, #8]
 8003630:	6814      	ldr	r4, [r2, #0]
 8003632:	2301      	movs	r3, #1
 8003634:	fa03 f101 	lsl.w	r1, r3, r1
 8003638:	4321      	orrs	r1, r4
 800363a:	6011      	str	r1, [r2, #0]
 800363c:	f990 2000 	ldrsb.w	r2, [r0]
 8003640:	0951      	lsrs	r1, r2, #5
 8003642:	f002 021f 	and.w	r2, r2, #31
 8003646:	4093      	lsls	r3, r2
 8003648:	4a02      	ldr	r2, [pc, #8]	; (8003654 <gpio_irq_enable+0x58>)
 800364a:	f842 3021 	str.w	r3, [r2, r1, lsl #2]
 800364e:	bd70      	pop	{r4, r5, r6, pc}
 8003650:	40013c00 	.word	0x40013c00
 8003654:	e000e100 	.word	0xe000e100

08003658 <gpio_irq_init>:
 8003658:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, lr}
 800365c:	469b      	mov	r11, r3
 800365e:	1c4b      	adds	r3, r1, #1
 8003660:	b085      	sub	sp, #20
 8003662:	4607      	mov	r7, r0
 8003664:	460c      	mov	r4, r1
 8003666:	4692      	mov	r10, r2
 8003668:	d064      	beq.n	8003734 <gpio_irq_init+0xdc>
 800366a:	2300      	movs	r3, #0
 800366c:	9303      	str	r3, [sp, #12]
 800366e:	4b32      	ldr	r3, [pc, #200]	; (8003738 <gpio_irq_init+0xe0>)
 8003670:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8003672:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8003676:	645a      	str	r2, [r3, #68]	; 0x44
 8003678:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800367a:	4a30      	ldr	r2, [pc, #192]	; (800373c <gpio_irq_init+0xe4>)
 800367c:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8003680:	9303      	str	r3, [sp, #12]
 8003682:	9b03      	ldr	r3, [sp, #12]
 8003684:	f001 080f 	and.w	r8, r1, #15
 8003688:	230c      	movs	r3, #12
 800368a:	fb03 2308 	mla	r3, r3, r8, r2
 800368e:	f3c1 1003 	ubfx	r0, r1, #4, #4
 8003692:	685d      	ldr	r5, [r3, #4]
 8003694:	2d06      	cmp	r5, #6
 8003696:	d845      	bhi.n	8003724 <gpio_irq_init+0xcc>
 8003698:	e8df f005 	tbb	[pc, r5]
 800369c:	3c3a3804 	.word	0x3c3a3804
 80036a0:	403e      	.short	0x403e
 80036a2:	42          	.byte	0x42
 80036a3:	00          	.byte	0x00
 80036a4:	4e26      	ldr	r6, [pc, #152]	; (8003740 <gpio_irq_init+0xe8>)
 80036a6:	9201      	str	r2, [sp, #4]
 80036a8:	f000 f8b4 	bl	8003814 <Set_GPIO_Clock>
 80036ac:	210c      	movs	r1, #12
 80036ae:	9a01      	ldr	r2, [sp, #4]
 80036b0:	81bc      	strh	r4, [r7, #12]
 80036b2:	fb01 f108 	mul.w	r1, r1, r8
 80036b6:	1853      	adds	r3, r2, r1
 80036b8:	f852 e001 	ldr.w	lr, [r2, r1]
 80036bc:	4921      	ldr	r1, [pc, #132]	; (8003744 <gpio_irq_init+0xec>)
 80036be:	f993 c008 	ldrsb.w	r12, [r3, #8]
 80036c2:	f887 c000 	strb.w	r12, [r7]
 80036c6:	224c      	movs	r2, #76	; 0x4c
 80036c8:	436a      	muls	r2, r5
 80036ca:	2401      	movs	r4, #1
 80036cc:	588b      	ldr	r3, [r1, r2]
 80036ce:	607d      	str	r5, [r7, #4]
 80036d0:	fa04 f40e 	lsl.w	r4, r4, lr
 80036d4:	431c      	orrs	r4, r3
 80036d6:	f04f 0900 	mov.w	r9, #0
 80036da:	f8c7 9008 	str.w	r9, [r7, #8]
 80036de:	508c      	str	r4, [r1, r2]
 80036e0:	2213      	movs	r2, #19
 80036e2:	fb02 e505 	mla	r5, r2, r5, lr
 80036e6:	eb01 0285 	add.w	r2, r1, r5, lsl #2
 80036ea:	4631      	mov	r1, r6
 80036ec:	61d0      	str	r0, [r2, #28]
 80036ee:	f8c2 b004 	str.w	r11, [r2, #4]
 80036f2:	f8c2 8034 	str.w	r8, [r2, #52]	; 0x34
 80036f6:	4a14      	ldr	r2, [pc, #80]	; (8003748 <gpio_irq_init+0xf0>)
 80036f8:	4660      	mov	r0, r12
 80036fa:	f8c2 a000 	str.w	r10, [r2]
 80036fe:	f000 ff17 	bl	8004530 <__NVIC_SetVector>
 8003702:	4638      	mov	r0, r7
 8003704:	f7ff ff7a 	bl	80035fc <gpio_irq_enable>
 8003708:	4648      	mov	r0, r9
 800370a:	e010      	b.n	800372e <gpio_irq_init+0xd6>
 800370c:	4e0f      	ldr	r6, [pc, #60]	; (800374c <gpio_irq_init+0xf4>)
 800370e:	e7ca      	b.n	80036a6 <gpio_irq_init+0x4e>
 8003710:	4e0f      	ldr	r6, [pc, #60]	; (8003750 <gpio_irq_init+0xf8>)
 8003712:	e7c8      	b.n	80036a6 <gpio_irq_init+0x4e>
 8003714:	4e0f      	ldr	r6, [pc, #60]	; (8003754 <gpio_irq_init+0xfc>)
 8003716:	e7c6      	b.n	80036a6 <gpio_irq_init+0x4e>
 8003718:	4e0f      	ldr	r6, [pc, #60]	; (8003758 <gpio_irq_init+0x100>)
 800371a:	e7c4      	b.n	80036a6 <gpio_irq_init+0x4e>
 800371c:	4e0f      	ldr	r6, [pc, #60]	; (800375c <gpio_irq_init+0x104>)
 800371e:	e7c2      	b.n	80036a6 <gpio_irq_init+0x4e>
 8003720:	4e0f      	ldr	r6, [pc, #60]	; (8003760 <gpio_irq_init+0x108>)
 8003722:	e7c0      	b.n	80036a6 <gpio_irq_init+0x4e>
 8003724:	480f      	ldr	r0, [pc, #60]	; (8003764 <gpio_irq_init+0x10c>)
 8003726:	f7fe fbcb 	bl	8001ec0 <error>
 800372a:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800372e:	b005      	add	sp, #20
 8003730:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, pc}
 8003734:	4608      	mov	r0, r1
 8003736:	e7fa      	b.n	800372e <gpio_irq_init+0xd6>
 8003738:	40023800 	.word	0x40023800
 800373c:	08007068 	.word	0x08007068
 8003740:	08003569 	.word	0x08003569
 8003744:	20001d3c 	.word	0x20001d3c
 8003748:	20001f50 	.word	0x20001f50
 800374c:	08003571 	.word	0x08003571
 8003750:	08003579 	.word	0x08003579
 8003754:	08003581 	.word	0x08003581
 8003758:	08003589 	.word	0x08003589
 800375c:	08003591 	.word	0x08003591
 8003760:	08003599 	.word	0x08003599
 8003764:	08006f54 	.word	0x08006f54

08003768 <gpio_irq_disable>:
 8003768:	b510      	push	{r4, lr}
 800376a:	8983      	ldrh	r3, [r0, #12]
 800376c:	4c12      	ldr	r4, [pc, #72]	; (80037b8 <gpio_irq_disable+0x50>)
 800376e:	2201      	movs	r2, #1
 8003770:	6821      	ldr	r1, [r4, #0]
 8003772:	f003 030f 	and.w	r3, r3, #15
 8003776:	fa02 f303 	lsl.w	r3, r2, r3
 800377a:	ea21 0303 	bic.w	r3, r1, r3
 800377e:	6023      	str	r3, [r4, #0]
 8003780:	f990 3000 	ldrsb.w	r3, [r0]
 8003784:	4c0d      	ldr	r4, [pc, #52]	; (80037bc <gpio_irq_disable+0x54>)
 8003786:	0959      	lsrs	r1, r3, #5
 8003788:	3120      	adds	r1, #32
 800378a:	f003 031f 	and.w	r3, r3, #31
 800378e:	fa02 f303 	lsl.w	r3, r2, r3
 8003792:	f844 3021 	str.w	r3, [r4, r1, lsl #2]
 8003796:	f3bf 8f4f 	dsb	sy
 800379a:	f3bf 8f6f 	isb	sy
 800379e:	f990 3000 	ldrsb.w	r3, [r0]
 80037a2:	0959      	lsrs	r1, r3, #5
 80037a4:	f003 031f 	and.w	r3, r3, #31
 80037a8:	409a      	lsls	r2, r3
 80037aa:	f101 0360 	add.w	r3, r1, #96	; 0x60
 80037ae:	f844 2023 	str.w	r2, [r4, r3, lsl #2]
 80037b2:	2300      	movs	r3, #0
 80037b4:	6083      	str	r3, [r0, #8]
 80037b6:	bd10      	pop	{r4, pc}
 80037b8:	40013c00 	.word	0x40013c00
 80037bc:	e000e100 	.word	0xe000e100

080037c0 <gpio_irq_free>:
 80037c0:	8983      	ldrh	r3, [r0, #12]
 80037c2:	f003 020f 	and.w	r2, r3, #15
 80037c6:	230c      	movs	r3, #12
 80037c8:	4353      	muls	r3, r2
 80037ca:	4a10      	ldr	r2, [pc, #64]	; (800380c <gpio_irq_free+0x4c>)
 80037cc:	b570      	push	{r4, r5, r6, lr}
 80037ce:	6844      	ldr	r4, [r0, #4]
 80037d0:	58d6      	ldr	r6, [r2, r3]
 80037d2:	f7ff ffc9 	bl	8003768 <gpio_irq_disable>
 80037d6:	214c      	movs	r1, #76	; 0x4c
 80037d8:	4a0d      	ldr	r2, [pc, #52]	; (8003810 <gpio_irq_free+0x50>)
 80037da:	4361      	muls	r1, r4
 80037dc:	2001      	movs	r0, #1
 80037de:	fa00 f506 	lsl.w	r5, r0, r6
 80037e2:	5850      	ldr	r0, [r2, r1]
 80037e4:	2313      	movs	r3, #19
 80037e6:	fb03 6304 	mla	r3, r3, r4, r6
 80037ea:	ea20 0005 	bic.w	r0, r0, r5
 80037ee:	5050      	str	r0, [r2, r1]
 80037f0:	eb02 0083 	add.w	r0, r2, r3, lsl #2
 80037f4:	2100      	movs	r1, #0
 80037f6:	6041      	str	r1, [r0, #4]
 80037f8:	1d98      	adds	r0, r3, #6
 80037fa:	330c      	adds	r3, #12
 80037fc:	eb02 0080 	add.w	r0, r2, r0, lsl #2
 8003800:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8003804:	6041      	str	r1, [r0, #4]
 8003806:	6059      	str	r1, [r3, #4]
 8003808:	bd70      	pop	{r4, r5, r6, pc}
 800380a:	bf00      	nop
 800380c:	08007068 	.word	0x08007068
 8003810:	20001d3c 	.word	0x20001d3c

08003814 <Set_GPIO_Clock>:
 8003814:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8003816:	2300      	movs	r3, #0
 8003818:	2807      	cmp	r0, #7
 800381a:	d855      	bhi.n	80038c8 <Set_GPIO_Clock+0xb4>
 800381c:	e8df f000 	tbb	[pc, r0]
 8003820:	2d201304 	.word	0x2d201304
 8003824:	4754543a 	.word	0x4754543a
 8003828:	9300      	str	r3, [sp, #0]
 800382a:	4b2a      	ldr	r3, [pc, #168]	; (80038d4 <Set_GPIO_Clock+0xc0>)
 800382c:	482a      	ldr	r0, [pc, #168]	; (80038d8 <Set_GPIO_Clock+0xc4>)
 800382e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8003830:	f042 0201 	orr.w	r2, r2, #1
 8003834:	631a      	str	r2, [r3, #48]	; 0x30
 8003836:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003838:	f003 0301 	and.w	r3, r3, #1
 800383c:	9300      	str	r3, [sp, #0]
 800383e:	9b00      	ldr	r3, [sp, #0]
 8003840:	b007      	add	sp, #28
 8003842:	f85d fb04 	ldr.w	pc, [sp], #4
 8003846:	9301      	str	r3, [sp, #4]
 8003848:	4b22      	ldr	r3, [pc, #136]	; (80038d4 <Set_GPIO_Clock+0xc0>)
 800384a:	4824      	ldr	r0, [pc, #144]	; (80038dc <Set_GPIO_Clock+0xc8>)
 800384c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800384e:	f042 0202 	orr.w	r2, r2, #2
 8003852:	631a      	str	r2, [r3, #48]	; 0x30
 8003854:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003856:	f003 0302 	and.w	r3, r3, #2
 800385a:	9301      	str	r3, [sp, #4]
 800385c:	9b01      	ldr	r3, [sp, #4]
 800385e:	e7ef      	b.n	8003840 <Set_GPIO_Clock+0x2c>
 8003860:	9302      	str	r3, [sp, #8]
 8003862:	4b1c      	ldr	r3, [pc, #112]	; (80038d4 <Set_GPIO_Clock+0xc0>)
 8003864:	481e      	ldr	r0, [pc, #120]	; (80038e0 <Set_GPIO_Clock+0xcc>)
 8003866:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8003868:	f042 0204 	orr.w	r2, r2, #4
 800386c:	631a      	str	r2, [r3, #48]	; 0x30
 800386e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003870:	f003 0304 	and.w	r3, r3, #4
 8003874:	9302      	str	r3, [sp, #8]
 8003876:	9b02      	ldr	r3, [sp, #8]
 8003878:	e7e2      	b.n	8003840 <Set_GPIO_Clock+0x2c>
 800387a:	9303      	str	r3, [sp, #12]
 800387c:	4b15      	ldr	r3, [pc, #84]	; (80038d4 <Set_GPIO_Clock+0xc0>)
 800387e:	4819      	ldr	r0, [pc, #100]	; (80038e4 <Set_GPIO_Clock+0xd0>)
 8003880:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8003882:	f042 0208 	orr.w	r2, r2, #8
 8003886:	631a      	str	r2, [r3, #48]	; 0x30
 8003888:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800388a:	f003 0308 	and.w	r3, r3, #8
 800388e:	9303      	str	r3, [sp, #12]
 8003890:	9b03      	ldr	r3, [sp, #12]
 8003892:	e7d5      	b.n	8003840 <Set_GPIO_Clock+0x2c>
 8003894:	9304      	str	r3, [sp, #16]
 8003896:	4b0f      	ldr	r3, [pc, #60]	; (80038d4 <Set_GPIO_Clock+0xc0>)
 8003898:	4813      	ldr	r0, [pc, #76]	; (80038e8 <Set_GPIO_Clock+0xd4>)
 800389a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800389c:	f042 0210 	orr.w	r2, r2, #16
 80038a0:	631a      	str	r2, [r3, #48]	; 0x30
 80038a2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80038a4:	f003 0310 	and.w	r3, r3, #16
 80038a8:	9304      	str	r3, [sp, #16]
 80038aa:	9b04      	ldr	r3, [sp, #16]
 80038ac:	e7c8      	b.n	8003840 <Set_GPIO_Clock+0x2c>
 80038ae:	9305      	str	r3, [sp, #20]
 80038b0:	4b08      	ldr	r3, [pc, #32]	; (80038d4 <Set_GPIO_Clock+0xc0>)
 80038b2:	480e      	ldr	r0, [pc, #56]	; (80038ec <Set_GPIO_Clock+0xd8>)
 80038b4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80038b6:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 80038ba:	631a      	str	r2, [r3, #48]	; 0x30
 80038bc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80038be:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80038c2:	9305      	str	r3, [sp, #20]
 80038c4:	9b05      	ldr	r3, [sp, #20]
 80038c6:	e7bb      	b.n	8003840 <Set_GPIO_Clock+0x2c>
 80038c8:	4809      	ldr	r0, [pc, #36]	; (80038f0 <Set_GPIO_Clock+0xdc>)
 80038ca:	f7fe faf9 	bl	8001ec0 <error>
 80038ce:	2000      	movs	r0, #0
 80038d0:	e7b6      	b.n	8003840 <Set_GPIO_Clock+0x2c>
 80038d2:	bf00      	nop
 80038d4:	40023800 	.word	0x40023800
 80038d8:	40020000 	.word	0x40020000
 80038dc:	40020400 	.word	0x40020400
 80038e0:	40020800 	.word	0x40020800
 80038e4:	40020c00 	.word	0x40020c00
 80038e8:	40021000 	.word	0x40021000
 80038ec:	40021c00 	.word	0x40021c00
 80038f0:	08006f7b 	.word	0x08006f7b

080038f4 <gpio_set>:
 80038f4:	b510      	push	{r4, lr}
 80038f6:	2100      	movs	r1, #0
 80038f8:	4604      	mov	r4, r0
 80038fa:	f004 040f 	and.w	r4, r4, #15
 80038fe:	f000 fa89 	bl	8003e14 <pin_function>
 8003902:	2001      	movs	r0, #1
 8003904:	40a0      	lsls	r0, r4
 8003906:	bd10      	pop	{r4, pc}

08003908 <gpio_init>:
 8003908:	b570      	push	{r4, r5, r6, lr}
 800390a:	4604      	mov	r4, r0
 800390c:	1c4b      	adds	r3, r1, #1
 800390e:	460e      	mov	r6, r1
 8003910:	8221      	strh	r1, [r4, #16]
 8003912:	d016      	beq.n	8003942 <gpio_init+0x3a>
 8003914:	f3c1 1003 	ubfx	r0, r1, #4, #4
 8003918:	f7ff ff7c 	bl	8003814 <Set_GPIO_Clock>
 800391c:	4605      	mov	r5, r0
 800391e:	4630      	mov	r0, r6
 8003920:	f7ff ffe8 	bl	80038f4 <gpio_set>
 8003924:	8a23      	ldrh	r3, [r4, #16]
 8003926:	4a07      	ldr	r2, [pc, #28]	; (8003944 <gpio_init+0x3c>)
 8003928:	6165      	str	r5, [r4, #20]
 800392a:	f003 030f 	and.w	r3, r3, #15
 800392e:	6020      	str	r0, [r4, #0]
 8003930:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8003934:	61a3      	str	r3, [r4, #24]
 8003936:	f105 0310 	add.w	r3, r5, #16
 800393a:	3518      	adds	r5, #24
 800393c:	6063      	str	r3, [r4, #4]
 800393e:	60a5      	str	r5, [r4, #8]
 8003940:	60e5      	str	r5, [r4, #12]
 8003942:	bd70      	pop	{r4, r5, r6, pc}
 8003944:	08006fc8 	.word	0x08006fc8

08003948 <gpio_mode>:
 8003948:	f9b0 0010 	ldrsh.w	r0, [r0, #16]
 800394c:	f000 bae6 	b.w	8003f1c <pin_mode>

08003950 <gpio_dir>:
 8003950:	b510      	push	{r4, lr}
 8003952:	6983      	ldr	r3, [r0, #24]
 8003954:	6944      	ldr	r4, [r0, #20]
 8003956:	b971      	cbnz	r1, 8003976 <gpio_dir+0x26>
 8003958:	6821      	ldr	r1, [r4, #0]
 800395a:	fa93 f2a3 	rbit	r2, r3
 800395e:	fab2 f282 	clz	r2, r2
 8003962:	2003      	movs	r0, #3
 8003964:	0052      	lsls	r2, r2, #1
 8003966:	fa00 f202 	lsl.w	r2, r0, r2
 800396a:	ea21 0202 	bic.w	r2, r1, r2
 800396e:	fa93 f3a3 	rbit	r3, r3
 8003972:	6022      	str	r2, [r4, #0]
 8003974:	bd10      	pop	{r4, pc}
 8003976:	6822      	ldr	r2, [r4, #0]
 8003978:	fa93 f1a3 	rbit	r1, r3
 800397c:	fab1 f181 	clz	r1, r1
 8003980:	fa93 f3a3 	rbit	r3, r3
 8003984:	2003      	movs	r0, #3
 8003986:	0049      	lsls	r1, r1, #1
 8003988:	fa00 f101 	lsl.w	r1, r0, r1
 800398c:	fab3 f383 	clz	r3, r3
 8003990:	ea22 0201 	bic.w	r2, r2, r1
 8003994:	005b      	lsls	r3, r3, #1
 8003996:	2101      	movs	r1, #1
 8003998:	fa01 f303 	lsl.w	r3, r1, r3
 800399c:	4313      	orrs	r3, r2
 800399e:	6023      	str	r3, [r4, #0]
 80039a0:	bd10      	pop	{r4, pc}

080039a2 <hal_sleep>:
 80039a2:	b508      	push	{r3, lr}
 80039a4:	f7ff fd98 	bl	80034d8 <HAL_SuspendTick>
 80039a8:	2101      	movs	r1, #1
 80039aa:	2000      	movs	r0, #0
 80039ac:	f001 f8f0 	bl	8004b90 <HAL_PWR_EnterSLEEPMode>
 80039b0:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80039b4:	f7ff bd9c 	b.w	80034f0 <HAL_ResumeTick>

080039b8 <us_ticker_init>:
 80039b8:	4b05      	ldr	r3, [pc, #20]	; (80039d0 <us_ticker_init+0x18>)
 80039ba:	6818      	ldr	r0, [r3, #0]
 80039bc:	b930      	cbnz	r0, 80039cc <us_ticker_init+0x14>
 80039be:	2201      	movs	r2, #1
 80039c0:	601a      	str	r2, [r3, #0]
 80039c2:	4b04      	ldr	r3, [pc, #16]	; (80039d4 <us_ticker_init+0x1c>)
 80039c4:	4a04      	ldr	r2, [pc, #16]	; (80039d8 <us_ticker_init+0x20>)
 80039c6:	601a      	str	r2, [r3, #0]
 80039c8:	f7ff bd26 	b.w	8003418 <HAL_InitTick>
 80039cc:	4770      	bx	lr
 80039ce:	bf00      	nop
 80039d0:	20001f54 	.word	0x20001f54
 80039d4:	20002d98 	.word	0x20002d98
 80039d8:	40000c00 	.word	0x40000c00

080039dc <us_ticker_read>:
 80039dc:	b508      	push	{r3, lr}
 80039de:	4b04      	ldr	r3, [pc, #16]	; (80039f0 <us_ticker_read+0x14>)
 80039e0:	681b      	ldr	r3, [r3, #0]
 80039e2:	b90b      	cbnz	r3, 80039e8 <us_ticker_read+0xc>
 80039e4:	f7ff ffe8 	bl	80039b8 <us_ticker_init>
 80039e8:	4b02      	ldr	r3, [pc, #8]	; (80039f4 <us_ticker_read+0x18>)
 80039ea:	6a58      	ldr	r0, [r3, #36]	; 0x24
 80039ec:	bd08      	pop	{r3, pc}
 80039ee:	bf00      	nop
 80039f0:	20001f54 	.word	0x20001f54
 80039f4:	40000c00 	.word	0x40000c00

080039f8 <us_ticker_set_interrupt>:
 80039f8:	4b04      	ldr	r3, [pc, #16]	; (8003a0c <us_ticker_set_interrupt+0x14>)
 80039fa:	4a05      	ldr	r2, [pc, #20]	; (8003a10 <us_ticker_set_interrupt+0x18>)
 80039fc:	6013      	str	r3, [r2, #0]
 80039fe:	6358      	str	r0, [r3, #52]	; 0x34
 8003a00:	68da      	ldr	r2, [r3, #12]
 8003a02:	f042 0202 	orr.w	r2, r2, #2
 8003a06:	60da      	str	r2, [r3, #12]
 8003a08:	4770      	bx	lr
 8003a0a:	bf00      	nop
 8003a0c:	40000c00 	.word	0x40000c00
 8003a10:	20002d98 	.word	0x20002d98

08003a14 <us_ticker_disable_interrupt>:
 8003a14:	4b03      	ldr	r3, [pc, #12]	; (8003a24 <us_ticker_disable_interrupt+0x10>)
 8003a16:	4a04      	ldr	r2, [pc, #16]	; (8003a28 <us_ticker_disable_interrupt+0x14>)
 8003a18:	6013      	str	r3, [r2, #0]
 8003a1a:	68da      	ldr	r2, [r3, #12]
 8003a1c:	f022 0202 	bic.w	r2, r2, #2
 8003a20:	60da      	str	r2, [r3, #12]
 8003a22:	4770      	bx	lr
 8003a24:	40000c00 	.word	0x40000c00
 8003a28:	20002d98 	.word	0x20002d98

08003a2c <us_ticker_clear_interrupt>:
 8003a2c:	4a03      	ldr	r2, [pc, #12]	; (8003a3c <us_ticker_clear_interrupt+0x10>)
 8003a2e:	4b04      	ldr	r3, [pc, #16]	; (8003a40 <us_ticker_clear_interrupt+0x14>)
 8003a30:	6013      	str	r3, [r2, #0]
 8003a32:	f06f 0202 	mvn.w	r2, #2
 8003a36:	611a      	str	r2, [r3, #16]
 8003a38:	4770      	bx	lr
 8003a3a:	bf00      	nop
 8003a3c:	20002d98 	.word	0x20002d98
 8003a40:	40000c00 	.word	0x40000c00

08003a44 <pwmout_write>:
 8003a44:	b530      	push	{r4, r5, lr}
 8003a46:	ee07 1a10 	vmov	s14, r1
 8003a4a:	4b28      	ldr	r3, [pc, #160]	; (8003aec <pwmout_write+0xa8>)
 8003a4c:	6802      	ldr	r2, [r0, #0]
 8003a4e:	601a      	str	r2, [r3, #0]
 8003a50:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8003a54:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003a58:	b089      	sub	sp, #36	; 0x24
 8003a5a:	4605      	mov	r5, r0
 8003a5c:	d428      	bmi.n	8003ab0 <pwmout_write+0x6c>
 8003a5e:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 8003a62:	eeb4 7a67 	vcmp.f32	s14, s15
 8003a66:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003a6a:	bfc8      	it	gt
 8003a6c:	eeb0 7a67 	vmovgt.f32	s14, s15
 8003a70:	edd5 7a03 	vldr	s15, [r5, #12]
 8003a74:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8003a78:	2260      	movs	r2, #96	; 0x60
 8003a7a:	ee67 7a87 	vmul.f32	s15, s15, s14
 8003a7e:	9201      	str	r2, [sp, #4]
 8003a80:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8003a84:	68aa      	ldr	r2, [r5, #8]
 8003a86:	edc5 7a04 	vstr	s15, [r5, #16]
 8003a8a:	ee17 3a90 	vmov	r3, s15
 8003a8e:	fbb3 f3f2 	udiv	r3, r3, r2
 8003a92:	9302      	str	r3, [sp, #8]
 8003a94:	2300      	movs	r3, #0
 8003a96:	9303      	str	r3, [sp, #12]
 8003a98:	9305      	str	r3, [sp, #20]
 8003a9a:	9306      	str	r3, [sp, #24]
 8003a9c:	9304      	str	r3, [sp, #16]
 8003a9e:	9307      	str	r3, [sp, #28]
 8003aa0:	7d2b      	ldrb	r3, [r5, #20]
 8003aa2:	3b01      	subs	r3, #1
 8003aa4:	2b03      	cmp	r3, #3
 8003aa6:	d816      	bhi.n	8003ad6 <pwmout_write+0x92>
 8003aa8:	e8df f003 	tbb	[pc, r3]
 8003aac:	1917051b 	.word	0x1917051b
 8003ab0:	ed9f 7a0f 	vldr	s14, [pc, #60]	; 8003af0 <pwmout_write+0xac>
 8003ab4:	e7dc      	b.n	8003a70 <pwmout_write+0x2c>
 8003ab6:	2404      	movs	r4, #4
 8003ab8:	4622      	mov	r2, r4
 8003aba:	a901      	add	r1, sp, #4
 8003abc:	480b      	ldr	r0, [pc, #44]	; (8003aec <pwmout_write+0xa8>)
 8003abe:	f000 fe79 	bl	80047b4 <HAL_TIM_PWM_ConfigChannel>
 8003ac2:	b110      	cbz	r0, 8003aca <pwmout_write+0x86>
 8003ac4:	480b      	ldr	r0, [pc, #44]	; (8003af4 <pwmout_write+0xb0>)
 8003ac6:	f7fe f9fb 	bl	8001ec0 <error>
 8003aca:	7d6b      	ldrb	r3, [r5, #21]
 8003acc:	4807      	ldr	r0, [pc, #28]	; (8003aec <pwmout_write+0xa8>)
 8003ace:	4621      	mov	r1, r4
 8003ad0:	b14b      	cbz	r3, 8003ae6 <pwmout_write+0xa2>
 8003ad2:	f000 ff01 	bl	80048d8 <HAL_TIMEx_PWMN_Start>
 8003ad6:	b009      	add	sp, #36	; 0x24
 8003ad8:	bd30      	pop	{r4, r5, pc}
 8003ada:	2408      	movs	r4, #8
 8003adc:	e7ec      	b.n	8003ab8 <pwmout_write+0x74>
 8003ade:	240c      	movs	r4, #12
 8003ae0:	e7ea      	b.n	8003ab8 <pwmout_write+0x74>
 8003ae2:	2400      	movs	r4, #0
 8003ae4:	e7e8      	b.n	8003ab8 <pwmout_write+0x74>
 8003ae6:	f000 fed3 	bl	8004890 <HAL_TIM_PWM_Start>
 8003aea:	e7f4      	b.n	8003ad6 <pwmout_write+0x92>
 8003aec:	20001f58 	.word	0x20001f58
 8003af0:	00000000 	.word	0x00000000
 8003af4:	08006fb1 	.word	0x08006fb1

08003af8 <pwmout_read>:
 8003af8:	68c3      	ldr	r3, [r0, #12]
 8003afa:	b1ab      	cbz	r3, 8003b28 <pwmout_read+0x30>
 8003afc:	ee07 3a90 	vmov	s15, r3
 8003b00:	edd0 6a04 	vldr	s13, [r0, #16]
 8003b04:	eeb8 7a67 	vcvt.f32.u32	s14, s15
 8003b08:	eef8 6a66 	vcvt.f32.u32	s13, s13
 8003b0c:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8003b10:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8003b14:	eef4 7a47 	vcmp.f32	s15, s14
 8003b18:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003b1c:	bfc8      	it	gt
 8003b1e:	eef0 7a47 	vmovgt.f32	s15, s14
 8003b22:	ee17 0a90 	vmov	r0, s15
 8003b26:	4770      	bx	lr
 8003b28:	eddf 7a01 	vldr	s15, [pc, #4]	; 8003b30 <pwmout_read+0x38>
 8003b2c:	e7f9      	b.n	8003b22 <pwmout_read+0x2a>
 8003b2e:	bf00      	nop
 8003b30:	00000000 	.word	0x00000000

08003b34 <pwmout_period_us>:
 8003b34:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, lr}
 8003b38:	4c4a      	ldr	r4, [pc, #296]	; (8003c64 <pwmout_period_us+0x130>)
 8003b3a:	6802      	ldr	r2, [r0, #0]
 8003b3c:	6022      	str	r2, [r4, #0]
 8003b3e:	b086      	sub	sp, #24
 8003b40:	2300      	movs	r3, #0
 8003b42:	460e      	mov	r6, r1
 8003b44:	9300      	str	r3, [sp, #0]
 8003b46:	4605      	mov	r5, r0
 8003b48:	f7ff ffd6 	bl	8003af8 <pwmout_read>
 8003b4c:	6a11      	ldr	r1, [r2, #32]
 8003b4e:	f241 1311 	movw	r3, #4369	; 0x1111
 8003b52:	4219      	tst	r1, r3
 8003b54:	4607      	mov	r7, r0
 8003b56:	d108      	bne.n	8003b6a <pwmout_period_us+0x36>
 8003b58:	6a11      	ldr	r1, [r2, #32]
 8003b5a:	f240 4344 	movw	r3, #1092	; 0x444
 8003b5e:	4219      	tst	r1, r3
 8003b60:	bf02      	ittt	eq
 8003b62:	6813      	ldreq	r3, [r2, #0]
 8003b64:	f023 0301 	biceq.w	r3, r3, #1
 8003b68:	6013      	streq	r3, [r2, #0]
 8003b6a:	4669      	mov	r1, sp
 8003b6c:	a801      	add	r0, sp, #4
 8003b6e:	f001 faaf 	bl	80050d0 <HAL_RCC_GetClockConfig>
 8003b72:	483d      	ldr	r0, [pc, #244]	; (8003c68 <pwmout_period_us+0x134>)
 8003b74:	6829      	ldr	r1, [r5, #0]
 8003b76:	2300      	movs	r3, #0
 8003b78:	4680      	mov	r8, r0
 8003b7a:	fa5f f983 	uxtb.w	r9, r3
 8003b7e:	3301      	adds	r3, #1
 8003b80:	f850 2039 	ldr.w	r2, [r0, r9, lsl #3]
 8003b84:	428a      	cmp	r2, r1
 8003b86:	d1f8      	bne.n	8003b7a <pwmout_period_us+0x46>
 8003b88:	b911      	cbnz	r1, 8003b90 <pwmout_period_us+0x5c>
 8003b8a:	4838      	ldr	r0, [pc, #224]	; (8003c6c <pwmout_period_us+0x138>)
 8003b8c:	f7fe f998 	bl	8001ec0 <error>
 8003b90:	eb08 08c9 	add.w	r8, r8, r9, lsl #3
 8003b94:	f898 3004 	ldrb.w	r3, [r8, #4]
 8003b98:	bb53      	cbnz	r3, 8003bf0 <pwmout_period_us+0xbc>
 8003b9a:	f001 fa69 	bl	8005070 <HAL_RCC_GetPCLK1Freq>
 8003b9e:	9000      	str	r0, [sp, #0]
 8003ba0:	9804      	ldr	r0, [sp, #16]
 8003ba2:	9900      	ldr	r1, [sp, #0]
 8003ba4:	2301      	movs	r3, #1
 8003ba6:	60ab      	str	r3, [r5, #8]
 8003ba8:	4b31      	ldr	r3, [pc, #196]	; (8003c70 <pwmout_period_us+0x13c>)
 8003baa:	bb30      	cbnz	r0, 8003bfa <pwmout_period_us+0xc6>
 8003bac:	fbb1 f3f3 	udiv	r3, r1, r3
 8003bb0:	3b01      	subs	r3, #1
 8003bb2:	6063      	str	r3, [r4, #4]
 8003bb4:	f106 3cff 	add.w	r12, r6, #4294967295	; 0xffffffff
 8003bb8:	4b2d      	ldr	r3, [pc, #180]	; (8003c70 <pwmout_period_us+0x13c>)
 8003bba:	6862      	ldr	r2, [r4, #4]
 8003bbc:	fbb1 fef3 	udiv	lr, r1, r3
 8003bc0:	ea4f 0841 	mov.w	r8, r1, lsl #1
 8003bc4:	2100      	movs	r1, #0
 8003bc6:	fbb8 f8f3 	udiv	r8, r8, r3
 8003bca:	f8c4 c00c 	str.w	r12, [r4, #12]
 8003bce:	4663      	mov	r3, r12
 8003bd0:	468a      	mov	r10, r1
 8003bd2:	f64f 79fe 	movw	r9, #65534	; 0xfffe
 8003bd6:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8003bda:	d212      	bcs.n	8003c02 <pwmout_period_us+0xce>
 8003bdc:	f5b2 3f80 	cmp.w	r2, #65536	; 0x10000
 8003be0:	d20f      	bcs.n	8003c02 <pwmout_period_us+0xce>
 8003be2:	f1ba 0f00 	cmp.w	r10, #0
 8003be6:	d000      	beq.n	8003bea <pwmout_period_us+0xb6>
 8003be8:	6062      	str	r2, [r4, #4]
 8003bea:	b1f1      	cbz	r1, 8003c2a <pwmout_period_us+0xf6>
 8003bec:	60e3      	str	r3, [r4, #12]
 8003bee:	e01c      	b.n	8003c2a <pwmout_period_us+0xf6>
 8003bf0:	f001 fa56 	bl	80050a0 <HAL_RCC_GetPCLK2Freq>
 8003bf4:	9000      	str	r0, [sp, #0]
 8003bf6:	9805      	ldr	r0, [sp, #20]
 8003bf8:	e7d3      	b.n	8003ba2 <pwmout_period_us+0x6e>
 8003bfa:	004a      	lsls	r2, r1, #1
 8003bfc:	fbb2 f3f3 	udiv	r3, r2, r3
 8003c00:	e7d6      	b.n	8003bb0 <pwmout_period_us+0x7c>
 8003c02:	68ab      	ldr	r3, [r5, #8]
 8003c04:	005b      	lsls	r3, r3, #1
 8003c06:	60ab      	str	r3, [r5, #8]
 8003c08:	bb30      	cbnz	r0, 8003c58 <pwmout_period_us+0x124>
 8003c0a:	fb0e f203 	mul.w	r2, lr, r3
 8003c0e:	fbbc f3f3 	udiv	r3, r12, r3
 8003c12:	454b      	cmp	r3, r9
 8003c14:	f102 32ff 	add.w	r2, r2, #4294967295	; 0xffffffff
 8003c18:	d821      	bhi.n	8003c5e <pwmout_period_us+0x12a>
 8003c1a:	f5b2 3f80 	cmp.w	r2, #65536	; 0x10000
 8003c1e:	d31e      	bcc.n	8003c5e <pwmout_period_us+0x12a>
 8003c20:	4814      	ldr	r0, [pc, #80]	; (8003c74 <pwmout_period_us+0x140>)
 8003c22:	6062      	str	r2, [r4, #4]
 8003c24:	60e3      	str	r3, [r4, #12]
 8003c26:	f7fe f94b 	bl	8001ec0 <error>
 8003c2a:	2300      	movs	r3, #0
 8003c2c:	480d      	ldr	r0, [pc, #52]	; (8003c64 <pwmout_period_us+0x130>)
 8003c2e:	6123      	str	r3, [r4, #16]
 8003c30:	60a3      	str	r3, [r4, #8]
 8003c32:	f000 fd79 	bl	8004728 <HAL_TIM_PWM_Init>
 8003c36:	b110      	cbz	r0, 8003c3e <pwmout_period_us+0x10a>
 8003c38:	480e      	ldr	r0, [pc, #56]	; (8003c74 <pwmout_period_us+0x140>)
 8003c3a:	f7fe f941 	bl	8001ec0 <error>
 8003c3e:	60ee      	str	r6, [r5, #12]
 8003c40:	4639      	mov	r1, r7
 8003c42:	4628      	mov	r0, r5
 8003c44:	f7ff fefe 	bl	8003a44 <pwmout_write>
 8003c48:	6822      	ldr	r2, [r4, #0]
 8003c4a:	6813      	ldr	r3, [r2, #0]
 8003c4c:	f043 0301 	orr.w	r3, r3, #1
 8003c50:	6013      	str	r3, [r2, #0]
 8003c52:	b006      	add	sp, #24
 8003c54:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 8003c58:	fb08 f203 	mul.w	r2, r8, r3
 8003c5c:	e7d7      	b.n	8003c0e <pwmout_period_us+0xda>
 8003c5e:	2101      	movs	r1, #1
 8003c60:	468a      	mov	r10, r1
 8003c62:	e7b8      	b.n	8003bd6 <pwmout_period_us+0xa2>
 8003c64:	20001f58 	.word	0x20001f58
 8003c68:	08007008 	.word	0x08007008
 8003c6c:	08006f9c 	.word	0x08006f9c
 8003c70:	000f4240 	.word	0x000f4240
 8003c74:	08006fb1 	.word	0x08006fb1

08003c78 <pwmout_init>:
 8003c78:	b530      	push	{r4, r5, lr}
 8003c7a:	460d      	mov	r5, r1
 8003c7c:	4604      	mov	r4, r0
 8003c7e:	b089      	sub	sp, #36	; 0x24
 8003c80:	494c      	ldr	r1, [pc, #304]	; (8003db4 <pwmout_init+0x13c>)
 8003c82:	4628      	mov	r0, r5
 8003c84:	f7fe f8aa 	bl	8001ddc <pinmap_peripheral>
 8003c88:	494a      	ldr	r1, [pc, #296]	; (8003db4 <pwmout_init+0x13c>)
 8003c8a:	6020      	str	r0, [r4, #0]
 8003c8c:	4628      	mov	r0, r5
 8003c8e:	f7fe f8c1 	bl	8001e14 <pinmap_function>
 8003c92:	f3c0 3304 	ubfx	r3, r0, #12, #5
 8003c96:	4a48      	ldr	r2, [pc, #288]	; (8003db8 <pwmout_init+0x140>)
 8003c98:	7523      	strb	r3, [r4, #20]
 8003c9a:	6823      	ldr	r3, [r4, #0]
 8003c9c:	f3c0 4040 	ubfx	r0, r0, #17, #1
 8003ca0:	4293      	cmp	r3, r2
 8003ca2:	7560      	strb	r0, [r4, #21]
 8003ca4:	f04f 0200 	mov.w	r2, #0
 8003ca8:	d11a      	bne.n	8003ce0 <pwmout_init+0x68>
 8003caa:	9200      	str	r2, [sp, #0]
 8003cac:	4a43      	ldr	r2, [pc, #268]	; (8003dbc <pwmout_init+0x144>)
 8003cae:	6c51      	ldr	r1, [r2, #68]	; 0x44
 8003cb0:	f041 0101 	orr.w	r1, r1, #1
 8003cb4:	6451      	str	r1, [r2, #68]	; 0x44
 8003cb6:	6c52      	ldr	r2, [r2, #68]	; 0x44
 8003cb8:	f002 0201 	and.w	r2, r2, #1
 8003cbc:	9200      	str	r2, [sp, #0]
 8003cbe:	9a00      	ldr	r2, [sp, #0]
 8003cc0:	4a3f      	ldr	r2, [pc, #252]	; (8003dc0 <pwmout_init+0x148>)
 8003cc2:	4293      	cmp	r3, r2
 8003cc4:	d129      	bne.n	8003d1a <pwmout_init+0xa2>
 8003cc6:	2300      	movs	r3, #0
 8003cc8:	9305      	str	r3, [sp, #20]
 8003cca:	4b3c      	ldr	r3, [pc, #240]	; (8003dbc <pwmout_init+0x144>)
 8003ccc:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8003cce:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 8003cd2:	645a      	str	r2, [r3, #68]	; 0x44
 8003cd4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8003cd6:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8003cda:	9305      	str	r3, [sp, #20]
 8003cdc:	9b05      	ldr	r3, [sp, #20]
 8003cde:	e058      	b.n	8003d92 <pwmout_init+0x11a>
 8003ce0:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8003ce4:	d10b      	bne.n	8003cfe <pwmout_init+0x86>
 8003ce6:	9201      	str	r2, [sp, #4]
 8003ce8:	4a34      	ldr	r2, [pc, #208]	; (8003dbc <pwmout_init+0x144>)
 8003cea:	6c11      	ldr	r1, [r2, #64]	; 0x40
 8003cec:	f041 0101 	orr.w	r1, r1, #1
 8003cf0:	6411      	str	r1, [r2, #64]	; 0x40
 8003cf2:	6c12      	ldr	r2, [r2, #64]	; 0x40
 8003cf4:	f002 0201 	and.w	r2, r2, #1
 8003cf8:	9201      	str	r2, [sp, #4]
 8003cfa:	9a01      	ldr	r2, [sp, #4]
 8003cfc:	e7e0      	b.n	8003cc0 <pwmout_init+0x48>
 8003cfe:	4931      	ldr	r1, [pc, #196]	; (8003dc4 <pwmout_init+0x14c>)
 8003d00:	428b      	cmp	r3, r1
 8003d02:	d11a      	bne.n	8003d3a <pwmout_init+0xc2>
 8003d04:	9202      	str	r2, [sp, #8]
 8003d06:	4a2d      	ldr	r2, [pc, #180]	; (8003dbc <pwmout_init+0x144>)
 8003d08:	6c11      	ldr	r1, [r2, #64]	; 0x40
 8003d0a:	f041 0102 	orr.w	r1, r1, #2
 8003d0e:	6411      	str	r1, [r2, #64]	; 0x40
 8003d10:	6c12      	ldr	r2, [r2, #64]	; 0x40
 8003d12:	f002 0202 	and.w	r2, r2, #2
 8003d16:	9202      	str	r2, [sp, #8]
 8003d18:	9a02      	ldr	r2, [sp, #8]
 8003d1a:	4a2b      	ldr	r2, [pc, #172]	; (8003dc8 <pwmout_init+0x150>)
 8003d1c:	4293      	cmp	r3, r2
 8003d1e:	d11a      	bne.n	8003d56 <pwmout_init+0xde>
 8003d20:	2300      	movs	r3, #0
 8003d22:	9306      	str	r3, [sp, #24]
 8003d24:	4b25      	ldr	r3, [pc, #148]	; (8003dbc <pwmout_init+0x144>)
 8003d26:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8003d28:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8003d2c:	645a      	str	r2, [r3, #68]	; 0x44
 8003d2e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8003d30:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8003d34:	9306      	str	r3, [sp, #24]
 8003d36:	9b06      	ldr	r3, [sp, #24]
 8003d38:	e02b      	b.n	8003d92 <pwmout_init+0x11a>
 8003d3a:	4924      	ldr	r1, [pc, #144]	; (8003dcc <pwmout_init+0x154>)
 8003d3c:	428b      	cmp	r3, r1
 8003d3e:	d11a      	bne.n	8003d76 <pwmout_init+0xfe>
 8003d40:	9203      	str	r2, [sp, #12]
 8003d42:	4a1e      	ldr	r2, [pc, #120]	; (8003dbc <pwmout_init+0x144>)
 8003d44:	6c11      	ldr	r1, [r2, #64]	; 0x40
 8003d46:	f041 0104 	orr.w	r1, r1, #4
 8003d4a:	6411      	str	r1, [r2, #64]	; 0x40
 8003d4c:	6c12      	ldr	r2, [r2, #64]	; 0x40
 8003d4e:	f002 0204 	and.w	r2, r2, #4
 8003d52:	9203      	str	r2, [sp, #12]
 8003d54:	9a03      	ldr	r2, [sp, #12]
 8003d56:	4a1e      	ldr	r2, [pc, #120]	; (8003dd0 <pwmout_init+0x158>)
 8003d58:	4293      	cmp	r3, r2
 8003d5a:	d11a      	bne.n	8003d92 <pwmout_init+0x11a>
 8003d5c:	2300      	movs	r3, #0
 8003d5e:	9307      	str	r3, [sp, #28]
 8003d60:	4b16      	ldr	r3, [pc, #88]	; (8003dbc <pwmout_init+0x144>)
 8003d62:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8003d64:	f442 2280 	orr.w	r2, r2, #262144	; 0x40000
 8003d68:	645a      	str	r2, [r3, #68]	; 0x44
 8003d6a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8003d6c:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 8003d70:	9307      	str	r3, [sp, #28]
 8003d72:	9b07      	ldr	r3, [sp, #28]
 8003d74:	e00d      	b.n	8003d92 <pwmout_init+0x11a>
 8003d76:	4917      	ldr	r1, [pc, #92]	; (8003dd4 <pwmout_init+0x15c>)
 8003d78:	428b      	cmp	r3, r1
 8003d7a:	d1a1      	bne.n	8003cc0 <pwmout_init+0x48>
 8003d7c:	4b0f      	ldr	r3, [pc, #60]	; (8003dbc <pwmout_init+0x144>)
 8003d7e:	9204      	str	r2, [sp, #16]
 8003d80:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8003d82:	f042 0208 	orr.w	r2, r2, #8
 8003d86:	641a      	str	r2, [r3, #64]	; 0x40
 8003d88:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003d8a:	f003 0308 	and.w	r3, r3, #8
 8003d8e:	9304      	str	r3, [sp, #16]
 8003d90:	9b04      	ldr	r3, [sp, #16]
 8003d92:	4908      	ldr	r1, [pc, #32]	; (8003db4 <pwmout_init+0x13c>)
 8003d94:	4628      	mov	r0, r5
 8003d96:	f7fd ffe5 	bl	8001d64 <pinmap_pinout>
 8003d9a:	2300      	movs	r3, #0
 8003d9c:	60e3      	str	r3, [r4, #12]
 8003d9e:	6123      	str	r3, [r4, #16]
 8003da0:	2301      	movs	r3, #1
 8003da2:	80a5      	strh	r5, [r4, #4]
 8003da4:	60a3      	str	r3, [r4, #8]
 8003da6:	f644 6120 	movw	r1, #20000	; 0x4e20
 8003daa:	4620      	mov	r0, r4
 8003dac:	f7ff fec2 	bl	8003b34 <pwmout_period_us>
 8003db0:	b009      	add	sp, #36	; 0x24
 8003db2:	bd30      	pop	{r4, r5, pc}
 8003db4:	08007128 	.word	0x08007128
 8003db8:	40010000 	.word	0x40010000
 8003dbc:	40023800 	.word	0x40023800
 8003dc0:	40014000 	.word	0x40014000
 8003dc4:	40000400 	.word	0x40000400
 8003dc8:	40014400 	.word	0x40014400
 8003dcc:	40000800 	.word	0x40000800
 8003dd0:	40014800 	.word	0x40014800
 8003dd4:	40000c00 	.word	0x40000c00

08003dd8 <LL_GPIO_SetPinPull>:
 8003dd8:	b530      	push	{r4, r5, lr}
 8003dda:	68c3      	ldr	r3, [r0, #12]
 8003ddc:	fa91 f4a1 	rbit	r4, r1
 8003de0:	fab4 f484 	clz	r4, r4
 8003de4:	fa91 f1a1 	rbit	r1, r1
 8003de8:	2503      	movs	r5, #3
 8003dea:	fab1 f181 	clz	r1, r1
 8003dee:	0064      	lsls	r4, r4, #1
 8003df0:	fa05 f404 	lsl.w	r4, r5, r4
 8003df4:	0049      	lsls	r1, r1, #1
 8003df6:	ea23 0304 	bic.w	r3, r3, r4
 8003dfa:	fa02 f101 	lsl.w	r1, r2, r1
 8003dfe:	4319      	orrs	r1, r3
 8003e00:	60c1      	str	r1, [r0, #12]
 8003e02:	bd30      	pop	{r4, r5, pc}

08003e04 <stm_pin_PullConfig>:
 8003e04:	2a01      	cmp	r2, #1
 8003e06:	d002      	beq.n	8003e0e <stm_pin_PullConfig+0xa>
 8003e08:	2a02      	cmp	r2, #2
 8003e0a:	bf18      	it	ne
 8003e0c:	2200      	movne	r2, #0
 8003e0e:	f7ff bfe3 	b.w	8003dd8 <LL_GPIO_SetPinPull>
	...

08003e14 <pin_function>:
 8003e14:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003e18:	4b3f      	ldr	r3, [pc, #252]	; (8003f18 <pin_function+0x104>)
 8003e1a:	f000 080f 	and.w	r8, r0, #15
 8003e1e:	f3c0 1003 	ubfx	r0, r0, #4, #4
 8003e22:	f853 4028 	ldr.w	r4, [r3, r8, lsl #2]
 8003e26:	460e      	mov	r6, r1
 8003e28:	f001 0507 	and.w	r5, r1, #7
 8003e2c:	f7ff fcf2 	bl	8003814 <Set_GPIO_Clock>
 8003e30:	6883      	ldr	r3, [r0, #8]
 8003e32:	fa94 f1a4 	rbit	r1, r4
 8003e36:	fab1 f181 	clz	r1, r1
 8003e3a:	fa94 f2a4 	rbit	r2, r4
 8003e3e:	2703      	movs	r7, #3
 8003e40:	0049      	lsls	r1, r1, #1
 8003e42:	fa07 f101 	lsl.w	r1, r7, r1
 8003e46:	fab2 f282 	clz	r2, r2
 8003e4a:	ea23 0301 	bic.w	r3, r3, r1
 8003e4e:	0052      	lsls	r2, r2, #1
 8003e50:	2102      	movs	r1, #2
 8003e52:	fa01 f202 	lsl.w	r2, r1, r2
 8003e56:	4313      	orrs	r3, r2
 8003e58:	428d      	cmp	r5, r1
 8003e5a:	6083      	str	r3, [r0, #8]
 8003e5c:	d028      	beq.n	8003eb0 <pin_function+0x9c>
 8003e5e:	42bd      	cmp	r5, r7
 8003e60:	d041      	beq.n	8003ee6 <pin_function+0xd2>
 8003e62:	2d01      	cmp	r5, #1
 8003e64:	d03f      	beq.n	8003ee6 <pin_function+0xd2>
 8003e66:	2300      	movs	r3, #0
 8003e68:	6802      	ldr	r2, [r0, #0]
 8003e6a:	fa94 f7a4 	rbit	r7, r4
 8003e6e:	fab7 f787 	clz	r7, r7
 8003e72:	fa94 f1a4 	rbit	r1, r4
 8003e76:	f04f 0e03 	mov.w	lr, #3
 8003e7a:	fab1 f181 	clz	r1, r1
 8003e7e:	007f      	lsls	r7, r7, #1
 8003e80:	fa0e f707 	lsl.w	r7, lr, r7
 8003e84:	0049      	lsls	r1, r1, #1
 8003e86:	ea22 0207 	bic.w	r2, r2, r7
 8003e8a:	408b      	lsls	r3, r1
 8003e8c:	3d01      	subs	r5, #1
 8003e8e:	4313      	orrs	r3, r2
 8003e90:	2d01      	cmp	r5, #1
 8003e92:	6003      	str	r3, [r0, #0]
 8003e94:	d805      	bhi.n	8003ea2 <pin_function+0x8e>
 8003e96:	6843      	ldr	r3, [r0, #4]
 8003e98:	0732      	lsls	r2, r6, #28
 8003e9a:	bf4c      	ite	mi
 8003e9c:	4323      	orrmi	r3, r4
 8003e9e:	43a3      	bicpl	r3, r4
 8003ea0:	6043      	str	r3, [r0, #4]
 8003ea2:	f3c6 1201 	ubfx	r2, r6, #4, #2
 8003ea6:	4621      	mov	r1, r4
 8003ea8:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8003eac:	f7ff bfaa 	b.w	8003e04 <stm_pin_PullConfig>
 8003eb0:	f1b8 0f07 	cmp.w	r8, #7
 8003eb4:	f3c6 2703 	ubfx	r7, r6, #8, #4
 8003eb8:	d917      	bls.n	8003eea <pin_function+0xd6>
 8003eba:	6a42      	ldr	r2, [r0, #36]	; 0x24
 8003ebc:	0a23      	lsrs	r3, r4, #8
 8003ebe:	fa93 f1a3 	rbit	r1, r3
 8003ec2:	fab1 f181 	clz	r1, r1
 8003ec6:	fa93 f3a3 	rbit	r3, r3
 8003eca:	f04f 0e0f 	mov.w	lr, #15
 8003ece:	fab3 f383 	clz	r3, r3
 8003ed2:	0089      	lsls	r1, r1, #2
 8003ed4:	fa0e f101 	lsl.w	r1, lr, r1
 8003ed8:	009b      	lsls	r3, r3, #2
 8003eda:	ea22 0201 	bic.w	r2, r2, r1
 8003ede:	fa07 f303 	lsl.w	r3, r7, r3
 8003ee2:	4313      	orrs	r3, r2
 8003ee4:	6243      	str	r3, [r0, #36]	; 0x24
 8003ee6:	462b      	mov	r3, r5
 8003ee8:	e7be      	b.n	8003e68 <pin_function+0x54>
 8003eea:	6a02      	ldr	r2, [r0, #32]
 8003eec:	fa94 f3a4 	rbit	r3, r4
 8003ef0:	fab3 f383 	clz	r3, r3
 8003ef4:	fa94 f1a4 	rbit	r1, r4
 8003ef8:	f04f 0e0f 	mov.w	lr, #15
 8003efc:	fab1 f181 	clz	r1, r1
 8003f00:	009b      	lsls	r3, r3, #2
 8003f02:	fa0e f303 	lsl.w	r3, lr, r3
 8003f06:	0089      	lsls	r1, r1, #2
 8003f08:	ea22 0203 	bic.w	r2, r2, r3
 8003f0c:	fa07 f301 	lsl.w	r3, r7, r1
 8003f10:	4313      	orrs	r3, r2
 8003f12:	6203      	str	r3, [r0, #32]
 8003f14:	e7e7      	b.n	8003ee6 <pin_function+0xd2>
 8003f16:	bf00      	nop
 8003f18:	08006fc8 	.word	0x08006fc8

08003f1c <pin_mode>:
 8003f1c:	b538      	push	{r3, r4, r5, lr}
 8003f1e:	f000 020f 	and.w	r2, r0, #15
 8003f22:	4b19      	ldr	r3, [pc, #100]	; (8003f88 <pin_mode+0x6c>)
 8003f24:	f3c0 1003 	ubfx	r0, r0, #4, #4
 8003f28:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 8003f2c:	460d      	mov	r5, r1
 8003f2e:	f7ff fc71 	bl	8003814 <Set_GPIO_Clock>
 8003f32:	fb04 f204 	mul.w	r2, r4, r4
 8003f36:	6801      	ldr	r1, [r0, #0]
 8003f38:	eb02 0342 	add.w	r3, r2, r2, lsl #1
 8003f3c:	400b      	ands	r3, r1
 8003f3e:	fbb3 f3f2 	udiv	r3, r3, r2
 8003f42:	3b01      	subs	r3, #1
 8003f44:	2b01      	cmp	r3, #1
 8003f46:	d805      	bhi.n	8003f54 <pin_mode+0x38>
 8003f48:	1eeb      	subs	r3, r5, #3
 8003f4a:	2b02      	cmp	r3, #2
 8003f4c:	6843      	ldr	r3, [r0, #4]
 8003f4e:	d809      	bhi.n	8003f64 <pin_mode+0x48>
 8003f50:	4323      	orrs	r3, r4
 8003f52:	6043      	str	r3, [r0, #4]
 8003f54:	2d03      	cmp	r5, #3
 8003f56:	d108      	bne.n	8003f6a <pin_mode+0x4e>
 8003f58:	2201      	movs	r2, #1
 8003f5a:	4621      	mov	r1, r4
 8003f5c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8003f60:	f7ff bf50 	b.w	8003e04 <stm_pin_PullConfig>
 8003f64:	ea23 0304 	bic.w	r3, r3, r4
 8003f68:	6043      	str	r3, [r0, #4]
 8003f6a:	2d01      	cmp	r5, #1
 8003f6c:	d0f4      	beq.n	8003f58 <pin_mode+0x3c>
 8003f6e:	2d05      	cmp	r5, #5
 8003f70:	d001      	beq.n	8003f76 <pin_mode+0x5a>
 8003f72:	2d02      	cmp	r5, #2
 8003f74:	d101      	bne.n	8003f7a <pin_mode+0x5e>
 8003f76:	2202      	movs	r2, #2
 8003f78:	e7ef      	b.n	8003f5a <pin_mode+0x3e>
 8003f7a:	4621      	mov	r1, r4
 8003f7c:	2200      	movs	r2, #0
 8003f7e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8003f82:	f7ff bf29 	b.w	8003dd8 <LL_GPIO_SetPinPull>
 8003f86:	bf00      	nop
 8003f88:	08006fc8 	.word	0x08006fc8

08003f8c <__NVIC_DisableIRQ>:
 8003f8c:	0943      	lsrs	r3, r0, #5
 8003f8e:	2201      	movs	r2, #1
 8003f90:	f000 001f 	and.w	r0, r0, #31
 8003f94:	fa02 f000 	lsl.w	r0, r2, r0
 8003f98:	3320      	adds	r3, #32
 8003f9a:	4a04      	ldr	r2, [pc, #16]	; (8003fac <__NVIC_DisableIRQ+0x20>)
 8003f9c:	f842 0023 	str.w	r0, [r2, r3, lsl #2]
 8003fa0:	f3bf 8f4f 	dsb	sy
 8003fa4:	f3bf 8f6f 	isb	sy
 8003fa8:	4770      	bx	lr
 8003faa:	bf00      	nop
 8003fac:	e000e100 	.word	0xe000e100

08003fb0 <init_uart>:
 8003fb0:	6842      	ldr	r2, [r0, #4]
 8003fb2:	4916      	ldr	r1, [pc, #88]	; (800400c <init_uart+0x5c>)
 8003fb4:	0192      	lsls	r2, r2, #6
 8003fb6:	b510      	push	{r4, lr}
 8003fb8:	188b      	adds	r3, r1, r2
 8003fba:	6804      	ldr	r4, [r0, #0]
 8003fbc:	508c      	str	r4, [r1, r2]
 8003fbe:	6882      	ldr	r2, [r0, #8]
 8003fc0:	605a      	str	r2, [r3, #4]
 8003fc2:	68c2      	ldr	r2, [r0, #12]
 8003fc4:	609a      	str	r2, [r3, #8]
 8003fc6:	6902      	ldr	r2, [r0, #16]
 8003fc8:	60da      	str	r2, [r3, #12]
 8003fca:	6942      	ldr	r2, [r0, #20]
 8003fcc:	611a      	str	r2, [r3, #16]
 8003fce:	6a02      	ldr	r2, [r0, #32]
 8003fd0:	619a      	str	r2, [r3, #24]
 8003fd2:	2200      	movs	r2, #0
 8003fd4:	61da      	str	r2, [r3, #28]
 8003fd6:	84da      	strh	r2, [r3, #38]	; 0x26
 8003fd8:	849a      	strh	r2, [r3, #36]	; 0x24
 8003fda:	85da      	strh	r2, [r3, #46]	; 0x2e
 8003fdc:	859a      	strh	r2, [r3, #44]	; 0x2c
 8003fde:	f9b0 201a 	ldrsh.w	r2, [r0, #26]
 8003fe2:	3201      	adds	r2, #1
 8003fe4:	d10a      	bne.n	8003ffc <init_uart+0x4c>
 8003fe6:	2208      	movs	r2, #8
 8003fe8:	615a      	str	r2, [r3, #20]
 8003fea:	4618      	mov	r0, r3
 8003fec:	f000 fda1 	bl	8004b32 <HAL_UART_Init>
 8003ff0:	b158      	cbz	r0, 800400a <init_uart+0x5a>
 8003ff2:	4807      	ldr	r0, [pc, #28]	; (8004010 <init_uart+0x60>)
 8003ff4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8003ff8:	f7fd bf62 	b.w	8001ec0 <error>
 8003ffc:	f9b0 2018 	ldrsh.w	r2, [r0, #24]
 8004000:	3201      	adds	r2, #1
 8004002:	bf0c      	ite	eq
 8004004:	2204      	moveq	r2, #4
 8004006:	220c      	movne	r2, #12
 8004008:	e7ee      	b.n	8003fe8 <init_uart+0x38>
 800400a:	bd10      	pop	{r4, pc}
 800400c:	20001fbc 	.word	0x20001fbc
 8004010:	08007050 	.word	0x08007050

08004014 <uart_irq>:
 8004014:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8004016:	4e19      	ldr	r6, [pc, #100]	; (800407c <uart_irq+0x68>)
 8004018:	4607      	mov	r7, r0
 800401a:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 800401e:	2800      	cmp	r0, #0
 8004020:	d02a      	beq.n	8004078 <uart_irq+0x64>
 8004022:	4c17      	ldr	r4, [pc, #92]	; (8004080 <uart_irq+0x6c>)
 8004024:	01bd      	lsls	r5, r7, #6
 8004026:	5963      	ldr	r3, [r4, r5]
 8004028:	681a      	ldr	r2, [r3, #0]
 800402a:	0652      	lsls	r2, r2, #25
 800402c:	d50a      	bpl.n	8004044 <uart_irq+0x30>
 800402e:	68db      	ldr	r3, [r3, #12]
 8004030:	0659      	lsls	r1, r3, #25
 8004032:	d507      	bpl.n	8004044 <uart_irq+0x30>
 8004034:	4b13      	ldr	r3, [pc, #76]	; (8004084 <uart_irq+0x70>)
 8004036:	2101      	movs	r1, #1
 8004038:	681b      	ldr	r3, [r3, #0]
 800403a:	4798      	blx	r3
 800403c:	5963      	ldr	r3, [r4, r5]
 800403e:	f06f 0240 	mvn.w	r2, #64	; 0x40
 8004042:	601a      	str	r2, [r3, #0]
 8004044:	5963      	ldr	r3, [r4, r5]
 8004046:	681a      	ldr	r2, [r3, #0]
 8004048:	0692      	lsls	r2, r2, #26
 800404a:	d50c      	bpl.n	8004066 <uart_irq+0x52>
 800404c:	68db      	ldr	r3, [r3, #12]
 800404e:	0698      	lsls	r0, r3, #26
 8004050:	d509      	bpl.n	8004066 <uart_irq+0x52>
 8004052:	4b0c      	ldr	r3, [pc, #48]	; (8004084 <uart_irq+0x70>)
 8004054:	f856 0027 	ldr.w	r0, [r6, r7, lsl #2]
 8004058:	681b      	ldr	r3, [r3, #0]
 800405a:	2100      	movs	r1, #0
 800405c:	4798      	blx	r3
 800405e:	5963      	ldr	r3, [r4, r5]
 8004060:	f06f 0220 	mvn.w	r2, #32
 8004064:	601a      	str	r2, [r3, #0]
 8004066:	5963      	ldr	r3, [r4, r5]
 8004068:	681a      	ldr	r2, [r3, #0]
 800406a:	0711      	lsls	r1, r2, #28
 800406c:	d504      	bpl.n	8004078 <uart_irq+0x64>
 800406e:	695a      	ldr	r2, [r3, #20]
 8004070:	07d2      	lsls	r2, r2, #31
 8004072:	bf44      	itt	mi
 8004074:	685b      	ldrmi	r3, [r3, #4]
 8004076:	9301      	strmi	r3, [sp, #4]
 8004078:	b003      	add	sp, #12
 800407a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800407c:	20001f98 	.word	0x20001f98
 8004080:	20001fbc 	.word	0x20001fbc
 8004084:	20001f94 	.word	0x20001f94

08004088 <uart1_irq>:
 8004088:	2000      	movs	r0, #0
 800408a:	f7ff bfc3 	b.w	8004014 <uart_irq>

0800408e <uart2_irq>:
 800408e:	2001      	movs	r0, #1
 8004090:	f7ff bfc0 	b.w	8004014 <uart_irq>

08004094 <uart6_irq>:
 8004094:	2005      	movs	r0, #5
 8004096:	f7ff bfbd 	b.w	8004014 <uart_irq>
	...

0800409c <serial_init>:
 800409c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800409e:	460e      	mov	r6, r1
 80040a0:	b085      	sub	sp, #20
 80040a2:	4604      	mov	r4, r0
 80040a4:	4945      	ldr	r1, [pc, #276]	; (80041bc <serial_init+0x120>)
 80040a6:	4630      	mov	r0, r6
 80040a8:	4615      	mov	r5, r2
 80040aa:	f7fd fe97 	bl	8001ddc <pinmap_peripheral>
 80040ae:	4944      	ldr	r1, [pc, #272]	; (80041c0 <serial_init+0x124>)
 80040b0:	4607      	mov	r7, r0
 80040b2:	4628      	mov	r0, r5
 80040b4:	f7fd fe92 	bl	8001ddc <pinmap_peripheral>
 80040b8:	4601      	mov	r1, r0
 80040ba:	4638      	mov	r0, r7
 80040bc:	f7fd fe70 	bl	8001da0 <pinmap_merge>
 80040c0:	4b40      	ldr	r3, [pc, #256]	; (80041c4 <serial_init+0x128>)
 80040c2:	6020      	str	r0, [r4, #0]
 80040c4:	4298      	cmp	r0, r3
 80040c6:	d01e      	beq.n	8004106 <serial_init+0x6a>
 80040c8:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80040cc:	4298      	cmp	r0, r3
 80040ce:	d05e      	beq.n	800418e <serial_init+0xf2>
 80040d0:	f5a3 4350 	sub.w	r3, r3, #53248	; 0xd000
 80040d4:	4298      	cmp	r0, r3
 80040d6:	d12b      	bne.n	8004130 <serial_init+0x94>
 80040d8:	4b3b      	ldr	r3, [pc, #236]	; (80041c8 <serial_init+0x12c>)
 80040da:	6a1a      	ldr	r2, [r3, #32]
 80040dc:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 80040e0:	621a      	str	r2, [r3, #32]
 80040e2:	6a1a      	ldr	r2, [r3, #32]
 80040e4:	f422 3200 	bic.w	r2, r2, #131072	; 0x20000
 80040e8:	621a      	str	r2, [r3, #32]
 80040ea:	2200      	movs	r2, #0
 80040ec:	9202      	str	r2, [sp, #8]
 80040ee:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80040f0:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 80040f4:	641a      	str	r2, [r3, #64]	; 0x40
 80040f6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80040f8:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80040fc:	9302      	str	r3, [sp, #8]
 80040fe:	9b02      	ldr	r3, [sp, #8]
 8004100:	2301      	movs	r3, #1
 8004102:	6063      	str	r3, [r4, #4]
 8004104:	e014      	b.n	8004130 <serial_init+0x94>
 8004106:	4b30      	ldr	r3, [pc, #192]	; (80041c8 <serial_init+0x12c>)
 8004108:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 800410a:	f042 0210 	orr.w	r2, r2, #16
 800410e:	625a      	str	r2, [r3, #36]	; 0x24
 8004110:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8004112:	2100      	movs	r1, #0
 8004114:	f022 0210 	bic.w	r2, r2, #16
 8004118:	625a      	str	r2, [r3, #36]	; 0x24
 800411a:	9101      	str	r1, [sp, #4]
 800411c:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 800411e:	f042 0210 	orr.w	r2, r2, #16
 8004122:	645a      	str	r2, [r3, #68]	; 0x44
 8004124:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8004126:	6061      	str	r1, [r4, #4]
 8004128:	f003 0310 	and.w	r3, r3, #16
 800412c:	9301      	str	r3, [sp, #4]
 800412e:	9b01      	ldr	r3, [sp, #4]
 8004130:	4922      	ldr	r1, [pc, #136]	; (80041bc <serial_init+0x120>)
 8004132:	4630      	mov	r0, r6
 8004134:	f7fd fe16 	bl	8001d64 <pinmap_pinout>
 8004138:	4921      	ldr	r1, [pc, #132]	; (80041c0 <serial_init+0x124>)
 800413a:	4628      	mov	r0, r5
 800413c:	f7fd fe12 	bl	8001d64 <pinmap_pinout>
 8004140:	1c72      	adds	r2, r6, #1
 8004142:	d003      	beq.n	800414c <serial_init+0xb0>
 8004144:	2101      	movs	r1, #1
 8004146:	4630      	mov	r0, r6
 8004148:	f7ff fee8 	bl	8003f1c <pin_mode>
 800414c:	1c6b      	adds	r3, r5, #1
 800414e:	d003      	beq.n	8004158 <serial_init+0xbc>
 8004150:	2101      	movs	r1, #1
 8004152:	4628      	mov	r0, r5
 8004154:	f7ff fee2 	bl	8003f1c <pin_mode>
 8004158:	f44f 5316 	mov.w	r3, #9600	; 0x2580
 800415c:	60a3      	str	r3, [r4, #8]
 800415e:	2300      	movs	r3, #0
 8004160:	60e3      	str	r3, [r4, #12]
 8004162:	6123      	str	r3, [r4, #16]
 8004164:	6163      	str	r3, [r4, #20]
 8004166:	6223      	str	r3, [r4, #32]
 8004168:	8326      	strh	r6, [r4, #24]
 800416a:	8365      	strh	r5, [r4, #26]
 800416c:	4620      	mov	r0, r4
 800416e:	f7ff ff1f 	bl	8003fb0 <init_uart>
 8004172:	6822      	ldr	r2, [r4, #0]
 8004174:	4b15      	ldr	r3, [pc, #84]	; (80041cc <serial_init+0x130>)
 8004176:	429a      	cmp	r2, r3
 8004178:	d107      	bne.n	800418a <serial_init+0xee>
 800417a:	4b15      	ldr	r3, [pc, #84]	; (80041d0 <serial_init+0x134>)
 800417c:	4815      	ldr	r0, [pc, #84]	; (80041d4 <serial_init+0x138>)
 800417e:	2201      	movs	r2, #1
 8004180:	601a      	str	r2, [r3, #0]
 8004182:	4621      	mov	r1, r4
 8004184:	224c      	movs	r2, #76	; 0x4c
 8004186:	f001 ff1b 	bl	8005fc0 <memcpy>
 800418a:	b005      	add	sp, #20
 800418c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800418e:	4b0e      	ldr	r3, [pc, #56]	; (80041c8 <serial_init+0x12c>)
 8004190:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8004192:	f042 0220 	orr.w	r2, r2, #32
 8004196:	625a      	str	r2, [r3, #36]	; 0x24
 8004198:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 800419a:	f022 0220 	bic.w	r2, r2, #32
 800419e:	625a      	str	r2, [r3, #36]	; 0x24
 80041a0:	2200      	movs	r2, #0
 80041a2:	9203      	str	r2, [sp, #12]
 80041a4:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 80041a6:	f042 0220 	orr.w	r2, r2, #32
 80041aa:	645a      	str	r2, [r3, #68]	; 0x44
 80041ac:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80041ae:	f003 0320 	and.w	r3, r3, #32
 80041b2:	9303      	str	r3, [sp, #12]
 80041b4:	9b03      	ldr	r3, [sp, #12]
 80041b6:	2305      	movs	r3, #5
 80041b8:	e7a3      	b.n	8004102 <serial_init+0x66>
 80041ba:	bf00      	nop
 80041bc:	080072cc 	.word	0x080072cc
 80041c0:	08007278 	.word	0x08007278
 80041c4:	40011000 	.word	0x40011000
 80041c8:	40023800 	.word	0x40023800
 80041cc:	40004400 	.word	0x40004400
 80041d0:	20001fb8 	.word	0x20001fb8
 80041d4:	20002dd4 	.word	0x20002dd4

080041d8 <serial_baud>:
 80041d8:	6081      	str	r1, [r0, #8]
 80041da:	f7ff bee9 	b.w	8003fb0 <init_uart>
	...

080041e0 <serial_irq_handler>:
 80041e0:	4b03      	ldr	r3, [pc, #12]	; (80041f0 <serial_irq_handler+0x10>)
 80041e2:	6019      	str	r1, [r3, #0]
 80041e4:	6841      	ldr	r1, [r0, #4]
 80041e6:	4b03      	ldr	r3, [pc, #12]	; (80041f4 <serial_irq_handler+0x14>)
 80041e8:	f843 2021 	str.w	r2, [r3, r1, lsl #2]
 80041ec:	4770      	bx	lr
 80041ee:	bf00      	nop
 80041f0:	20001f94 	.word	0x20001f94
 80041f4:	20001f98 	.word	0x20001f98

080041f8 <serial_irq_set>:
 80041f8:	b538      	push	{r3, r4, r5, lr}
 80041fa:	6843      	ldr	r3, [r0, #4]
 80041fc:	2b01      	cmp	r3, #1
 80041fe:	460d      	mov	r5, r1
 8004200:	d01a      	beq.n	8004238 <serial_irq_set+0x40>
 8004202:	2b05      	cmp	r3, #5
 8004204:	d01b      	beq.n	800423e <serial_irq_set+0x46>
 8004206:	b9eb      	cbnz	r3, 8004244 <serial_irq_set+0x4c>
 8004208:	491c      	ldr	r1, [pc, #112]	; (800427c <serial_irq_set+0x84>)
 800420a:	2425      	movs	r4, #37	; 0x25
 800420c:	481c      	ldr	r0, [pc, #112]	; (8004280 <serial_irq_set+0x88>)
 800420e:	019b      	lsls	r3, r3, #6
 8004210:	b1f2      	cbz	r2, 8004250 <serial_irq_set+0x58>
 8004212:	58c2      	ldr	r2, [r0, r3]
 8004214:	68d3      	ldr	r3, [r2, #12]
 8004216:	b9c5      	cbnz	r5, 800424a <serial_irq_set+0x52>
 8004218:	f043 0320 	orr.w	r3, r3, #32
 800421c:	60d3      	str	r3, [r2, #12]
 800421e:	4620      	mov	r0, r4
 8004220:	f000 f986 	bl	8004530 <__NVIC_SetVector>
 8004224:	0962      	lsrs	r2, r4, #5
 8004226:	2301      	movs	r3, #1
 8004228:	f004 0407 	and.w	r4, r4, #7
 800422c:	fa03 f404 	lsl.w	r4, r3, r4
 8004230:	4b14      	ldr	r3, [pc, #80]	; (8004284 <serial_irq_set+0x8c>)
 8004232:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 8004236:	bd38      	pop	{r3, r4, r5, pc}
 8004238:	4913      	ldr	r1, [pc, #76]	; (8004288 <serial_irq_set+0x90>)
 800423a:	2426      	movs	r4, #38	; 0x26
 800423c:	e7e6      	b.n	800420c <serial_irq_set+0x14>
 800423e:	4913      	ldr	r1, [pc, #76]	; (800428c <serial_irq_set+0x94>)
 8004240:	2447      	movs	r4, #71	; 0x47
 8004242:	e7e3      	b.n	800420c <serial_irq_set+0x14>
 8004244:	2100      	movs	r1, #0
 8004246:	460c      	mov	r4, r1
 8004248:	e7e0      	b.n	800420c <serial_irq_set+0x14>
 800424a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800424e:	e7e5      	b.n	800421c <serial_irq_set+0x24>
 8004250:	58c3      	ldr	r3, [r0, r3]
 8004252:	68da      	ldr	r2, [r3, #12]
 8004254:	b935      	cbnz	r5, 8004264 <serial_irq_set+0x6c>
 8004256:	f022 0220 	bic.w	r2, r2, #32
 800425a:	60da      	str	r2, [r3, #12]
 800425c:	68db      	ldr	r3, [r3, #12]
 800425e:	061a      	lsls	r2, r3, #24
 8004260:	d506      	bpl.n	8004270 <serial_irq_set+0x78>
 8004262:	bd38      	pop	{r3, r4, r5, pc}
 8004264:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8004268:	60da      	str	r2, [r3, #12]
 800426a:	68db      	ldr	r3, [r3, #12]
 800426c:	069b      	lsls	r3, r3, #26
 800426e:	d404      	bmi.n	800427a <serial_irq_set+0x82>
 8004270:	4620      	mov	r0, r4
 8004272:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8004276:	f7ff be89 	b.w	8003f8c <__NVIC_DisableIRQ>
 800427a:	bd38      	pop	{r3, r4, r5, pc}
 800427c:	08004089 	.word	0x08004089
 8004280:	20001fbc 	.word	0x20001fbc
 8004284:	e000e100 	.word	0xe000e100
 8004288:	0800408f 	.word	0x0800408f
 800428c:	08004095 	.word	0x08004095

08004290 <serial_readable>:
 8004290:	6843      	ldr	r3, [r0, #4]
 8004292:	4a03      	ldr	r2, [pc, #12]	; (80042a0 <serial_readable+0x10>)
 8004294:	019b      	lsls	r3, r3, #6
 8004296:	58d3      	ldr	r3, [r2, r3]
 8004298:	6818      	ldr	r0, [r3, #0]
 800429a:	f3c0 1040 	ubfx	r0, r0, #5, #1
 800429e:	4770      	bx	lr
 80042a0:	20001fbc 	.word	0x20001fbc

080042a4 <serial_getc>:
 80042a4:	6841      	ldr	r1, [r0, #4]
 80042a6:	b510      	push	{r4, lr}
 80042a8:	4604      	mov	r4, r0
 80042aa:	4620      	mov	r0, r4
 80042ac:	f7ff fff0 	bl	8004290 <serial_readable>
 80042b0:	2800      	cmp	r0, #0
 80042b2:	d0fa      	beq.n	80042aa <serial_getc+0x6>
 80042b4:	0189      	lsls	r1, r1, #6
 80042b6:	4b03      	ldr	r3, [pc, #12]	; (80042c4 <serial_getc+0x20>)
 80042b8:	585b      	ldr	r3, [r3, r1]
 80042ba:	6858      	ldr	r0, [r3, #4]
 80042bc:	f3c0 0008 	ubfx	r0, r0, #0, #9
 80042c0:	bd10      	pop	{r4, pc}
 80042c2:	bf00      	nop
 80042c4:	20001fbc 	.word	0x20001fbc

080042c8 <serial_writable>:
 80042c8:	6843      	ldr	r3, [r0, #4]
 80042ca:	4a03      	ldr	r2, [pc, #12]	; (80042d8 <serial_writable+0x10>)
 80042cc:	019b      	lsls	r3, r3, #6
 80042ce:	58d3      	ldr	r3, [r2, r3]
 80042d0:	6818      	ldr	r0, [r3, #0]
 80042d2:	f3c0 10c0 	ubfx	r0, r0, #7, #1
 80042d6:	4770      	bx	lr
 80042d8:	20001fbc 	.word	0x20001fbc

080042dc <serial_putc>:
 80042dc:	b538      	push	{r3, r4, r5, lr}
 80042de:	6844      	ldr	r4, [r0, #4]
 80042e0:	4605      	mov	r5, r0
 80042e2:	4628      	mov	r0, r5
 80042e4:	f7ff fff0 	bl	80042c8 <serial_writable>
 80042e8:	2800      	cmp	r0, #0
 80042ea:	d0fa      	beq.n	80042e2 <serial_putc+0x6>
 80042ec:	01a4      	lsls	r4, r4, #6
 80042ee:	4b03      	ldr	r3, [pc, #12]	; (80042fc <serial_putc+0x20>)
 80042f0:	591b      	ldr	r3, [r3, r4]
 80042f2:	f3c1 0108 	ubfx	r1, r1, #0, #9
 80042f6:	6059      	str	r1, [r3, #4]
 80042f8:	bd38      	pop	{r3, r4, r5, pc}
 80042fa:	bf00      	nop
 80042fc:	20001fbc 	.word	0x20001fbc

08004300 <mbed_sdk_init>:
 8004300:	b508      	push	{r3, lr}
 8004302:	f000 f819 	bl	8004338 <SystemCoreClockUpdate>
 8004306:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800430a:	f000 bf01 	b.w	8005110 <HAL_Init>

0800430e <SetSysClock_PLL_HSE.part.0>:
 800430e:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8004310:	230f      	movs	r3, #15
 8004312:	9301      	str	r3, [sp, #4]
 8004314:	2302      	movs	r3, #2
 8004316:	9302      	str	r3, [sp, #8]
 8004318:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 800431c:	2300      	movs	r3, #0
 800431e:	2103      	movs	r1, #3
 8004320:	a801      	add	r0, sp, #4
 8004322:	9303      	str	r3, [sp, #12]
 8004324:	9204      	str	r2, [sp, #16]
 8004326:	9305      	str	r3, [sp, #20]
 8004328:	f000 fdec 	bl	8004f04 <HAL_RCC_ClockConfig>
 800432c:	fab0 f080 	clz	r0, r0
 8004330:	0940      	lsrs	r0, r0, #5
 8004332:	b007      	add	sp, #28
 8004334:	f85d fb04 	ldr.w	pc, [sp], #4

08004338 <SystemCoreClockUpdate>:
 8004338:	4a17      	ldr	r2, [pc, #92]	; (8004398 <SystemCoreClockUpdate+0x60>)
 800433a:	4918      	ldr	r1, [pc, #96]	; (800439c <SystemCoreClockUpdate+0x64>)
 800433c:	6893      	ldr	r3, [r2, #8]
 800433e:	f003 030c 	and.w	r3, r3, #12
 8004342:	2b04      	cmp	r3, #4
 8004344:	b510      	push	{r4, lr}
 8004346:	d00d      	beq.n	8004364 <SystemCoreClockUpdate+0x2c>
 8004348:	2b08      	cmp	r3, #8
 800434a:	d00d      	beq.n	8004368 <SystemCoreClockUpdate+0x30>
 800434c:	4b14      	ldr	r3, [pc, #80]	; (80043a0 <SystemCoreClockUpdate+0x68>)
 800434e:	600b      	str	r3, [r1, #0]
 8004350:	4b11      	ldr	r3, [pc, #68]	; (8004398 <SystemCoreClockUpdate+0x60>)
 8004352:	4a14      	ldr	r2, [pc, #80]	; (80043a4 <SystemCoreClockUpdate+0x6c>)
 8004354:	689b      	ldr	r3, [r3, #8]
 8004356:	f3c3 1303 	ubfx	r3, r3, #4, #4
 800435a:	5cd2      	ldrb	r2, [r2, r3]
 800435c:	680b      	ldr	r3, [r1, #0]
 800435e:	40d3      	lsrs	r3, r2
 8004360:	600b      	str	r3, [r1, #0]
 8004362:	bd10      	pop	{r4, pc}
 8004364:	4b10      	ldr	r3, [pc, #64]	; (80043a8 <SystemCoreClockUpdate+0x70>)
 8004366:	e7f2      	b.n	800434e <SystemCoreClockUpdate+0x16>
 8004368:	6854      	ldr	r4, [r2, #4]
 800436a:	6850      	ldr	r0, [r2, #4]
 800436c:	6852      	ldr	r2, [r2, #4]
 800436e:	0263      	lsls	r3, r4, #9
 8004370:	f3c2 1288 	ubfx	r2, r2, #6, #9
 8004374:	f000 003f 	and.w	r0, r0, #63	; 0x3f
 8004378:	bf4c      	ite	mi
 800437a:	4b0b      	ldrmi	r3, [pc, #44]	; (80043a8 <SystemCoreClockUpdate+0x70>)
 800437c:	4b08      	ldrpl	r3, [pc, #32]	; (80043a0 <SystemCoreClockUpdate+0x68>)
 800437e:	fbb3 f3f0 	udiv	r3, r3, r0
 8004382:	4353      	muls	r3, r2
 8004384:	4a04      	ldr	r2, [pc, #16]	; (8004398 <SystemCoreClockUpdate+0x60>)
 8004386:	6852      	ldr	r2, [r2, #4]
 8004388:	f3c2 4201 	ubfx	r2, r2, #16, #2
 800438c:	3201      	adds	r2, #1
 800438e:	0052      	lsls	r2, r2, #1
 8004390:	fbb3 f3f2 	udiv	r3, r3, r2
 8004394:	e7db      	b.n	800434e <SystemCoreClockUpdate+0x16>
 8004396:	bf00      	nop
 8004398:	40023800 	.word	0x40023800
 800439c:	200001b4 	.word	0x200001b4
 80043a0:	00f42400 	.word	0x00f42400
 80043a4:	08007320 	.word	0x08007320
 80043a8:	007a1200 	.word	0x007a1200

080043ac <SetSysClock_PLL_HSE>:
 80043ac:	b500      	push	{lr}
 80043ae:	b08f      	sub	sp, #60	; 0x3c
 80043b0:	4b1b      	ldr	r3, [pc, #108]	; (8004420 <SetSysClock_PLL_HSE+0x74>)
 80043b2:	2100      	movs	r1, #0
 80043b4:	9100      	str	r1, [sp, #0]
 80043b6:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80043b8:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 80043bc:	641a      	str	r2, [r3, #64]	; 0x40
 80043be:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80043c0:	4a18      	ldr	r2, [pc, #96]	; (8004424 <SetSysClock_PLL_HSE+0x78>)
 80043c2:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80043c6:	9300      	str	r3, [sp, #0]
 80043c8:	9b00      	ldr	r3, [sp, #0]
 80043ca:	9101      	str	r1, [sp, #4]
 80043cc:	6813      	ldr	r3, [r2, #0]
 80043ce:	f423 4340 	bic.w	r3, r3, #49152	; 0xc000
 80043d2:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 80043d6:	6013      	str	r3, [r2, #0]
 80043d8:	6813      	ldr	r3, [r2, #0]
 80043da:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 80043de:	9301      	str	r3, [sp, #4]
 80043e0:	9b01      	ldr	r3, [sp, #4]
 80043e2:	2301      	movs	r3, #1
 80043e4:	9302      	str	r3, [sp, #8]
 80043e6:	b9b0      	cbnz	r0, 8004416 <SetSysClock_PLL_HSE+0x6a>
 80043e8:	9303      	str	r3, [sp, #12]
 80043ea:	2302      	movs	r3, #2
 80043ec:	9308      	str	r3, [sp, #32]
 80043ee:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
 80043f2:	9309      	str	r3, [sp, #36]	; 0x24
 80043f4:	2304      	movs	r3, #4
 80043f6:	930a      	str	r3, [sp, #40]	; 0x28
 80043f8:	930c      	str	r3, [sp, #48]	; 0x30
 80043fa:	2308      	movs	r3, #8
 80043fc:	22c0      	movs	r2, #192	; 0xc0
 80043fe:	eb0d 0003 	add.w	r0, sp, r3
 8004402:	920b      	str	r2, [sp, #44]	; 0x2c
 8004404:	930d      	str	r3, [sp, #52]	; 0x34
 8004406:	f000 fbd3 	bl	8004bb0 <HAL_RCC_OscConfig>
 800440a:	b930      	cbnz	r0, 800441a <SetSysClock_PLL_HSE+0x6e>
 800440c:	f7ff ff7f 	bl	800430e <SetSysClock_PLL_HSE.part.0>
 8004410:	b00f      	add	sp, #60	; 0x3c
 8004412:	f85d fb04 	ldr.w	pc, [sp], #4
 8004416:	2305      	movs	r3, #5
 8004418:	e7e6      	b.n	80043e8 <SetSysClock_PLL_HSE+0x3c>
 800441a:	2000      	movs	r0, #0
 800441c:	e7f8      	b.n	8004410 <SetSysClock_PLL_HSE+0x64>
 800441e:	bf00      	nop
 8004420:	40023800 	.word	0x40023800
 8004424:	40007000 	.word	0x40007000

08004428 <SetSysClock_PLL_HSI>:
 8004428:	b510      	push	{r4, lr}
 800442a:	b08e      	sub	sp, #56	; 0x38
 800442c:	2400      	movs	r4, #0
 800442e:	4b1a      	ldr	r3, [pc, #104]	; (8004498 <SetSysClock_PLL_HSI+0x70>)
 8004430:	9400      	str	r4, [sp, #0]
 8004432:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8004434:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8004438:	641a      	str	r2, [r3, #64]	; 0x40
 800443a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800443c:	4a17      	ldr	r2, [pc, #92]	; (800449c <SetSysClock_PLL_HSI+0x74>)
 800443e:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8004442:	9300      	str	r3, [sp, #0]
 8004444:	9b00      	ldr	r3, [sp, #0]
 8004446:	9401      	str	r4, [sp, #4]
 8004448:	6813      	ldr	r3, [r2, #0]
 800444a:	f423 4340 	bic.w	r3, r3, #49152	; 0xc000
 800444e:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8004452:	6013      	str	r3, [r2, #0]
 8004454:	6813      	ldr	r3, [r2, #0]
 8004456:	9403      	str	r4, [sp, #12]
 8004458:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 800445c:	9301      	str	r3, [sp, #4]
 800445e:	9b01      	ldr	r3, [sp, #4]
 8004460:	9409      	str	r4, [sp, #36]	; 0x24
 8004462:	2303      	movs	r3, #3
 8004464:	9302      	str	r3, [sp, #8]
 8004466:	2301      	movs	r3, #1
 8004468:	9305      	str	r3, [sp, #20]
 800446a:	2310      	movs	r3, #16
 800446c:	9306      	str	r3, [sp, #24]
 800446e:	2302      	movs	r3, #2
 8004470:	22c0      	movs	r2, #192	; 0xc0
 8004472:	9308      	str	r3, [sp, #32]
 8004474:	2308      	movs	r3, #8
 8004476:	920b      	str	r2, [sp, #44]	; 0x2c
 8004478:	eb0d 0003 	add.w	r0, sp, r3
 800447c:	2204      	movs	r2, #4
 800447e:	930a      	str	r3, [sp, #40]	; 0x28
 8004480:	920c      	str	r2, [sp, #48]	; 0x30
 8004482:	930d      	str	r3, [sp, #52]	; 0x34
 8004484:	f000 fb94 	bl	8004bb0 <HAL_RCC_OscConfig>
 8004488:	b918      	cbnz	r0, 8004492 <SetSysClock_PLL_HSI+0x6a>
 800448a:	f7ff ff40 	bl	800430e <SetSysClock_PLL_HSE.part.0>
 800448e:	b00e      	add	sp, #56	; 0x38
 8004490:	bd10      	pop	{r4, pc}
 8004492:	4620      	mov	r0, r4
 8004494:	e7fb      	b.n	800448e <SetSysClock_PLL_HSI+0x66>
 8004496:	bf00      	nop
 8004498:	40023800 	.word	0x40023800
 800449c:	40007000 	.word	0x40007000

080044a0 <SetSysClock>:
 80044a0:	b508      	push	{r3, lr}
 80044a2:	2001      	movs	r0, #1
 80044a4:	f7ff ff82 	bl	80043ac <SetSysClock_PLL_HSE>
 80044a8:	b930      	cbnz	r0, 80044b8 <SetSysClock+0x18>
 80044aa:	f7ff ff7f 	bl	80043ac <SetSysClock_PLL_HSE>
 80044ae:	b918      	cbnz	r0, 80044b8 <SetSysClock+0x18>
 80044b0:	f7ff ffba 	bl	8004428 <SetSysClock_PLL_HSI>
 80044b4:	b900      	cbnz	r0, 80044b8 <SetSysClock+0x18>
 80044b6:	e7fe      	b.n	80044b6 <SetSysClock+0x16>
 80044b8:	bd08      	pop	{r3, pc}
	...

080044bc <SystemInit>:
 80044bc:	4a17      	ldr	r2, [pc, #92]	; (800451c <SystemInit+0x60>)
 80044be:	f8d2 3088 	ldr.w	r3, [r2, #136]	; 0x88
 80044c2:	b510      	push	{r4, lr}
 80044c4:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 80044c8:	4c15      	ldr	r4, [pc, #84]	; (8004520 <SystemInit+0x64>)
 80044ca:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
 80044ce:	6823      	ldr	r3, [r4, #0]
 80044d0:	2100      	movs	r1, #0
 80044d2:	f043 0301 	orr.w	r3, r3, #1
 80044d6:	6023      	str	r3, [r4, #0]
 80044d8:	60a1      	str	r1, [r4, #8]
 80044da:	6823      	ldr	r3, [r4, #0]
 80044dc:	f023 7384 	bic.w	r3, r3, #17301504	; 0x1080000
 80044e0:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 80044e4:	6023      	str	r3, [r4, #0]
 80044e6:	4b0f      	ldr	r3, [pc, #60]	; (8004524 <SystemInit+0x68>)
 80044e8:	6063      	str	r3, [r4, #4]
 80044ea:	6823      	ldr	r3, [r4, #0]
 80044ec:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 80044f0:	6023      	str	r3, [r4, #0]
 80044f2:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
 80044f6:	60e1      	str	r1, [r4, #12]
 80044f8:	6093      	str	r3, [r2, #8]
 80044fa:	4b0b      	ldr	r3, [pc, #44]	; (8004528 <SystemInit+0x6c>)
 80044fc:	4a0b      	ldr	r2, [pc, #44]	; (800452c <SystemInit+0x70>)
 80044fe:	601a      	str	r2, [r3, #0]
 8004500:	f000 fe06 	bl	8005110 <HAL_Init>
 8004504:	f7ff ffcc 	bl	80044a0 <SetSysClock>
 8004508:	6a23      	ldr	r3, [r4, #32]
 800450a:	f043 0308 	orr.w	r3, r3, #8
 800450e:	6223      	str	r3, [r4, #32]
 8004510:	6a23      	ldr	r3, [r4, #32]
 8004512:	f023 0308 	bic.w	r3, r3, #8
 8004516:	6223      	str	r3, [r4, #32]
 8004518:	bd10      	pop	{r4, pc}
 800451a:	bf00      	nop
 800451c:	e000ed00 	.word	0xe000ed00
 8004520:	40023800 	.word	0x40023800
 8004524:	24003010 	.word	0x24003010
 8004528:	200001b4 	.word	0x200001b4
 800452c:	00f42400 	.word	0x00f42400

08004530 <__NVIC_SetVector>:
 8004530:	b530      	push	{r4, r5, lr}
 8004532:	4c0c      	ldr	r4, [pc, #48]	; (8004564 <__NVIC_SetVector+0x34>)
 8004534:	68a2      	ldr	r2, [r4, #8]
 8004536:	68a4      	ldr	r4, [r4, #8]
 8004538:	f1b4 6f00 	cmp.w	r4, #134217728	; 0x8000000
 800453c:	4613      	mov	r3, r2
 800453e:	d10c      	bne.n	800455a <__NVIC_SetVector+0x2a>
 8004540:	1f13      	subs	r3, r2, #4
 8004542:	4c09      	ldr	r4, [pc, #36]	; (8004568 <__NVIC_SetVector+0x38>)
 8004544:	4a09      	ldr	r2, [pc, #36]	; (800456c <__NVIC_SetVector+0x3c>)
 8004546:	f853 5f04 	ldr.w	r5, [r3, #4]!
 800454a:	f842 5f04 	str.w	r5, [r2, #4]!
 800454e:	42a2      	cmp	r2, r4
 8004550:	d1f9      	bne.n	8004546 <__NVIC_SetVector+0x16>
 8004552:	4a04      	ldr	r2, [pc, #16]	; (8004564 <__NVIC_SetVector+0x34>)
 8004554:	f04f 5300 	mov.w	r3, #536870912	; 0x20000000
 8004558:	6093      	str	r3, [r2, #8]
 800455a:	3010      	adds	r0, #16
 800455c:	f843 1020 	str.w	r1, [r3, r0, lsl #2]
 8004560:	bd30      	pop	{r4, r5, pc}
 8004562:	bf00      	nop
 8004564:	e000ed00 	.word	0xe000ed00
 8004568:	20000194 	.word	0x20000194
 800456c:	1ffffffc 	.word	0x1ffffffc

08004570 <TIM_OC1_SetConfig>:
 8004570:	6a03      	ldr	r3, [r0, #32]
 8004572:	f023 0301 	bic.w	r3, r3, #1
 8004576:	6203      	str	r3, [r0, #32]
 8004578:	6a03      	ldr	r3, [r0, #32]
 800457a:	b570      	push	{r4, r5, r6, lr}
 800457c:	6844      	ldr	r4, [r0, #4]
 800457e:	6982      	ldr	r2, [r0, #24]
 8004580:	680d      	ldr	r5, [r1, #0]
 8004582:	f022 0273 	bic.w	r2, r2, #115	; 0x73
 8004586:	432a      	orrs	r2, r5
 8004588:	688d      	ldr	r5, [r1, #8]
 800458a:	f023 0302 	bic.w	r3, r3, #2
 800458e:	432b      	orrs	r3, r5
 8004590:	4d0a      	ldr	r5, [pc, #40]	; (80045bc <TIM_OC1_SetConfig+0x4c>)
 8004592:	42a8      	cmp	r0, r5
 8004594:	d10b      	bne.n	80045ae <TIM_OC1_SetConfig+0x3e>
 8004596:	68cd      	ldr	r5, [r1, #12]
 8004598:	698e      	ldr	r6, [r1, #24]
 800459a:	f023 0308 	bic.w	r3, r3, #8
 800459e:	432b      	orrs	r3, r5
 80045a0:	694d      	ldr	r5, [r1, #20]
 80045a2:	f424 7440 	bic.w	r4, r4, #768	; 0x300
 80045a6:	4335      	orrs	r5, r6
 80045a8:	f023 0304 	bic.w	r3, r3, #4
 80045ac:	432c      	orrs	r4, r5
 80045ae:	6044      	str	r4, [r0, #4]
 80045b0:	6182      	str	r2, [r0, #24]
 80045b2:	684a      	ldr	r2, [r1, #4]
 80045b4:	6342      	str	r2, [r0, #52]	; 0x34
 80045b6:	6203      	str	r3, [r0, #32]
 80045b8:	bd70      	pop	{r4, r5, r6, pc}
 80045ba:	bf00      	nop
 80045bc:	40010000 	.word	0x40010000

080045c0 <TIM_OC3_SetConfig>:
 80045c0:	6a03      	ldr	r3, [r0, #32]
 80045c2:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 80045c6:	6203      	str	r3, [r0, #32]
 80045c8:	6a03      	ldr	r3, [r0, #32]
 80045ca:	b570      	push	{r4, r5, r6, lr}
 80045cc:	6844      	ldr	r4, [r0, #4]
 80045ce:	69c2      	ldr	r2, [r0, #28]
 80045d0:	680d      	ldr	r5, [r1, #0]
 80045d2:	f022 0273 	bic.w	r2, r2, #115	; 0x73
 80045d6:	432a      	orrs	r2, r5
 80045d8:	688d      	ldr	r5, [r1, #8]
 80045da:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 80045de:	ea43 2305 	orr.w	r3, r3, r5, lsl #8
 80045e2:	4d0b      	ldr	r5, [pc, #44]	; (8004610 <TIM_OC3_SetConfig+0x50>)
 80045e4:	42a8      	cmp	r0, r5
 80045e6:	d10d      	bne.n	8004604 <TIM_OC3_SetConfig+0x44>
 80045e8:	68cd      	ldr	r5, [r1, #12]
 80045ea:	698e      	ldr	r6, [r1, #24]
 80045ec:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 80045f0:	ea43 2305 	orr.w	r3, r3, r5, lsl #8
 80045f4:	694d      	ldr	r5, [r1, #20]
 80045f6:	f424 5440 	bic.w	r4, r4, #12288	; 0x3000
 80045fa:	4335      	orrs	r5, r6
 80045fc:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 8004600:	ea44 1405 	orr.w	r4, r4, r5, lsl #4
 8004604:	6044      	str	r4, [r0, #4]
 8004606:	61c2      	str	r2, [r0, #28]
 8004608:	684a      	ldr	r2, [r1, #4]
 800460a:	63c2      	str	r2, [r0, #60]	; 0x3c
 800460c:	6203      	str	r3, [r0, #32]
 800460e:	bd70      	pop	{r4, r5, r6, pc}
 8004610:	40010000 	.word	0x40010000

08004614 <TIM_OC4_SetConfig>:
 8004614:	6a03      	ldr	r3, [r0, #32]
 8004616:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 800461a:	6203      	str	r3, [r0, #32]
 800461c:	6a03      	ldr	r3, [r0, #32]
 800461e:	b530      	push	{r4, r5, lr}
 8004620:	6844      	ldr	r4, [r0, #4]
 8004622:	69c2      	ldr	r2, [r0, #28]
 8004624:	680d      	ldr	r5, [r1, #0]
 8004626:	f422 42e6 	bic.w	r2, r2, #29440	; 0x7300
 800462a:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
 800462e:	688d      	ldr	r5, [r1, #8]
 8004630:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8004634:	ea43 3305 	orr.w	r3, r3, r5, lsl #12
 8004638:	4d06      	ldr	r5, [pc, #24]	; (8004654 <TIM_OC4_SetConfig+0x40>)
 800463a:	42a8      	cmp	r0, r5
 800463c:	bf02      	ittt	eq
 800463e:	694d      	ldreq	r5, [r1, #20]
 8004640:	f424 4480 	biceq.w	r4, r4, #16384	; 0x4000
 8004644:	ea44 1485 	orreq.w	r4, r4, r5, lsl #6
 8004648:	6044      	str	r4, [r0, #4]
 800464a:	61c2      	str	r2, [r0, #28]
 800464c:	684a      	ldr	r2, [r1, #4]
 800464e:	6402      	str	r2, [r0, #64]	; 0x40
 8004650:	6203      	str	r3, [r0, #32]
 8004652:	bd30      	pop	{r4, r5, pc}
 8004654:	40010000 	.word	0x40010000

08004658 <HAL_TIM_OC_MspInit>:
 8004658:	4770      	bx	lr

0800465a <HAL_TIM_PWM_MspInit>:
 800465a:	4770      	bx	lr

0800465c <TIM_Base_SetConfig>:
 800465c:	4a22      	ldr	r2, [pc, #136]	; (80046e8 <TIM_Base_SetConfig+0x8c>)
 800465e:	6803      	ldr	r3, [r0, #0]
 8004660:	4290      	cmp	r0, r2
 8004662:	d00e      	beq.n	8004682 <TIM_Base_SetConfig+0x26>
 8004664:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 8004668:	d00b      	beq.n	8004682 <TIM_Base_SetConfig+0x26>
 800466a:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 800466e:	4290      	cmp	r0, r2
 8004670:	d007      	beq.n	8004682 <TIM_Base_SetConfig+0x26>
 8004672:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8004676:	4290      	cmp	r0, r2
 8004678:	d003      	beq.n	8004682 <TIM_Base_SetConfig+0x26>
 800467a:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800467e:	4290      	cmp	r0, r2
 8004680:	d119      	bne.n	80046b6 <TIM_Base_SetConfig+0x5a>
 8004682:	684a      	ldr	r2, [r1, #4]
 8004684:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8004688:	4313      	orrs	r3, r2
 800468a:	4a17      	ldr	r2, [pc, #92]	; (80046e8 <TIM_Base_SetConfig+0x8c>)
 800468c:	4290      	cmp	r0, r2
 800468e:	d104      	bne.n	800469a <TIM_Base_SetConfig+0x3e>
 8004690:	68ca      	ldr	r2, [r1, #12]
 8004692:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8004696:	4313      	orrs	r3, r2
 8004698:	e018      	b.n	80046cc <TIM_Base_SetConfig+0x70>
 800469a:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 800469e:	d0f7      	beq.n	8004690 <TIM_Base_SetConfig+0x34>
 80046a0:	4a12      	ldr	r2, [pc, #72]	; (80046ec <TIM_Base_SetConfig+0x90>)
 80046a2:	4290      	cmp	r0, r2
 80046a4:	d0f4      	beq.n	8004690 <TIM_Base_SetConfig+0x34>
 80046a6:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80046aa:	4290      	cmp	r0, r2
 80046ac:	d0f0      	beq.n	8004690 <TIM_Base_SetConfig+0x34>
 80046ae:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80046b2:	4290      	cmp	r0, r2
 80046b4:	d0ec      	beq.n	8004690 <TIM_Base_SetConfig+0x34>
 80046b6:	4a0e      	ldr	r2, [pc, #56]	; (80046f0 <TIM_Base_SetConfig+0x94>)
 80046b8:	4290      	cmp	r0, r2
 80046ba:	d0e9      	beq.n	8004690 <TIM_Base_SetConfig+0x34>
 80046bc:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80046c0:	4290      	cmp	r0, r2
 80046c2:	d0e5      	beq.n	8004690 <TIM_Base_SetConfig+0x34>
 80046c4:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80046c8:	4290      	cmp	r0, r2
 80046ca:	d0e1      	beq.n	8004690 <TIM_Base_SetConfig+0x34>
 80046cc:	6003      	str	r3, [r0, #0]
 80046ce:	688b      	ldr	r3, [r1, #8]
 80046d0:	62c3      	str	r3, [r0, #44]	; 0x2c
 80046d2:	680b      	ldr	r3, [r1, #0]
 80046d4:	6283      	str	r3, [r0, #40]	; 0x28
 80046d6:	4b04      	ldr	r3, [pc, #16]	; (80046e8 <TIM_Base_SetConfig+0x8c>)
 80046d8:	4298      	cmp	r0, r3
 80046da:	bf04      	itt	eq
 80046dc:	690b      	ldreq	r3, [r1, #16]
 80046de:	6303      	streq	r3, [r0, #48]	; 0x30
 80046e0:	2301      	movs	r3, #1
 80046e2:	6143      	str	r3, [r0, #20]
 80046e4:	4770      	bx	lr
 80046e6:	bf00      	nop
 80046e8:	40010000 	.word	0x40010000
 80046ec:	40000400 	.word	0x40000400
 80046f0:	40014000 	.word	0x40014000

080046f4 <HAL_TIM_OC_Init>:
 80046f4:	b510      	push	{r4, lr}
 80046f6:	4604      	mov	r4, r0
 80046f8:	b1a0      	cbz	r0, 8004724 <HAL_TIM_OC_Init+0x30>
 80046fa:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 80046fe:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8004702:	b91b      	cbnz	r3, 800470c <HAL_TIM_OC_Init+0x18>
 8004704:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38
 8004708:	f7ff ffa6 	bl	8004658 <HAL_TIM_OC_MspInit>
 800470c:	2302      	movs	r3, #2
 800470e:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
 8004712:	6820      	ldr	r0, [r4, #0]
 8004714:	1d21      	adds	r1, r4, #4
 8004716:	f7ff ffa1 	bl	800465c <TIM_Base_SetConfig>
 800471a:	2301      	movs	r3, #1
 800471c:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
 8004720:	2000      	movs	r0, #0
 8004722:	bd10      	pop	{r4, pc}
 8004724:	2001      	movs	r0, #1
 8004726:	bd10      	pop	{r4, pc}

08004728 <HAL_TIM_PWM_Init>:
 8004728:	b510      	push	{r4, lr}
 800472a:	4604      	mov	r4, r0
 800472c:	b1a0      	cbz	r0, 8004758 <HAL_TIM_PWM_Init+0x30>
 800472e:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 8004732:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8004736:	b91b      	cbnz	r3, 8004740 <HAL_TIM_PWM_Init+0x18>
 8004738:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38
 800473c:	f7ff ff8d 	bl	800465a <HAL_TIM_PWM_MspInit>
 8004740:	2302      	movs	r3, #2
 8004742:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
 8004746:	6820      	ldr	r0, [r4, #0]
 8004748:	1d21      	adds	r1, r4, #4
 800474a:	f7ff ff87 	bl	800465c <TIM_Base_SetConfig>
 800474e:	2301      	movs	r3, #1
 8004750:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
 8004754:	2000      	movs	r0, #0
 8004756:	bd10      	pop	{r4, pc}
 8004758:	2001      	movs	r0, #1
 800475a:	bd10      	pop	{r4, pc}

0800475c <TIM_OC2_SetConfig>:
 800475c:	6a03      	ldr	r3, [r0, #32]
 800475e:	f023 0310 	bic.w	r3, r3, #16
 8004762:	6203      	str	r3, [r0, #32]
 8004764:	6a03      	ldr	r3, [r0, #32]
 8004766:	b570      	push	{r4, r5, r6, lr}
 8004768:	6844      	ldr	r4, [r0, #4]
 800476a:	6982      	ldr	r2, [r0, #24]
 800476c:	680d      	ldr	r5, [r1, #0]
 800476e:	f422 42e6 	bic.w	r2, r2, #29440	; 0x7300
 8004772:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
 8004776:	688d      	ldr	r5, [r1, #8]
 8004778:	f023 0320 	bic.w	r3, r3, #32
 800477c:	ea43 1305 	orr.w	r3, r3, r5, lsl #4
 8004780:	4d0b      	ldr	r5, [pc, #44]	; (80047b0 <TIM_OC2_SetConfig+0x54>)
 8004782:	42a8      	cmp	r0, r5
 8004784:	d10d      	bne.n	80047a2 <TIM_OC2_SetConfig+0x46>
 8004786:	68cd      	ldr	r5, [r1, #12]
 8004788:	698e      	ldr	r6, [r1, #24]
 800478a:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800478e:	ea43 1305 	orr.w	r3, r3, r5, lsl #4
 8004792:	694d      	ldr	r5, [r1, #20]
 8004794:	f424 6440 	bic.w	r4, r4, #3072	; 0xc00
 8004798:	4335      	orrs	r5, r6
 800479a:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800479e:	ea44 0485 	orr.w	r4, r4, r5, lsl #2
 80047a2:	6044      	str	r4, [r0, #4]
 80047a4:	6182      	str	r2, [r0, #24]
 80047a6:	684a      	ldr	r2, [r1, #4]
 80047a8:	6382      	str	r2, [r0, #56]	; 0x38
 80047aa:	6203      	str	r3, [r0, #32]
 80047ac:	bd70      	pop	{r4, r5, r6, pc}
 80047ae:	bf00      	nop
 80047b0:	40010000 	.word	0x40010000

080047b4 <HAL_TIM_PWM_ConfigChannel>:
 80047b4:	b538      	push	{r3, r4, r5, lr}
 80047b6:	f890 3038 	ldrb.w	r3, [r0, #56]	; 0x38
 80047ba:	2b01      	cmp	r3, #1
 80047bc:	4604      	mov	r4, r0
 80047be:	f04f 0002 	mov.w	r0, #2
 80047c2:	d025      	beq.n	8004810 <HAL_TIM_PWM_ConfigChannel+0x5c>
 80047c4:	2301      	movs	r3, #1
 80047c6:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
 80047ca:	f884 0039 	strb.w	r0, [r4, #57]	; 0x39
 80047ce:	2a0c      	cmp	r2, #12
 80047d0:	d818      	bhi.n	8004804 <HAL_TIM_PWM_ConfigChannel+0x50>
 80047d2:	e8df f002 	tbb	[pc, r2]
 80047d6:	1707      	.short	0x1707
 80047d8:	171e1717 	.word	0x171e1717
 80047dc:	172f1717 	.word	0x172f1717
 80047e0:	1717      	.short	0x1717
 80047e2:	40          	.byte	0x40
 80047e3:	00          	.byte	0x00
 80047e4:	6820      	ldr	r0, [r4, #0]
 80047e6:	f7ff fec3 	bl	8004570 <TIM_OC1_SetConfig>
 80047ea:	6823      	ldr	r3, [r4, #0]
 80047ec:	6909      	ldr	r1, [r1, #16]
 80047ee:	699a      	ldr	r2, [r3, #24]
 80047f0:	f042 0208 	orr.w	r2, r2, #8
 80047f4:	619a      	str	r2, [r3, #24]
 80047f6:	699a      	ldr	r2, [r3, #24]
 80047f8:	f022 0204 	bic.w	r2, r2, #4
 80047fc:	619a      	str	r2, [r3, #24]
 80047fe:	699a      	ldr	r2, [r3, #24]
 8004800:	430a      	orrs	r2, r1
 8004802:	619a      	str	r2, [r3, #24]
 8004804:	2301      	movs	r3, #1
 8004806:	2000      	movs	r0, #0
 8004808:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
 800480c:	f884 0038 	strb.w	r0, [r4, #56]	; 0x38
 8004810:	bd38      	pop	{r3, r4, r5, pc}
 8004812:	6820      	ldr	r0, [r4, #0]
 8004814:	f7ff ffa2 	bl	800475c <TIM_OC2_SetConfig>
 8004818:	6823      	ldr	r3, [r4, #0]
 800481a:	6909      	ldr	r1, [r1, #16]
 800481c:	699a      	ldr	r2, [r3, #24]
 800481e:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8004822:	619a      	str	r2, [r3, #24]
 8004824:	699a      	ldr	r2, [r3, #24]
 8004826:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800482a:	619a      	str	r2, [r3, #24]
 800482c:	699a      	ldr	r2, [r3, #24]
 800482e:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8004832:	e7e6      	b.n	8004802 <HAL_TIM_PWM_ConfigChannel+0x4e>
 8004834:	6820      	ldr	r0, [r4, #0]
 8004836:	f7ff fec3 	bl	80045c0 <TIM_OC3_SetConfig>
 800483a:	6823      	ldr	r3, [r4, #0]
 800483c:	6909      	ldr	r1, [r1, #16]
 800483e:	69da      	ldr	r2, [r3, #28]
 8004840:	f042 0208 	orr.w	r2, r2, #8
 8004844:	61da      	str	r2, [r3, #28]
 8004846:	69da      	ldr	r2, [r3, #28]
 8004848:	f022 0204 	bic.w	r2, r2, #4
 800484c:	61da      	str	r2, [r3, #28]
 800484e:	69da      	ldr	r2, [r3, #28]
 8004850:	430a      	orrs	r2, r1
 8004852:	61da      	str	r2, [r3, #28]
 8004854:	e7d6      	b.n	8004804 <HAL_TIM_PWM_ConfigChannel+0x50>
 8004856:	6820      	ldr	r0, [r4, #0]
 8004858:	f7ff fedc 	bl	8004614 <TIM_OC4_SetConfig>
 800485c:	6823      	ldr	r3, [r4, #0]
 800485e:	6909      	ldr	r1, [r1, #16]
 8004860:	69da      	ldr	r2, [r3, #28]
 8004862:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8004866:	61da      	str	r2, [r3, #28]
 8004868:	69da      	ldr	r2, [r3, #28]
 800486a:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800486e:	61da      	str	r2, [r3, #28]
 8004870:	69da      	ldr	r2, [r3, #28]
 8004872:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8004876:	e7ec      	b.n	8004852 <HAL_TIM_PWM_ConfigChannel+0x9e>

08004878 <TIM_CCxChannelCmd>:
 8004878:	6a03      	ldr	r3, [r0, #32]
 800487a:	b510      	push	{r4, lr}
 800487c:	2401      	movs	r4, #1
 800487e:	408c      	lsls	r4, r1
 8004880:	ea23 0304 	bic.w	r3, r3, r4
 8004884:	6203      	str	r3, [r0, #32]
 8004886:	6a03      	ldr	r3, [r0, #32]
 8004888:	408a      	lsls	r2, r1
 800488a:	431a      	orrs	r2, r3
 800488c:	6202      	str	r2, [r0, #32]
 800488e:	bd10      	pop	{r4, pc}

08004890 <HAL_TIM_PWM_Start>:
 8004890:	b510      	push	{r4, lr}
 8004892:	4604      	mov	r4, r0
 8004894:	2201      	movs	r2, #1
 8004896:	6800      	ldr	r0, [r0, #0]
 8004898:	f7ff ffee 	bl	8004878 <TIM_CCxChannelCmd>
 800489c:	6823      	ldr	r3, [r4, #0]
 800489e:	4a06      	ldr	r2, [pc, #24]	; (80048b8 <HAL_TIM_PWM_Start+0x28>)
 80048a0:	4293      	cmp	r3, r2
 80048a2:	bf02      	ittt	eq
 80048a4:	6c5a      	ldreq	r2, [r3, #68]	; 0x44
 80048a6:	f442 4200 	orreq.w	r2, r2, #32768	; 0x8000
 80048aa:	645a      	streq	r2, [r3, #68]	; 0x44
 80048ac:	681a      	ldr	r2, [r3, #0]
 80048ae:	f042 0201 	orr.w	r2, r2, #1
 80048b2:	601a      	str	r2, [r3, #0]
 80048b4:	2000      	movs	r0, #0
 80048b6:	bd10      	pop	{r4, pc}
 80048b8:	40010000 	.word	0x40010000

080048bc <HAL_TIM_OC_Start>:
 80048bc:	f7ff bfe8 	b.w	8004890 <HAL_TIM_PWM_Start>

080048c0 <TIM_CCxNChannelCmd>:
 80048c0:	6a03      	ldr	r3, [r0, #32]
 80048c2:	b510      	push	{r4, lr}
 80048c4:	2404      	movs	r4, #4
 80048c6:	408c      	lsls	r4, r1
 80048c8:	ea23 0304 	bic.w	r3, r3, r4
 80048cc:	6203      	str	r3, [r0, #32]
 80048ce:	6a03      	ldr	r3, [r0, #32]
 80048d0:	408a      	lsls	r2, r1
 80048d2:	431a      	orrs	r2, r3
 80048d4:	6202      	str	r2, [r0, #32]
 80048d6:	bd10      	pop	{r4, pc}

080048d8 <HAL_TIMEx_PWMN_Start>:
 80048d8:	b510      	push	{r4, lr}
 80048da:	4604      	mov	r4, r0
 80048dc:	2204      	movs	r2, #4
 80048de:	6800      	ldr	r0, [r0, #0]
 80048e0:	f7ff ffee 	bl	80048c0 <TIM_CCxNChannelCmd>
 80048e4:	6823      	ldr	r3, [r4, #0]
 80048e6:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 80048e8:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 80048ec:	645a      	str	r2, [r3, #68]	; 0x44
 80048ee:	681a      	ldr	r2, [r3, #0]
 80048f0:	f042 0201 	orr.w	r2, r2, #1
 80048f4:	601a      	str	r2, [r3, #0]
 80048f6:	2000      	movs	r0, #0
 80048f8:	bd10      	pop	{r4, pc}
	...

080048fc <UART_SetConfig>:
 80048fc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, lr}
 8004900:	6806      	ldr	r6, [r0, #0]
 8004902:	68c2      	ldr	r2, [r0, #12]
 8004904:	6933      	ldr	r3, [r6, #16]
 8004906:	69c1      	ldr	r1, [r0, #28]
 8004908:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
 800490c:	4313      	orrs	r3, r2
 800490e:	6133      	str	r3, [r6, #16]
 8004910:	4604      	mov	r4, r0
 8004912:	6883      	ldr	r3, [r0, #8]
 8004914:	6900      	ldr	r0, [r0, #16]
 8004916:	68f2      	ldr	r2, [r6, #12]
 8004918:	4303      	orrs	r3, r0
 800491a:	6960      	ldr	r0, [r4, #20]
 800491c:	f422 4216 	bic.w	r2, r2, #38400	; 0x9600
 8004920:	4303      	orrs	r3, r0
 8004922:	f022 020c 	bic.w	r2, r2, #12
 8004926:	430b      	orrs	r3, r1
 8004928:	4313      	orrs	r3, r2
 800492a:	60f3      	str	r3, [r6, #12]
 800492c:	6973      	ldr	r3, [r6, #20]
 800492e:	69a2      	ldr	r2, [r4, #24]
 8004930:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8004934:	4313      	orrs	r3, r2
 8004936:	f5b1 4f00 	cmp.w	r1, #32768	; 0x8000
 800493a:	6173      	str	r3, [r6, #20]
 800493c:	4b7a      	ldr	r3, [pc, #488]	; (8004b28 <UART_SetConfig+0x22c>)
 800493e:	d17c      	bne.n	8004a3a <UART_SetConfig+0x13e>
 8004940:	429e      	cmp	r6, r3
 8004942:	d003      	beq.n	800494c <UART_SetConfig+0x50>
 8004944:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8004948:	429e      	cmp	r6, r3
 800494a:	d144      	bne.n	80049d6 <UART_SetConfig+0xda>
 800494c:	f000 fba8 	bl	80050a0 <HAL_RCC_GetPCLK2Freq>
 8004950:	2519      	movs	r5, #25
 8004952:	fb05 f300 	mul.w	r3, r5, r0
 8004956:	6860      	ldr	r0, [r4, #4]
 8004958:	f04f 0964 	mov.w	r9, #100	; 0x64
 800495c:	0040      	lsls	r0, r0, #1
 800495e:	fbb3 f3f0 	udiv	r3, r3, r0
 8004962:	fbb3 f3f9 	udiv	r3, r3, r9
 8004966:	ea4f 1803 	mov.w	r8, r3, lsl #4
 800496a:	f000 fb99 	bl	80050a0 <HAL_RCC_GetPCLK2Freq>
 800496e:	6863      	ldr	r3, [r4, #4]
 8004970:	4368      	muls	r0, r5
 8004972:	005b      	lsls	r3, r3, #1
 8004974:	fbb0 f7f3 	udiv	r7, r0, r3
 8004978:	f000 fb92 	bl	80050a0 <HAL_RCC_GetPCLK2Freq>
 800497c:	6863      	ldr	r3, [r4, #4]
 800497e:	4368      	muls	r0, r5
 8004980:	005b      	lsls	r3, r3, #1
 8004982:	fbb0 f3f3 	udiv	r3, r0, r3
 8004986:	fbb3 f3f9 	udiv	r3, r3, r9
 800498a:	fb09 7313 	mls	r3, r9, r3, r7
 800498e:	00db      	lsls	r3, r3, #3
 8004990:	3332      	adds	r3, #50	; 0x32
 8004992:	fbb3 f3f9 	udiv	r3, r3, r9
 8004996:	005b      	lsls	r3, r3, #1
 8004998:	f403 77f8 	and.w	r7, r3, #496	; 0x1f0
 800499c:	f000 fb80 	bl	80050a0 <HAL_RCC_GetPCLK2Freq>
 80049a0:	6862      	ldr	r2, [r4, #4]
 80049a2:	4368      	muls	r0, r5
 80049a4:	0052      	lsls	r2, r2, #1
 80049a6:	fbb0 faf2 	udiv	r10, r0, r2
 80049aa:	f000 fb79 	bl	80050a0 <HAL_RCC_GetPCLK2Freq>
 80049ae:	6863      	ldr	r3, [r4, #4]
 80049b0:	4368      	muls	r0, r5
 80049b2:	005b      	lsls	r3, r3, #1
 80049b4:	fbb0 f3f3 	udiv	r3, r0, r3
 80049b8:	fbb3 f3f9 	udiv	r3, r3, r9
 80049bc:	fb09 a313 	mls	r3, r9, r3, r10
 80049c0:	00db      	lsls	r3, r3, #3
 80049c2:	3332      	adds	r3, #50	; 0x32
 80049c4:	fbb3 f3f9 	udiv	r3, r3, r9
 80049c8:	f003 0307 	and.w	r3, r3, #7
 80049cc:	4443      	add	r3, r8
 80049ce:	443b      	add	r3, r7
 80049d0:	60b3      	str	r3, [r6, #8]
 80049d2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 80049d6:	f000 fb4b 	bl	8005070 <HAL_RCC_GetPCLK1Freq>
 80049da:	2519      	movs	r5, #25
 80049dc:	fb05 f300 	mul.w	r3, r5, r0
 80049e0:	6860      	ldr	r0, [r4, #4]
 80049e2:	f04f 0964 	mov.w	r9, #100	; 0x64
 80049e6:	0040      	lsls	r0, r0, #1
 80049e8:	fbb3 f3f0 	udiv	r3, r3, r0
 80049ec:	fbb3 f3f9 	udiv	r3, r3, r9
 80049f0:	ea4f 1803 	mov.w	r8, r3, lsl #4
 80049f4:	f000 fb3c 	bl	8005070 <HAL_RCC_GetPCLK1Freq>
 80049f8:	6863      	ldr	r3, [r4, #4]
 80049fa:	4368      	muls	r0, r5
 80049fc:	005b      	lsls	r3, r3, #1
 80049fe:	fbb0 f7f3 	udiv	r7, r0, r3
 8004a02:	f000 fb35 	bl	8005070 <HAL_RCC_GetPCLK1Freq>
 8004a06:	6863      	ldr	r3, [r4, #4]
 8004a08:	4368      	muls	r0, r5
 8004a0a:	005b      	lsls	r3, r3, #1
 8004a0c:	fbb0 f3f3 	udiv	r3, r0, r3
 8004a10:	fbb3 f3f9 	udiv	r3, r3, r9
 8004a14:	fb09 7313 	mls	r3, r9, r3, r7
 8004a18:	00db      	lsls	r3, r3, #3
 8004a1a:	3332      	adds	r3, #50	; 0x32
 8004a1c:	fbb3 f3f9 	udiv	r3, r3, r9
 8004a20:	005b      	lsls	r3, r3, #1
 8004a22:	f403 77f8 	and.w	r7, r3, #496	; 0x1f0
 8004a26:	f000 fb23 	bl	8005070 <HAL_RCC_GetPCLK1Freq>
 8004a2a:	6862      	ldr	r2, [r4, #4]
 8004a2c:	4368      	muls	r0, r5
 8004a2e:	0052      	lsls	r2, r2, #1
 8004a30:	fbb0 faf2 	udiv	r10, r0, r2
 8004a34:	f000 fb1c 	bl	8005070 <HAL_RCC_GetPCLK1Freq>
 8004a38:	e7b9      	b.n	80049ae <UART_SetConfig+0xb2>
 8004a3a:	429e      	cmp	r6, r3
 8004a3c:	d002      	beq.n	8004a44 <UART_SetConfig+0x148>
 8004a3e:	4b3b      	ldr	r3, [pc, #236]	; (8004b2c <UART_SetConfig+0x230>)
 8004a40:	429e      	cmp	r6, r3
 8004a42:	d140      	bne.n	8004ac6 <UART_SetConfig+0x1ca>
 8004a44:	f000 fb2c 	bl	80050a0 <HAL_RCC_GetPCLK2Freq>
 8004a48:	6867      	ldr	r7, [r4, #4]
 8004a4a:	2519      	movs	r5, #25
 8004a4c:	f04f 0964 	mov.w	r9, #100	; 0x64
 8004a50:	fb05 f300 	mul.w	r3, r5, r0
 8004a54:	00bf      	lsls	r7, r7, #2
 8004a56:	fbb3 f3f7 	udiv	r3, r3, r7
 8004a5a:	fbb3 f3f9 	udiv	r3, r3, r9
 8004a5e:	011f      	lsls	r7, r3, #4
 8004a60:	f000 fb1e 	bl	80050a0 <HAL_RCC_GetPCLK2Freq>
 8004a64:	6863      	ldr	r3, [r4, #4]
 8004a66:	4368      	muls	r0, r5
 8004a68:	009b      	lsls	r3, r3, #2
 8004a6a:	fbb0 f8f3 	udiv	r8, r0, r3
 8004a6e:	f000 fb17 	bl	80050a0 <HAL_RCC_GetPCLK2Freq>
 8004a72:	6863      	ldr	r3, [r4, #4]
 8004a74:	4368      	muls	r0, r5
 8004a76:	009b      	lsls	r3, r3, #2
 8004a78:	fbb0 f3f3 	udiv	r3, r0, r3
 8004a7c:	fbb3 f3f9 	udiv	r3, r3, r9
 8004a80:	fb09 8313 	mls	r3, r9, r3, r8
 8004a84:	011b      	lsls	r3, r3, #4
 8004a86:	3332      	adds	r3, #50	; 0x32
 8004a88:	fbb3 f3f9 	udiv	r3, r3, r9
 8004a8c:	f003 08f0 	and.w	r8, r3, #240	; 0xf0
 8004a90:	f000 fb06 	bl	80050a0 <HAL_RCC_GetPCLK2Freq>
 8004a94:	6862      	ldr	r2, [r4, #4]
 8004a96:	4368      	muls	r0, r5
 8004a98:	0092      	lsls	r2, r2, #2
 8004a9a:	fbb0 faf2 	udiv	r10, r0, r2
 8004a9e:	f000 faff 	bl	80050a0 <HAL_RCC_GetPCLK2Freq>
 8004aa2:	6863      	ldr	r3, [r4, #4]
 8004aa4:	4368      	muls	r0, r5
 8004aa6:	009b      	lsls	r3, r3, #2
 8004aa8:	fbb0 f3f3 	udiv	r3, r0, r3
 8004aac:	fbb3 f3f9 	udiv	r3, r3, r9
 8004ab0:	fb09 a313 	mls	r3, r9, r3, r10
 8004ab4:	011b      	lsls	r3, r3, #4
 8004ab6:	3332      	adds	r3, #50	; 0x32
 8004ab8:	fbb3 f3f9 	udiv	r3, r3, r9
 8004abc:	f003 030f 	and.w	r3, r3, #15
 8004ac0:	ea43 0308 	orr.w	r3, r3, r8
 8004ac4:	e783      	b.n	80049ce <UART_SetConfig+0xd2>
 8004ac6:	f000 fad3 	bl	8005070 <HAL_RCC_GetPCLK1Freq>
 8004aca:	6867      	ldr	r7, [r4, #4]
 8004acc:	2519      	movs	r5, #25
 8004ace:	f04f 0964 	mov.w	r9, #100	; 0x64
 8004ad2:	fb05 f300 	mul.w	r3, r5, r0
 8004ad6:	00bf      	lsls	r7, r7, #2
 8004ad8:	fbb3 f3f7 	udiv	r3, r3, r7
 8004adc:	fbb3 f3f9 	udiv	r3, r3, r9
 8004ae0:	011f      	lsls	r7, r3, #4
 8004ae2:	f000 fac5 	bl	8005070 <HAL_RCC_GetPCLK1Freq>
 8004ae6:	6863      	ldr	r3, [r4, #4]
 8004ae8:	4368      	muls	r0, r5
 8004aea:	009b      	lsls	r3, r3, #2
 8004aec:	fbb0 f8f3 	udiv	r8, r0, r3
 8004af0:	f000 fabe 	bl	8005070 <HAL_RCC_GetPCLK1Freq>
 8004af4:	6863      	ldr	r3, [r4, #4]
 8004af6:	4368      	muls	r0, r5
 8004af8:	009b      	lsls	r3, r3, #2
 8004afa:	fbb0 f3f3 	udiv	r3, r0, r3
 8004afe:	fbb3 f3f9 	udiv	r3, r3, r9
 8004b02:	fb09 8313 	mls	r3, r9, r3, r8
 8004b06:	011b      	lsls	r3, r3, #4
 8004b08:	3332      	adds	r3, #50	; 0x32
 8004b0a:	fbb3 f3f9 	udiv	r3, r3, r9
 8004b0e:	f003 08f0 	and.w	r8, r3, #240	; 0xf0
 8004b12:	f000 faad 	bl	8005070 <HAL_RCC_GetPCLK1Freq>
 8004b16:	6862      	ldr	r2, [r4, #4]
 8004b18:	4368      	muls	r0, r5
 8004b1a:	0092      	lsls	r2, r2, #2
 8004b1c:	fbb0 faf2 	udiv	r10, r0, r2
 8004b20:	f000 faa6 	bl	8005070 <HAL_RCC_GetPCLK1Freq>
 8004b24:	e7bd      	b.n	8004aa2 <UART_SetConfig+0x1a6>
 8004b26:	bf00      	nop
 8004b28:	40011000 	.word	0x40011000
 8004b2c:	40011400 	.word	0x40011400

08004b30 <HAL_UART_MspInit>:
 8004b30:	4770      	bx	lr

08004b32 <HAL_UART_Init>:
 8004b32:	b510      	push	{r4, lr}
 8004b34:	4604      	mov	r4, r0
 8004b36:	b340      	cbz	r0, 8004b8a <HAL_UART_Init+0x58>
 8004b38:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 8004b3c:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8004b40:	b91b      	cbnz	r3, 8004b4a <HAL_UART_Init+0x18>
 8004b42:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38
 8004b46:	f7ff fff3 	bl	8004b30 <HAL_UART_MspInit>
 8004b4a:	6822      	ldr	r2, [r4, #0]
 8004b4c:	2324      	movs	r3, #36	; 0x24
 8004b4e:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
 8004b52:	68d3      	ldr	r3, [r2, #12]
 8004b54:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8004b58:	60d3      	str	r3, [r2, #12]
 8004b5a:	4620      	mov	r0, r4
 8004b5c:	f7ff fece 	bl	80048fc <UART_SetConfig>
 8004b60:	6823      	ldr	r3, [r4, #0]
 8004b62:	691a      	ldr	r2, [r3, #16]
 8004b64:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 8004b68:	611a      	str	r2, [r3, #16]
 8004b6a:	695a      	ldr	r2, [r3, #20]
 8004b6c:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 8004b70:	615a      	str	r2, [r3, #20]
 8004b72:	68da      	ldr	r2, [r3, #12]
 8004b74:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 8004b78:	60da      	str	r2, [r3, #12]
 8004b7a:	2000      	movs	r0, #0
 8004b7c:	2320      	movs	r3, #32
 8004b7e:	63e0      	str	r0, [r4, #60]	; 0x3c
 8004b80:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
 8004b84:	f884 303a 	strb.w	r3, [r4, #58]	; 0x3a
 8004b88:	bd10      	pop	{r4, pc}
 8004b8a:	2001      	movs	r0, #1
 8004b8c:	bd10      	pop	{r4, pc}
	...

08004b90 <HAL_PWR_EnterSLEEPMode>:
 8004b90:	4a06      	ldr	r2, [pc, #24]	; (8004bac <HAL_PWR_EnterSLEEPMode+0x1c>)
 8004b92:	6913      	ldr	r3, [r2, #16]
 8004b94:	2901      	cmp	r1, #1
 8004b96:	f023 0304 	bic.w	r3, r3, #4
 8004b9a:	6113      	str	r3, [r2, #16]
 8004b9c:	d101      	bne.n	8004ba2 <HAL_PWR_EnterSLEEPMode+0x12>
 8004b9e:	bf30      	wfi
 8004ba0:	4770      	bx	lr
 8004ba2:	bf40      	sev
 8004ba4:	bf20      	wfe
 8004ba6:	bf20      	wfe
 8004ba8:	4770      	bx	lr
 8004baa:	bf00      	nop
 8004bac:	e000ed00 	.word	0xe000ed00

08004bb0 <HAL_RCC_OscConfig>:
 8004bb0:	6803      	ldr	r3, [r0, #0]
 8004bb2:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8004bb4:	07dd      	lsls	r5, r3, #31
 8004bb6:	4604      	mov	r4, r0
 8004bb8:	d438      	bmi.n	8004c2c <HAL_RCC_OscConfig+0x7c>
 8004bba:	6823      	ldr	r3, [r4, #0]
 8004bbc:	0798      	lsls	r0, r3, #30
 8004bbe:	d471      	bmi.n	8004ca4 <HAL_RCC_OscConfig+0xf4>
 8004bc0:	6823      	ldr	r3, [r4, #0]
 8004bc2:	071e      	lsls	r6, r3, #28
 8004bc4:	f100 80bd 	bmi.w	8004d42 <HAL_RCC_OscConfig+0x192>
 8004bc8:	6823      	ldr	r3, [r4, #0]
 8004bca:	075d      	lsls	r5, r3, #29
 8004bcc:	d528      	bpl.n	8004c20 <HAL_RCC_OscConfig+0x70>
 8004bce:	2300      	movs	r3, #0
 8004bd0:	9301      	str	r3, [sp, #4]
 8004bd2:	4ba8      	ldr	r3, [pc, #672]	; (8004e74 <HAL_RCC_OscConfig+0x2c4>)
 8004bd4:	4da8      	ldr	r5, [pc, #672]	; (8004e78 <HAL_RCC_OscConfig+0x2c8>)
 8004bd6:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8004bd8:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8004bdc:	641a      	str	r2, [r3, #64]	; 0x40
 8004bde:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004be0:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8004be4:	9301      	str	r3, [sp, #4]
 8004be6:	9b01      	ldr	r3, [sp, #4]
 8004be8:	682b      	ldr	r3, [r5, #0]
 8004bea:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8004bee:	602b      	str	r3, [r5, #0]
 8004bf0:	f000 faae 	bl	8005150 <HAL_GetTick>
 8004bf4:	4606      	mov	r6, r0
 8004bf6:	682b      	ldr	r3, [r5, #0]
 8004bf8:	05da      	lsls	r2, r3, #23
 8004bfa:	f140 80c4 	bpl.w	8004d86 <HAL_RCC_OscConfig+0x1d6>
 8004bfe:	4b9f      	ldr	r3, [pc, #636]	; (8004e7c <HAL_RCC_OscConfig+0x2cc>)
 8004c00:	7a22      	ldrb	r2, [r4, #8]
 8004c02:	701a      	strb	r2, [r3, #0]
 8004c04:	68a3      	ldr	r3, [r4, #8]
 8004c06:	2b00      	cmp	r3, #0
 8004c08:	f000 80cb 	beq.w	8004da2 <HAL_RCC_OscConfig+0x1f2>
 8004c0c:	f000 faa0 	bl	8005150 <HAL_GetTick>
 8004c10:	4d98      	ldr	r5, [pc, #608]	; (8004e74 <HAL_RCC_OscConfig+0x2c4>)
 8004c12:	4606      	mov	r6, r0
 8004c14:	f241 3788 	movw	r7, #5000	; 0x1388
 8004c18:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8004c1a:	079b      	lsls	r3, r3, #30
 8004c1c:	f140 80ba 	bpl.w	8004d94 <HAL_RCC_OscConfig+0x1e4>
 8004c20:	69a2      	ldr	r2, [r4, #24]
 8004c22:	2a00      	cmp	r2, #0
 8004c24:	f040 80cd 	bne.w	8004dc2 <HAL_RCC_OscConfig+0x212>
 8004c28:	2000      	movs	r0, #0
 8004c2a:	e015      	b.n	8004c58 <HAL_RCC_OscConfig+0xa8>
 8004c2c:	4b91      	ldr	r3, [pc, #580]	; (8004e74 <HAL_RCC_OscConfig+0x2c4>)
 8004c2e:	689a      	ldr	r2, [r3, #8]
 8004c30:	f002 020c 	and.w	r2, r2, #12
 8004c34:	2a04      	cmp	r2, #4
 8004c36:	d007      	beq.n	8004c48 <HAL_RCC_OscConfig+0x98>
 8004c38:	689a      	ldr	r2, [r3, #8]
 8004c3a:	f002 020c 	and.w	r2, r2, #12
 8004c3e:	2a08      	cmp	r2, #8
 8004c40:	d10c      	bne.n	8004c5c <HAL_RCC_OscConfig+0xac>
 8004c42:	685b      	ldr	r3, [r3, #4]
 8004c44:	0259      	lsls	r1, r3, #9
 8004c46:	d509      	bpl.n	8004c5c <HAL_RCC_OscConfig+0xac>
 8004c48:	4b8a      	ldr	r3, [pc, #552]	; (8004e74 <HAL_RCC_OscConfig+0x2c4>)
 8004c4a:	681b      	ldr	r3, [r3, #0]
 8004c4c:	039a      	lsls	r2, r3, #14
 8004c4e:	d5b4      	bpl.n	8004bba <HAL_RCC_OscConfig+0xa>
 8004c50:	6863      	ldr	r3, [r4, #4]
 8004c52:	2b00      	cmp	r3, #0
 8004c54:	d1b1      	bne.n	8004bba <HAL_RCC_OscConfig+0xa>
 8004c56:	2001      	movs	r0, #1
 8004c58:	b003      	add	sp, #12
 8004c5a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8004c5c:	4b88      	ldr	r3, [pc, #544]	; (8004e80 <HAL_RCC_OscConfig+0x2d0>)
 8004c5e:	7922      	ldrb	r2, [r4, #4]
 8004c60:	701a      	strb	r2, [r3, #0]
 8004c62:	6863      	ldr	r3, [r4, #4]
 8004c64:	b17b      	cbz	r3, 8004c86 <HAL_RCC_OscConfig+0xd6>
 8004c66:	f000 fa73 	bl	8005150 <HAL_GetTick>
 8004c6a:	4d82      	ldr	r5, [pc, #520]	; (8004e74 <HAL_RCC_OscConfig+0x2c4>)
 8004c6c:	4606      	mov	r6, r0
 8004c6e:	f241 3788 	movw	r7, #5000	; 0x1388
 8004c72:	682b      	ldr	r3, [r5, #0]
 8004c74:	039b      	lsls	r3, r3, #14
 8004c76:	d4a0      	bmi.n	8004bba <HAL_RCC_OscConfig+0xa>
 8004c78:	f000 fa6a 	bl	8005150 <HAL_GetTick>
 8004c7c:	1b80      	subs	r0, r0, r6
 8004c7e:	42b8      	cmp	r0, r7
 8004c80:	d9f7      	bls.n	8004c72 <HAL_RCC_OscConfig+0xc2>
 8004c82:	2003      	movs	r0, #3
 8004c84:	e7e8      	b.n	8004c58 <HAL_RCC_OscConfig+0xa8>
 8004c86:	f000 fa63 	bl	8005150 <HAL_GetTick>
 8004c8a:	4d7a      	ldr	r5, [pc, #488]	; (8004e74 <HAL_RCC_OscConfig+0x2c4>)
 8004c8c:	4606      	mov	r6, r0
 8004c8e:	f241 3788 	movw	r7, #5000	; 0x1388
 8004c92:	682b      	ldr	r3, [r5, #0]
 8004c94:	0398      	lsls	r0, r3, #14
 8004c96:	d590      	bpl.n	8004bba <HAL_RCC_OscConfig+0xa>
 8004c98:	f000 fa5a 	bl	8005150 <HAL_GetTick>
 8004c9c:	1b80      	subs	r0, r0, r6
 8004c9e:	42b8      	cmp	r0, r7
 8004ca0:	d9f7      	bls.n	8004c92 <HAL_RCC_OscConfig+0xe2>
 8004ca2:	e7ee      	b.n	8004c82 <HAL_RCC_OscConfig+0xd2>
 8004ca4:	4b73      	ldr	r3, [pc, #460]	; (8004e74 <HAL_RCC_OscConfig+0x2c4>)
 8004ca6:	689a      	ldr	r2, [r3, #8]
 8004ca8:	f012 0f0c 	tst.w	r2, #12
 8004cac:	d007      	beq.n	8004cbe <HAL_RCC_OscConfig+0x10e>
 8004cae:	689a      	ldr	r2, [r3, #8]
 8004cb0:	f002 020c 	and.w	r2, r2, #12
 8004cb4:	2a08      	cmp	r2, #8
 8004cb6:	d116      	bne.n	8004ce6 <HAL_RCC_OscConfig+0x136>
 8004cb8:	685b      	ldr	r3, [r3, #4]
 8004cba:	0259      	lsls	r1, r3, #9
 8004cbc:	d413      	bmi.n	8004ce6 <HAL_RCC_OscConfig+0x136>
 8004cbe:	4b6d      	ldr	r3, [pc, #436]	; (8004e74 <HAL_RCC_OscConfig+0x2c4>)
 8004cc0:	681a      	ldr	r2, [r3, #0]
 8004cc2:	0792      	lsls	r2, r2, #30
 8004cc4:	d502      	bpl.n	8004ccc <HAL_RCC_OscConfig+0x11c>
 8004cc6:	68e2      	ldr	r2, [r4, #12]
 8004cc8:	2a01      	cmp	r2, #1
 8004cca:	d1c4      	bne.n	8004c56 <HAL_RCC_OscConfig+0xa6>
 8004ccc:	6818      	ldr	r0, [r3, #0]
 8004cce:	22f8      	movs	r2, #248	; 0xf8
 8004cd0:	fa92 f2a2 	rbit	r2, r2
 8004cd4:	fab2 f182 	clz	r1, r2
 8004cd8:	6922      	ldr	r2, [r4, #16]
 8004cda:	408a      	lsls	r2, r1
 8004cdc:	f020 01f8 	bic.w	r1, r0, #248	; 0xf8
 8004ce0:	430a      	orrs	r2, r1
 8004ce2:	601a      	str	r2, [r3, #0]
 8004ce4:	e76c      	b.n	8004bc0 <HAL_RCC_OscConfig+0x10>
 8004ce6:	68e2      	ldr	r2, [r4, #12]
 8004ce8:	4b66      	ldr	r3, [pc, #408]	; (8004e84 <HAL_RCC_OscConfig+0x2d4>)
 8004cea:	b1da      	cbz	r2, 8004d24 <HAL_RCC_OscConfig+0x174>
 8004cec:	2201      	movs	r2, #1
 8004cee:	601a      	str	r2, [r3, #0]
 8004cf0:	f000 fa2e 	bl	8005150 <HAL_GetTick>
 8004cf4:	4d5f      	ldr	r5, [pc, #380]	; (8004e74 <HAL_RCC_OscConfig+0x2c4>)
 8004cf6:	4606      	mov	r6, r0
 8004cf8:	682b      	ldr	r3, [r5, #0]
 8004cfa:	079b      	lsls	r3, r3, #30
 8004cfc:	d50c      	bpl.n	8004d18 <HAL_RCC_OscConfig+0x168>
 8004cfe:	6829      	ldr	r1, [r5, #0]
 8004d00:	23f8      	movs	r3, #248	; 0xf8
 8004d02:	fa93 f3a3 	rbit	r3, r3
 8004d06:	fab3 f283 	clz	r2, r3
 8004d0a:	6923      	ldr	r3, [r4, #16]
 8004d0c:	4093      	lsls	r3, r2
 8004d0e:	f021 02f8 	bic.w	r2, r1, #248	; 0xf8
 8004d12:	4313      	orrs	r3, r2
 8004d14:	602b      	str	r3, [r5, #0]
 8004d16:	e753      	b.n	8004bc0 <HAL_RCC_OscConfig+0x10>
 8004d18:	f000 fa1a 	bl	8005150 <HAL_GetTick>
 8004d1c:	1b80      	subs	r0, r0, r6
 8004d1e:	2802      	cmp	r0, #2
 8004d20:	d9ea      	bls.n	8004cf8 <HAL_RCC_OscConfig+0x148>
 8004d22:	e7ae      	b.n	8004c82 <HAL_RCC_OscConfig+0xd2>
 8004d24:	601a      	str	r2, [r3, #0]
 8004d26:	f000 fa13 	bl	8005150 <HAL_GetTick>
 8004d2a:	4d52      	ldr	r5, [pc, #328]	; (8004e74 <HAL_RCC_OscConfig+0x2c4>)
 8004d2c:	4606      	mov	r6, r0
 8004d2e:	682b      	ldr	r3, [r5, #0]
 8004d30:	079f      	lsls	r7, r3, #30
 8004d32:	f57f af45 	bpl.w	8004bc0 <HAL_RCC_OscConfig+0x10>
 8004d36:	f000 fa0b 	bl	8005150 <HAL_GetTick>
 8004d3a:	1b80      	subs	r0, r0, r6
 8004d3c:	2802      	cmp	r0, #2
 8004d3e:	d9f6      	bls.n	8004d2e <HAL_RCC_OscConfig+0x17e>
 8004d40:	e79f      	b.n	8004c82 <HAL_RCC_OscConfig+0xd2>
 8004d42:	6962      	ldr	r2, [r4, #20]
 8004d44:	4b50      	ldr	r3, [pc, #320]	; (8004e88 <HAL_RCC_OscConfig+0x2d8>)
 8004d46:	b17a      	cbz	r2, 8004d68 <HAL_RCC_OscConfig+0x1b8>
 8004d48:	2201      	movs	r2, #1
 8004d4a:	601a      	str	r2, [r3, #0]
 8004d4c:	f000 fa00 	bl	8005150 <HAL_GetTick>
 8004d50:	4d48      	ldr	r5, [pc, #288]	; (8004e74 <HAL_RCC_OscConfig+0x2c4>)
 8004d52:	4606      	mov	r6, r0
 8004d54:	6f6b      	ldr	r3, [r5, #116]	; 0x74
 8004d56:	0798      	lsls	r0, r3, #30
 8004d58:	f53f af36 	bmi.w	8004bc8 <HAL_RCC_OscConfig+0x18>
 8004d5c:	f000 f9f8 	bl	8005150 <HAL_GetTick>
 8004d60:	1b80      	subs	r0, r0, r6
 8004d62:	2802      	cmp	r0, #2
 8004d64:	d9f6      	bls.n	8004d54 <HAL_RCC_OscConfig+0x1a4>
 8004d66:	e78c      	b.n	8004c82 <HAL_RCC_OscConfig+0xd2>
 8004d68:	601a      	str	r2, [r3, #0]
 8004d6a:	f000 f9f1 	bl	8005150 <HAL_GetTick>
 8004d6e:	4d41      	ldr	r5, [pc, #260]	; (8004e74 <HAL_RCC_OscConfig+0x2c4>)
 8004d70:	4606      	mov	r6, r0
 8004d72:	6f6b      	ldr	r3, [r5, #116]	; 0x74
 8004d74:	0799      	lsls	r1, r3, #30
 8004d76:	f57f af27 	bpl.w	8004bc8 <HAL_RCC_OscConfig+0x18>
 8004d7a:	f000 f9e9 	bl	8005150 <HAL_GetTick>
 8004d7e:	1b80      	subs	r0, r0, r6
 8004d80:	2802      	cmp	r0, #2
 8004d82:	d9f6      	bls.n	8004d72 <HAL_RCC_OscConfig+0x1c2>
 8004d84:	e77d      	b.n	8004c82 <HAL_RCC_OscConfig+0xd2>
 8004d86:	f000 f9e3 	bl	8005150 <HAL_GetTick>
 8004d8a:	1b80      	subs	r0, r0, r6
 8004d8c:	2802      	cmp	r0, #2
 8004d8e:	f67f af32 	bls.w	8004bf6 <HAL_RCC_OscConfig+0x46>
 8004d92:	e776      	b.n	8004c82 <HAL_RCC_OscConfig+0xd2>
 8004d94:	f000 f9dc 	bl	8005150 <HAL_GetTick>
 8004d98:	1b80      	subs	r0, r0, r6
 8004d9a:	42b8      	cmp	r0, r7
 8004d9c:	f67f af3c 	bls.w	8004c18 <HAL_RCC_OscConfig+0x68>
 8004da0:	e76f      	b.n	8004c82 <HAL_RCC_OscConfig+0xd2>
 8004da2:	f000 f9d5 	bl	8005150 <HAL_GetTick>
 8004da6:	4d33      	ldr	r5, [pc, #204]	; (8004e74 <HAL_RCC_OscConfig+0x2c4>)
 8004da8:	4606      	mov	r6, r0
 8004daa:	f241 3788 	movw	r7, #5000	; 0x1388
 8004dae:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8004db0:	0798      	lsls	r0, r3, #30
 8004db2:	f57f af35 	bpl.w	8004c20 <HAL_RCC_OscConfig+0x70>
 8004db6:	f000 f9cb 	bl	8005150 <HAL_GetTick>
 8004dba:	1b80      	subs	r0, r0, r6
 8004dbc:	42b8      	cmp	r0, r7
 8004dbe:	d9f6      	bls.n	8004dae <HAL_RCC_OscConfig+0x1fe>
 8004dc0:	e75f      	b.n	8004c82 <HAL_RCC_OscConfig+0xd2>
 8004dc2:	4d2c      	ldr	r5, [pc, #176]	; (8004e74 <HAL_RCC_OscConfig+0x2c4>)
 8004dc4:	68ab      	ldr	r3, [r5, #8]
 8004dc6:	f003 030c 	and.w	r3, r3, #12
 8004dca:	2b08      	cmp	r3, #8
 8004dcc:	f43f af43 	beq.w	8004c56 <HAL_RCC_OscConfig+0xa6>
 8004dd0:	4e2e      	ldr	r6, [pc, #184]	; (8004e8c <HAL_RCC_OscConfig+0x2dc>)
 8004dd2:	2300      	movs	r3, #0
 8004dd4:	2a02      	cmp	r2, #2
 8004dd6:	6033      	str	r3, [r6, #0]
 8004dd8:	d13e      	bne.n	8004e58 <HAL_RCC_OscConfig+0x2a8>
 8004dda:	f000 f9b9 	bl	8005150 <HAL_GetTick>
 8004dde:	4607      	mov	r7, r0
 8004de0:	682b      	ldr	r3, [r5, #0]
 8004de2:	0199      	lsls	r1, r3, #6
 8004de4:	d432      	bmi.n	8004e4c <HAL_RCC_OscConfig+0x29c>
 8004de6:	f647 77c0 	movw	r7, #32704	; 0x7fc0
 8004dea:	fa97 f7a7 	rbit	r7, r7
 8004dee:	f44f 3240 	mov.w	r2, #196608	; 0x30000
 8004df2:	fab7 f787 	clz	r7, r7
 8004df6:	fa92 f2a2 	rbit	r2, r2
 8004dfa:	f04f 6170 	mov.w	r1, #251658240	; 0xf000000
 8004dfe:	fab2 f082 	clz	r0, r2
 8004e02:	fa91 f1a1 	rbit	r1, r1
 8004e06:	6a22      	ldr	r2, [r4, #32]
 8004e08:	69e3      	ldr	r3, [r4, #28]
 8004e0a:	4313      	orrs	r3, r2
 8004e0c:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8004e0e:	fa02 f707 	lsl.w	r7, r2, r7
 8004e12:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8004e14:	0852      	lsrs	r2, r2, #1
 8004e16:	3a01      	subs	r2, #1
 8004e18:	4082      	lsls	r2, r0
 8004e1a:	433b      	orrs	r3, r7
 8004e1c:	4313      	orrs	r3, r2
 8004e1e:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8004e20:	4c14      	ldr	r4, [pc, #80]	; (8004e74 <HAL_RCC_OscConfig+0x2c4>)
 8004e22:	fab1 f181 	clz	r1, r1
 8004e26:	fa02 f101 	lsl.w	r1, r2, r1
 8004e2a:	430b      	orrs	r3, r1
 8004e2c:	606b      	str	r3, [r5, #4]
 8004e2e:	2301      	movs	r3, #1
 8004e30:	6033      	str	r3, [r6, #0]
 8004e32:	f000 f98d 	bl	8005150 <HAL_GetTick>
 8004e36:	4605      	mov	r5, r0
 8004e38:	6823      	ldr	r3, [r4, #0]
 8004e3a:	019a      	lsls	r2, r3, #6
 8004e3c:	f53f aef4 	bmi.w	8004c28 <HAL_RCC_OscConfig+0x78>
 8004e40:	f000 f986 	bl	8005150 <HAL_GetTick>
 8004e44:	1b40      	subs	r0, r0, r5
 8004e46:	2802      	cmp	r0, #2
 8004e48:	d9f6      	bls.n	8004e38 <HAL_RCC_OscConfig+0x288>
 8004e4a:	e71a      	b.n	8004c82 <HAL_RCC_OscConfig+0xd2>
 8004e4c:	f000 f980 	bl	8005150 <HAL_GetTick>
 8004e50:	1bc0      	subs	r0, r0, r7
 8004e52:	2802      	cmp	r0, #2
 8004e54:	d9c4      	bls.n	8004de0 <HAL_RCC_OscConfig+0x230>
 8004e56:	e714      	b.n	8004c82 <HAL_RCC_OscConfig+0xd2>
 8004e58:	f000 f97a 	bl	8005150 <HAL_GetTick>
 8004e5c:	4604      	mov	r4, r0
 8004e5e:	682b      	ldr	r3, [r5, #0]
 8004e60:	019b      	lsls	r3, r3, #6
 8004e62:	f57f aee1 	bpl.w	8004c28 <HAL_RCC_OscConfig+0x78>
 8004e66:	f000 f973 	bl	8005150 <HAL_GetTick>
 8004e6a:	1b00      	subs	r0, r0, r4
 8004e6c:	2802      	cmp	r0, #2
 8004e6e:	d9f6      	bls.n	8004e5e <HAL_RCC_OscConfig+0x2ae>
 8004e70:	e707      	b.n	8004c82 <HAL_RCC_OscConfig+0xd2>
 8004e72:	bf00      	nop
 8004e74:	40023800 	.word	0x40023800
 8004e78:	40007000 	.word	0x40007000
 8004e7c:	40023870 	.word	0x40023870
 8004e80:	40023802 	.word	0x40023802
 8004e84:	42470000 	.word	0x42470000
 8004e88:	42470e80 	.word	0x42470e80
 8004e8c:	42470060 	.word	0x42470060

08004e90 <HAL_RCC_GetSysClockFreq>:
 8004e90:	4a19      	ldr	r2, [pc, #100]	; (8004ef8 <HAL_RCC_GetSysClockFreq+0x68>)
 8004e92:	6893      	ldr	r3, [r2, #8]
 8004e94:	f003 030c 	and.w	r3, r3, #12
 8004e98:	2b04      	cmp	r3, #4
 8004e9a:	b510      	push	{r4, lr}
 8004e9c:	d003      	beq.n	8004ea6 <HAL_RCC_GetSysClockFreq+0x16>
 8004e9e:	2b08      	cmp	r3, #8
 8004ea0:	d003      	beq.n	8004eaa <HAL_RCC_GetSysClockFreq+0x1a>
 8004ea2:	4816      	ldr	r0, [pc, #88]	; (8004efc <HAL_RCC_GetSysClockFreq+0x6c>)
 8004ea4:	bd10      	pop	{r4, pc}
 8004ea6:	4816      	ldr	r0, [pc, #88]	; (8004f00 <HAL_RCC_GetSysClockFreq+0x70>)
 8004ea8:	bd10      	pop	{r4, pc}
 8004eaa:	6851      	ldr	r1, [r2, #4]
 8004eac:	6853      	ldr	r3, [r2, #4]
 8004eae:	f001 013f 	and.w	r1, r1, #63	; 0x3f
 8004eb2:	f413 0f80 	tst.w	r3, #4194304	; 0x400000
 8004eb6:	f647 74c0 	movw	r4, #32704	; 0x7fc0
 8004eba:	6853      	ldr	r3, [r2, #4]
 8004ebc:	fa94 f0a4 	rbit	r0, r4
 8004ec0:	fab0 f080 	clz	r0, r0
 8004ec4:	ea03 0304 	and.w	r3, r3, r4
 8004ec8:	fa23 f300 	lsr.w	r3, r3, r0
 8004ecc:	bf14      	ite	ne
 8004ece:	480c      	ldrne	r0, [pc, #48]	; (8004f00 <HAL_RCC_GetSysClockFreq+0x70>)
 8004ed0:	480a      	ldreq	r0, [pc, #40]	; (8004efc <HAL_RCC_GetSysClockFreq+0x6c>)
 8004ed2:	fbb0 f0f1 	udiv	r0, r0, r1
 8004ed6:	4358      	muls	r0, r3
 8004ed8:	4b07      	ldr	r3, [pc, #28]	; (8004ef8 <HAL_RCC_GetSysClockFreq+0x68>)
 8004eda:	f44f 3240 	mov.w	r2, #196608	; 0x30000
 8004ede:	685b      	ldr	r3, [r3, #4]
 8004ee0:	fa92 f2a2 	rbit	r2, r2
 8004ee4:	fab2 f282 	clz	r2, r2
 8004ee8:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 8004eec:	40d3      	lsrs	r3, r2
 8004eee:	3301      	adds	r3, #1
 8004ef0:	005b      	lsls	r3, r3, #1
 8004ef2:	fbb0 f0f3 	udiv	r0, r0, r3
 8004ef6:	bd10      	pop	{r4, pc}
 8004ef8:	40023800 	.word	0x40023800
 8004efc:	00f42400 	.word	0x00f42400
 8004f00:	007a1200 	.word	0x007a1200

08004f04 <HAL_RCC_ClockConfig>:
 8004f04:	4b56      	ldr	r3, [pc, #344]	; (8005060 <HAL_RCC_ClockConfig+0x15c>)
 8004f06:	681a      	ldr	r2, [r3, #0]
 8004f08:	f002 020f 	and.w	r2, r2, #15
 8004f0c:	428a      	cmp	r2, r1
 8004f0e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004f12:	4605      	mov	r5, r0
 8004f14:	460e      	mov	r6, r1
 8004f16:	d330      	bcc.n	8004f7a <HAL_RCC_ClockConfig+0x76>
 8004f18:	682a      	ldr	r2, [r5, #0]
 8004f1a:	0794      	lsls	r4, r2, #30
 8004f1c:	d437      	bmi.n	8004f8e <HAL_RCC_ClockConfig+0x8a>
 8004f1e:	07d0      	lsls	r0, r2, #31
 8004f20:	d43d      	bmi.n	8004f9e <HAL_RCC_ClockConfig+0x9a>
 8004f22:	4b4f      	ldr	r3, [pc, #316]	; (8005060 <HAL_RCC_ClockConfig+0x15c>)
 8004f24:	681a      	ldr	r2, [r3, #0]
 8004f26:	f002 020f 	and.w	r2, r2, #15
 8004f2a:	4296      	cmp	r6, r2
 8004f2c:	f0c0 8088 	bcc.w	8005040 <HAL_RCC_ClockConfig+0x13c>
 8004f30:	682a      	ldr	r2, [r5, #0]
 8004f32:	0751      	lsls	r1, r2, #29
 8004f34:	f100 808c 	bmi.w	8005050 <HAL_RCC_ClockConfig+0x14c>
 8004f38:	0713      	lsls	r3, r2, #28
 8004f3a:	d507      	bpl.n	8004f4c <HAL_RCC_ClockConfig+0x48>
 8004f3c:	4a49      	ldr	r2, [pc, #292]	; (8005064 <HAL_RCC_ClockConfig+0x160>)
 8004f3e:	6929      	ldr	r1, [r5, #16]
 8004f40:	6893      	ldr	r3, [r2, #8]
 8004f42:	f423 4360 	bic.w	r3, r3, #57344	; 0xe000
 8004f46:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 8004f4a:	6093      	str	r3, [r2, #8]
 8004f4c:	f7ff ffa0 	bl	8004e90 <HAL_RCC_GetSysClockFreq>
 8004f50:	4b44      	ldr	r3, [pc, #272]	; (8005064 <HAL_RCC_ClockConfig+0x160>)
 8004f52:	22f0      	movs	r2, #240	; 0xf0
 8004f54:	689b      	ldr	r3, [r3, #8]
 8004f56:	fa92 f2a2 	rbit	r2, r2
 8004f5a:	fab2 f282 	clz	r2, r2
 8004f5e:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 8004f62:	40d3      	lsrs	r3, r2
 8004f64:	4a40      	ldr	r2, [pc, #256]	; (8005068 <HAL_RCC_ClockConfig+0x164>)
 8004f66:	5cd3      	ldrb	r3, [r2, r3]
 8004f68:	40d8      	lsrs	r0, r3
 8004f6a:	4b40      	ldr	r3, [pc, #256]	; (800506c <HAL_RCC_ClockConfig+0x168>)
 8004f6c:	6018      	str	r0, [r3, #0]
 8004f6e:	200f      	movs	r0, #15
 8004f70:	f7fe fa52 	bl	8003418 <HAL_InitTick>
 8004f74:	2000      	movs	r0, #0
 8004f76:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8004f7a:	b2ca      	uxtb	r2, r1
 8004f7c:	701a      	strb	r2, [r3, #0]
 8004f7e:	681b      	ldr	r3, [r3, #0]
 8004f80:	f003 030f 	and.w	r3, r3, #15
 8004f84:	4299      	cmp	r1, r3
 8004f86:	d0c7      	beq.n	8004f18 <HAL_RCC_ClockConfig+0x14>
 8004f88:	2001      	movs	r0, #1
 8004f8a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8004f8e:	4935      	ldr	r1, [pc, #212]	; (8005064 <HAL_RCC_ClockConfig+0x160>)
 8004f90:	68a8      	ldr	r0, [r5, #8]
 8004f92:	688b      	ldr	r3, [r1, #8]
 8004f94:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8004f98:	4303      	orrs	r3, r0
 8004f9a:	608b      	str	r3, [r1, #8]
 8004f9c:	e7bf      	b.n	8004f1e <HAL_RCC_ClockConfig+0x1a>
 8004f9e:	686a      	ldr	r2, [r5, #4]
 8004fa0:	4b30      	ldr	r3, [pc, #192]	; (8005064 <HAL_RCC_ClockConfig+0x160>)
 8004fa2:	2a01      	cmp	r2, #1
 8004fa4:	d11e      	bne.n	8004fe4 <HAL_RCC_ClockConfig+0xe0>
 8004fa6:	681b      	ldr	r3, [r3, #0]
 8004fa8:	f413 3f00 	tst.w	r3, #131072	; 0x20000
 8004fac:	d0ec      	beq.n	8004f88 <HAL_RCC_ClockConfig+0x84>
 8004fae:	4c2d      	ldr	r4, [pc, #180]	; (8005064 <HAL_RCC_ClockConfig+0x160>)
 8004fb0:	68a3      	ldr	r3, [r4, #8]
 8004fb2:	f023 0303 	bic.w	r3, r3, #3
 8004fb6:	4313      	orrs	r3, r2
 8004fb8:	60a3      	str	r3, [r4, #8]
 8004fba:	f000 f8c9 	bl	8005150 <HAL_GetTick>
 8004fbe:	686b      	ldr	r3, [r5, #4]
 8004fc0:	2b01      	cmp	r3, #1
 8004fc2:	4607      	mov	r7, r0
 8004fc4:	f241 3888 	movw	r8, #5000	; 0x1388
 8004fc8:	d116      	bne.n	8004ff8 <HAL_RCC_ClockConfig+0xf4>
 8004fca:	68a3      	ldr	r3, [r4, #8]
 8004fcc:	f003 030c 	and.w	r3, r3, #12
 8004fd0:	2b04      	cmp	r3, #4
 8004fd2:	d0a6      	beq.n	8004f22 <HAL_RCC_ClockConfig+0x1e>
 8004fd4:	f000 f8bc 	bl	8005150 <HAL_GetTick>
 8004fd8:	1bc0      	subs	r0, r0, r7
 8004fda:	4540      	cmp	r0, r8
 8004fdc:	d9f5      	bls.n	8004fca <HAL_RCC_ClockConfig+0xc6>
 8004fde:	2003      	movs	r0, #3
 8004fe0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8004fe4:	1e91      	subs	r1, r2, #2
 8004fe6:	2901      	cmp	r1, #1
 8004fe8:	681b      	ldr	r3, [r3, #0]
 8004fea:	d802      	bhi.n	8004ff2 <HAL_RCC_ClockConfig+0xee>
 8004fec:	f013 7f00 	tst.w	r3, #33554432	; 0x2000000
 8004ff0:	e7dc      	b.n	8004fac <HAL_RCC_ClockConfig+0xa8>
 8004ff2:	f013 0f02 	tst.w	r3, #2
 8004ff6:	e7d9      	b.n	8004fac <HAL_RCC_ClockConfig+0xa8>
 8004ff8:	2b02      	cmp	r3, #2
 8004ffa:	d10a      	bne.n	8005012 <HAL_RCC_ClockConfig+0x10e>
 8004ffc:	68a3      	ldr	r3, [r4, #8]
 8004ffe:	f003 030c 	and.w	r3, r3, #12
 8005002:	2b08      	cmp	r3, #8
 8005004:	d08d      	beq.n	8004f22 <HAL_RCC_ClockConfig+0x1e>
 8005006:	f000 f8a3 	bl	8005150 <HAL_GetTick>
 800500a:	1bc0      	subs	r0, r0, r7
 800500c:	4540      	cmp	r0, r8
 800500e:	d9f5      	bls.n	8004ffc <HAL_RCC_ClockConfig+0xf8>
 8005010:	e7e5      	b.n	8004fde <HAL_RCC_ClockConfig+0xda>
 8005012:	2b03      	cmp	r3, #3
 8005014:	d10f      	bne.n	8005036 <HAL_RCC_ClockConfig+0x132>
 8005016:	68a3      	ldr	r3, [r4, #8]
 8005018:	f003 030c 	and.w	r3, r3, #12
 800501c:	2b0c      	cmp	r3, #12
 800501e:	d080      	beq.n	8004f22 <HAL_RCC_ClockConfig+0x1e>
 8005020:	f000 f896 	bl	8005150 <HAL_GetTick>
 8005024:	1bc0      	subs	r0, r0, r7
 8005026:	4540      	cmp	r0, r8
 8005028:	d9f5      	bls.n	8005016 <HAL_RCC_ClockConfig+0x112>
 800502a:	e7d8      	b.n	8004fde <HAL_RCC_ClockConfig+0xda>
 800502c:	f000 f890 	bl	8005150 <HAL_GetTick>
 8005030:	1bc0      	subs	r0, r0, r7
 8005032:	4540      	cmp	r0, r8
 8005034:	d8d3      	bhi.n	8004fde <HAL_RCC_ClockConfig+0xda>
 8005036:	68a3      	ldr	r3, [r4, #8]
 8005038:	f013 0f0c 	tst.w	r3, #12
 800503c:	d1f6      	bne.n	800502c <HAL_RCC_ClockConfig+0x128>
 800503e:	e770      	b.n	8004f22 <HAL_RCC_ClockConfig+0x1e>
 8005040:	b2f2      	uxtb	r2, r6
 8005042:	701a      	strb	r2, [r3, #0]
 8005044:	681b      	ldr	r3, [r3, #0]
 8005046:	f003 030f 	and.w	r3, r3, #15
 800504a:	429e      	cmp	r6, r3
 800504c:	d19c      	bne.n	8004f88 <HAL_RCC_ClockConfig+0x84>
 800504e:	e76f      	b.n	8004f30 <HAL_RCC_ClockConfig+0x2c>
 8005050:	4904      	ldr	r1, [pc, #16]	; (8005064 <HAL_RCC_ClockConfig+0x160>)
 8005052:	68e8      	ldr	r0, [r5, #12]
 8005054:	688b      	ldr	r3, [r1, #8]
 8005056:	f423 53e0 	bic.w	r3, r3, #7168	; 0x1c00
 800505a:	4303      	orrs	r3, r0
 800505c:	608b      	str	r3, [r1, #8]
 800505e:	e76b      	b.n	8004f38 <HAL_RCC_ClockConfig+0x34>
 8005060:	40023c00 	.word	0x40023c00
 8005064:	40023800 	.word	0x40023800
 8005068:	08007330 	.word	0x08007330
 800506c:	200001b4 	.word	0x200001b4

08005070 <HAL_RCC_GetPCLK1Freq>:
 8005070:	4b08      	ldr	r3, [pc, #32]	; (8005094 <HAL_RCC_GetPCLK1Freq+0x24>)
 8005072:	f44f 52e0 	mov.w	r2, #7168	; 0x1c00
 8005076:	689b      	ldr	r3, [r3, #8]
 8005078:	fa92 f2a2 	rbit	r2, r2
 800507c:	fab2 f282 	clz	r2, r2
 8005080:	f403 53e0 	and.w	r3, r3, #7168	; 0x1c00
 8005084:	40d3      	lsrs	r3, r2
 8005086:	4a04      	ldr	r2, [pc, #16]	; (8005098 <HAL_RCC_GetPCLK1Freq+0x28>)
 8005088:	5cd3      	ldrb	r3, [r2, r3]
 800508a:	4a04      	ldr	r2, [pc, #16]	; (800509c <HAL_RCC_GetPCLK1Freq+0x2c>)
 800508c:	6810      	ldr	r0, [r2, #0]
 800508e:	40d8      	lsrs	r0, r3
 8005090:	4770      	bx	lr
 8005092:	bf00      	nop
 8005094:	40023800 	.word	0x40023800
 8005098:	08007330 	.word	0x08007330
 800509c:	200001b4 	.word	0x200001b4

080050a0 <HAL_RCC_GetPCLK2Freq>:
 80050a0:	4b08      	ldr	r3, [pc, #32]	; (80050c4 <HAL_RCC_GetPCLK2Freq+0x24>)
 80050a2:	f44f 4260 	mov.w	r2, #57344	; 0xe000
 80050a6:	689b      	ldr	r3, [r3, #8]
 80050a8:	fa92 f2a2 	rbit	r2, r2
 80050ac:	fab2 f282 	clz	r2, r2
 80050b0:	f403 4360 	and.w	r3, r3, #57344	; 0xe000
 80050b4:	40d3      	lsrs	r3, r2
 80050b6:	4a04      	ldr	r2, [pc, #16]	; (80050c8 <HAL_RCC_GetPCLK2Freq+0x28>)
 80050b8:	5cd3      	ldrb	r3, [r2, r3]
 80050ba:	4a04      	ldr	r2, [pc, #16]	; (80050cc <HAL_RCC_GetPCLK2Freq+0x2c>)
 80050bc:	6810      	ldr	r0, [r2, #0]
 80050be:	40d8      	lsrs	r0, r3
 80050c0:	4770      	bx	lr
 80050c2:	bf00      	nop
 80050c4:	40023800 	.word	0x40023800
 80050c8:	08007330 	.word	0x08007330
 80050cc:	200001b4 	.word	0x200001b4

080050d0 <HAL_RCC_GetClockConfig>:
 80050d0:	230f      	movs	r3, #15
 80050d2:	6003      	str	r3, [r0, #0]
 80050d4:	4b0b      	ldr	r3, [pc, #44]	; (8005104 <HAL_RCC_GetClockConfig+0x34>)
 80050d6:	689a      	ldr	r2, [r3, #8]
 80050d8:	f002 0203 	and.w	r2, r2, #3
 80050dc:	6042      	str	r2, [r0, #4]
 80050de:	689a      	ldr	r2, [r3, #8]
 80050e0:	f002 02f0 	and.w	r2, r2, #240	; 0xf0
 80050e4:	6082      	str	r2, [r0, #8]
 80050e6:	689a      	ldr	r2, [r3, #8]
 80050e8:	f402 52e0 	and.w	r2, r2, #7168	; 0x1c00
 80050ec:	60c2      	str	r2, [r0, #12]
 80050ee:	689b      	ldr	r3, [r3, #8]
 80050f0:	08db      	lsrs	r3, r3, #3
 80050f2:	f403 53e0 	and.w	r3, r3, #7168	; 0x1c00
 80050f6:	6103      	str	r3, [r0, #16]
 80050f8:	4b03      	ldr	r3, [pc, #12]	; (8005108 <HAL_RCC_GetClockConfig+0x38>)
 80050fa:	681b      	ldr	r3, [r3, #0]
 80050fc:	f003 030f 	and.w	r3, r3, #15
 8005100:	600b      	str	r3, [r1, #0]
 8005102:	4770      	bx	lr
 8005104:	40023800 	.word	0x40023800
 8005108:	40023c00 	.word	0x40023c00

0800510c <HAL_MspInit>:
 800510c:	4770      	bx	lr
	...

08005110 <HAL_Init>:
 8005110:	b508      	push	{r3, lr}
 8005112:	4b0a      	ldr	r3, [pc, #40]	; (800513c <HAL_Init+0x2c>)
 8005114:	681a      	ldr	r2, [r3, #0]
 8005116:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800511a:	601a      	str	r2, [r3, #0]
 800511c:	681a      	ldr	r2, [r3, #0]
 800511e:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8005122:	601a      	str	r2, [r3, #0]
 8005124:	681a      	ldr	r2, [r3, #0]
 8005126:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800512a:	601a      	str	r2, [r3, #0]
 800512c:	200f      	movs	r0, #15
 800512e:	f7fe f973 	bl	8003418 <HAL_InitTick>
 8005132:	f7ff ffeb 	bl	800510c <HAL_MspInit>
 8005136:	2000      	movs	r0, #0
 8005138:	bd08      	pop	{r3, pc}
 800513a:	bf00      	nop
 800513c:	40023c00 	.word	0x40023c00

08005140 <HAL_IncTick>:
 8005140:	4a02      	ldr	r2, [pc, #8]	; (800514c <HAL_IncTick+0xc>)
 8005142:	6813      	ldr	r3, [r2, #0]
 8005144:	3301      	adds	r3, #1
 8005146:	6013      	str	r3, [r2, #0]
 8005148:	4770      	bx	lr
 800514a:	bf00      	nop
 800514c:	20002e20 	.word	0x20002e20

08005150 <HAL_GetTick>:
 8005150:	4b01      	ldr	r3, [pc, #4]	; (8005158 <HAL_GetTick+0x8>)
 8005152:	6818      	ldr	r0, [r3, #0]
 8005154:	4770      	bx	lr
 8005156:	bf00      	nop
 8005158:	20002e20 	.word	0x20002e20

0800515c <mbed::Ticker::handler()>:
 800515c:	6943      	ldr	r3, [r0, #20]
 800515e:	6841      	ldr	r1, [r0, #4]
 8005160:	b510      	push	{r4, lr}
 8005162:	4604      	mov	r4, r0
 8005164:	4419      	add	r1, r3
 8005166:	f000 fa95 	bl	8005694 <mbed::TimerEvent::insert(unsigned long)>
 800516a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800516c:	f104 0018 	add.w	r0, r4, #24
 8005170:	681b      	ldr	r3, [r3, #0]
 8005172:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8005176:	4718      	bx	r3

08005178 <mbed::Ticker::setup(unsigned long)>:
 8005178:	b538      	push	{r3, r4, r5, lr}
 800517a:	4604      	mov	r4, r0
 800517c:	460d      	mov	r5, r1
 800517e:	f7fc fe75 	bl	8001e6c <core_util_critical_section_enter>
 8005182:	4620      	mov	r0, r4
 8005184:	f000 fa8c 	bl	80056a0 <mbed::TimerEvent::remove()>
 8005188:	6165      	str	r5, [r4, #20]
 800518a:	6920      	ldr	r0, [r4, #16]
 800518c:	f7fc fde7 	bl	8001d5e <ticker_read>
 8005190:	1829      	adds	r1, r5, r0
 8005192:	4620      	mov	r0, r4
 8005194:	f000 fa7e 	bl	8005694 <mbed::TimerEvent::insert(unsigned long)>
 8005198:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800519c:	f7fc be7c 	b.w	8001e98 <core_util_critical_section_exit>

080051a0 <mbed::Ticker::detach()>:
 80051a0:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 80051a2:	4606      	mov	r6, r0
 80051a4:	f106 0418 	add.w	r4, r6, #24
 80051a8:	f7fc fe60 	bl	8001e6c <core_util_critical_section_enter>
 80051ac:	466d      	mov	r5, sp
 80051ae:	4630      	mov	r0, r6
 80051b0:	f000 fa76 	bl	80056a0 <mbed::TimerEvent::remove()>
 80051b4:	2300      	movs	r3, #0
 80051b6:	42ac      	cmp	r4, r5
 80051b8:	9303      	str	r3, [sp, #12]
 80051ba:	d00b      	beq.n	80051d4 <mbed::Ticker::detach()+0x34>
 80051bc:	4620      	mov	r0, r4
 80051be:	f7fb fa4f 	bl	8000660 <mbed::Callback<void ()>::~Callback()>
 80051c2:	b13c      	cbz	r4, 80051d4 <mbed::Ticker::detach()+0x34>
 80051c4:	9b03      	ldr	r3, [sp, #12]
 80051c6:	b11b      	cbz	r3, 80051d0 <mbed::Ticker::detach()+0x30>
 80051c8:	685b      	ldr	r3, [r3, #4]
 80051ca:	4669      	mov	r1, sp
 80051cc:	4620      	mov	r0, r4
 80051ce:	4798      	blx	r3
 80051d0:	9b03      	ldr	r3, [sp, #12]
 80051d2:	6273      	str	r3, [r6, #36]	; 0x24
 80051d4:	4628      	mov	r0, r5
 80051d6:	f7fb fa43 	bl	8000660 <mbed::Callback<void ()>::~Callback()>
 80051da:	f7fc fe5d 	bl	8001e98 <core_util_critical_section_exit>
 80051de:	b004      	add	sp, #16
 80051e0:	bd70      	pop	{r4, r5, r6, pc}

080051e2 <mbed::Timer::start()>:
 80051e2:	b510      	push	{r4, lr}
 80051e4:	4604      	mov	r4, r0
 80051e6:	f7fc fe41 	bl	8001e6c <core_util_critical_section_enter>
 80051ea:	6823      	ldr	r3, [r4, #0]
 80051ec:	b92b      	cbnz	r3, 80051fa <mbed::Timer::start()+0x18>
 80051ee:	68e0      	ldr	r0, [r4, #12]
 80051f0:	f7fc fdb5 	bl	8001d5e <ticker_read>
 80051f4:	2301      	movs	r3, #1
 80051f6:	6060      	str	r0, [r4, #4]
 80051f8:	6023      	str	r3, [r4, #0]
 80051fa:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80051fe:	f7fc be4b 	b.w	8001e98 <core_util_critical_section_exit>

08005202 <mbed::Timer::slicetime()>:
 8005202:	b538      	push	{r3, r4, r5, lr}
 8005204:	4605      	mov	r5, r0
 8005206:	f7fc fe31 	bl	8001e6c <core_util_critical_section_enter>
 800520a:	682c      	ldr	r4, [r5, #0]
 800520c:	b124      	cbz	r4, 8005218 <mbed::Timer::slicetime()+0x16>
 800520e:	68e8      	ldr	r0, [r5, #12]
 8005210:	f7fc fda5 	bl	8001d5e <ticker_read>
 8005214:	686c      	ldr	r4, [r5, #4]
 8005216:	1b04      	subs	r4, r0, r4
 8005218:	f7fc fe3e 	bl	8001e98 <core_util_critical_section_exit>
 800521c:	4620      	mov	r0, r4
 800521e:	bd38      	pop	{r3, r4, r5, pc}

08005220 <mbed::Timer::stop()>:
 8005220:	b510      	push	{r4, lr}
 8005222:	4604      	mov	r4, r0
 8005224:	f7fc fe22 	bl	8001e6c <core_util_critical_section_enter>
 8005228:	4620      	mov	r0, r4
 800522a:	f7ff ffea 	bl	8005202 <mbed::Timer::slicetime()>
 800522e:	68a3      	ldr	r3, [r4, #8]
 8005230:	4418      	add	r0, r3
 8005232:	2300      	movs	r3, #0
 8005234:	60a0      	str	r0, [r4, #8]
 8005236:	6023      	str	r3, [r4, #0]
 8005238:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800523c:	f7fc be2c 	b.w	8001e98 <core_util_critical_section_exit>

08005240 <mbed::Timer::read_us()>:
 8005240:	b538      	push	{r3, r4, r5, lr}
 8005242:	4605      	mov	r5, r0
 8005244:	f7fc fe12 	bl	8001e6c <core_util_critical_section_enter>
 8005248:	4628      	mov	r0, r5
 800524a:	68ac      	ldr	r4, [r5, #8]
 800524c:	f7ff ffd9 	bl	8005202 <mbed::Timer::slicetime()>
 8005250:	4404      	add	r4, r0
 8005252:	f7fc fe21 	bl	8001e98 <core_util_critical_section_exit>
 8005256:	4620      	mov	r0, r4
 8005258:	bd38      	pop	{r3, r4, r5, pc}
	...

0800525c <mbed::Timer::read()>:
 800525c:	b508      	push	{r3, lr}
 800525e:	f7ff ffef 	bl	8005240 <mbed::Timer::read_us()>
 8005262:	ee07 0a90 	vmov	s15, r0
 8005266:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 800526a:	eddf 7a03 	vldr	s15, [pc, #12]	; 8005278 <mbed::Timer::read()+0x1c>
 800526e:	eec7 6a27 	vdiv.f32	s13, s14, s15
 8005272:	ee16 0a90 	vmov	r0, s13
 8005276:	bd08      	pop	{r3, pc}
 8005278:	49742400 	.word	0x49742400

0800527c <mbed::Timer::read_ms()>:
 800527c:	b508      	push	{r3, lr}
 800527e:	f7ff ffdf 	bl	8005240 <mbed::Timer::read_us()>
 8005282:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8005286:	fb90 f0f3 	sdiv	r0, r0, r3
 800528a:	bd08      	pop	{r3, pc}

0800528c <mbed::Timer::reset()>:
 800528c:	b510      	push	{r4, lr}
 800528e:	4604      	mov	r4, r0
 8005290:	f7fc fdec 	bl	8001e6c <core_util_critical_section_enter>
 8005294:	68e0      	ldr	r0, [r4, #12]
 8005296:	f7fc fd62 	bl	8001d5e <ticker_read>
 800529a:	2300      	movs	r3, #0
 800529c:	6060      	str	r0, [r4, #4]
 800529e:	60a3      	str	r3, [r4, #8]
 80052a0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80052a4:	f7fc bdf8 	b.w	8001e98 <core_util_critical_section_exit>

080052a8 <mbed::Timer::Timer()>:
 80052a8:	2300      	movs	r3, #0
 80052aa:	b510      	push	{r4, lr}
 80052ac:	6003      	str	r3, [r0, #0]
 80052ae:	6043      	str	r3, [r0, #4]
 80052b0:	6083      	str	r3, [r0, #8]
 80052b2:	4604      	mov	r4, r0
 80052b4:	f7fc fcdc 	bl	8001c70 <get_us_ticker_data>
 80052b8:	60e0      	str	r0, [r4, #12]
 80052ba:	4620      	mov	r0, r4
 80052bc:	f7ff ffe6 	bl	800528c <mbed::Timer::reset()>
 80052c0:	4620      	mov	r0, r4
 80052c2:	bd10      	pop	{r4, pc}

080052c4 <mbed::RawSerial::lock()>:
 80052c4:	4770      	bx	lr
	...

080052c8 <mbed::RawSerial::RawSerial(PinName, PinName, int)>:
 80052c8:	b510      	push	{r4, lr}
 80052ca:	4604      	mov	r4, r0
 80052cc:	f000 f92c 	bl	8005528 <mbed::SerialBase::SerialBase(PinName, PinName, int)>
 80052d0:	4b01      	ldr	r3, [pc, #4]	; (80052d8 <mbed::RawSerial::RawSerial(PinName, PinName, int)+0x10>)
 80052d2:	6023      	str	r3, [r4, #0]
 80052d4:	4620      	mov	r0, r4
 80052d6:	bd10      	pop	{r4, pc}
 80052d8:	0800735c 	.word	0x0800735c

080052dc <mbed::RawSerial::~RawSerial()>:
 80052dc:	b510      	push	{r4, lr}
 80052de:	4b03      	ldr	r3, [pc, #12]	; (80052ec <mbed::RawSerial::~RawSerial()+0x10>)
 80052e0:	6003      	str	r3, [r0, #0]
 80052e2:	4604      	mov	r4, r0
 80052e4:	f7fc fb06 	bl	80018f4 <mbed::SerialBase::~SerialBase()>
 80052e8:	4620      	mov	r0, r4
 80052ea:	bd10      	pop	{r4, pc}
 80052ec:	0800735c 	.word	0x0800735c

080052f0 <mbed::RawSerial::~RawSerial()>:
 80052f0:	b510      	push	{r4, lr}
 80052f2:	4604      	mov	r4, r0
 80052f4:	f7ff fff2 	bl	80052dc <mbed::RawSerial::~RawSerial()>
 80052f8:	4620      	mov	r0, r4
 80052fa:	f000 fb51 	bl	80059a0 <operator delete(void*)>
 80052fe:	4620      	mov	r0, r4
 8005300:	bd10      	pop	{r4, pc}

08005302 <mbed::donothing()>:
 8005302:	4770      	bx	lr

08005304 <mbed::InterruptIn::read()>:
 8005304:	6883      	ldr	r3, [r0, #8]
 8005306:	681a      	ldr	r2, [r3, #0]
 8005308:	6843      	ldr	r3, [r0, #4]
 800530a:	421a      	tst	r2, r3
 800530c:	bf14      	ite	ne
 800530e:	2001      	movne	r0, #1
 8005310:	2000      	moveq	r0, #0
 8005312:	4770      	bx	lr

08005314 <mbed::InterruptIn::~InterruptIn()>:
 8005314:	b510      	push	{r4, lr}
 8005316:	4b08      	ldr	r3, [pc, #32]	; (8005338 <mbed::InterruptIn::~InterruptIn()+0x24>)
 8005318:	4604      	mov	r4, r0
 800531a:	f840 3b20 	str.w	r3, [r0], #32
 800531e:	f7fe fa4f 	bl	80037c0 <gpio_irq_free>
 8005322:	f104 0040 	add.w	r0, r4, #64	; 0x40
 8005326:	f7fb f99b 	bl	8000660 <mbed::Callback<void ()>::~Callback()>
 800532a:	f104 0030 	add.w	r0, r4, #48	; 0x30
 800532e:	f7fb f997 	bl	8000660 <mbed::Callback<void ()>::~Callback()>
 8005332:	4620      	mov	r0, r4
 8005334:	bd10      	pop	{r4, pc}
 8005336:	bf00      	nop
 8005338:	08007374 	.word	0x08007374

0800533c <mbed::InterruptIn::~InterruptIn()>:
 800533c:	b510      	push	{r4, lr}
 800533e:	4604      	mov	r4, r0
 8005340:	f7ff ffe8 	bl	8005314 <mbed::InterruptIn::~InterruptIn()>
 8005344:	4620      	mov	r0, r4
 8005346:	f000 fb2b 	bl	80059a0 <operator delete(void*)>
 800534a:	4620      	mov	r0, r4
 800534c:	bd10      	pop	{r4, pc}

0800534e <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)>:
 800534e:	4288      	cmp	r0, r1
 8005350:	b538      	push	{r3, r4, r5, lr}
 8005352:	4604      	mov	r4, r0
 8005354:	460d      	mov	r5, r1
 8005356:	d00a      	beq.n	800536e <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)+0x20>
 8005358:	f7fb f982 	bl	8000660 <mbed::Callback<void ()>::~Callback()>
 800535c:	b13c      	cbz	r4, 800536e <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)+0x20>
 800535e:	68eb      	ldr	r3, [r5, #12]
 8005360:	b11b      	cbz	r3, 800536a <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)+0x1c>
 8005362:	685b      	ldr	r3, [r3, #4]
 8005364:	4629      	mov	r1, r5
 8005366:	4620      	mov	r0, r4
 8005368:	4798      	blx	r3
 800536a:	68eb      	ldr	r3, [r5, #12]
 800536c:	60e3      	str	r3, [r4, #12]
 800536e:	4620      	mov	r0, r4
 8005370:	bd38      	pop	{r3, r4, r5, pc}
	...

08005374 <mbed::InterruptIn::InterruptIn(PinName)>:
 8005374:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8005378:	4605      	mov	r5, r0
 800537a:	4b1f      	ldr	r3, [pc, #124]	; (80053f8 <mbed::InterruptIn::InterruptIn(PinName)+0x84>)
 800537c:	f845 3b04 	str.w	r3, [r5], #4
 8005380:	4604      	mov	r4, r0
 8005382:	b085      	sub	sp, #20
 8005384:	460e      	mov	r6, r1
 8005386:	f104 0720 	add.w	r7, r4, #32
 800538a:	221c      	movs	r2, #28
 800538c:	2100      	movs	r1, #0
 800538e:	4628      	mov	r0, r5
 8005390:	f000 fe3b 	bl	800600a <memset>
 8005394:	2210      	movs	r2, #16
 8005396:	2100      	movs	r1, #0
 8005398:	4638      	mov	r0, r7
 800539a:	f000 fe36 	bl	800600a <memset>
 800539e:	2300      	movs	r3, #0
 80053a0:	63e3      	str	r3, [r4, #60]	; 0x3c
 80053a2:	64e3      	str	r3, [r4, #76]	; 0x4c
 80053a4:	4669      	mov	r1, sp
 80053a6:	f8df 9058 	ldr.w	r9, [pc, #88]	; 8005400 <mbed::InterruptIn::InterruptIn(PinName)+0x8c>
 80053aa:	f8df 8058 	ldr.w	r8, [pc, #88]	; 8005404 <mbed::InterruptIn::InterruptIn(PinName)+0x90>
 80053ae:	f8cd 9000 	str.w	r9, [sp]
 80053b2:	f104 0030 	add.w	r0, r4, #48	; 0x30
 80053b6:	f8cd 800c 	str.w	r8, [sp, #12]
 80053ba:	f7ff ffc8 	bl	800534e <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)>
 80053be:	4668      	mov	r0, sp
 80053c0:	f7fb f94e 	bl	8000660 <mbed::Callback<void ()>::~Callback()>
 80053c4:	4669      	mov	r1, sp
 80053c6:	f104 0040 	add.w	r0, r4, #64	; 0x40
 80053ca:	f8cd 9000 	str.w	r9, [sp]
 80053ce:	f8cd 800c 	str.w	r8, [sp, #12]
 80053d2:	f7ff ffbc 	bl	800534e <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)>
 80053d6:	4668      	mov	r0, sp
 80053d8:	f7fb f942 	bl	8000660 <mbed::Callback<void ()>::~Callback()>
 80053dc:	4623      	mov	r3, r4
 80053de:	4a07      	ldr	r2, [pc, #28]	; (80053fc <mbed::InterruptIn::InterruptIn(PinName)+0x88>)
 80053e0:	4631      	mov	r1, r6
 80053e2:	4638      	mov	r0, r7
 80053e4:	f7fe f938 	bl	8003658 <gpio_irq_init>
 80053e8:	4628      	mov	r0, r5
 80053ea:	4631      	mov	r1, r6
 80053ec:	f7fc fc29 	bl	8001c42 <gpio_init_in>
 80053f0:	4620      	mov	r0, r4
 80053f2:	b005      	add	sp, #20
 80053f4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80053f8:	08007374 	.word	0x08007374
 80053fc:	080054a7 	.word	0x080054a7
 8005400:	08005303 	.word	0x08005303
 8005404:	08006a98 	.word	0x08006a98

08005408 <mbed::InterruptIn::rise(mbed::Callback<void ()>)>:
 8005408:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800540a:	460e      	mov	r6, r1
 800540c:	4604      	mov	r4, r0
 800540e:	f7fc fd2d 	bl	8001e6c <core_util_critical_section_enter>
 8005412:	68f5      	ldr	r5, [r6, #12]
 8005414:	f104 0030 	add.w	r0, r4, #48	; 0x30
 8005418:	3420      	adds	r4, #32
 800541a:	b15d      	cbz	r5, 8005434 <mbed::InterruptIn::rise(mbed::Callback<void ()>)+0x2c>
 800541c:	4631      	mov	r1, r6
 800541e:	f7ff ff96 	bl	800534e <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)>
 8005422:	2201      	movs	r2, #1
 8005424:	2101      	movs	r1, #1
 8005426:	4620      	mov	r0, r4
 8005428:	f7fe f8ba 	bl	80035a0 <gpio_irq_set>
 800542c:	f7fc fd34 	bl	8001e98 <core_util_critical_section_exit>
 8005430:	b004      	add	sp, #16
 8005432:	bd70      	pop	{r4, r5, r6, pc}
 8005434:	4b05      	ldr	r3, [pc, #20]	; (800544c <mbed::InterruptIn::rise(mbed::Callback<void ()>)+0x44>)
 8005436:	9300      	str	r3, [sp, #0]
 8005438:	4669      	mov	r1, sp
 800543a:	4b05      	ldr	r3, [pc, #20]	; (8005450 <mbed::InterruptIn::rise(mbed::Callback<void ()>)+0x48>)
 800543c:	9303      	str	r3, [sp, #12]
 800543e:	f7ff ff86 	bl	800534e <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)>
 8005442:	4668      	mov	r0, sp
 8005444:	f7fb f90c 	bl	8000660 <mbed::Callback<void ()>::~Callback()>
 8005448:	462a      	mov	r2, r5
 800544a:	e7eb      	b.n	8005424 <mbed::InterruptIn::rise(mbed::Callback<void ()>)+0x1c>
 800544c:	08005303 	.word	0x08005303
 8005450:	08006a98 	.word	0x08006a98

08005454 <mbed::InterruptIn::fall(mbed::Callback<void ()>)>:
 8005454:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8005456:	460e      	mov	r6, r1
 8005458:	4604      	mov	r4, r0
 800545a:	f7fc fd07 	bl	8001e6c <core_util_critical_section_enter>
 800545e:	68f5      	ldr	r5, [r6, #12]
 8005460:	f104 0040 	add.w	r0, r4, #64	; 0x40
 8005464:	3420      	adds	r4, #32
 8005466:	b15d      	cbz	r5, 8005480 <mbed::InterruptIn::fall(mbed::Callback<void ()>)+0x2c>
 8005468:	4631      	mov	r1, r6
 800546a:	f7ff ff70 	bl	800534e <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)>
 800546e:	2201      	movs	r2, #1
 8005470:	2102      	movs	r1, #2
 8005472:	4620      	mov	r0, r4
 8005474:	f7fe f894 	bl	80035a0 <gpio_irq_set>
 8005478:	f7fc fd0e 	bl	8001e98 <core_util_critical_section_exit>
 800547c:	b004      	add	sp, #16
 800547e:	bd70      	pop	{r4, r5, r6, pc}
 8005480:	4b05      	ldr	r3, [pc, #20]	; (8005498 <mbed::InterruptIn::fall(mbed::Callback<void ()>)+0x44>)
 8005482:	9300      	str	r3, [sp, #0]
 8005484:	4669      	mov	r1, sp
 8005486:	4b05      	ldr	r3, [pc, #20]	; (800549c <mbed::InterruptIn::fall(mbed::Callback<void ()>)+0x48>)
 8005488:	9303      	str	r3, [sp, #12]
 800548a:	f7ff ff60 	bl	800534e <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)>
 800548e:	4668      	mov	r0, sp
 8005490:	f7fb f8e6 	bl	8000660 <mbed::Callback<void ()>::~Callback()>
 8005494:	462a      	mov	r2, r5
 8005496:	e7eb      	b.n	8005470 <mbed::InterruptIn::fall(mbed::Callback<void ()>)+0x1c>
 8005498:	08005303 	.word	0x08005303
 800549c:	08006a98 	.word	0x08006a98

080054a0 <mbed::Callback<void ()>::call() const>:
 80054a0:	68c3      	ldr	r3, [r0, #12]
 80054a2:	681b      	ldr	r3, [r3, #0]
 80054a4:	4718      	bx	r3

080054a6 <mbed::InterruptIn::_irq_handler(unsigned long, gpio_irq_event)>:
 80054a6:	2901      	cmp	r1, #1
 80054a8:	b508      	push	{r3, lr}
 80054aa:	d002      	beq.n	80054b2 <mbed::InterruptIn::_irq_handler(unsigned long, gpio_irq_event)+0xc>
 80054ac:	2902      	cmp	r1, #2
 80054ae:	d004      	beq.n	80054ba <mbed::InterruptIn::_irq_handler(unsigned long, gpio_irq_event)+0x14>
 80054b0:	bd08      	pop	{r3, pc}
 80054b2:	3030      	adds	r0, #48	; 0x30
 80054b4:	f7ff fff4 	bl	80054a0 <mbed::Callback<void ()>::call() const>
 80054b8:	bd08      	pop	{r3, pc}
 80054ba:	3040      	adds	r0, #64	; 0x40
 80054bc:	e7fa      	b.n	80054b4 <mbed::InterruptIn::_irq_handler(unsigned long, gpio_irq_event)+0xe>

080054be <mbed::donothing()>:
 80054be:	4770      	bx	lr

080054c0 <mbed::SerialBase::lock()>:
 80054c0:	4770      	bx	lr

080054c2 <mbed::SerialBase::unlock()>:
 80054c2:	4770      	bx	lr

080054c4 <mbed::SerialBase::_irq_handler(unsigned long, SerialIrq)>:
 80054c4:	eb00 1201 	add.w	r2, r0, r1, lsl #4
 80054c8:	f102 0098 	add.w	r0, r2, #152	; 0x98
 80054cc:	f8d2 30a4 	ldr.w	r3, [r2, #164]	; 0xa4
 80054d0:	681b      	ldr	r3, [r3, #0]
 80054d2:	4718      	bx	r3

080054d4 <CThunk<mbed::SerialBase>::trampoline(mbed::SerialBase*, void*, void (mbed::SerialBase::**)(void*))>:
 80054d4:	b410      	push	{r4}
 80054d6:	b180      	cbz	r0, 80054fa <CThunk<mbed::SerialBase>::trampoline(mbed::SerialBase*, void*, void (mbed::SerialBase::**)(void*))+0x26>
 80054d8:	6814      	ldr	r4, [r2, #0]
 80054da:	6853      	ldr	r3, [r2, #4]
 80054dc:	b90c      	cbnz	r4, 80054e2 <CThunk<mbed::SerialBase>::trampoline(mbed::SerialBase*, void*, void (mbed::SerialBase::**)(void*))+0xe>
 80054de:	07da      	lsls	r2, r3, #31
 80054e0:	d50b      	bpl.n	80054fa <CThunk<mbed::SerialBase>::trampoline(mbed::SerialBase*, void*, void (mbed::SerialBase::**)(void*))+0x26>
 80054e2:	f013 0f01 	tst.w	r3, #1
 80054e6:	ea4f 0363 	mov.w	r3, r3, asr #1
 80054ea:	bf1c      	itt	ne
 80054ec:	58c2      	ldrne	r2, [r0, r3]
 80054ee:	5914      	ldrne	r4, [r2, r4]
 80054f0:	4418      	add	r0, r3
 80054f2:	4623      	mov	r3, r4
 80054f4:	f85d 4b04 	ldr.w	r4, [sp], #4
 80054f8:	4718      	bx	r3
 80054fa:	f85d 4b04 	ldr.w	r4, [sp], #4
 80054fe:	4770      	bx	lr

08005500 <mbed::SerialBase::baud(int)>:
 8005500:	b570      	push	{r4, r5, r6, lr}
 8005502:	4605      	mov	r5, r0
 8005504:	4604      	mov	r4, r0
 8005506:	f855 3b4c 	ldr.w	r3, [r5], #76
 800550a:	460e      	mov	r6, r1
 800550c:	681b      	ldr	r3, [r3, #0]
 800550e:	4798      	blx	r3
 8005510:	4628      	mov	r0, r5
 8005512:	4631      	mov	r1, r6
 8005514:	f7fe fe60 	bl	80041d8 <serial_baud>
 8005518:	6823      	ldr	r3, [r4, #0]
 800551a:	f8c4 60b8 	str.w	r6, [r4, #184]	; 0xb8
 800551e:	4620      	mov	r0, r4
 8005520:	685b      	ldr	r3, [r3, #4]
 8005522:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8005526:	4718      	bx	r3

08005528 <mbed::SerialBase::SerialBase(PinName, PinName, int)>:
 8005528:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800552c:	b087      	sub	sp, #28
 800552e:	2500      	movs	r5, #0
 8005530:	4691      	mov	r9, r2
 8005532:	9500      	str	r5, [sp, #0]
 8005534:	4602      	mov	r2, r0
 8005536:	9501      	str	r5, [sp, #4]
 8005538:	4604      	mov	r4, r0
 800553a:	4688      	mov	r8, r1
 800553c:	461f      	mov	r7, r3
 800553e:	e89d 0003 	ldmia.w	sp, {r0, r1}
 8005542:	4b27      	ldr	r3, [pc, #156]	; (80055e0 <mbed::SerialBase::SerialBase(PinName, PinName, int)+0xb8>)
 8005544:	f842 3b08 	str.w	r3, [r2], #8
 8005548:	4b26      	ldr	r3, [pc, #152]	; (80055e4 <mbed::SerialBase::SerialBase(PinName, PinName, int)+0xbc>)
 800554a:	e882 0003 	stmia.w	r2, {r0, r1}
 800554e:	6123      	str	r3, [r4, #16]
 8005550:	f248 0307 	movw	r3, #32775	; 0x8007
 8005554:	6163      	str	r3, [r4, #20]
 8005556:	4b24      	ldr	r3, [pc, #144]	; (80055e8 <mbed::SerialBase::SerialBase(PinName, PinName, int)+0xc0>)
 8005558:	61e5      	str	r5, [r4, #28]
 800555a:	61a4      	str	r4, [r4, #24]
 800555c:	6222      	str	r2, [r4, #32]
 800555e:	6263      	str	r3, [r4, #36]	; 0x24
 8005560:	f3bf 8f6f 	isb	sy
 8005564:	f3bf 8f4f 	dsb	sy
 8005568:	f104 064c 	add.w	r6, r4, #76	; 0x4c
 800556c:	224c      	movs	r2, #76	; 0x4c
 800556e:	6365      	str	r5, [r4, #52]	; 0x34
 8005570:	6465      	str	r5, [r4, #68]	; 0x44
 8005572:	f884 5048 	strb.w	r5, [r4, #72]	; 0x48
 8005576:	f884 5049 	strb.w	r5, [r4, #73]	; 0x49
 800557a:	4630      	mov	r0, r6
 800557c:	f000 fd45 	bl	800600a <memset>
 8005580:	a902      	add	r1, sp, #8
 8005582:	f8c4 50a4 	str.w	r5, [r4, #164]	; 0xa4
 8005586:	f8c4 50b4 	str.w	r5, [r4, #180]	; 0xb4
 800558a:	f8c4 70b8 	str.w	r7, [r4, #184]	; 0xb8
 800558e:	4d17      	ldr	r5, [pc, #92]	; (80055ec <mbed::SerialBase::SerialBase(PinName, PinName, int)+0xc4>)
 8005590:	4f17      	ldr	r7, [pc, #92]	; (80055f0 <mbed::SerialBase::SerialBase(PinName, PinName, int)+0xc8>)
 8005592:	9702      	str	r7, [sp, #8]
 8005594:	f104 0098 	add.w	r0, r4, #152	; 0x98
 8005598:	9505      	str	r5, [sp, #20]
 800559a:	f7ff fed8 	bl	800534e <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)>
 800559e:	a802      	add	r0, sp, #8
 80055a0:	f7fb f85e 	bl	8000660 <mbed::Callback<void ()>::~Callback()>
 80055a4:	a902      	add	r1, sp, #8
 80055a6:	f104 00a8 	add.w	r0, r4, #168	; 0xa8
 80055aa:	9702      	str	r7, [sp, #8]
 80055ac:	9505      	str	r5, [sp, #20]
 80055ae:	f7ff fece 	bl	800534e <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)>
 80055b2:	a802      	add	r0, sp, #8
 80055b4:	f7fb f854 	bl	8000660 <mbed::Callback<void ()>::~Callback()>
 80055b8:	464a      	mov	r2, r9
 80055ba:	4641      	mov	r1, r8
 80055bc:	4630      	mov	r0, r6
 80055be:	f7fe fd6d 	bl	800409c <serial_init>
 80055c2:	f8d4 10b8 	ldr.w	r1, [r4, #184]	; 0xb8
 80055c6:	4630      	mov	r0, r6
 80055c8:	f7fe fe06 	bl	80041d8 <serial_baud>
 80055cc:	4630      	mov	r0, r6
 80055ce:	4622      	mov	r2, r4
 80055d0:	4908      	ldr	r1, [pc, #32]	; (80055f4 <mbed::SerialBase::SerialBase(PinName, PinName, int)+0xcc>)
 80055d2:	f7fe fe05 	bl	80041e0 <serial_irq_handler>
 80055d6:	4620      	mov	r0, r4
 80055d8:	b007      	add	sp, #28
 80055da:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80055de:	bf00      	nop
 80055e0:	08007384 	.word	0x08007384
 80055e4:	e890a001 	.word	0xe890a001
 80055e8:	080054d5 	.word	0x080054d5
 80055ec:	08006a98 	.word	0x08006a98
 80055f0:	080054bf 	.word	0x080054bf
 80055f4:	080054c5 	.word	0x080054c5

080055f8 <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)>:
 80055f8:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 80055fc:	4605      	mov	r5, r0
 80055fe:	4688      	mov	r8, r1
 8005600:	f855 3b4c 	ldr.w	r3, [r5], #76
 8005604:	681b      	ldr	r3, [r3, #0]
 8005606:	4604      	mov	r4, r0
 8005608:	4616      	mov	r6, r2
 800560a:	4798      	blx	r3
 800560c:	f7fc fc2e 	bl	8001e6c <core_util_critical_section_enter>
 8005610:	f8d8 700c 	ldr.w	r7, [r8, #12]
 8005614:	0130      	lsls	r0, r6, #4
 8005616:	b197      	cbz	r7, 800563e <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)+0x46>
 8005618:	3098      	adds	r0, #152	; 0x98
 800561a:	4641      	mov	r1, r8
 800561c:	4420      	add	r0, r4
 800561e:	f7ff fe96 	bl	800534e <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)>
 8005622:	2201      	movs	r2, #1
 8005624:	4631      	mov	r1, r6
 8005626:	4628      	mov	r0, r5
 8005628:	f7fe fde6 	bl	80041f8 <serial_irq_set>
 800562c:	f7fc fc34 	bl	8001e98 <core_util_critical_section_exit>
 8005630:	6823      	ldr	r3, [r4, #0]
 8005632:	4620      	mov	r0, r4
 8005634:	685b      	ldr	r3, [r3, #4]
 8005636:	4798      	blx	r3
 8005638:	b004      	add	sp, #16
 800563a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800563e:	4b07      	ldr	r3, [pc, #28]	; (800565c <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)+0x64>)
 8005640:	9300      	str	r3, [sp, #0]
 8005642:	3098      	adds	r0, #152	; 0x98
 8005644:	4b06      	ldr	r3, [pc, #24]	; (8005660 <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)+0x68>)
 8005646:	9303      	str	r3, [sp, #12]
 8005648:	4669      	mov	r1, sp
 800564a:	4420      	add	r0, r4
 800564c:	f7ff fe7f 	bl	800534e <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)>
 8005650:	4668      	mov	r0, sp
 8005652:	f7fb f805 	bl	8000660 <mbed::Callback<void ()>::~Callback()>
 8005656:	463a      	mov	r2, r7
 8005658:	e7e4      	b.n	8005624 <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)+0x2c>
 800565a:	bf00      	nop
 800565c:	080054bf 	.word	0x080054bf
 8005660:	08006a98 	.word	0x08006a98

08005664 <mbed::TimerEvent::irq(unsigned long)>:
 8005664:	6803      	ldr	r3, [r0, #0]
 8005666:	689b      	ldr	r3, [r3, #8]
 8005668:	4718      	bx	r3
	...

0800566c <mbed::TimerEvent::TimerEvent()>:
 800566c:	4b07      	ldr	r3, [pc, #28]	; (800568c <mbed::TimerEvent::TimerEvent()+0x20>)
 800566e:	b510      	push	{r4, lr}
 8005670:	6003      	str	r3, [r0, #0]
 8005672:	2300      	movs	r3, #0
 8005674:	6043      	str	r3, [r0, #4]
 8005676:	6083      	str	r3, [r0, #8]
 8005678:	60c3      	str	r3, [r0, #12]
 800567a:	4604      	mov	r4, r0
 800567c:	f7fc faf8 	bl	8001c70 <get_us_ticker_data>
 8005680:	4903      	ldr	r1, [pc, #12]	; (8005690 <mbed::TimerEvent::TimerEvent()+0x24>)
 8005682:	6120      	str	r0, [r4, #16]
 8005684:	f7fc fafe 	bl	8001c84 <ticker_set_handler>
 8005688:	4620      	mov	r0, r4
 800568a:	bd10      	pop	{r4, pc}
 800568c:	0800739c 	.word	0x0800739c
 8005690:	08005665 	.word	0x08005665

08005694 <mbed::TimerEvent::insert(unsigned long)>:
 8005694:	4603      	mov	r3, r0
 8005696:	460a      	mov	r2, r1
 8005698:	1d01      	adds	r1, r0, #4
 800569a:	6900      	ldr	r0, [r0, #16]
 800569c:	f7fc bb1e 	b.w	8001cdc <ticker_insert_event>

080056a0 <mbed::TimerEvent::remove()>:
 80056a0:	1d01      	adds	r1, r0, #4
 80056a2:	6900      	ldr	r0, [r0, #16]
 80056a4:	f7fc bb3b 	b.w	8001d1e <ticker_remove_event>

080056a8 <mbed::TimerEvent::~TimerEvent()>:
 80056a8:	b510      	push	{r4, lr}
 80056aa:	4b03      	ldr	r3, [pc, #12]	; (80056b8 <mbed::TimerEvent::~TimerEvent()+0x10>)
 80056ac:	6003      	str	r3, [r0, #0]
 80056ae:	4604      	mov	r4, r0
 80056b0:	f7ff fff6 	bl	80056a0 <mbed::TimerEvent::remove()>
 80056b4:	4620      	mov	r0, r4
 80056b6:	bd10      	pop	{r4, pc}
 80056b8:	0800739c 	.word	0x0800739c

080056bc <mbed::CircularBuffer<mbed::Transaction<mbed::SPI>, 2ul, unsigned long>::~CircularBuffer()>:
 80056bc:	b538      	push	{r3, r4, r5, lr}
 80056be:	4604      	mov	r4, r0
 80056c0:	b148      	cbz	r0, 80056d6 <mbed::CircularBuffer<mbed::Transaction<mbed::SPI>, 2ul, unsigned long>::~CircularBuffer()+0x1a>
 80056c2:	3058      	adds	r0, #88	; 0x58
 80056c4:	42a0      	cmp	r0, r4
 80056c6:	d006      	beq.n	80056d6 <mbed::CircularBuffer<mbed::Transaction<mbed::SPI>, 2ul, unsigned long>::~CircularBuffer()+0x1a>
 80056c8:	f1a0 052c 	sub.w	r5, r0, #44	; 0x2c
 80056cc:	3814      	subs	r0, #20
 80056ce:	f7fc f908 	bl	80018e2 <mbed::Callback<void (int)>::~Callback()>
 80056d2:	4628      	mov	r0, r5
 80056d4:	e7f6      	b.n	80056c4 <mbed::CircularBuffer<mbed::Transaction<mbed::SPI>, 2ul, unsigned long>::~CircularBuffer()+0x8>
 80056d6:	4620      	mov	r0, r4
 80056d8:	bd38      	pop	{r3, r4, r5, pc}
	...

080056dc <_GLOBAL__sub_I__ZN4mbed3SPI19_transaction_bufferE>:
 80056dc:	b570      	push	{r4, r5, r6, lr}
 80056de:	4c0e      	ldr	r4, [pc, #56]	; (8005718 <_GLOBAL__sub_I__ZN4mbed3SPI19_transaction_bufferE+0x3c>)
 80056e0:	4620      	mov	r0, r4
 80056e2:	2500      	movs	r5, #0
 80056e4:	2628      	movs	r6, #40	; 0x28
 80056e6:	4632      	mov	r2, r6
 80056e8:	4629      	mov	r1, r5
 80056ea:	f840 5b04 	str.w	r5, [r0], #4
 80056ee:	f000 fc8c 	bl	800600a <memset>
 80056f2:	4632      	mov	r2, r6
 80056f4:	4629      	mov	r1, r5
 80056f6:	f104 0030 	add.w	r0, r4, #48	; 0x30
 80056fa:	62e5      	str	r5, [r4, #44]	; 0x2c
 80056fc:	f000 fc85 	bl	800600a <memset>
 8005700:	65a5      	str	r5, [r4, #88]	; 0x58
 8005702:	4620      	mov	r0, r4
 8005704:	65e5      	str	r5, [r4, #92]	; 0x5c
 8005706:	4a05      	ldr	r2, [pc, #20]	; (800571c <_GLOBAL__sub_I__ZN4mbed3SPI19_transaction_bufferE+0x40>)
 8005708:	f884 5060 	strb.w	r5, [r4, #96]	; 0x60
 800570c:	4904      	ldr	r1, [pc, #16]	; (8005720 <_GLOBAL__sub_I__ZN4mbed3SPI19_transaction_bufferE+0x44>)
 800570e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8005712:	f000 b927 	b.w	8005964 <__aeabi_atexit>
 8005716:	bf00      	nop
 8005718:	200021bc 	.word	0x200021bc
 800571c:	20000198 	.word	0x20000198
 8005720:	080056bd 	.word	0x080056bd

08005724 <__wrap__malloc_r>:
 8005724:	f000 bcc8 	b.w	80060b8 <_malloc_r>

08005728 <__wrap__realloc_r>:
 8005728:	f000 bd24 	b.w	8006174 <_realloc_r>

0800572c <__wrap__free_r>:
 800572c:	f000 bc76 	b.w	800601c <_free_r>

08005730 <wait_us>:
 8005730:	b570      	push	{r4, r5, r6, lr}
 8005732:	4605      	mov	r5, r0
 8005734:	f7fe f952 	bl	80039dc <us_ticker_read>
 8005738:	f44f 747a 	mov.w	r4, #1000	; 0x3e8
 800573c:	fb95 f4f4 	sdiv	r4, r5, r4
 8005740:	2c00      	cmp	r4, #0
 8005742:	4606      	mov	r6, r0
 8005744:	dd02      	ble.n	800574c <wait_us+0x1c>
 8005746:	f7fc fb8b 	bl	8001e60 <core_util_are_interrupts_enabled>
 800574a:	b928      	cbnz	r0, 8005758 <wait_us+0x28>
 800574c:	f7fe f946 	bl	80039dc <us_ticker_read>
 8005750:	1b80      	subs	r0, r0, r6
 8005752:	42a8      	cmp	r0, r5
 8005754:	d3fa      	bcc.n	800574c <wait_us+0x1c>
 8005756:	bd70      	pop	{r4, r5, r6, pc}
 8005758:	4620      	mov	r0, r4
 800575a:	f000 f92b 	bl	80059b4 <rtos::Thread::wait(unsigned long)>
 800575e:	e7f5      	b.n	800574c <wait_us+0x1c>

08005760 <wait_ms>:
 8005760:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8005764:	4358      	muls	r0, r3
 8005766:	f7ff bfe3 	b.w	8005730 <wait_us>
	...

0800576c <init_serial()>:
 800576c:	b508      	push	{r3, lr}
 800576e:	4b08      	ldr	r3, [pc, #32]	; (8005790 <init_serial()+0x24>)
 8005770:	681b      	ldr	r3, [r3, #0]
 8005772:	b95b      	cbnz	r3, 800578c <init_serial()+0x20>
 8005774:	2102      	movs	r1, #2
 8005776:	4807      	ldr	r0, [pc, #28]	; (8005794 <init_serial()+0x28>)
 8005778:	2203      	movs	r2, #3
 800577a:	f7fe fc8f 	bl	800409c <serial_init>
 800577e:	f44f 5116 	mov.w	r1, #9600	; 0x2580
 8005782:	4804      	ldr	r0, [pc, #16]	; (8005794 <init_serial()+0x28>)
 8005784:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8005788:	f7fe bd26 	b.w	80041d8 <serial_baud>
 800578c:	bd08      	pop	{r3, pc}
 800578e:	bf00      	nop
 8005790:	20001fb8 	.word	0x20001fb8
 8005794:	20002dd4 	.word	0x20002dd4

08005798 <_close>:
 8005798:	2802      	cmp	r0, #2
 800579a:	b510      	push	{r4, lr}
 800579c:	4604      	mov	r4, r0
 800579e:	dc01      	bgt.n	80057a4 <_close+0xc>
 80057a0:	2000      	movs	r0, #0
 80057a2:	bd10      	pop	{r4, pc}
 80057a4:	f000 f9f0 	bl	8005b88 <__errno>
 80057a8:	2309      	movs	r3, #9
 80057aa:	6003      	str	r3, [r0, #0]
 80057ac:	3c03      	subs	r4, #3
 80057ae:	4b09      	ldr	r3, [pc, #36]	; (80057d4 <_close+0x3c>)
 80057b0:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 80057b4:	2200      	movs	r2, #0
 80057b6:	f843 2024 	str.w	r2, [r3, r4, lsl #2]
 80057ba:	b140      	cbz	r0, 80057ce <_close+0x36>
 80057bc:	6803      	ldr	r3, [r0, #0]
 80057be:	691b      	ldr	r3, [r3, #16]
 80057c0:	4798      	blx	r3
 80057c2:	1e04      	subs	r4, r0, #0
 80057c4:	daec      	bge.n	80057a0 <_close+0x8>
 80057c6:	f000 f9df 	bl	8005b88 <__errno>
 80057ca:	4264      	negs	r4, r4
 80057cc:	6004      	str	r4, [r0, #0]
 80057ce:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80057d2:	bd10      	pop	{r4, pc}
 80057d4:	20002220 	.word	0x20002220

080057d8 <_write>:
 80057d8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80057da:	4605      	mov	r5, r0
 80057dc:	460e      	mov	r6, r1
 80057de:	4614      	mov	r4, r2
 80057e0:	f000 f9d2 	bl	8005b88 <__errno>
 80057e4:	2309      	movs	r3, #9
 80057e6:	2d02      	cmp	r5, #2
 80057e8:	6003      	str	r3, [r0, #0]
 80057ea:	dc0f      	bgt.n	800580c <_write+0x34>
 80057ec:	4b12      	ldr	r3, [pc, #72]	; (8005838 <_write+0x60>)
 80057ee:	681b      	ldr	r3, [r3, #0]
 80057f0:	b90b      	cbnz	r3, 80057f6 <_write+0x1e>
 80057f2:	f7ff ffbb 	bl	800576c <init_serial()>
 80057f6:	4635      	mov	r5, r6
 80057f8:	1937      	adds	r7, r6, r4
 80057fa:	4e10      	ldr	r6, [pc, #64]	; (800583c <_write+0x64>)
 80057fc:	42bd      	cmp	r5, r7
 80057fe:	d015      	beq.n	800582c <_write+0x54>
 8005800:	f815 1b01 	ldrb.w	r1, [r5], #1
 8005804:	4630      	mov	r0, r6
 8005806:	f7fe fd69 	bl	80042dc <serial_putc>
 800580a:	e7f7      	b.n	80057fc <_write+0x24>
 800580c:	3d03      	subs	r5, #3
 800580e:	4b0c      	ldr	r3, [pc, #48]	; (8005840 <_write+0x68>)
 8005810:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 8005814:	b160      	cbz	r0, 8005830 <_write+0x58>
 8005816:	6803      	ldr	r3, [r0, #0]
 8005818:	4622      	mov	r2, r4
 800581a:	68db      	ldr	r3, [r3, #12]
 800581c:	4631      	mov	r1, r6
 800581e:	4798      	blx	r3
 8005820:	1e04      	subs	r4, r0, #0
 8005822:	da03      	bge.n	800582c <_write+0x54>
 8005824:	f000 f9b0 	bl	8005b88 <__errno>
 8005828:	4263      	negs	r3, r4
 800582a:	6003      	str	r3, [r0, #0]
 800582c:	4620      	mov	r0, r4
 800582e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8005830:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
 8005834:	e7fa      	b.n	800582c <_write+0x54>
 8005836:	bf00      	nop
 8005838:	20001fb8 	.word	0x20001fb8
 800583c:	20002dd4 	.word	0x20002dd4
 8005840:	20002220 	.word	0x20002220

08005844 <_read>:
 8005844:	b570      	push	{r4, r5, r6, lr}
 8005846:	4604      	mov	r4, r0
 8005848:	460d      	mov	r5, r1
 800584a:	4616      	mov	r6, r2
 800584c:	f000 f99c 	bl	8005b88 <__errno>
 8005850:	2309      	movs	r3, #9
 8005852:	2c02      	cmp	r4, #2
 8005854:	6003      	str	r3, [r0, #0]
 8005856:	dc0b      	bgt.n	8005870 <_read+0x2c>
 8005858:	4b0f      	ldr	r3, [pc, #60]	; (8005898 <_read+0x54>)
 800585a:	681b      	ldr	r3, [r3, #0]
 800585c:	b90b      	cbnz	r3, 8005862 <_read+0x1e>
 800585e:	f7ff ff85 	bl	800576c <init_serial()>
 8005862:	480e      	ldr	r0, [pc, #56]	; (800589c <_read+0x58>)
 8005864:	f7fe fd1e 	bl	80042a4 <serial_getc>
 8005868:	2401      	movs	r4, #1
 800586a:	7028      	strb	r0, [r5, #0]
 800586c:	4620      	mov	r0, r4
 800586e:	bd70      	pop	{r4, r5, r6, pc}
 8005870:	3c03      	subs	r4, #3
 8005872:	4b0b      	ldr	r3, [pc, #44]	; (80058a0 <_read+0x5c>)
 8005874:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 8005878:	b158      	cbz	r0, 8005892 <_read+0x4e>
 800587a:	6803      	ldr	r3, [r0, #0]
 800587c:	4632      	mov	r2, r6
 800587e:	689b      	ldr	r3, [r3, #8]
 8005880:	4629      	mov	r1, r5
 8005882:	4798      	blx	r3
 8005884:	1e04      	subs	r4, r0, #0
 8005886:	daf1      	bge.n	800586c <_read+0x28>
 8005888:	f000 f97e 	bl	8005b88 <__errno>
 800588c:	4263      	negs	r3, r4
 800588e:	6003      	str	r3, [r0, #0]
 8005890:	e7ec      	b.n	800586c <_read+0x28>
 8005892:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
 8005896:	e7e9      	b.n	800586c <_read+0x28>
 8005898:	20001fb8 	.word	0x20001fb8
 800589c:	20002dd4 	.word	0x20002dd4
 80058a0:	20002220 	.word	0x20002220

080058a4 <_lseek>:
 80058a4:	b570      	push	{r4, r5, r6, lr}
 80058a6:	4604      	mov	r4, r0
 80058a8:	460d      	mov	r5, r1
 80058aa:	4616      	mov	r6, r2
 80058ac:	f000 f96c 	bl	8005b88 <__errno>
 80058b0:	2309      	movs	r3, #9
 80058b2:	2c02      	cmp	r4, #2
 80058b4:	6003      	str	r3, [r0, #0]
 80058b6:	dd0b      	ble.n	80058d0 <_lseek+0x2c>
 80058b8:	3c03      	subs	r4, #3
 80058ba:	4b08      	ldr	r3, [pc, #32]	; (80058dc <_lseek+0x38>)
 80058bc:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 80058c0:	b140      	cbz	r0, 80058d4 <_lseek+0x30>
 80058c2:	6803      	ldr	r3, [r0, #0]
 80058c4:	4632      	mov	r2, r6
 80058c6:	4629      	mov	r1, r5
 80058c8:	69db      	ldr	r3, [r3, #28]
 80058ca:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80058ce:	4718      	bx	r3
 80058d0:	2000      	movs	r0, #0
 80058d2:	bd70      	pop	{r4, r5, r6, pc}
 80058d4:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80058d8:	bd70      	pop	{r4, r5, r6, pc}
 80058da:	bf00      	nop
 80058dc:	20002220 	.word	0x20002220

080058e0 <software_init_hook>:
 80058e0:	b508      	push	{r3, lr}
 80058e2:	f7fe fd0d 	bl	8004300 <mbed_sdk_init>
 80058e6:	f7fc fb53 	bl	8001f90 <software_init_hook_rtos>
 80058ea:	bd08      	pop	{r3, pc}

080058ec <mbed_main>:
 80058ec:	4770      	bx	lr

080058ee <__wrap_main>:
 80058ee:	b508      	push	{r3, lr}
 80058f0:	f7ff fffc 	bl	80058ec <mbed_main>
 80058f4:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80058f8:	f7fb bdf8 	b.w	80014ec <main>

080058fc <_sbrk>:
 80058fc:	4a0c      	ldr	r2, [pc, #48]	; (8005930 <_sbrk+0x34>)
 80058fe:	6813      	ldr	r3, [r2, #0]
 8005900:	b510      	push	{r4, lr}
 8005902:	4418      	add	r0, r3
 8005904:	f3ef 8108 	mrs	r1, MSP
 8005908:	4288      	cmp	r0, r1
 800590a:	d305      	bcc.n	8005918 <_sbrk+0x1c>
 800590c:	4b09      	ldr	r3, [pc, #36]	; (8005934 <_sbrk+0x38>)
 800590e:	220c      	movs	r2, #12
 8005910:	601a      	str	r2, [r3, #0]
 8005912:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8005916:	bd10      	pop	{r4, pc}
 8005918:	4907      	ldr	r1, [pc, #28]	; (8005938 <_sbrk+0x3c>)
 800591a:	680c      	ldr	r4, [r1, #0]
 800591c:	b124      	cbz	r4, 8005928 <_sbrk+0x2c>
 800591e:	4907      	ldr	r1, [pc, #28]	; (800593c <_sbrk+0x40>)
 8005920:	6809      	ldr	r1, [r1, #0]
 8005922:	4421      	add	r1, r4
 8005924:	4288      	cmp	r0, r1
 8005926:	d2f1      	bcs.n	800590c <_sbrk+0x10>
 8005928:	6010      	str	r0, [r2, #0]
 800592a:	4618      	mov	r0, r3
 800592c:	bd10      	pop	{r4, pc}
 800592e:	bf00      	nop
 8005930:	200001b8 	.word	0x200001b8
 8005934:	20002e24 	.word	0x20002e24
 8005938:	20002320 	.word	0x20002320
 800593c:	20002324 	.word	0x20002324

08005940 <_exit>:
 8005940:	4c07      	ldr	r4, [pc, #28]	; (8005960 <_exit+0x20>)
 8005942:	b508      	push	{r3, lr}
 8005944:	6823      	ldr	r3, [r4, #0]
 8005946:	4605      	mov	r5, r0
 8005948:	6898      	ldr	r0, [r3, #8]
 800594a:	f000 f9d5 	bl	8005cf8 <fflush>
 800594e:	6823      	ldr	r3, [r4, #0]
 8005950:	68d8      	ldr	r0, [r3, #12]
 8005952:	f000 f9d1 	bl	8005cf8 <fflush>
 8005956:	b10d      	cbz	r5, 800595c <_exit+0x1c>
 8005958:	f7fc fa6c 	bl	8001e34 <mbed_die>
 800595c:	e7fe      	b.n	800595c <_exit+0x1c>
 800595e:	bf00      	nop
 8005960:	200001bc 	.word	0x200001bc

08005964 <__aeabi_atexit>:
 8005964:	2001      	movs	r0, #1
 8005966:	4770      	bx	lr

08005968 <__wrap_exit>:
 8005968:	b508      	push	{r3, lr}
 800596a:	f7ff ffe9 	bl	8005940 <_exit>

0800596e <__malloc_lock>:
 800596e:	b508      	push	{r3, lr}
 8005970:	f7fc fb1c 	bl	8001fac <__rtos_malloc_lock>
 8005974:	bd08      	pop	{r3, pc}

08005976 <__malloc_unlock>:
 8005976:	b508      	push	{r3, lr}
 8005978:	f7fc fb20 	bl	8001fbc <__rtos_malloc_unlock>
 800597c:	bd08      	pop	{r3, pc}
	...

08005980 <operator new[](unsigned int)>:
 8005980:	b510      	push	{r4, lr}
 8005982:	f000 fab9 	bl	8005ef8 <malloc>
 8005986:	4604      	mov	r4, r0
 8005988:	b910      	cbnz	r0, 8005990 <operator new[](unsigned int)+0x10>
 800598a:	4802      	ldr	r0, [pc, #8]	; (8005994 <operator new[](unsigned int)+0x14>)
 800598c:	f7fc fa98 	bl	8001ec0 <error>
 8005990:	4620      	mov	r0, r4
 8005992:	bd10      	pop	{r4, pc}
 8005994:	080073a8 	.word	0x080073a8

08005998 <operator delete[](void*)>:
 8005998:	b108      	cbz	r0, 800599e <operator delete[](void*)+0x6>
 800599a:	f000 bab5 	b.w	8005f08 <free>
 800599e:	4770      	bx	lr

080059a0 <operator delete(void*)>:
 80059a0:	f7ff bffa 	b.w	8005998 <operator delete[](void*)>

080059a4 <thread_terminate_hook>:
 80059a4:	4b02      	ldr	r3, [pc, #8]	; (80059b0 <thread_terminate_hook+0xc>)
 80059a6:	681b      	ldr	r3, [r3, #0]
 80059a8:	b103      	cbz	r3, 80059ac <thread_terminate_hook+0x8>
 80059aa:	4718      	bx	r3
 80059ac:	4770      	bx	lr
 80059ae:	bf00      	nop
 80059b0:	20002328 	.word	0x20002328

080059b4 <rtos::Thread::wait(unsigned long)>:
 80059b4:	f7fc bfd0 	b.w	8002958 <osDelay>

080059b8 <rt_set_PSP>:
 80059b8:	f380 8809 	msr	PSP, r0
 80059bc:	4770      	bx	lr

080059be <rt_get_PSP>:
 80059be:	f3ef 8009 	mrs	r0, PSP
 80059c2:	4770      	bx	lr

080059c4 <os_set_env>:
 80059c4:	4668      	mov	r0, sp
 80059c6:	f380 8809 	msr	PSP, r0
 80059ca:	485a      	ldr	r0, [pc, #360]	; (8005b34 <OS_Tick_Handler+0x10>)
 80059cc:	7800      	ldrb	r0, [r0, #0]
 80059ce:	07c0      	lsls	r0, r0, #31
 80059d0:	bf14      	ite	ne
 80059d2:	2002      	movne	r0, #2
 80059d4:	2003      	moveq	r0, #3
 80059d6:	f380 8814 	msr	CONTROL, r0
 80059da:	4770      	bx	lr

080059dc <_alloc_box>:
 80059dc:	f8df c158 	ldr.w	r12, [pc, #344]	; 8005b38 <OS_Tick_Handler+0x14>
 80059e0:	f3ef 8305 	mrs	r3, IPSR
 80059e4:	061b      	lsls	r3, r3, #24
 80059e6:	bf18      	it	ne
 80059e8:	4760      	bxne	r12
 80059ea:	f3ef 8314 	mrs	r3, CONTROL
 80059ee:	07db      	lsls	r3, r3, #31
 80059f0:	bf08      	it	eq
 80059f2:	4760      	bxeq	r12
 80059f4:	df00      	svc	0
 80059f6:	4770      	bx	lr

080059f8 <_free_box>:
 80059f8:	f8df c140 	ldr.w	r12, [pc, #320]	; 8005b3c <OS_Tick_Handler+0x18>
 80059fc:	f3ef 8305 	mrs	r3, IPSR
 8005a00:	061b      	lsls	r3, r3, #24
 8005a02:	bf18      	it	ne
 8005a04:	4760      	bxne	r12
 8005a06:	f3ef 8314 	mrs	r3, CONTROL
 8005a0a:	07db      	lsls	r3, r3, #31
 8005a0c:	bf08      	it	eq
 8005a0e:	4760      	bxeq	r12
 8005a10:	df00      	svc	0
 8005a12:	4770      	bx	lr

08005a14 <SVC_Handler>:
 8005a14:	f3ef 8009 	mrs	r0, PSP
 8005a18:	6981      	ldr	r1, [r0, #24]
 8005a1a:	f811 1c02 	ldrb.w	r1, [r1, #-2]
 8005a1e:	bbe1      	cbnz	r1, 8005a9a <SVC_User>
 8005a20:	e890 100f 	ldmia.w	r0, {r0, r1, r2, r3, r12}
 8005a24:	b510      	push	{r4, lr}
 8005a26:	47e0      	blx	r12
 8005a28:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8005a2c:	f3ef 8c09 	mrs	r12, PSP
 8005a30:	e88c 0007 	stmia.w	r12, {r0, r1, r2}
 8005a34:	4b42      	ldr	r3, [pc, #264]	; (8005b40 <OS_Tick_Handler+0x1c>)
 8005a36:	e893 0006 	ldmia.w	r3, {r1, r2}
 8005a3a:	4291      	cmp	r1, r2
 8005a3c:	bf08      	it	eq
 8005a3e:	4770      	bxeq	lr
 8005a40:	b941      	cbnz	r1, 8005a54 <SVC_ContextSave>
 8005a42:	f01e 0f10 	tst.w	lr, #16
 8005a46:	d116      	bne.n	8005a76 <SVC_ContextRestore>
 8005a48:	493e      	ldr	r1, [pc, #248]	; (8005b44 <OS_Tick_Handler+0x20>)
 8005a4a:	6808      	ldr	r0, [r1, #0]
 8005a4c:	f020 0001 	bic.w	r0, r0, #1
 8005a50:	6008      	str	r0, [r1, #0]
 8005a52:	e010      	b.n	8005a76 <SVC_ContextRestore>

08005a54 <SVC_ContextSave>:
 8005a54:	f01e 0f10 	tst.w	lr, #16
 8005a58:	bf06      	itte	eq
 8005a5a:	ed2c 8a10 	vstmdbeq	r12!, {s16-s31}
 8005a5e:	2001      	moveq	r0, #1
 8005a60:	2000      	movne	r0, #0
 8005a62:	f881 0025 	strb.w	r0, [r1, #37]	; 0x25
 8005a66:	e92c 0ff0 	stmdb	r12!, {r4, r5, r6, r7, r8, r9, r10, r11}
 8005a6a:	f8c1 c02c 	str.w	r12, [r1, #44]	; 0x2c
 8005a6e:	b40c      	push	{r2, r3}
 8005a70:	f7fc fc88 	bl	8002384 <rt_stk_check>
 8005a74:	bc0c      	pop	{r2, r3}

08005a76 <SVC_ContextRestore>:
 8005a76:	601a      	str	r2, [r3, #0]
 8005a78:	f8d2 c02c 	ldr.w	r12, [r2, #44]	; 0x2c
 8005a7c:	e8bc 0ff0 	ldmia.w	r12!, {r4, r5, r6, r7, r8, r9, r10, r11}
 8005a80:	f892 0025 	ldrb.w	r0, [r2, #37]	; 0x25
 8005a84:	2800      	cmp	r0, #0
 8005a86:	bf0e      	itee	eq
 8005a88:	f06f 0e02 	mvneq.w	lr, #2
 8005a8c:	f06f 0e12 	mvnne.w	lr, #18
 8005a90:	ecbc 8a10 	vldmiane	r12!, {s16-s31}
 8005a94:	f38c 8809 	msr	PSP, r12

08005a98 <SVC_Exit>:
 8005a98:	4770      	bx	lr

08005a9a <SVC_User>:
 8005a9a:	b510      	push	{r4, lr}
 8005a9c:	4a2a      	ldr	r2, [pc, #168]	; (8005b48 <OS_Tick_Handler+0x24>)
 8005a9e:	6812      	ldr	r2, [r2, #0]
 8005aa0:	4291      	cmp	r1, r2
 8005aa2:	d809      	bhi.n	8005ab8 <SVC_Done>
 8005aa4:	4c29      	ldr	r4, [pc, #164]	; (8005b4c <OS_Tick_Handler+0x28>)
 8005aa6:	f854 4021 	ldr.w	r4, [r4, r1, lsl #2]
 8005aaa:	e890 100f 	ldmia.w	r0, {r0, r1, r2, r3, r12}
 8005aae:	47a0      	blx	r4
 8005ab0:	f3ef 8c09 	mrs	r12, PSP
 8005ab4:	e88c 000f 	stmia.w	r12, {r0, r1, r2, r3}

08005ab8 <SVC_Done>:
 8005ab8:	bd10      	pop	{r4, pc}

08005aba <PendSV_Handler>:
 8005aba:	b510      	push	{r4, lr}
 8005abc:	f7fc fbee 	bl	800229c <rt_pop_req>

08005ac0 <Sys_Switch>:
 8005ac0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8005ac4:	4b1e      	ldr	r3, [pc, #120]	; (8005b40 <OS_Tick_Handler+0x1c>)
 8005ac6:	e893 0006 	ldmia.w	r3, {r1, r2}
 8005aca:	4291      	cmp	r1, r2
 8005acc:	bf08      	it	eq
 8005ace:	4770      	bxeq	lr
 8005ad0:	f3ef 8c09 	mrs	r12, PSP
 8005ad4:	f01e 0f10 	tst.w	lr, #16
 8005ad8:	bf06      	itte	eq
 8005ada:	ed2c 8a10 	vstmdbeq	r12!, {s16-s31}
 8005ade:	2001      	moveq	r0, #1
 8005ae0:	2000      	movne	r0, #0
 8005ae2:	f881 0025 	strb.w	r0, [r1, #37]	; 0x25
 8005ae6:	e92c 0ff0 	stmdb	r12!, {r4, r5, r6, r7, r8, r9, r10, r11}
 8005aea:	f8c1 c02c 	str.w	r12, [r1, #44]	; 0x2c
 8005aee:	b40c      	push	{r2, r3}
 8005af0:	f7fc fc48 	bl	8002384 <rt_stk_check>
 8005af4:	bc0c      	pop	{r2, r3}
 8005af6:	601a      	str	r2, [r3, #0]
 8005af8:	f8d2 c02c 	ldr.w	r12, [r2, #44]	; 0x2c
 8005afc:	e8bc 0ff0 	ldmia.w	r12!, {r4, r5, r6, r7, r8, r9, r10, r11}
 8005b00:	f892 0025 	ldrb.w	r0, [r2, #37]	; 0x25
 8005b04:	2800      	cmp	r0, #0
 8005b06:	bf0e      	itee	eq
 8005b08:	f06f 0e02 	mvneq.w	lr, #2
 8005b0c:	f06f 0e12 	mvnne.w	lr, #18
 8005b10:	ecbc 8a10 	vldmiane	r12!, {s16-s31}
 8005b14:	f38c 8809 	msr	PSP, r12

08005b18 <Sys_Exit>:
 8005b18:	4770      	bx	lr

08005b1a <SysTick_Handler>:
 8005b1a:	b510      	push	{r4, lr}
 8005b1c:	f7fc fc14 	bl	8002348 <rt_systick>
 8005b20:	f7ff bfce 	b.w	8005ac0 <Sys_Switch>

08005b24 <OS_Tick_Handler>:
 8005b24:	b510      	push	{r4, lr}
 8005b26:	f7fc fc0d 	bl	8002344 <os_tick_irqack>
 8005b2a:	f7fc fc0d 	bl	8002348 <rt_systick>
 8005b2e:	f7ff bfc7 	b.w	8005ac0 <Sys_Switch>
 8005b32:	0000      	.short	0x0000
 8005b34:	08006f16 	.word	0x08006f16
 8005b38:	080023f3 	.word	0x080023f3
 8005b3c:	0800240d 	.word	0x0800240d
 8005b40:	20002d4c 	.word	0x20002d4c
 8005b44:	e000ef34 	.word	0xe000ef34
 8005b48:	00000000 	.word	0x00000000
 8005b4c:	fffffffc 	.word	0xfffffffc

08005b50 <Reset_Handler>:
 8005b50:	f8df d020 	ldr.w	sp, [pc, #32]	; 8005b74 <LoopCopyDataInit+0x14>
 8005b54:	2100      	movs	r1, #0
 8005b56:	e003      	b.n	8005b60 <LoopCopyDataInit>

08005b58 <CopyDataInit>:
 8005b58:	4b07      	ldr	r3, [pc, #28]	; (8005b78 <LoopCopyDataInit+0x18>)
 8005b5a:	585b      	ldr	r3, [r3, r1]
 8005b5c:	5043      	str	r3, [r0, r1]
 8005b5e:	3104      	adds	r1, #4

08005b60 <LoopCopyDataInit>:
 8005b60:	4806      	ldr	r0, [pc, #24]	; (8005b7c <LoopCopyDataInit+0x1c>)
 8005b62:	4b07      	ldr	r3, [pc, #28]	; (8005b80 <LoopCopyDataInit+0x20>)
 8005b64:	1842      	adds	r2, r0, r1
 8005b66:	429a      	cmp	r2, r3
 8005b68:	d3f6      	bcc.n	8005b58 <CopyDataInit>
 8005b6a:	f7fe fca7 	bl	80044bc <SystemInit>
 8005b6e:	f7fb fe29 	bl	80017c4 <_start>
 8005b72:	4770      	bx	lr
 8005b74:	20020000 	.word	0x20020000
 8005b78:	0800746c 	.word	0x0800746c
 8005b7c:	20000198 	.word	0x20000198
 8005b80:	20000234 	.word	0x20000234

08005b84 <ADC_IRQHandler>:
 8005b84:	e7fe      	b.n	8005b84 <ADC_IRQHandler>
	...

08005b88 <__errno>:
 8005b88:	4b01      	ldr	r3, [pc, #4]	; (8005b90 <__errno+0x8>)
 8005b8a:	6818      	ldr	r0, [r3, #0]
 8005b8c:	4770      	bx	lr
 8005b8e:	bf00      	nop
 8005b90:	200001bc 	.word	0x200001bc

08005b94 <__sflush_r>:
 8005b94:	898a      	ldrh	r2, [r1, #12]
 8005b96:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8005b9a:	4605      	mov	r5, r0
 8005b9c:	0710      	lsls	r0, r2, #28
 8005b9e:	460c      	mov	r4, r1
 8005ba0:	d45a      	bmi.n	8005c58 <__sflush_r+0xc4>
 8005ba2:	684b      	ldr	r3, [r1, #4]
 8005ba4:	2b00      	cmp	r3, #0
 8005ba6:	dc05      	bgt.n	8005bb4 <__sflush_r+0x20>
 8005ba8:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8005baa:	2b00      	cmp	r3, #0
 8005bac:	dc02      	bgt.n	8005bb4 <__sflush_r+0x20>
 8005bae:	2000      	movs	r0, #0
 8005bb0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8005bb4:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8005bb6:	2e00      	cmp	r6, #0
 8005bb8:	d0f9      	beq.n	8005bae <__sflush_r+0x1a>
 8005bba:	2300      	movs	r3, #0
 8005bbc:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8005bc0:	682f      	ldr	r7, [r5, #0]
 8005bc2:	602b      	str	r3, [r5, #0]
 8005bc4:	d033      	beq.n	8005c2e <__sflush_r+0x9a>
 8005bc6:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8005bc8:	89a3      	ldrh	r3, [r4, #12]
 8005bca:	075a      	lsls	r2, r3, #29
 8005bcc:	d505      	bpl.n	8005bda <__sflush_r+0x46>
 8005bce:	6863      	ldr	r3, [r4, #4]
 8005bd0:	1ac0      	subs	r0, r0, r3
 8005bd2:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8005bd4:	b10b      	cbz	r3, 8005bda <__sflush_r+0x46>
 8005bd6:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8005bd8:	1ac0      	subs	r0, r0, r3
 8005bda:	2300      	movs	r3, #0
 8005bdc:	4602      	mov	r2, r0
 8005bde:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8005be0:	6a21      	ldr	r1, [r4, #32]
 8005be2:	4628      	mov	r0, r5
 8005be4:	47b0      	blx	r6
 8005be6:	1c43      	adds	r3, r0, #1
 8005be8:	89a3      	ldrh	r3, [r4, #12]
 8005bea:	d106      	bne.n	8005bfa <__sflush_r+0x66>
 8005bec:	6829      	ldr	r1, [r5, #0]
 8005bee:	291d      	cmp	r1, #29
 8005bf0:	d84b      	bhi.n	8005c8a <__sflush_r+0xf6>
 8005bf2:	4a2b      	ldr	r2, [pc, #172]	; (8005ca0 <__sflush_r+0x10c>)
 8005bf4:	40ca      	lsrs	r2, r1
 8005bf6:	07d6      	lsls	r6, r2, #31
 8005bf8:	d547      	bpl.n	8005c8a <__sflush_r+0xf6>
 8005bfa:	2200      	movs	r2, #0
 8005bfc:	6062      	str	r2, [r4, #4]
 8005bfe:	04d9      	lsls	r1, r3, #19
 8005c00:	6922      	ldr	r2, [r4, #16]
 8005c02:	6022      	str	r2, [r4, #0]
 8005c04:	d504      	bpl.n	8005c10 <__sflush_r+0x7c>
 8005c06:	1c42      	adds	r2, r0, #1
 8005c08:	d101      	bne.n	8005c0e <__sflush_r+0x7a>
 8005c0a:	682b      	ldr	r3, [r5, #0]
 8005c0c:	b903      	cbnz	r3, 8005c10 <__sflush_r+0x7c>
 8005c0e:	6560      	str	r0, [r4, #84]	; 0x54
 8005c10:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8005c12:	602f      	str	r7, [r5, #0]
 8005c14:	2900      	cmp	r1, #0
 8005c16:	d0ca      	beq.n	8005bae <__sflush_r+0x1a>
 8005c18:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8005c1c:	4299      	cmp	r1, r3
 8005c1e:	d002      	beq.n	8005c26 <__sflush_r+0x92>
 8005c20:	4628      	mov	r0, r5
 8005c22:	f7ff fd83 	bl	800572c <__wrap__free_r>
 8005c26:	2000      	movs	r0, #0
 8005c28:	6360      	str	r0, [r4, #52]	; 0x34
 8005c2a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8005c2e:	6a21      	ldr	r1, [r4, #32]
 8005c30:	2301      	movs	r3, #1
 8005c32:	4628      	mov	r0, r5
 8005c34:	47b0      	blx	r6
 8005c36:	1c41      	adds	r1, r0, #1
 8005c38:	d1c6      	bne.n	8005bc8 <__sflush_r+0x34>
 8005c3a:	682b      	ldr	r3, [r5, #0]
 8005c3c:	2b00      	cmp	r3, #0
 8005c3e:	d0c3      	beq.n	8005bc8 <__sflush_r+0x34>
 8005c40:	2b1d      	cmp	r3, #29
 8005c42:	d001      	beq.n	8005c48 <__sflush_r+0xb4>
 8005c44:	2b16      	cmp	r3, #22
 8005c46:	d101      	bne.n	8005c4c <__sflush_r+0xb8>
 8005c48:	602f      	str	r7, [r5, #0]
 8005c4a:	e7b0      	b.n	8005bae <__sflush_r+0x1a>
 8005c4c:	89a3      	ldrh	r3, [r4, #12]
 8005c4e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8005c52:	81a3      	strh	r3, [r4, #12]
 8005c54:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8005c58:	690f      	ldr	r7, [r1, #16]
 8005c5a:	2f00      	cmp	r7, #0
 8005c5c:	d0a7      	beq.n	8005bae <__sflush_r+0x1a>
 8005c5e:	0793      	lsls	r3, r2, #30
 8005c60:	680e      	ldr	r6, [r1, #0]
 8005c62:	bf08      	it	eq
 8005c64:	694b      	ldreq	r3, [r1, #20]
 8005c66:	600f      	str	r7, [r1, #0]
 8005c68:	bf18      	it	ne
 8005c6a:	2300      	movne	r3, #0
 8005c6c:	eba6 0807 	sub.w	r8, r6, r7
 8005c70:	608b      	str	r3, [r1, #8]
 8005c72:	f1b8 0f00 	cmp.w	r8, #0
 8005c76:	dd9a      	ble.n	8005bae <__sflush_r+0x1a>
 8005c78:	4643      	mov	r3, r8
 8005c7a:	463a      	mov	r2, r7
 8005c7c:	6a21      	ldr	r1, [r4, #32]
 8005c7e:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8005c80:	4628      	mov	r0, r5
 8005c82:	47b0      	blx	r6
 8005c84:	2800      	cmp	r0, #0
 8005c86:	dc07      	bgt.n	8005c98 <__sflush_r+0x104>
 8005c88:	89a3      	ldrh	r3, [r4, #12]
 8005c8a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8005c8e:	81a3      	strh	r3, [r4, #12]
 8005c90:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8005c94:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8005c98:	4407      	add	r7, r0
 8005c9a:	eba8 0800 	sub.w	r8, r8, r0
 8005c9e:	e7e8      	b.n	8005c72 <__sflush_r+0xde>
 8005ca0:	20400001 	.word	0x20400001

08005ca4 <_fflush_r>:
 8005ca4:	b538      	push	{r3, r4, r5, lr}
 8005ca6:	690b      	ldr	r3, [r1, #16]
 8005ca8:	4605      	mov	r5, r0
 8005caa:	460c      	mov	r4, r1
 8005cac:	b1db      	cbz	r3, 8005ce6 <_fflush_r+0x42>
 8005cae:	b118      	cbz	r0, 8005cb8 <_fflush_r+0x14>
 8005cb0:	6983      	ldr	r3, [r0, #24]
 8005cb2:	b90b      	cbnz	r3, 8005cb8 <_fflush_r+0x14>
 8005cb4:	f000 f872 	bl	8005d9c <__sinit>
 8005cb8:	4b0c      	ldr	r3, [pc, #48]	; (8005cec <_fflush_r+0x48>)
 8005cba:	429c      	cmp	r4, r3
 8005cbc:	d109      	bne.n	8005cd2 <_fflush_r+0x2e>
 8005cbe:	686c      	ldr	r4, [r5, #4]
 8005cc0:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8005cc4:	b17b      	cbz	r3, 8005ce6 <_fflush_r+0x42>
 8005cc6:	4621      	mov	r1, r4
 8005cc8:	4628      	mov	r0, r5
 8005cca:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8005cce:	f7ff bf61 	b.w	8005b94 <__sflush_r>
 8005cd2:	4b07      	ldr	r3, [pc, #28]	; (8005cf0 <_fflush_r+0x4c>)
 8005cd4:	429c      	cmp	r4, r3
 8005cd6:	d101      	bne.n	8005cdc <_fflush_r+0x38>
 8005cd8:	68ac      	ldr	r4, [r5, #8]
 8005cda:	e7f1      	b.n	8005cc0 <_fflush_r+0x1c>
 8005cdc:	4b05      	ldr	r3, [pc, #20]	; (8005cf4 <_fflush_r+0x50>)
 8005cde:	429c      	cmp	r4, r3
 8005ce0:	bf08      	it	eq
 8005ce2:	68ec      	ldreq	r4, [r5, #12]
 8005ce4:	e7ec      	b.n	8005cc0 <_fflush_r+0x1c>
 8005ce6:	2000      	movs	r0, #0
 8005ce8:	bd38      	pop	{r3, r4, r5, pc}
 8005cea:	bf00      	nop
 8005cec:	080073e8 	.word	0x080073e8
 8005cf0:	08007408 	.word	0x08007408
 8005cf4:	080073c8 	.word	0x080073c8

08005cf8 <fflush>:
 8005cf8:	4601      	mov	r1, r0
 8005cfa:	b920      	cbnz	r0, 8005d06 <fflush+0xe>
 8005cfc:	4b04      	ldr	r3, [pc, #16]	; (8005d10 <fflush+0x18>)
 8005cfe:	4905      	ldr	r1, [pc, #20]	; (8005d14 <fflush+0x1c>)
 8005d00:	6818      	ldr	r0, [r3, #0]
 8005d02:	f000 b8b7 	b.w	8005e74 <_fwalk_reent>
 8005d06:	4b04      	ldr	r3, [pc, #16]	; (8005d18 <fflush+0x20>)
 8005d08:	6818      	ldr	r0, [r3, #0]
 8005d0a:	f7ff bfcb 	b.w	8005ca4 <_fflush_r>
 8005d0e:	bf00      	nop
 8005d10:	08007428 	.word	0x08007428
 8005d14:	08005ca5 	.word	0x08005ca5
 8005d18:	200001bc 	.word	0x200001bc

08005d1c <_cleanup_r>:
 8005d1c:	4901      	ldr	r1, [pc, #4]	; (8005d24 <_cleanup_r+0x8>)
 8005d1e:	f000 b8a9 	b.w	8005e74 <_fwalk_reent>
 8005d22:	bf00      	nop
 8005d24:	08005ca5 	.word	0x08005ca5

08005d28 <std.isra.0>:
 8005d28:	2300      	movs	r3, #0
 8005d2a:	b510      	push	{r4, lr}
 8005d2c:	4604      	mov	r4, r0
 8005d2e:	6003      	str	r3, [r0, #0]
 8005d30:	6043      	str	r3, [r0, #4]
 8005d32:	6083      	str	r3, [r0, #8]
 8005d34:	8181      	strh	r1, [r0, #12]
 8005d36:	6643      	str	r3, [r0, #100]	; 0x64
 8005d38:	81c2      	strh	r2, [r0, #14]
 8005d3a:	6103      	str	r3, [r0, #16]
 8005d3c:	6143      	str	r3, [r0, #20]
 8005d3e:	6183      	str	r3, [r0, #24]
 8005d40:	4619      	mov	r1, r3
 8005d42:	2208      	movs	r2, #8
 8005d44:	305c      	adds	r0, #92	; 0x5c
 8005d46:	f000 f960 	bl	800600a <memset>
 8005d4a:	4b05      	ldr	r3, [pc, #20]	; (8005d60 <std.isra.0+0x38>)
 8005d4c:	6263      	str	r3, [r4, #36]	; 0x24
 8005d4e:	4b05      	ldr	r3, [pc, #20]	; (8005d64 <std.isra.0+0x3c>)
 8005d50:	62a3      	str	r3, [r4, #40]	; 0x28
 8005d52:	4b05      	ldr	r3, [pc, #20]	; (8005d68 <std.isra.0+0x40>)
 8005d54:	62e3      	str	r3, [r4, #44]	; 0x2c
 8005d56:	4b05      	ldr	r3, [pc, #20]	; (8005d6c <std.isra.0+0x44>)
 8005d58:	6224      	str	r4, [r4, #32]
 8005d5a:	6323      	str	r3, [r4, #48]	; 0x30
 8005d5c:	bd10      	pop	{r4, pc}
 8005d5e:	bf00      	nop
 8005d60:	0800651d 	.word	0x0800651d
 8005d64:	0800653f 	.word	0x0800653f
 8005d68:	08006577 	.word	0x08006577
 8005d6c:	0800659b 	.word	0x0800659b

08005d70 <__sfmoreglue>:
 8005d70:	b570      	push	{r4, r5, r6, lr}
 8005d72:	1e4a      	subs	r2, r1, #1
 8005d74:	2568      	movs	r5, #104	; 0x68
 8005d76:	4355      	muls	r5, r2
 8005d78:	460e      	mov	r6, r1
 8005d7a:	f105 0174 	add.w	r1, r5, #116	; 0x74
 8005d7e:	f7ff fcd1 	bl	8005724 <__wrap__malloc_r>
 8005d82:	4604      	mov	r4, r0
 8005d84:	b140      	cbz	r0, 8005d98 <__sfmoreglue+0x28>
 8005d86:	2100      	movs	r1, #0
 8005d88:	e880 0042 	stmia.w	r0, {r1, r6}
 8005d8c:	300c      	adds	r0, #12
 8005d8e:	60a0      	str	r0, [r4, #8]
 8005d90:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8005d94:	f000 f939 	bl	800600a <memset>
 8005d98:	4620      	mov	r0, r4
 8005d9a:	bd70      	pop	{r4, r5, r6, pc}

08005d9c <__sinit>:
 8005d9c:	6983      	ldr	r3, [r0, #24]
 8005d9e:	b510      	push	{r4, lr}
 8005da0:	4604      	mov	r4, r0
 8005da2:	bb33      	cbnz	r3, 8005df2 <__sinit+0x56>
 8005da4:	6483      	str	r3, [r0, #72]	; 0x48
 8005da6:	64c3      	str	r3, [r0, #76]	; 0x4c
 8005da8:	6503      	str	r3, [r0, #80]	; 0x50
 8005daa:	4b12      	ldr	r3, [pc, #72]	; (8005df4 <__sinit+0x58>)
 8005dac:	4a12      	ldr	r2, [pc, #72]	; (8005df8 <__sinit+0x5c>)
 8005dae:	681b      	ldr	r3, [r3, #0]
 8005db0:	6282      	str	r2, [r0, #40]	; 0x28
 8005db2:	4298      	cmp	r0, r3
 8005db4:	bf04      	itt	eq
 8005db6:	2301      	moveq	r3, #1
 8005db8:	6183      	streq	r3, [r0, #24]
 8005dba:	f000 f81f 	bl	8005dfc <__sfp>
 8005dbe:	6060      	str	r0, [r4, #4]
 8005dc0:	4620      	mov	r0, r4
 8005dc2:	f000 f81b 	bl	8005dfc <__sfp>
 8005dc6:	60a0      	str	r0, [r4, #8]
 8005dc8:	4620      	mov	r0, r4
 8005dca:	f000 f817 	bl	8005dfc <__sfp>
 8005dce:	2200      	movs	r2, #0
 8005dd0:	60e0      	str	r0, [r4, #12]
 8005dd2:	2104      	movs	r1, #4
 8005dd4:	6860      	ldr	r0, [r4, #4]
 8005dd6:	f7ff ffa7 	bl	8005d28 <std.isra.0>
 8005dda:	2201      	movs	r2, #1
 8005ddc:	2109      	movs	r1, #9
 8005dde:	68a0      	ldr	r0, [r4, #8]
 8005de0:	f7ff ffa2 	bl	8005d28 <std.isra.0>
 8005de4:	2202      	movs	r2, #2
 8005de6:	2112      	movs	r1, #18
 8005de8:	68e0      	ldr	r0, [r4, #12]
 8005dea:	f7ff ff9d 	bl	8005d28 <std.isra.0>
 8005dee:	2301      	movs	r3, #1
 8005df0:	61a3      	str	r3, [r4, #24]
 8005df2:	bd10      	pop	{r4, pc}
 8005df4:	08007428 	.word	0x08007428
 8005df8:	08005d1d 	.word	0x08005d1d

08005dfc <__sfp>:
 8005dfc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8005dfe:	4b1c      	ldr	r3, [pc, #112]	; (8005e70 <__sfp+0x74>)
 8005e00:	681e      	ldr	r6, [r3, #0]
 8005e02:	69b3      	ldr	r3, [r6, #24]
 8005e04:	4607      	mov	r7, r0
 8005e06:	b913      	cbnz	r3, 8005e0e <__sfp+0x12>
 8005e08:	4630      	mov	r0, r6
 8005e0a:	f7ff ffc7 	bl	8005d9c <__sinit>
 8005e0e:	3648      	adds	r6, #72	; 0x48
 8005e10:	68b4      	ldr	r4, [r6, #8]
 8005e12:	6873      	ldr	r3, [r6, #4]
 8005e14:	3b01      	subs	r3, #1
 8005e16:	d503      	bpl.n	8005e20 <__sfp+0x24>
 8005e18:	6833      	ldr	r3, [r6, #0]
 8005e1a:	b133      	cbz	r3, 8005e2a <__sfp+0x2e>
 8005e1c:	6836      	ldr	r6, [r6, #0]
 8005e1e:	e7f7      	b.n	8005e10 <__sfp+0x14>
 8005e20:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8005e24:	b16d      	cbz	r5, 8005e42 <__sfp+0x46>
 8005e26:	3468      	adds	r4, #104	; 0x68
 8005e28:	e7f4      	b.n	8005e14 <__sfp+0x18>
 8005e2a:	2104      	movs	r1, #4
 8005e2c:	4638      	mov	r0, r7
 8005e2e:	f7ff ff9f 	bl	8005d70 <__sfmoreglue>
 8005e32:	6030      	str	r0, [r6, #0]
 8005e34:	2800      	cmp	r0, #0
 8005e36:	d1f1      	bne.n	8005e1c <__sfp+0x20>
 8005e38:	230c      	movs	r3, #12
 8005e3a:	603b      	str	r3, [r7, #0]
 8005e3c:	4604      	mov	r4, r0
 8005e3e:	4620      	mov	r0, r4
 8005e40:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8005e42:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8005e46:	81e3      	strh	r3, [r4, #14]
 8005e48:	2301      	movs	r3, #1
 8005e4a:	81a3      	strh	r3, [r4, #12]
 8005e4c:	6665      	str	r5, [r4, #100]	; 0x64
 8005e4e:	6025      	str	r5, [r4, #0]
 8005e50:	60a5      	str	r5, [r4, #8]
 8005e52:	6065      	str	r5, [r4, #4]
 8005e54:	6125      	str	r5, [r4, #16]
 8005e56:	6165      	str	r5, [r4, #20]
 8005e58:	61a5      	str	r5, [r4, #24]
 8005e5a:	2208      	movs	r2, #8
 8005e5c:	4629      	mov	r1, r5
 8005e5e:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8005e62:	f000 f8d2 	bl	800600a <memset>
 8005e66:	6365      	str	r5, [r4, #52]	; 0x34
 8005e68:	63a5      	str	r5, [r4, #56]	; 0x38
 8005e6a:	64a5      	str	r5, [r4, #72]	; 0x48
 8005e6c:	64e5      	str	r5, [r4, #76]	; 0x4c
 8005e6e:	e7e6      	b.n	8005e3e <__sfp+0x42>
 8005e70:	08007428 	.word	0x08007428

08005e74 <_fwalk_reent>:
 8005e74:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8005e78:	4680      	mov	r8, r0
 8005e7a:	4689      	mov	r9, r1
 8005e7c:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8005e80:	2600      	movs	r6, #0
 8005e82:	b914      	cbnz	r4, 8005e8a <_fwalk_reent+0x16>
 8005e84:	4630      	mov	r0, r6
 8005e86:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8005e8a:	68a5      	ldr	r5, [r4, #8]
 8005e8c:	6867      	ldr	r7, [r4, #4]
 8005e8e:	3f01      	subs	r7, #1
 8005e90:	d501      	bpl.n	8005e96 <_fwalk_reent+0x22>
 8005e92:	6824      	ldr	r4, [r4, #0]
 8005e94:	e7f5      	b.n	8005e82 <_fwalk_reent+0xe>
 8005e96:	89ab      	ldrh	r3, [r5, #12]
 8005e98:	2b01      	cmp	r3, #1
 8005e9a:	d907      	bls.n	8005eac <_fwalk_reent+0x38>
 8005e9c:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8005ea0:	3301      	adds	r3, #1
 8005ea2:	d003      	beq.n	8005eac <_fwalk_reent+0x38>
 8005ea4:	4629      	mov	r1, r5
 8005ea6:	4640      	mov	r0, r8
 8005ea8:	47c8      	blx	r9
 8005eaa:	4306      	orrs	r6, r0
 8005eac:	3568      	adds	r5, #104	; 0x68
 8005eae:	e7ee      	b.n	8005e8e <_fwalk_reent+0x1a>

08005eb0 <__libc_init_array>:
 8005eb0:	b570      	push	{r4, r5, r6, lr}
 8005eb2:	4e0d      	ldr	r6, [pc, #52]	; (8005ee8 <__libc_init_array+0x38>)
 8005eb4:	4c0d      	ldr	r4, [pc, #52]	; (8005eec <__libc_init_array+0x3c>)
 8005eb6:	1ba4      	subs	r4, r4, r6
 8005eb8:	10a4      	asrs	r4, r4, #2
 8005eba:	2500      	movs	r5, #0
 8005ebc:	42a5      	cmp	r5, r4
 8005ebe:	d109      	bne.n	8005ed4 <__libc_init_array+0x24>
 8005ec0:	4e0b      	ldr	r6, [pc, #44]	; (8005ef0 <__libc_init_array+0x40>)
 8005ec2:	4c0c      	ldr	r4, [pc, #48]	; (8005ef4 <__libc_init_array+0x44>)
 8005ec4:	f000 fd36 	bl	8006934 <_init>
 8005ec8:	1ba4      	subs	r4, r4, r6
 8005eca:	10a4      	asrs	r4, r4, #2
 8005ecc:	2500      	movs	r5, #0
 8005ece:	42a5      	cmp	r5, r4
 8005ed0:	d105      	bne.n	8005ede <__libc_init_array+0x2e>
 8005ed2:	bd70      	pop	{r4, r5, r6, pc}
 8005ed4:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8005ed8:	4798      	blx	r3
 8005eda:	3501      	adds	r5, #1
 8005edc:	e7ee      	b.n	8005ebc <__libc_init_array+0xc>
 8005ede:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8005ee2:	4798      	blx	r3
 8005ee4:	3501      	adds	r5, #1
 8005ee6:	e7f2      	b.n	8005ece <__libc_init_array+0x1e>
 8005ee8:	20000220 	.word	0x20000220
 8005eec:	20000220 	.word	0x20000220
 8005ef0:	20000220 	.word	0x20000220
 8005ef4:	2000022c 	.word	0x2000022c

08005ef8 <malloc>:
 8005ef8:	4b02      	ldr	r3, [pc, #8]	; (8005f04 <malloc+0xc>)
 8005efa:	4601      	mov	r1, r0
 8005efc:	6818      	ldr	r0, [r3, #0]
 8005efe:	f7ff bc11 	b.w	8005724 <__wrap__malloc_r>
 8005f02:	bf00      	nop
 8005f04:	200001bc 	.word	0x200001bc

08005f08 <free>:
 8005f08:	4b02      	ldr	r3, [pc, #8]	; (8005f14 <free+0xc>)
 8005f0a:	4601      	mov	r1, r0
 8005f0c:	6818      	ldr	r0, [r3, #0]
 8005f0e:	f7ff bc0d 	b.w	800572c <__wrap__free_r>
 8005f12:	bf00      	nop
 8005f14:	200001bc 	.word	0x200001bc
	...

08005f20 <memchr>:
 8005f20:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8005f24:	2a10      	cmp	r2, #16
 8005f26:	db2b      	blt.n	8005f80 <memchr+0x60>
 8005f28:	f010 0f07 	tst.w	r0, #7
 8005f2c:	d008      	beq.n	8005f40 <memchr+0x20>
 8005f2e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8005f32:	3a01      	subs	r2, #1
 8005f34:	428b      	cmp	r3, r1
 8005f36:	d02d      	beq.n	8005f94 <memchr+0x74>
 8005f38:	f010 0f07 	tst.w	r0, #7
 8005f3c:	b342      	cbz	r2, 8005f90 <memchr+0x70>
 8005f3e:	d1f6      	bne.n	8005f2e <memchr+0xe>
 8005f40:	b4f0      	push	{r4, r5, r6, r7}
 8005f42:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8005f46:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 8005f4a:	f022 0407 	bic.w	r4, r2, #7
 8005f4e:	f07f 0700 	mvns.w	r7, #0
 8005f52:	2300      	movs	r3, #0
 8005f54:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8005f58:	3c08      	subs	r4, #8
 8005f5a:	ea85 0501 	eor.w	r5, r5, r1
 8005f5e:	ea86 0601 	eor.w	r6, r6, r1
 8005f62:	fa85 f547 	uadd8	r5, r5, r7
 8005f66:	faa3 f587 	sel	r5, r3, r7
 8005f6a:	fa86 f647 	uadd8	r6, r6, r7
 8005f6e:	faa5 f687 	sel	r6, r5, r7
 8005f72:	b98e      	cbnz	r6, 8005f98 <memchr+0x78>
 8005f74:	d1ee      	bne.n	8005f54 <memchr+0x34>
 8005f76:	bcf0      	pop	{r4, r5, r6, r7}
 8005f78:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8005f7c:	f002 0207 	and.w	r2, r2, #7
 8005f80:	b132      	cbz	r2, 8005f90 <memchr+0x70>
 8005f82:	f810 3b01 	ldrb.w	r3, [r0], #1
 8005f86:	3a01      	subs	r2, #1
 8005f88:	ea83 0301 	eor.w	r3, r3, r1
 8005f8c:	b113      	cbz	r3, 8005f94 <memchr+0x74>
 8005f8e:	d1f8      	bne.n	8005f82 <memchr+0x62>
 8005f90:	2000      	movs	r0, #0
 8005f92:	4770      	bx	lr
 8005f94:	3801      	subs	r0, #1
 8005f96:	4770      	bx	lr
 8005f98:	2d00      	cmp	r5, #0
 8005f9a:	bf06      	itte	eq
 8005f9c:	4635      	moveq	r5, r6
 8005f9e:	3803      	subeq	r0, #3
 8005fa0:	3807      	subne	r0, #7
 8005fa2:	f015 0f01 	tst.w	r5, #1
 8005fa6:	d107      	bne.n	8005fb8 <memchr+0x98>
 8005fa8:	3001      	adds	r0, #1
 8005faa:	f415 7f80 	tst.w	r5, #256	; 0x100
 8005fae:	bf02      	ittt	eq
 8005fb0:	3001      	addeq	r0, #1
 8005fb2:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8005fb6:	3001      	addeq	r0, #1
 8005fb8:	bcf0      	pop	{r4, r5, r6, r7}
 8005fba:	3801      	subs	r0, #1
 8005fbc:	4770      	bx	lr
 8005fbe:	bf00      	nop

08005fc0 <memcpy>:
 8005fc0:	b510      	push	{r4, lr}
 8005fc2:	1e43      	subs	r3, r0, #1
 8005fc4:	440a      	add	r2, r1
 8005fc6:	4291      	cmp	r1, r2
 8005fc8:	d100      	bne.n	8005fcc <memcpy+0xc>
 8005fca:	bd10      	pop	{r4, pc}
 8005fcc:	f811 4b01 	ldrb.w	r4, [r1], #1
 8005fd0:	f803 4f01 	strb.w	r4, [r3, #1]!
 8005fd4:	e7f7      	b.n	8005fc6 <memcpy+0x6>

08005fd6 <memmove>:
 8005fd6:	4288      	cmp	r0, r1
 8005fd8:	b510      	push	{r4, lr}
 8005fda:	eb01 0302 	add.w	r3, r1, r2
 8005fde:	d803      	bhi.n	8005fe8 <memmove+0x12>
 8005fe0:	1e42      	subs	r2, r0, #1
 8005fe2:	4299      	cmp	r1, r3
 8005fe4:	d10c      	bne.n	8006000 <memmove+0x2a>
 8005fe6:	bd10      	pop	{r4, pc}
 8005fe8:	4298      	cmp	r0, r3
 8005fea:	d2f9      	bcs.n	8005fe0 <memmove+0xa>
 8005fec:	1881      	adds	r1, r0, r2
 8005fee:	1ad2      	subs	r2, r2, r3
 8005ff0:	42d3      	cmn	r3, r2
 8005ff2:	d100      	bne.n	8005ff6 <memmove+0x20>
 8005ff4:	bd10      	pop	{r4, pc}
 8005ff6:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 8005ffa:	f801 4d01 	strb.w	r4, [r1, #-1]!
 8005ffe:	e7f7      	b.n	8005ff0 <memmove+0x1a>
 8006000:	f811 4b01 	ldrb.w	r4, [r1], #1
 8006004:	f802 4f01 	strb.w	r4, [r2, #1]!
 8006008:	e7eb      	b.n	8005fe2 <memmove+0xc>

0800600a <memset>:
 800600a:	4402      	add	r2, r0
 800600c:	4603      	mov	r3, r0
 800600e:	4293      	cmp	r3, r2
 8006010:	d100      	bne.n	8006014 <memset+0xa>
 8006012:	4770      	bx	lr
 8006014:	f803 1b01 	strb.w	r1, [r3], #1
 8006018:	e7f9      	b.n	800600e <memset+0x4>
	...

0800601c <_free_r>:
 800601c:	b538      	push	{r3, r4, r5, lr}
 800601e:	4605      	mov	r5, r0
 8006020:	2900      	cmp	r1, #0
 8006022:	d045      	beq.n	80060b0 <_free_r+0x94>
 8006024:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8006028:	1f0c      	subs	r4, r1, #4
 800602a:	2b00      	cmp	r3, #0
 800602c:	bfb8      	it	lt
 800602e:	18e4      	addlt	r4, r4, r3
 8006030:	f7ff fc9d 	bl	800596e <__malloc_lock>
 8006034:	4a1f      	ldr	r2, [pc, #124]	; (80060b4 <_free_r+0x98>)
 8006036:	6813      	ldr	r3, [r2, #0]
 8006038:	4610      	mov	r0, r2
 800603a:	b933      	cbnz	r3, 800604a <_free_r+0x2e>
 800603c:	6063      	str	r3, [r4, #4]
 800603e:	6014      	str	r4, [r2, #0]
 8006040:	4628      	mov	r0, r5
 8006042:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8006046:	f7ff bc96 	b.w	8005976 <__malloc_unlock>
 800604a:	42a3      	cmp	r3, r4
 800604c:	d90c      	bls.n	8006068 <_free_r+0x4c>
 800604e:	6821      	ldr	r1, [r4, #0]
 8006050:	1862      	adds	r2, r4, r1
 8006052:	4293      	cmp	r3, r2
 8006054:	bf04      	itt	eq
 8006056:	681a      	ldreq	r2, [r3, #0]
 8006058:	685b      	ldreq	r3, [r3, #4]
 800605a:	6063      	str	r3, [r4, #4]
 800605c:	bf04      	itt	eq
 800605e:	1852      	addeq	r2, r2, r1
 8006060:	6022      	streq	r2, [r4, #0]
 8006062:	6004      	str	r4, [r0, #0]
 8006064:	e7ec      	b.n	8006040 <_free_r+0x24>
 8006066:	4613      	mov	r3, r2
 8006068:	685a      	ldr	r2, [r3, #4]
 800606a:	b10a      	cbz	r2, 8006070 <_free_r+0x54>
 800606c:	42a2      	cmp	r2, r4
 800606e:	d9fa      	bls.n	8006066 <_free_r+0x4a>
 8006070:	6819      	ldr	r1, [r3, #0]
 8006072:	1858      	adds	r0, r3, r1
 8006074:	42a0      	cmp	r0, r4
 8006076:	d10b      	bne.n	8006090 <_free_r+0x74>
 8006078:	6820      	ldr	r0, [r4, #0]
 800607a:	4401      	add	r1, r0
 800607c:	1858      	adds	r0, r3, r1
 800607e:	4282      	cmp	r2, r0
 8006080:	6019      	str	r1, [r3, #0]
 8006082:	d1dd      	bne.n	8006040 <_free_r+0x24>
 8006084:	6810      	ldr	r0, [r2, #0]
 8006086:	6852      	ldr	r2, [r2, #4]
 8006088:	605a      	str	r2, [r3, #4]
 800608a:	4401      	add	r1, r0
 800608c:	6019      	str	r1, [r3, #0]
 800608e:	e7d7      	b.n	8006040 <_free_r+0x24>
 8006090:	d902      	bls.n	8006098 <_free_r+0x7c>
 8006092:	230c      	movs	r3, #12
 8006094:	602b      	str	r3, [r5, #0]
 8006096:	e7d3      	b.n	8006040 <_free_r+0x24>
 8006098:	6820      	ldr	r0, [r4, #0]
 800609a:	1821      	adds	r1, r4, r0
 800609c:	428a      	cmp	r2, r1
 800609e:	bf04      	itt	eq
 80060a0:	6811      	ldreq	r1, [r2, #0]
 80060a2:	6852      	ldreq	r2, [r2, #4]
 80060a4:	6062      	str	r2, [r4, #4]
 80060a6:	bf04      	itt	eq
 80060a8:	1809      	addeq	r1, r1, r0
 80060aa:	6021      	streq	r1, [r4, #0]
 80060ac:	605c      	str	r4, [r3, #4]
 80060ae:	e7c7      	b.n	8006040 <_free_r+0x24>
 80060b0:	bd38      	pop	{r3, r4, r5, pc}
 80060b2:	bf00      	nop
 80060b4:	2000232c 	.word	0x2000232c

080060b8 <_malloc_r>:
 80060b8:	b570      	push	{r4, r5, r6, lr}
 80060ba:	1ccd      	adds	r5, r1, #3
 80060bc:	f025 0503 	bic.w	r5, r5, #3
 80060c0:	3508      	adds	r5, #8
 80060c2:	2d0c      	cmp	r5, #12
 80060c4:	bf38      	it	cc
 80060c6:	250c      	movcc	r5, #12
 80060c8:	2d00      	cmp	r5, #0
 80060ca:	4606      	mov	r6, r0
 80060cc:	db01      	blt.n	80060d2 <_malloc_r+0x1a>
 80060ce:	42a9      	cmp	r1, r5
 80060d0:	d903      	bls.n	80060da <_malloc_r+0x22>
 80060d2:	230c      	movs	r3, #12
 80060d4:	6033      	str	r3, [r6, #0]
 80060d6:	2000      	movs	r0, #0
 80060d8:	bd70      	pop	{r4, r5, r6, pc}
 80060da:	f7ff fc48 	bl	800596e <__malloc_lock>
 80060de:	4a23      	ldr	r2, [pc, #140]	; (800616c <_malloc_r+0xb4>)
 80060e0:	6814      	ldr	r4, [r2, #0]
 80060e2:	4621      	mov	r1, r4
 80060e4:	b991      	cbnz	r1, 800610c <_malloc_r+0x54>
 80060e6:	4c22      	ldr	r4, [pc, #136]	; (8006170 <_malloc_r+0xb8>)
 80060e8:	6823      	ldr	r3, [r4, #0]
 80060ea:	b91b      	cbnz	r3, 80060f4 <_malloc_r+0x3c>
 80060ec:	4630      	mov	r0, r6
 80060ee:	f000 fa05 	bl	80064fc <_sbrk_r>
 80060f2:	6020      	str	r0, [r4, #0]
 80060f4:	4629      	mov	r1, r5
 80060f6:	4630      	mov	r0, r6
 80060f8:	f000 fa00 	bl	80064fc <_sbrk_r>
 80060fc:	1c43      	adds	r3, r0, #1
 80060fe:	d126      	bne.n	800614e <_malloc_r+0x96>
 8006100:	230c      	movs	r3, #12
 8006102:	6033      	str	r3, [r6, #0]
 8006104:	4630      	mov	r0, r6
 8006106:	f7ff fc36 	bl	8005976 <__malloc_unlock>
 800610a:	e7e4      	b.n	80060d6 <_malloc_r+0x1e>
 800610c:	680b      	ldr	r3, [r1, #0]
 800610e:	1b5b      	subs	r3, r3, r5
 8006110:	d41a      	bmi.n	8006148 <_malloc_r+0x90>
 8006112:	2b0b      	cmp	r3, #11
 8006114:	d90f      	bls.n	8006136 <_malloc_r+0x7e>
 8006116:	600b      	str	r3, [r1, #0]
 8006118:	50cd      	str	r5, [r1, r3]
 800611a:	18cc      	adds	r4, r1, r3
 800611c:	4630      	mov	r0, r6
 800611e:	f7ff fc2a 	bl	8005976 <__malloc_unlock>
 8006122:	f104 000b 	add.w	r0, r4, #11
 8006126:	1d23      	adds	r3, r4, #4
 8006128:	f020 0007 	bic.w	r0, r0, #7
 800612c:	1ac3      	subs	r3, r0, r3
 800612e:	d01b      	beq.n	8006168 <_malloc_r+0xb0>
 8006130:	425a      	negs	r2, r3
 8006132:	50e2      	str	r2, [r4, r3]
 8006134:	bd70      	pop	{r4, r5, r6, pc}
 8006136:	428c      	cmp	r4, r1
 8006138:	bf0d      	iteet	eq
 800613a:	6863      	ldreq	r3, [r4, #4]
 800613c:	684b      	ldrne	r3, [r1, #4]
 800613e:	6063      	strne	r3, [r4, #4]
 8006140:	6013      	streq	r3, [r2, #0]
 8006142:	bf18      	it	ne
 8006144:	460c      	movne	r4, r1
 8006146:	e7e9      	b.n	800611c <_malloc_r+0x64>
 8006148:	460c      	mov	r4, r1
 800614a:	6849      	ldr	r1, [r1, #4]
 800614c:	e7ca      	b.n	80060e4 <_malloc_r+0x2c>
 800614e:	1cc4      	adds	r4, r0, #3
 8006150:	f024 0403 	bic.w	r4, r4, #3
 8006154:	42a0      	cmp	r0, r4
 8006156:	d005      	beq.n	8006164 <_malloc_r+0xac>
 8006158:	1a21      	subs	r1, r4, r0
 800615a:	4630      	mov	r0, r6
 800615c:	f000 f9ce 	bl	80064fc <_sbrk_r>
 8006160:	3001      	adds	r0, #1
 8006162:	d0cd      	beq.n	8006100 <_malloc_r+0x48>
 8006164:	6025      	str	r5, [r4, #0]
 8006166:	e7d9      	b.n	800611c <_malloc_r+0x64>
 8006168:	bd70      	pop	{r4, r5, r6, pc}
 800616a:	bf00      	nop
 800616c:	2000232c 	.word	0x2000232c
 8006170:	20002330 	.word	0x20002330

08006174 <_realloc_r>:
 8006174:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006176:	4607      	mov	r7, r0
 8006178:	4614      	mov	r4, r2
 800617a:	460e      	mov	r6, r1
 800617c:	b921      	cbnz	r1, 8006188 <_realloc_r+0x14>
 800617e:	4611      	mov	r1, r2
 8006180:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8006184:	f7ff bace 	b.w	8005724 <__wrap__malloc_r>
 8006188:	b922      	cbnz	r2, 8006194 <_realloc_r+0x20>
 800618a:	f7ff facf 	bl	800572c <__wrap__free_r>
 800618e:	4625      	mov	r5, r4
 8006190:	4628      	mov	r0, r5
 8006192:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8006194:	f000 fa64 	bl	8006660 <_malloc_usable_size_r>
 8006198:	4284      	cmp	r4, r0
 800619a:	d90f      	bls.n	80061bc <_realloc_r+0x48>
 800619c:	4621      	mov	r1, r4
 800619e:	4638      	mov	r0, r7
 80061a0:	f7ff fac0 	bl	8005724 <__wrap__malloc_r>
 80061a4:	4605      	mov	r5, r0
 80061a6:	2800      	cmp	r0, #0
 80061a8:	d0f2      	beq.n	8006190 <_realloc_r+0x1c>
 80061aa:	4631      	mov	r1, r6
 80061ac:	4622      	mov	r2, r4
 80061ae:	f7ff ff07 	bl	8005fc0 <memcpy>
 80061b2:	4631      	mov	r1, r6
 80061b4:	4638      	mov	r0, r7
 80061b6:	f7ff fab9 	bl	800572c <__wrap__free_r>
 80061ba:	e7e9      	b.n	8006190 <_realloc_r+0x1c>
 80061bc:	4635      	mov	r5, r6
 80061be:	e7e7      	b.n	8006190 <_realloc_r+0x1c>

080061c0 <_printf_common>:
 80061c0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, lr}
 80061c4:	4691      	mov	r9, r2
 80061c6:	461f      	mov	r7, r3
 80061c8:	688a      	ldr	r2, [r1, #8]
 80061ca:	690b      	ldr	r3, [r1, #16]
 80061cc:	f8dd 8020 	ldr.w	r8, [sp, #32]
 80061d0:	4293      	cmp	r3, r2
 80061d2:	bfb8      	it	lt
 80061d4:	4613      	movlt	r3, r2
 80061d6:	f8c9 3000 	str.w	r3, [r9]
 80061da:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 80061de:	4606      	mov	r6, r0
 80061e0:	460c      	mov	r4, r1
 80061e2:	b112      	cbz	r2, 80061ea <_printf_common+0x2a>
 80061e4:	3301      	adds	r3, #1
 80061e6:	f8c9 3000 	str.w	r3, [r9]
 80061ea:	6823      	ldr	r3, [r4, #0]
 80061ec:	0699      	lsls	r1, r3, #26
 80061ee:	bf42      	ittt	mi
 80061f0:	f8d9 3000 	ldrmi.w	r3, [r9]
 80061f4:	3302      	addmi	r3, #2
 80061f6:	f8c9 3000 	strmi.w	r3, [r9]
 80061fa:	6825      	ldr	r5, [r4, #0]
 80061fc:	f015 0506 	ands.w	r5, r5, #6
 8006200:	d107      	bne.n	8006212 <_printf_common+0x52>
 8006202:	f104 0a19 	add.w	r10, r4, #25
 8006206:	68e3      	ldr	r3, [r4, #12]
 8006208:	f8d9 2000 	ldr.w	r2, [r9]
 800620c:	1a9b      	subs	r3, r3, r2
 800620e:	429d      	cmp	r5, r3
 8006210:	db29      	blt.n	8006266 <_printf_common+0xa6>
 8006212:	f894 3043 	ldrb.w	r3, [r4, #67]	; 0x43
 8006216:	6822      	ldr	r2, [r4, #0]
 8006218:	3300      	adds	r3, #0
 800621a:	bf18      	it	ne
 800621c:	2301      	movne	r3, #1
 800621e:	0692      	lsls	r2, r2, #26
 8006220:	d42e      	bmi.n	8006280 <_printf_common+0xc0>
 8006222:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8006226:	4639      	mov	r1, r7
 8006228:	4630      	mov	r0, r6
 800622a:	47c0      	blx	r8
 800622c:	3001      	adds	r0, #1
 800622e:	d021      	beq.n	8006274 <_printf_common+0xb4>
 8006230:	6823      	ldr	r3, [r4, #0]
 8006232:	68e5      	ldr	r5, [r4, #12]
 8006234:	f8d9 2000 	ldr.w	r2, [r9]
 8006238:	f003 0306 	and.w	r3, r3, #6
 800623c:	2b04      	cmp	r3, #4
 800623e:	bf08      	it	eq
 8006240:	1aad      	subeq	r5, r5, r2
 8006242:	68a3      	ldr	r3, [r4, #8]
 8006244:	6922      	ldr	r2, [r4, #16]
 8006246:	bf0c      	ite	eq
 8006248:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 800624c:	2500      	movne	r5, #0
 800624e:	4293      	cmp	r3, r2
 8006250:	bfc4      	itt	gt
 8006252:	1a9b      	subgt	r3, r3, r2
 8006254:	18ed      	addgt	r5, r5, r3
 8006256:	f04f 0900 	mov.w	r9, #0
 800625a:	341a      	adds	r4, #26
 800625c:	454d      	cmp	r5, r9
 800625e:	d11b      	bne.n	8006298 <_printf_common+0xd8>
 8006260:	2000      	movs	r0, #0
 8006262:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 8006266:	2301      	movs	r3, #1
 8006268:	4652      	mov	r2, r10
 800626a:	4639      	mov	r1, r7
 800626c:	4630      	mov	r0, r6
 800626e:	47c0      	blx	r8
 8006270:	3001      	adds	r0, #1
 8006272:	d103      	bne.n	800627c <_printf_common+0xbc>
 8006274:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8006278:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 800627c:	3501      	adds	r5, #1
 800627e:	e7c2      	b.n	8006206 <_printf_common+0x46>
 8006280:	18e1      	adds	r1, r4, r3
 8006282:	1c5a      	adds	r2, r3, #1
 8006284:	2030      	movs	r0, #48	; 0x30
 8006286:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 800628a:	4422      	add	r2, r4
 800628c:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8006290:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8006294:	3302      	adds	r3, #2
 8006296:	e7c4      	b.n	8006222 <_printf_common+0x62>
 8006298:	2301      	movs	r3, #1
 800629a:	4622      	mov	r2, r4
 800629c:	4639      	mov	r1, r7
 800629e:	4630      	mov	r0, r6
 80062a0:	47c0      	blx	r8
 80062a2:	3001      	adds	r0, #1
 80062a4:	d0e6      	beq.n	8006274 <_printf_common+0xb4>
 80062a6:	f109 0901 	add.w	r9, r9, #1
 80062aa:	e7d7      	b.n	800625c <_printf_common+0x9c>

080062ac <_printf_i>:
 80062ac:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80062b0:	4617      	mov	r7, r2
 80062b2:	7e0a      	ldrb	r2, [r1, #24]
 80062b4:	b085      	sub	sp, #20
 80062b6:	2a6e      	cmp	r2, #110	; 0x6e
 80062b8:	4698      	mov	r8, r3
 80062ba:	4606      	mov	r6, r0
 80062bc:	460c      	mov	r4, r1
 80062be:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80062c0:	f101 0e43 	add.w	lr, r1, #67	; 0x43
 80062c4:	f000 80bc 	beq.w	8006440 <_printf_i+0x194>
 80062c8:	d81a      	bhi.n	8006300 <_printf_i+0x54>
 80062ca:	2a63      	cmp	r2, #99	; 0x63
 80062cc:	d02e      	beq.n	800632c <_printf_i+0x80>
 80062ce:	d80a      	bhi.n	80062e6 <_printf_i+0x3a>
 80062d0:	2a00      	cmp	r2, #0
 80062d2:	f000 80c8 	beq.w	8006466 <_printf_i+0x1ba>
 80062d6:	2a58      	cmp	r2, #88	; 0x58
 80062d8:	f000 808a 	beq.w	80063f0 <_printf_i+0x144>
 80062dc:	f104 0542 	add.w	r5, r4, #66	; 0x42
 80062e0:	f884 2042 	strb.w	r2, [r4, #66]	; 0x42
 80062e4:	e02a      	b.n	800633c <_printf_i+0x90>
 80062e6:	2a64      	cmp	r2, #100	; 0x64
 80062e8:	d001      	beq.n	80062ee <_printf_i+0x42>
 80062ea:	2a69      	cmp	r2, #105	; 0x69
 80062ec:	d1f6      	bne.n	80062dc <_printf_i+0x30>
 80062ee:	6821      	ldr	r1, [r4, #0]
 80062f0:	681a      	ldr	r2, [r3, #0]
 80062f2:	f011 0f80 	tst.w	r1, #128	; 0x80
 80062f6:	d023      	beq.n	8006340 <_printf_i+0x94>
 80062f8:	1d11      	adds	r1, r2, #4
 80062fa:	6019      	str	r1, [r3, #0]
 80062fc:	6813      	ldr	r3, [r2, #0]
 80062fe:	e027      	b.n	8006350 <_printf_i+0xa4>
 8006300:	2a73      	cmp	r2, #115	; 0x73
 8006302:	f000 80b4 	beq.w	800646e <_printf_i+0x1c2>
 8006306:	d808      	bhi.n	800631a <_printf_i+0x6e>
 8006308:	2a6f      	cmp	r2, #111	; 0x6f
 800630a:	d02a      	beq.n	8006362 <_printf_i+0xb6>
 800630c:	2a70      	cmp	r2, #112	; 0x70
 800630e:	d1e5      	bne.n	80062dc <_printf_i+0x30>
 8006310:	680a      	ldr	r2, [r1, #0]
 8006312:	f042 0220 	orr.w	r2, r2, #32
 8006316:	600a      	str	r2, [r1, #0]
 8006318:	e003      	b.n	8006322 <_printf_i+0x76>
 800631a:	2a75      	cmp	r2, #117	; 0x75
 800631c:	d021      	beq.n	8006362 <_printf_i+0xb6>
 800631e:	2a78      	cmp	r2, #120	; 0x78
 8006320:	d1dc      	bne.n	80062dc <_printf_i+0x30>
 8006322:	2278      	movs	r2, #120	; 0x78
 8006324:	f884 2045 	strb.w	r2, [r4, #69]	; 0x45
 8006328:	496e      	ldr	r1, [pc, #440]	; (80064e4 <_printf_i+0x238>)
 800632a:	e064      	b.n	80063f6 <_printf_i+0x14a>
 800632c:	681a      	ldr	r2, [r3, #0]
 800632e:	f101 0542 	add.w	r5, r1, #66	; 0x42
 8006332:	1d11      	adds	r1, r2, #4
 8006334:	6019      	str	r1, [r3, #0]
 8006336:	6813      	ldr	r3, [r2, #0]
 8006338:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 800633c:	2301      	movs	r3, #1
 800633e:	e0a3      	b.n	8006488 <_printf_i+0x1dc>
 8006340:	f011 0f40 	tst.w	r1, #64	; 0x40
 8006344:	f102 0104 	add.w	r1, r2, #4
 8006348:	6019      	str	r1, [r3, #0]
 800634a:	d0d7      	beq.n	80062fc <_printf_i+0x50>
 800634c:	f9b2 3000 	ldrsh.w	r3, [r2]
 8006350:	2b00      	cmp	r3, #0
 8006352:	da03      	bge.n	800635c <_printf_i+0xb0>
 8006354:	222d      	movs	r2, #45	; 0x2d
 8006356:	425b      	negs	r3, r3
 8006358:	f884 2043 	strb.w	r2, [r4, #67]	; 0x43
 800635c:	4962      	ldr	r1, [pc, #392]	; (80064e8 <_printf_i+0x23c>)
 800635e:	220a      	movs	r2, #10
 8006360:	e017      	b.n	8006392 <_printf_i+0xe6>
 8006362:	6820      	ldr	r0, [r4, #0]
 8006364:	6819      	ldr	r1, [r3, #0]
 8006366:	f010 0f80 	tst.w	r0, #128	; 0x80
 800636a:	d003      	beq.n	8006374 <_printf_i+0xc8>
 800636c:	1d08      	adds	r0, r1, #4
 800636e:	6018      	str	r0, [r3, #0]
 8006370:	680b      	ldr	r3, [r1, #0]
 8006372:	e006      	b.n	8006382 <_printf_i+0xd6>
 8006374:	f010 0f40 	tst.w	r0, #64	; 0x40
 8006378:	f101 0004 	add.w	r0, r1, #4
 800637c:	6018      	str	r0, [r3, #0]
 800637e:	d0f7      	beq.n	8006370 <_printf_i+0xc4>
 8006380:	880b      	ldrh	r3, [r1, #0]
 8006382:	4959      	ldr	r1, [pc, #356]	; (80064e8 <_printf_i+0x23c>)
 8006384:	2a6f      	cmp	r2, #111	; 0x6f
 8006386:	bf14      	ite	ne
 8006388:	220a      	movne	r2, #10
 800638a:	2208      	moveq	r2, #8
 800638c:	2000      	movs	r0, #0
 800638e:	f884 0043 	strb.w	r0, [r4, #67]	; 0x43
 8006392:	6865      	ldr	r5, [r4, #4]
 8006394:	60a5      	str	r5, [r4, #8]
 8006396:	2d00      	cmp	r5, #0
 8006398:	f2c0 809c 	blt.w	80064d4 <_printf_i+0x228>
 800639c:	6820      	ldr	r0, [r4, #0]
 800639e:	f020 0004 	bic.w	r0, r0, #4
 80063a2:	6020      	str	r0, [r4, #0]
 80063a4:	2b00      	cmp	r3, #0
 80063a6:	d13f      	bne.n	8006428 <_printf_i+0x17c>
 80063a8:	2d00      	cmp	r5, #0
 80063aa:	f040 8095 	bne.w	80064d8 <_printf_i+0x22c>
 80063ae:	4675      	mov	r5, lr
 80063b0:	2a08      	cmp	r2, #8
 80063b2:	d10b      	bne.n	80063cc <_printf_i+0x120>
 80063b4:	6823      	ldr	r3, [r4, #0]
 80063b6:	07da      	lsls	r2, r3, #31
 80063b8:	d508      	bpl.n	80063cc <_printf_i+0x120>
 80063ba:	6923      	ldr	r3, [r4, #16]
 80063bc:	6862      	ldr	r2, [r4, #4]
 80063be:	429a      	cmp	r2, r3
 80063c0:	bfde      	ittt	le
 80063c2:	2330      	movle	r3, #48	; 0x30
 80063c4:	f805 3c01 	strble.w	r3, [r5, #-1]
 80063c8:	f105 35ff 	addle.w	r5, r5, #4294967295	; 0xffffffff
 80063cc:	ebae 0305 	sub.w	r3, lr, r5
 80063d0:	6123      	str	r3, [r4, #16]
 80063d2:	f8cd 8000 	str.w	r8, [sp]
 80063d6:	463b      	mov	r3, r7
 80063d8:	aa03      	add	r2, sp, #12
 80063da:	4621      	mov	r1, r4
 80063dc:	4630      	mov	r0, r6
 80063de:	f7ff feef 	bl	80061c0 <_printf_common>
 80063e2:	3001      	adds	r0, #1
 80063e4:	d155      	bne.n	8006492 <_printf_i+0x1e6>
 80063e6:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80063ea:	b005      	add	sp, #20
 80063ec:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80063f0:	f881 2045 	strb.w	r2, [r1, #69]	; 0x45
 80063f4:	493c      	ldr	r1, [pc, #240]	; (80064e8 <_printf_i+0x23c>)
 80063f6:	6822      	ldr	r2, [r4, #0]
 80063f8:	6818      	ldr	r0, [r3, #0]
 80063fa:	f012 0f80 	tst.w	r2, #128	; 0x80
 80063fe:	f100 0504 	add.w	r5, r0, #4
 8006402:	601d      	str	r5, [r3, #0]
 8006404:	d001      	beq.n	800640a <_printf_i+0x15e>
 8006406:	6803      	ldr	r3, [r0, #0]
 8006408:	e002      	b.n	8006410 <_printf_i+0x164>
 800640a:	0655      	lsls	r5, r2, #25
 800640c:	d5fb      	bpl.n	8006406 <_printf_i+0x15a>
 800640e:	8803      	ldrh	r3, [r0, #0]
 8006410:	07d0      	lsls	r0, r2, #31
 8006412:	bf44      	itt	mi
 8006414:	f042 0220 	orrmi.w	r2, r2, #32
 8006418:	6022      	strmi	r2, [r4, #0]
 800641a:	b91b      	cbnz	r3, 8006424 <_printf_i+0x178>
 800641c:	6822      	ldr	r2, [r4, #0]
 800641e:	f022 0220 	bic.w	r2, r2, #32
 8006422:	6022      	str	r2, [r4, #0]
 8006424:	2210      	movs	r2, #16
 8006426:	e7b1      	b.n	800638c <_printf_i+0xe0>
 8006428:	4675      	mov	r5, lr
 800642a:	fbb3 f0f2 	udiv	r0, r3, r2
 800642e:	fb02 3310 	mls	r3, r2, r0, r3
 8006432:	5ccb      	ldrb	r3, [r1, r3]
 8006434:	f805 3d01 	strb.w	r3, [r5, #-1]!
 8006438:	4603      	mov	r3, r0
 800643a:	2800      	cmp	r0, #0
 800643c:	d1f5      	bne.n	800642a <_printf_i+0x17e>
 800643e:	e7b7      	b.n	80063b0 <_printf_i+0x104>
 8006440:	6808      	ldr	r0, [r1, #0]
 8006442:	681a      	ldr	r2, [r3, #0]
 8006444:	6949      	ldr	r1, [r1, #20]
 8006446:	f010 0f80 	tst.w	r0, #128	; 0x80
 800644a:	d004      	beq.n	8006456 <_printf_i+0x1aa>
 800644c:	1d10      	adds	r0, r2, #4
 800644e:	6018      	str	r0, [r3, #0]
 8006450:	6813      	ldr	r3, [r2, #0]
 8006452:	6019      	str	r1, [r3, #0]
 8006454:	e007      	b.n	8006466 <_printf_i+0x1ba>
 8006456:	f010 0f40 	tst.w	r0, #64	; 0x40
 800645a:	f102 0004 	add.w	r0, r2, #4
 800645e:	6018      	str	r0, [r3, #0]
 8006460:	6813      	ldr	r3, [r2, #0]
 8006462:	d0f6      	beq.n	8006452 <_printf_i+0x1a6>
 8006464:	8019      	strh	r1, [r3, #0]
 8006466:	2300      	movs	r3, #0
 8006468:	6123      	str	r3, [r4, #16]
 800646a:	4675      	mov	r5, lr
 800646c:	e7b1      	b.n	80063d2 <_printf_i+0x126>
 800646e:	681a      	ldr	r2, [r3, #0]
 8006470:	1d11      	adds	r1, r2, #4
 8006472:	6019      	str	r1, [r3, #0]
 8006474:	6815      	ldr	r5, [r2, #0]
 8006476:	6862      	ldr	r2, [r4, #4]
 8006478:	2100      	movs	r1, #0
 800647a:	4628      	mov	r0, r5
 800647c:	f7ff fd50 	bl	8005f20 <memchr>
 8006480:	b108      	cbz	r0, 8006486 <_printf_i+0x1da>
 8006482:	1b40      	subs	r0, r0, r5
 8006484:	6060      	str	r0, [r4, #4]
 8006486:	6863      	ldr	r3, [r4, #4]
 8006488:	6123      	str	r3, [r4, #16]
 800648a:	2300      	movs	r3, #0
 800648c:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8006490:	e79f      	b.n	80063d2 <_printf_i+0x126>
 8006492:	6923      	ldr	r3, [r4, #16]
 8006494:	462a      	mov	r2, r5
 8006496:	4639      	mov	r1, r7
 8006498:	4630      	mov	r0, r6
 800649a:	47c0      	blx	r8
 800649c:	3001      	adds	r0, #1
 800649e:	d0a2      	beq.n	80063e6 <_printf_i+0x13a>
 80064a0:	6823      	ldr	r3, [r4, #0]
 80064a2:	079b      	lsls	r3, r3, #30
 80064a4:	d507      	bpl.n	80064b6 <_printf_i+0x20a>
 80064a6:	2500      	movs	r5, #0
 80064a8:	f104 0919 	add.w	r9, r4, #25
 80064ac:	68e3      	ldr	r3, [r4, #12]
 80064ae:	9a03      	ldr	r2, [sp, #12]
 80064b0:	1a9b      	subs	r3, r3, r2
 80064b2:	429d      	cmp	r5, r3
 80064b4:	db05      	blt.n	80064c2 <_printf_i+0x216>
 80064b6:	68e0      	ldr	r0, [r4, #12]
 80064b8:	9b03      	ldr	r3, [sp, #12]
 80064ba:	4298      	cmp	r0, r3
 80064bc:	bfb8      	it	lt
 80064be:	4618      	movlt	r0, r3
 80064c0:	e793      	b.n	80063ea <_printf_i+0x13e>
 80064c2:	2301      	movs	r3, #1
 80064c4:	464a      	mov	r2, r9
 80064c6:	4639      	mov	r1, r7
 80064c8:	4630      	mov	r0, r6
 80064ca:	47c0      	blx	r8
 80064cc:	3001      	adds	r0, #1
 80064ce:	d08a      	beq.n	80063e6 <_printf_i+0x13a>
 80064d0:	3501      	adds	r5, #1
 80064d2:	e7eb      	b.n	80064ac <_printf_i+0x200>
 80064d4:	2b00      	cmp	r3, #0
 80064d6:	d1a7      	bne.n	8006428 <_printf_i+0x17c>
 80064d8:	780b      	ldrb	r3, [r1, #0]
 80064da:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 80064de:	f104 0542 	add.w	r5, r4, #66	; 0x42
 80064e2:	e765      	b.n	80063b0 <_printf_i+0x104>
 80064e4:	0800743d 	.word	0x0800743d
 80064e8:	0800742c 	.word	0x0800742c

080064ec <realloc>:
 80064ec:	4b02      	ldr	r3, [pc, #8]	; (80064f8 <realloc+0xc>)
 80064ee:	460a      	mov	r2, r1
 80064f0:	4601      	mov	r1, r0
 80064f2:	6818      	ldr	r0, [r3, #0]
 80064f4:	f7ff b918 	b.w	8005728 <__wrap__realloc_r>
 80064f8:	200001bc 	.word	0x200001bc

080064fc <_sbrk_r>:
 80064fc:	b538      	push	{r3, r4, r5, lr}
 80064fe:	4c06      	ldr	r4, [pc, #24]	; (8006518 <_sbrk_r+0x1c>)
 8006500:	2300      	movs	r3, #0
 8006502:	4605      	mov	r5, r0
 8006504:	4608      	mov	r0, r1
 8006506:	6023      	str	r3, [r4, #0]
 8006508:	f7ff f9f8 	bl	80058fc <_sbrk>
 800650c:	1c43      	adds	r3, r0, #1
 800650e:	d102      	bne.n	8006516 <_sbrk_r+0x1a>
 8006510:	6823      	ldr	r3, [r4, #0]
 8006512:	b103      	cbz	r3, 8006516 <_sbrk_r+0x1a>
 8006514:	602b      	str	r3, [r5, #0]
 8006516:	bd38      	pop	{r3, r4, r5, pc}
 8006518:	20002e24 	.word	0x20002e24

0800651c <__sread>:
 800651c:	b510      	push	{r4, lr}
 800651e:	460c      	mov	r4, r1
 8006520:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8006524:	f000 f9f4 	bl	8006910 <_read_r>
 8006528:	2800      	cmp	r0, #0
 800652a:	bfab      	itete	ge
 800652c:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 800652e:	89a3      	ldrhlt	r3, [r4, #12]
 8006530:	181b      	addge	r3, r3, r0
 8006532:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8006536:	bfac      	ite	ge
 8006538:	6563      	strge	r3, [r4, #84]	; 0x54
 800653a:	81a3      	strhlt	r3, [r4, #12]
 800653c:	bd10      	pop	{r4, pc}

0800653e <__swrite>:
 800653e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8006542:	461f      	mov	r7, r3
 8006544:	898b      	ldrh	r3, [r1, #12]
 8006546:	05db      	lsls	r3, r3, #23
 8006548:	4605      	mov	r5, r0
 800654a:	460c      	mov	r4, r1
 800654c:	4616      	mov	r6, r2
 800654e:	d505      	bpl.n	800655c <__swrite+0x1e>
 8006550:	2302      	movs	r3, #2
 8006552:	2200      	movs	r2, #0
 8006554:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8006558:	f000 f870 	bl	800663c <_lseek_r>
 800655c:	89a3      	ldrh	r3, [r4, #12]
 800655e:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8006562:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8006566:	81a3      	strh	r3, [r4, #12]
 8006568:	4632      	mov	r2, r6
 800656a:	463b      	mov	r3, r7
 800656c:	4628      	mov	r0, r5
 800656e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8006572:	f000 b841 	b.w	80065f8 <_write_r>

08006576 <__sseek>:
 8006576:	b510      	push	{r4, lr}
 8006578:	460c      	mov	r4, r1
 800657a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800657e:	f000 f85d 	bl	800663c <_lseek_r>
 8006582:	1c43      	adds	r3, r0, #1
 8006584:	89a3      	ldrh	r3, [r4, #12]
 8006586:	bf15      	itete	ne
 8006588:	6560      	strne	r0, [r4, #84]	; 0x54
 800658a:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 800658e:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8006592:	81a3      	strheq	r3, [r4, #12]
 8006594:	bf18      	it	ne
 8006596:	81a3      	strhne	r3, [r4, #12]
 8006598:	bd10      	pop	{r4, pc}

0800659a <__sclose>:
 800659a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800659e:	f000 b83d 	b.w	800661c <_close_r>

080065a2 <strlen>:
 80065a2:	4603      	mov	r3, r0
 80065a4:	f813 2b01 	ldrb.w	r2, [r3], #1
 80065a8:	2a00      	cmp	r2, #0
 80065aa:	d1fb      	bne.n	80065a4 <strlen+0x2>
 80065ac:	1a18      	subs	r0, r3, r0
 80065ae:	3801      	subs	r0, #1
 80065b0:	4770      	bx	lr

080065b2 <_vsiprintf_r>:
 80065b2:	b510      	push	{r4, lr}
 80065b4:	b09a      	sub	sp, #104	; 0x68
 80065b6:	f44f 7402 	mov.w	r4, #520	; 0x208
 80065ba:	9100      	str	r1, [sp, #0]
 80065bc:	9104      	str	r1, [sp, #16]
 80065be:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 80065c2:	9102      	str	r1, [sp, #8]
 80065c4:	9105      	str	r1, [sp, #20]
 80065c6:	f64f 71ff 	movw	r1, #65535	; 0xffff
 80065ca:	f8ad 100e 	strh.w	r1, [sp, #14]
 80065ce:	4669      	mov	r1, sp
 80065d0:	f8ad 400c 	strh.w	r4, [sp, #12]
 80065d4:	f000 f8a8 	bl	8006728 <_svfiprintf_r>
 80065d8:	9b00      	ldr	r3, [sp, #0]
 80065da:	2200      	movs	r2, #0
 80065dc:	701a      	strb	r2, [r3, #0]
 80065de:	b01a      	add	sp, #104	; 0x68
 80065e0:	bd10      	pop	{r4, pc}
	...

080065e4 <vsiprintf>:
 80065e4:	4613      	mov	r3, r2
 80065e6:	460a      	mov	r2, r1
 80065e8:	4601      	mov	r1, r0
 80065ea:	4802      	ldr	r0, [pc, #8]	; (80065f4 <vsiprintf+0x10>)
 80065ec:	6800      	ldr	r0, [r0, #0]
 80065ee:	f7ff bfe0 	b.w	80065b2 <_vsiprintf_r>
 80065f2:	bf00      	nop
 80065f4:	200001bc 	.word	0x200001bc

080065f8 <_write_r>:
 80065f8:	b538      	push	{r3, r4, r5, lr}
 80065fa:	4c07      	ldr	r4, [pc, #28]	; (8006618 <_write_r+0x20>)
 80065fc:	4605      	mov	r5, r0
 80065fe:	4608      	mov	r0, r1
 8006600:	4611      	mov	r1, r2
 8006602:	2200      	movs	r2, #0
 8006604:	6022      	str	r2, [r4, #0]
 8006606:	461a      	mov	r2, r3
 8006608:	f7ff f8e6 	bl	80057d8 <_write>
 800660c:	1c43      	adds	r3, r0, #1
 800660e:	d102      	bne.n	8006616 <_write_r+0x1e>
 8006610:	6823      	ldr	r3, [r4, #0]
 8006612:	b103      	cbz	r3, 8006616 <_write_r+0x1e>
 8006614:	602b      	str	r3, [r5, #0]
 8006616:	bd38      	pop	{r3, r4, r5, pc}
 8006618:	20002e24 	.word	0x20002e24

0800661c <_close_r>:
 800661c:	b538      	push	{r3, r4, r5, lr}
 800661e:	4c06      	ldr	r4, [pc, #24]	; (8006638 <_close_r+0x1c>)
 8006620:	2300      	movs	r3, #0
 8006622:	4605      	mov	r5, r0
 8006624:	4608      	mov	r0, r1
 8006626:	6023      	str	r3, [r4, #0]
 8006628:	f7ff f8b6 	bl	8005798 <_close>
 800662c:	1c43      	adds	r3, r0, #1
 800662e:	d102      	bne.n	8006636 <_close_r+0x1a>
 8006630:	6823      	ldr	r3, [r4, #0]
 8006632:	b103      	cbz	r3, 8006636 <_close_r+0x1a>
 8006634:	602b      	str	r3, [r5, #0]
 8006636:	bd38      	pop	{r3, r4, r5, pc}
 8006638:	20002e24 	.word	0x20002e24

0800663c <_lseek_r>:
 800663c:	b538      	push	{r3, r4, r5, lr}
 800663e:	4c07      	ldr	r4, [pc, #28]	; (800665c <_lseek_r+0x20>)
 8006640:	4605      	mov	r5, r0
 8006642:	4608      	mov	r0, r1
 8006644:	4611      	mov	r1, r2
 8006646:	2200      	movs	r2, #0
 8006648:	6022      	str	r2, [r4, #0]
 800664a:	461a      	mov	r2, r3
 800664c:	f7ff f92a 	bl	80058a4 <_lseek>
 8006650:	1c43      	adds	r3, r0, #1
 8006652:	d102      	bne.n	800665a <_lseek_r+0x1e>
 8006654:	6823      	ldr	r3, [r4, #0]
 8006656:	b103      	cbz	r3, 800665a <_lseek_r+0x1e>
 8006658:	602b      	str	r3, [r5, #0]
 800665a:	bd38      	pop	{r3, r4, r5, pc}
 800665c:	20002e24 	.word	0x20002e24

08006660 <_malloc_usable_size_r>:
 8006660:	f851 0c04 	ldr.w	r0, [r1, #-4]
 8006664:	2800      	cmp	r0, #0
 8006666:	f1a0 0004 	sub.w	r0, r0, #4
 800666a:	bfbc      	itt	lt
 800666c:	580b      	ldrlt	r3, [r1, r0]
 800666e:	18c0      	addlt	r0, r0, r3
 8006670:	4770      	bx	lr

08006672 <__ssputs_r>:
 8006672:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, lr}
 8006676:	688e      	ldr	r6, [r1, #8]
 8006678:	429e      	cmp	r6, r3
 800667a:	4682      	mov	r10, r0
 800667c:	460c      	mov	r4, r1
 800667e:	4691      	mov	r9, r2
 8006680:	4698      	mov	r8, r3
 8006682:	d835      	bhi.n	80066f0 <__ssputs_r+0x7e>
 8006684:	898a      	ldrh	r2, [r1, #12]
 8006686:	f412 6f90 	tst.w	r2, #1152	; 0x480
 800668a:	d031      	beq.n	80066f0 <__ssputs_r+0x7e>
 800668c:	6825      	ldr	r5, [r4, #0]
 800668e:	6909      	ldr	r1, [r1, #16]
 8006690:	1a6f      	subs	r7, r5, r1
 8006692:	6965      	ldr	r5, [r4, #20]
 8006694:	2302      	movs	r3, #2
 8006696:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 800669a:	fb95 f5f3 	sdiv	r5, r5, r3
 800669e:	f108 0301 	add.w	r3, r8, #1
 80066a2:	443b      	add	r3, r7
 80066a4:	429d      	cmp	r5, r3
 80066a6:	bf38      	it	cc
 80066a8:	461d      	movcc	r5, r3
 80066aa:	0553      	lsls	r3, r2, #21
 80066ac:	d531      	bpl.n	8006712 <__ssputs_r+0xa0>
 80066ae:	4629      	mov	r1, r5
 80066b0:	f7ff f838 	bl	8005724 <__wrap__malloc_r>
 80066b4:	4606      	mov	r6, r0
 80066b6:	b950      	cbnz	r0, 80066ce <__ssputs_r+0x5c>
 80066b8:	230c      	movs	r3, #12
 80066ba:	f8ca 3000 	str.w	r3, [r10]
 80066be:	89a3      	ldrh	r3, [r4, #12]
 80066c0:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80066c4:	81a3      	strh	r3, [r4, #12]
 80066c6:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80066ca:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 80066ce:	463a      	mov	r2, r7
 80066d0:	6921      	ldr	r1, [r4, #16]
 80066d2:	f7ff fc75 	bl	8005fc0 <memcpy>
 80066d6:	89a3      	ldrh	r3, [r4, #12]
 80066d8:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 80066dc:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80066e0:	81a3      	strh	r3, [r4, #12]
 80066e2:	6126      	str	r6, [r4, #16]
 80066e4:	6165      	str	r5, [r4, #20]
 80066e6:	443e      	add	r6, r7
 80066e8:	1bed      	subs	r5, r5, r7
 80066ea:	6026      	str	r6, [r4, #0]
 80066ec:	60a5      	str	r5, [r4, #8]
 80066ee:	4646      	mov	r6, r8
 80066f0:	4546      	cmp	r6, r8
 80066f2:	bf28      	it	cs
 80066f4:	4646      	movcs	r6, r8
 80066f6:	4632      	mov	r2, r6
 80066f8:	4649      	mov	r1, r9
 80066fa:	6820      	ldr	r0, [r4, #0]
 80066fc:	f7ff fc6b 	bl	8005fd6 <memmove>
 8006700:	68a3      	ldr	r3, [r4, #8]
 8006702:	1b9b      	subs	r3, r3, r6
 8006704:	60a3      	str	r3, [r4, #8]
 8006706:	6823      	ldr	r3, [r4, #0]
 8006708:	441e      	add	r6, r3
 800670a:	6026      	str	r6, [r4, #0]
 800670c:	2000      	movs	r0, #0
 800670e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 8006712:	462a      	mov	r2, r5
 8006714:	f7ff f808 	bl	8005728 <__wrap__realloc_r>
 8006718:	4606      	mov	r6, r0
 800671a:	2800      	cmp	r0, #0
 800671c:	d1e1      	bne.n	80066e2 <__ssputs_r+0x70>
 800671e:	6921      	ldr	r1, [r4, #16]
 8006720:	4650      	mov	r0, r10
 8006722:	f7ff f803 	bl	800572c <__wrap__free_r>
 8006726:	e7c7      	b.n	80066b8 <__ssputs_r+0x46>

08006728 <_svfiprintf_r>:
 8006728:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, lr}
 800672c:	b09d      	sub	sp, #116	; 0x74
 800672e:	4680      	mov	r8, r0
 8006730:	9303      	str	r3, [sp, #12]
 8006732:	898b      	ldrh	r3, [r1, #12]
 8006734:	061c      	lsls	r4, r3, #24
 8006736:	460d      	mov	r5, r1
 8006738:	4616      	mov	r6, r2
 800673a:	d50f      	bpl.n	800675c <_svfiprintf_r+0x34>
 800673c:	690b      	ldr	r3, [r1, #16]
 800673e:	b96b      	cbnz	r3, 800675c <_svfiprintf_r+0x34>
 8006740:	2140      	movs	r1, #64	; 0x40
 8006742:	f7fe ffef 	bl	8005724 <__wrap__malloc_r>
 8006746:	6028      	str	r0, [r5, #0]
 8006748:	6128      	str	r0, [r5, #16]
 800674a:	b928      	cbnz	r0, 8006758 <_svfiprintf_r+0x30>
 800674c:	230c      	movs	r3, #12
 800674e:	f8c8 3000 	str.w	r3, [r8]
 8006752:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8006756:	e0c5      	b.n	80068e4 <_svfiprintf_r+0x1bc>
 8006758:	2340      	movs	r3, #64	; 0x40
 800675a:	616b      	str	r3, [r5, #20]
 800675c:	2300      	movs	r3, #0
 800675e:	9309      	str	r3, [sp, #36]	; 0x24
 8006760:	2320      	movs	r3, #32
 8006762:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8006766:	2330      	movs	r3, #48	; 0x30
 8006768:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 800676c:	f04f 0b01 	mov.w	r11, #1
 8006770:	4637      	mov	r7, r6
 8006772:	463c      	mov	r4, r7
 8006774:	f814 3b01 	ldrb.w	r3, [r4], #1
 8006778:	2b00      	cmp	r3, #0
 800677a:	d13c      	bne.n	80067f6 <_svfiprintf_r+0xce>
 800677c:	ebb7 0a06 	subs.w	r10, r7, r6
 8006780:	d00b      	beq.n	800679a <_svfiprintf_r+0x72>
 8006782:	4653      	mov	r3, r10
 8006784:	4632      	mov	r2, r6
 8006786:	4629      	mov	r1, r5
 8006788:	4640      	mov	r0, r8
 800678a:	f7ff ff72 	bl	8006672 <__ssputs_r>
 800678e:	3001      	adds	r0, #1
 8006790:	f000 80a3 	beq.w	80068da <_svfiprintf_r+0x1b2>
 8006794:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8006796:	4453      	add	r3, r10
 8006798:	9309      	str	r3, [sp, #36]	; 0x24
 800679a:	783b      	ldrb	r3, [r7, #0]
 800679c:	2b00      	cmp	r3, #0
 800679e:	f000 809c 	beq.w	80068da <_svfiprintf_r+0x1b2>
 80067a2:	2300      	movs	r3, #0
 80067a4:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 80067a8:	9304      	str	r3, [sp, #16]
 80067aa:	9307      	str	r3, [sp, #28]
 80067ac:	9205      	str	r2, [sp, #20]
 80067ae:	9306      	str	r3, [sp, #24]
 80067b0:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 80067b4:	931a      	str	r3, [sp, #104]	; 0x68
 80067b6:	2205      	movs	r2, #5
 80067b8:	7821      	ldrb	r1, [r4, #0]
 80067ba:	4850      	ldr	r0, [pc, #320]	; (80068fc <_svfiprintf_r+0x1d4>)
 80067bc:	f7ff fbb0 	bl	8005f20 <memchr>
 80067c0:	1c67      	adds	r7, r4, #1
 80067c2:	9b04      	ldr	r3, [sp, #16]
 80067c4:	b9d8      	cbnz	r0, 80067fe <_svfiprintf_r+0xd6>
 80067c6:	06d9      	lsls	r1, r3, #27
 80067c8:	bf44      	itt	mi
 80067ca:	2220      	movmi	r2, #32
 80067cc:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 80067d0:	071a      	lsls	r2, r3, #28
 80067d2:	bf44      	itt	mi
 80067d4:	222b      	movmi	r2, #43	; 0x2b
 80067d6:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 80067da:	7822      	ldrb	r2, [r4, #0]
 80067dc:	2a2a      	cmp	r2, #42	; 0x2a
 80067de:	d016      	beq.n	800680e <_svfiprintf_r+0xe6>
 80067e0:	9a07      	ldr	r2, [sp, #28]
 80067e2:	2100      	movs	r1, #0
 80067e4:	200a      	movs	r0, #10
 80067e6:	4627      	mov	r7, r4
 80067e8:	3401      	adds	r4, #1
 80067ea:	783b      	ldrb	r3, [r7, #0]
 80067ec:	3b30      	subs	r3, #48	; 0x30
 80067ee:	2b09      	cmp	r3, #9
 80067f0:	d951      	bls.n	8006896 <_svfiprintf_r+0x16e>
 80067f2:	b1c9      	cbz	r1, 8006828 <_svfiprintf_r+0x100>
 80067f4:	e011      	b.n	800681a <_svfiprintf_r+0xf2>
 80067f6:	2b25      	cmp	r3, #37	; 0x25
 80067f8:	d0c0      	beq.n	800677c <_svfiprintf_r+0x54>
 80067fa:	4627      	mov	r7, r4
 80067fc:	e7b9      	b.n	8006772 <_svfiprintf_r+0x4a>
 80067fe:	4a3f      	ldr	r2, [pc, #252]	; (80068fc <_svfiprintf_r+0x1d4>)
 8006800:	1a80      	subs	r0, r0, r2
 8006802:	fa0b f000 	lsl.w	r0, r11, r0
 8006806:	4318      	orrs	r0, r3
 8006808:	9004      	str	r0, [sp, #16]
 800680a:	463c      	mov	r4, r7
 800680c:	e7d3      	b.n	80067b6 <_svfiprintf_r+0x8e>
 800680e:	9a03      	ldr	r2, [sp, #12]
 8006810:	1d11      	adds	r1, r2, #4
 8006812:	6812      	ldr	r2, [r2, #0]
 8006814:	9103      	str	r1, [sp, #12]
 8006816:	2a00      	cmp	r2, #0
 8006818:	db01      	blt.n	800681e <_svfiprintf_r+0xf6>
 800681a:	9207      	str	r2, [sp, #28]
 800681c:	e004      	b.n	8006828 <_svfiprintf_r+0x100>
 800681e:	4252      	negs	r2, r2
 8006820:	f043 0302 	orr.w	r3, r3, #2
 8006824:	9207      	str	r2, [sp, #28]
 8006826:	9304      	str	r3, [sp, #16]
 8006828:	783b      	ldrb	r3, [r7, #0]
 800682a:	2b2e      	cmp	r3, #46	; 0x2e
 800682c:	d10e      	bne.n	800684c <_svfiprintf_r+0x124>
 800682e:	787b      	ldrb	r3, [r7, #1]
 8006830:	2b2a      	cmp	r3, #42	; 0x2a
 8006832:	f107 0101 	add.w	r1, r7, #1
 8006836:	d132      	bne.n	800689e <_svfiprintf_r+0x176>
 8006838:	9b03      	ldr	r3, [sp, #12]
 800683a:	1d1a      	adds	r2, r3, #4
 800683c:	681b      	ldr	r3, [r3, #0]
 800683e:	9203      	str	r2, [sp, #12]
 8006840:	2b00      	cmp	r3, #0
 8006842:	bfb8      	it	lt
 8006844:	f04f 33ff 	movlt.w	r3, #4294967295	; 0xffffffff
 8006848:	3702      	adds	r7, #2
 800684a:	9305      	str	r3, [sp, #20]
 800684c:	4c2c      	ldr	r4, [pc, #176]	; (8006900 <_svfiprintf_r+0x1d8>)
 800684e:	7839      	ldrb	r1, [r7, #0]
 8006850:	2203      	movs	r2, #3
 8006852:	4620      	mov	r0, r4
 8006854:	f7ff fb64 	bl	8005f20 <memchr>
 8006858:	b138      	cbz	r0, 800686a <_svfiprintf_r+0x142>
 800685a:	2340      	movs	r3, #64	; 0x40
 800685c:	1b00      	subs	r0, r0, r4
 800685e:	fa03 f000 	lsl.w	r0, r3, r0
 8006862:	9b04      	ldr	r3, [sp, #16]
 8006864:	4303      	orrs	r3, r0
 8006866:	9304      	str	r3, [sp, #16]
 8006868:	3701      	adds	r7, #1
 800686a:	7839      	ldrb	r1, [r7, #0]
 800686c:	4825      	ldr	r0, [pc, #148]	; (8006904 <_svfiprintf_r+0x1dc>)
 800686e:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8006872:	2206      	movs	r2, #6
 8006874:	1c7e      	adds	r6, r7, #1
 8006876:	f7ff fb53 	bl	8005f20 <memchr>
 800687a:	2800      	cmp	r0, #0
 800687c:	d035      	beq.n	80068ea <_svfiprintf_r+0x1c2>
 800687e:	4b22      	ldr	r3, [pc, #136]	; (8006908 <_svfiprintf_r+0x1e0>)
 8006880:	b9fb      	cbnz	r3, 80068c2 <_svfiprintf_r+0x19a>
 8006882:	9b03      	ldr	r3, [sp, #12]
 8006884:	3307      	adds	r3, #7
 8006886:	f023 0307 	bic.w	r3, r3, #7
 800688a:	3308      	adds	r3, #8
 800688c:	9303      	str	r3, [sp, #12]
 800688e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8006890:	444b      	add	r3, r9
 8006892:	9309      	str	r3, [sp, #36]	; 0x24
 8006894:	e76c      	b.n	8006770 <_svfiprintf_r+0x48>
 8006896:	fb00 3202 	mla	r2, r0, r2, r3
 800689a:	2101      	movs	r1, #1
 800689c:	e7a3      	b.n	80067e6 <_svfiprintf_r+0xbe>
 800689e:	2300      	movs	r3, #0
 80068a0:	9305      	str	r3, [sp, #20]
 80068a2:	4618      	mov	r0, r3
 80068a4:	240a      	movs	r4, #10
 80068a6:	460f      	mov	r7, r1
 80068a8:	3101      	adds	r1, #1
 80068aa:	783a      	ldrb	r2, [r7, #0]
 80068ac:	3a30      	subs	r2, #48	; 0x30
 80068ae:	2a09      	cmp	r2, #9
 80068b0:	d903      	bls.n	80068ba <_svfiprintf_r+0x192>
 80068b2:	2b00      	cmp	r3, #0
 80068b4:	d0ca      	beq.n	800684c <_svfiprintf_r+0x124>
 80068b6:	9005      	str	r0, [sp, #20]
 80068b8:	e7c8      	b.n	800684c <_svfiprintf_r+0x124>
 80068ba:	fb04 2000 	mla	r0, r4, r0, r2
 80068be:	2301      	movs	r3, #1
 80068c0:	e7f1      	b.n	80068a6 <_svfiprintf_r+0x17e>
 80068c2:	ab03      	add	r3, sp, #12
 80068c4:	9300      	str	r3, [sp, #0]
 80068c6:	462a      	mov	r2, r5
 80068c8:	4b10      	ldr	r3, [pc, #64]	; (800690c <_svfiprintf_r+0x1e4>)
 80068ca:	a904      	add	r1, sp, #16
 80068cc:	4640      	mov	r0, r8
 80068ce:	f3af 8000 	nop.w
 80068d2:	f1b0 3fff 	cmp.w	r0, #4294967295	; 0xffffffff
 80068d6:	4681      	mov	r9, r0
 80068d8:	d1d9      	bne.n	800688e <_svfiprintf_r+0x166>
 80068da:	89ab      	ldrh	r3, [r5, #12]
 80068dc:	065b      	lsls	r3, r3, #25
 80068de:	f53f af38 	bmi.w	8006752 <_svfiprintf_r+0x2a>
 80068e2:	9809      	ldr	r0, [sp, #36]	; 0x24
 80068e4:	b01d      	add	sp, #116	; 0x74
 80068e6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, pc}
 80068ea:	ab03      	add	r3, sp, #12
 80068ec:	9300      	str	r3, [sp, #0]
 80068ee:	462a      	mov	r2, r5
 80068f0:	4b06      	ldr	r3, [pc, #24]	; (800690c <_svfiprintf_r+0x1e4>)
 80068f2:	a904      	add	r1, sp, #16
 80068f4:	4640      	mov	r0, r8
 80068f6:	f7ff fcd9 	bl	80062ac <_printf_i>
 80068fa:	e7ea      	b.n	80068d2 <_svfiprintf_r+0x1aa>
 80068fc:	0800744e 	.word	0x0800744e
 8006900:	08007454 	.word	0x08007454
 8006904:	08007458 	.word	0x08007458
 8006908:	00000000 	.word	0x00000000
 800690c:	08006673 	.word	0x08006673

08006910 <_read_r>:
 8006910:	b538      	push	{r3, r4, r5, lr}
 8006912:	4c07      	ldr	r4, [pc, #28]	; (8006930 <_read_r+0x20>)
 8006914:	4605      	mov	r5, r0
 8006916:	4608      	mov	r0, r1
 8006918:	4611      	mov	r1, r2
 800691a:	2200      	movs	r2, #0
 800691c:	6022      	str	r2, [r4, #0]
 800691e:	461a      	mov	r2, r3
 8006920:	f7fe ff90 	bl	8005844 <_read>
 8006924:	1c43      	adds	r3, r0, #1
 8006926:	d102      	bne.n	800692e <_read_r+0x1e>
 8006928:	6823      	ldr	r3, [r4, #0]
 800692a:	b103      	cbz	r3, 800692e <_read_r+0x1e>
 800692c:	602b      	str	r3, [r5, #0]
 800692e:	bd38      	pop	{r3, r4, r5, pc}
 8006930:	20002e24 	.word	0x20002e24

08006934 <_init>:
 8006934:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006936:	bf00      	nop
 8006938:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800693a:	bc08      	pop	{r3}
 800693c:	469e      	mov	lr, r3
 800693e:	4770      	bx	lr

08006940 <_fini>:
 8006940:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006942:	bf00      	nop
 8006944:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8006946:	bc08      	pop	{r3}
 8006948:	469e      	mov	lr, r3
 800694a:	4770      	bx	lr

0800694c <vtable for std_msgs::Time>:
	...
 8006954:	0205 0800 022d 0800 0269 0800 0271 0800     ....-...i...q...

08006964 <vtable for rosserial_msgs::TopicInfo>:
	...
 800696c:	082b 0800 0905 0800 0279 0800 0281 0800     +.......y.......

0800697c <vtable for rosserial_msgs::Log>:
	...
 8006984:	07ff 0800 08cf 0800 0289 0800 0291 0800     ................

08006994 <vtable for rosserial_msgs::RequestParamResponse>:
	...
 800699c:	071d 0800 09bb 0800 0299 0800 02a1 0800     ................

080069ac <vtable for std_msgs::Empty>:
	...
 80069b4:	02a9 0800 02ad 0800 02b1 0800 02b9 0800     ................

080069c4 <vtable for std_msgs::Float32>:
	...
 80069cc:	02c1 0800 02d5 0800 02dd 0800 02e5 0800     ................

080069dc <vtable for std_msgs::MultiArrayDimension>:
	...
 80069e4:	06d1 0800 0ae9 0800 02ed 0800 02f5 0800     ................

080069f4 <vtable for std_msgs::MultiArrayLayout>:
	...
 80069fc:	02fd 0800 0b53 0800 034d 0800 0355 0800     ....S...M...U...

08006a0c <vtable for std_msgs::Float32MultiArray>:
	...
 8006a14:	035d 0800 0bc7 0800 03b5 0800 03bd 0800     ]...............

08006a24 <vtable for geometry_msgs::Vector3>:
	...
 8006a2c:	03c5 0800 042b 0800 0449 0800 0451 0800     ....+...I...Q...

08006a3c <vtable for ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>>:
	...
 8006a44:	1215 0800 12bd 0800 0511 0800               ............

08006a50 <vtable for ros::Subscriber<std_msgs::Empty, void>>:
	...
 8006a58:	04f5 0800 04fb 0800 0501 0800 0509 0800     ................

08006a68 <vtable for ros::Subscriber<std_msgs::Float32, void>>:
	...
 8006a70:	04c9 0800 04e1 0800 04e5 0800 04ed 0800     ................

08006a80 <vtable for ros::Subscriber<geometry_msgs::Vector3, void>>:
	...
 8006a88:	049b 0800 04b3 0800 04b9 0800 04c1 0800     ................

08006a98 <void mbed::Callback<void ()>::generate<void (*)()>(void (* const&)())::ops>:
 8006a98:	048d 0800 0491 0800 0499 0800 7473 706f     ............stop
 8006aa8:	6d5f 746f 726f 0031 7473 706f 6d5f 746f     _motor1.stop_mot
 8006ab8:	726f 0032 6573 5f74 6e61 6c67 5f65 6f6d     or2.set_angle_mo
 8006ac8:	6f74 3172 7300 7465 615f 676e 656c 6d5f     tor1.set_angle_m
 8006ad8:	746f 726f 0032 6573 5f74 4950 5f44 6f6d     otor2.set_PID_mo
 8006ae8:	6f74 3172 7300 7465 505f 4449 6d5f 746f     tor1.set_PID_mot
 8006af8:	726f 0032 6f6d 696e 6f74 6972 676e 6200     or2.monitoring.b
 8006b08:	6765 6e69 635f 6c61 7563 616c 6974 6e6f     egin_calculation
 8006b18:	7300 6f74 5f70 6163 636c 6c75 7461 6f69     .stop_calculatio
 8006b28:	006e 6134 3438 6232 3536 3466 3331 3830     n.4a842b65f41308
 8006b38:	6434 3263 3162 6630 3462 3438 6165 6637     4dc2b10fb484ea7f
 8006b48:	3731 6700 6f65 656d 7274 5f79 736d 7367     17.geometry_msgs
 8006b58:	562f 6365 6f74 3372 3900 3066 3965 6238     /Vector3.9f0e98b
 8006b68:	6164 3536 3839 3931 3638 6464 3566 6133     da65981986ddf53a
 8006b78:	6166 6137 3034 3465 0039 3131 6261 3764     fa7a40e49.11abd7
 8006b88:	3133 3263 3935 3333 3632 6331 3664 3831     31c25933261cd618
 8006b98:	6233 3164 6432 3236 3539 7200 736f 6573     3bd12d6295.rosse
 8006ba8:	6972 6c61 6d5f 6773 2f73 6f4c 0067 6130     rial_msgs/Log.0a
 8006bb8:	3564 6631 3838 6366 3434 3938 6632 6338     d51f88fc44892f8c
 8006bc8:	3031 3836 3034 3737 3436 3036 3530 7200     10684077646005.r
 8006bd8:	736f 6573 6972 6c61 6d5f 6773 2f73 6f54     osserial_msgs/To
 8006be8:	6970 4963 666e 006f                         picInfo.

08006bf0 <rosserial_msgs::REQUESTPARAM>:
 8006bf0:	6f72 7373 7265 6169 5f6c 736d 7367 522f     rosserial_msgs/R
 8006c00:	7165 6575 7473 6150 6172 006d 654d 7373     equestParam.Mess
 8006c10:	6761 2065 7266 6d6f 6420 7665 6369 2065     age from device 
 8006c20:	7264 706f 6570 3a64 6d20 7365 6173 6567     dropped: message
 8006c30:	6c20 7261 6567 2072 6874 6e61 6220 6675      larger than buf
 8006c40:	6566 2e72 3000 6566 3264 3161 6331 3331     fer..0fed2a11c13
 8006c50:	3165 6331 3535 3137 3462 3265 3961 3539     e11c5571b4e2a995
 8006c60:	3961 6131 0033 7473 5f64 736d 7367 4d2f     a91a3.std_msgs/M
 8006c70:	6c75 6974 7241 6172 4c79 7961 756f 0074     ultiArrayLayout.
 8006c80:	6136 3034 3065 6666 3661 3161 6137 3035     6a40e0ffa6a17a50
 8006c90:	6133 3363 3866 3136 3936 3139 3162 3666     3ac3f8616991b1f6
 8006ca0:	7300 6474 6d5f 6773 2f73 6c46 616f 3374     .std_msgs/Float3
 8006cb0:	4d32 6c75 6974 7241 6172 0079 6334 3064     2MultiArray.4cd0
 8006cc0:	3863 6133 3638 3338 6564 6561 3034 6365     c83a8683deae40ec
 8006cd0:	6164 3663 6530 3335 6662 3861 7300 6474     dac60e53bfa8.std
 8006ce0:	6d5f 6773 2f73 754d 746c 4169 7272 7961     _msgs/MultiArray
 8006cf0:	6944 656d 736e 6f69 006e 6463 3137 3636     Dimension.cd7166
 8006d00:	3763 6334 3535 6332 3133 6631 6362 3263     c74c552c311fbcc2
 8006d10:	6566 6135 6237 3263 3938 7300 6474 6d5f     fe5a7bc289.std_m
 8006d20:	6773 2f73 6954 656d 6400 3134 3864 6463     sgs/Time.d41d8cd
 8006d30:	3839 3066 6230 3032 6534 3839 3030 3939     98f00b204e980099
 8006d40:	6538 6663 3438 3732 0065 7473 5f64 736d     8ecf8427e.std_ms
 8006d50:	7367 452f 706d 7974 3700 6633 6263 3466     gs/Empty.73fcbf4
 8006d60:	6236 3934 3931 6531 3736 3932 3830 3565     6b49191e672908e5
 8006d70:	3830 3234 3861 6433 0034 7473 5f64 736d     0842a83d4.std_ms
 8006d80:	7367 462f 6f6c 7461 3233 5300 6174 7472     gs/Float32.Start
 8006d90:	5020 6f72 7267 6d61 006d 0000                Programm...

08006d9c <void mbed::Callback<void ()>::generate<mbed::Callback<void ()>::method_context<Encoder, void (Encoder::*)()> >(mbed::Callback<void ()>::method_context<Encoder, void (Encoder::*)()> const&)::ops>:
 8006d9c:	15cb 0800 15bd 0800 15c9 0800               ............

08006da8 <void mbed::Callback<void ()>::generate<mbed::Callback<void ()>::method_context<BufferedSerial, void (BufferedSerial::*)()> >(mbed::Callback<void ()>::method_context<BufferedSerial, void (BufferedSerial::*)()> const&)::ops>:
 8006da8:	1867 0800 1859 0800 1865 0800 682f 6d6f     g...Y...e.../hom
 8006db8:	2f65 6275 6e75 7574 722f 736f 6c2f 6269     e/ubuntu/ros/lib
 8006dc8:	722f 736f 6c5f 6269 422f 6675 6566 6572     /ros_lib/Buffere
 8006dd8:	5364 7265 6169 2f6c 7542 6666 7265 6465     dSerial/Buffered
 8006de8:	6553 6972 6c61 632e 7070 2500 2073 6425     Serial.cpp.%s %d
 8006df8:	6220 6675 6566 2072 766f 7265 7277 7469      buffer overwrit
 8006e08:	2065 6d28 7861 625f 6675 735f 7a69 3a65     e (max_buf_size:
 8006e18:	2520 2064 7865 6563 6465 6465 203a 6425      %d exceeded: %d
 8006e28:	2129 0a0d 0000 0000                         )!......

08006e30 <vtable for BufferedSerial>:
	...
 8006e38:	52c5 0800 52c5 0800 1941 0800 1999 0800     .R...R..A.......
 8006e48:	1819 0800 1829 0800 182d 0800 1ab9 0800     ....)...-.......
 8006e58:	1ad1 0800 1b4d 0800 1b0f 0800               ....M.......

08006e64 <us_data>:
 8006e64:	6e6c 0800 0cb0 2000                         ln..... 

08006e6c <us_interface>:
 8006e6c:	39b9 0800 39dd 0800 3a15 0800 3a2d 0800     .9...9...:..-:..
 8006e7c:	39f9 0800 6970 6d6e 7061 6e20 746f 6620     .9..pinmap not f
 8006e8c:	756f 646e 6620 726f 6620 6e75 7463 6f69     ound for functio
 8006e9c:	006e 6970 6d6e 7061 6d20 7369 6d2d 7461     n.pinmap mis-mat
 8006eac:	6863 7000 6e69 616d 2070 6f6e 2074 6f66     ch.pinmap not fo
 8006ebc:	6e75 2064 6f66 2072 6570 6972 6870 7265     und for peripher
 8006ecc:	6c61 6300 756f 646c 6e20 746f 7020 6e69     al.could not pin
 8006edc:	756f 0074                                   out.

08006ee0 <mp_stk_size>:
 8006ee0:	0210 0000                                   ....

08006ee4 <mp_tcb_size>:
 8006ee4:	03cc                                        ..

08006ee6 <mp_tmr_size>:
	...

08006ee8 <os_clockrate>:
 8006ee8:	03e8 0000 5452 2058 7265 6f72 2072 6f63     ....RTX error co
 8006ef8:	6564 203a 7830 3025 5838 202c 6174 6b73     de: 0x%08X, task
 8006f08:	4920 3a44 3020 2578 3830 0a58 1000                ID: 0x%08X..

08006f15 <os_fifo_size>:
 8006f15:	0110                                             .

08006f16 <os_flags>:
 8006f16:	0001                                        ..

08006f18 <os_maxtaskrun>:
 8006f18:	000f 0000                                   ....

08006f1c <os_messageQ_def_osTimerMessageQ>:
 8006f1c:	0004 0000 0cd4 2000                         ....... 

08006f24 <os_mutex_def_env_mutex>:
 8006f24:	0cf4 2000                                   ... 

08006f28 <os_mutex_def_malloc_mutex>:
 8006f28:	0d04 2000                                   ... 

08006f2c <os_mutex_def_singleton_mutex>:
 8006f2c:	0d14 2000                                   ... 

08006f30 <os_rrobin>:
 8006f30:	0005 0001                                   ....

08006f34 <os_stackinfo>:
 8006f34:	0200 0100                                   ....

08006f38 <os_thread_def_osTimerThread>:
 8006f38:	2d4d 0800 0002 0000 0001 0000 0320 0000     M-.......... ...
 8006f48:	2610 2000                                   .&. 

08006f4c <os_trv>:
 8006f4c:	869f 0001                                   ....

08006f50 <os_mutex_def_osThreadMutex>:
 8006f50:	1d28 2000 6e49 6574 7272 7075 4974 206e     (.. InterruptIn 
 8006f60:	7265 6f72 3a72 7020 6e69 6e20 746f 7320     error: pin not s
 8006f70:	7075 6f70 7472 6465 0a2e 5000 6e69 616d     upported...Pinma
 8006f80:	2070 7265 6f72 3a72 7720 6f72 676e 7020     p error: wrong p
 8006f90:	726f 2074 756e 626d 7265 002e 6e55 6e6b     ort number..Unkn
 8006fa0:	776f 206e 5750 204d 6e69 7473 6e61 6563     own PWM instance
 8006fb0:	4300 6e61 6f6e 2074 6e69 7469 6169 696c     .Cannot initiali
 8006fc0:	657a 5020 4d57 000a                         ze PWM..

08006fc8 <ll_pin_defines>:
 8006fc8:	0001 0000 0002 0000 0004 0000 0008 0000     ................
 8006fd8:	0010 0000 0020 0000 0040 0000 0080 0000     .... ...@.......
 8006fe8:	0100 0000 0200 0000 0400 0000 0800 0000     ................
 8006ff8:	1000 0000 2000 0000 4000 0000 8000 0000     ..... ...@......

08007008 <pwm_apb_map_table>:
 8007008:	0000 4000 0000 0000 0400 4000 0000 0000     ...@.......@....
 8007018:	0800 4000 0000 0000 0c00 4000 0000 0000     ...@.......@....
 8007028:	0000 4001 0001 0000 4000 4001 0001 0000     ...@.....@.@....
 8007038:	4400 4001 0001 0000 4800 4001 0001 0000     .D.@.....H.@....
 8007048:	0000 0000 0002 0000 6143 6e6e 746f 6920     ........Cannot i
 8007058:	696e 6974 6c61 7a69 2065 4155 5452 000a     nitialize UART..

08007068 <pin_lines_desc>:
	...
 8007070:	0006 0000 0000 0000 0001 0000 0007 0000     ................
 8007080:	0000 0000 0002 0000 0008 0000 0000 0000     ................
 8007090:	0003 0000 0009 0000 0000 0000 0004 0000     ................
 80070a0:	000a 0000 0000 0000 0005 0000 0017 0000     ................
 80070b0:	0001 0000 0005 0000 0017 0000 0002 0000     ................
 80070c0:	0005 0000 0017 0000 0003 0000 0005 0000     ................
 80070d0:	0017 0000 0004 0000 0005 0000 0017 0000     ................
 80070e0:	0000 0000 0006 0000 0028 0000 0001 0000     ........(.......
 80070f0:	0006 0000 0028 0000 0002 0000 0006 0000     ....(...........
 8007100:	0028 0000 0003 0000 0006 0000 0028 0000     (...........(...
 8007110:	0004 0000 0006 0000 0028 0000 0005 0000     ........(.......
 8007120:	0006 0000 0028 0000                         ....(...

08007128 <PinMap_PWM>:
 8007128:	0000 0000 0000 4000 1112 0000 0001 0000     .......@........
 8007138:	0000 4000 2112 0000 0005 0000 0000 4000     ...@.!.........@
 8007148:	1112 0000 0006 0000 0400 4000 1212 0000     ...........@....
 8007158:	0007 0000 0000 4001 1112 0002 0008 0000     .......@........
 8007168:	0000 4001 1112 0000 0009 0000 0000 4001     ...@...........@
 8007178:	2112 0000 000a 0000 0000 4001 3112 0000     .!.........@.1..
 8007188:	000b 0000 0000 4001 4112 0000 000f 0000     .......@.A......
 8007198:	0000 4000 1112 0000 0010 0000 0000 4001     ...@...........@
 80071a8:	2112 0002 0011 0000 0000 4001 3112 0002     .!.........@.1..
 80071b8:	0013 0000 0000 4000 2112 0000 0014 0000     .......@.!......
 80071c8:	0400 4000 1212 0000 0015 0000 0400 4000     ...@...........@
 80071d8:	2212 0000 0016 0000 0800 4000 1212 0000     .".........@....
 80071e8:	0017 0000 0800 4000 2212 0000 0018 0000     .......@."......
 80071f8:	0800 4000 3212 0000 0019 0000 0800 4000     ...@.2.........@
 8007208:	4212 0000 001a 0000 0000 4000 3112 0000     .B.........@.1..
 8007218:	001d 0000 0000 4001 1112 0002 001e 0000     .......@........
 8007228:	0000 4001 2112 0002 001f 0000 0000 4001     ...@.!.........@
 8007238:	3112 0002 0026 0000 0400 4000 1212 0000     .1..&......@....
 8007248:	0027 0000 0400 4000 2212 0000 0028 0000     '......@."..(...
 8007258:	0400 4000 3212 0000 0029 0000 0400 4000     ...@.2..)......@
 8007268:	4212 0000 ffff 0000 ffff ffff 0000 0000     .B..............

08007278 <PinMap_UART_RX>:
 8007278:	0003 0000 4400 4000 0712 0000 000a 0000     .....D.@........
 8007288:	1000 4001 0712 0000 000c 0000 1400 4001     ...@...........@
 8007298:	0812 0000 0013 0000 1000 4001 0712 0000     ...........@....
 80072a8:	0017 0000 1000 4001 0712 0000 0027 0000     .......@....'...
 80072b8:	1400 4001 0812 0000 ffff 0000 ffff ffff     ...@............
 80072c8:	0000 0000                                   ....

080072cc <PinMap_UART_TX>:
 80072cc:	0002 0000 4400 4000 0712 0000 0009 0000     .....D.@........
 80072dc:	1000 4001 0712 0000 000b 0000 1400 4001     ...@...........@
 80072ec:	0812 0000 000f 0000 1000 4001 0712 0000     ...........@....
 80072fc:	0016 0000 1000 4001 0712 0000 0026 0000     .......@....&...
 800730c:	1400 4001 0812 0000 ffff 0000 ffff ffff     ...@............
 800731c:	0000 0000                                   ....

08007320 <AHBPrescTable>:
	...
 8007328:	0201 0403 0706 0908                         ........

08007330 <APBAHBPrescTable>:
 8007330:	0000 0000 0201 0403 0201 0403 0706 0908     ................

08007340 <vtable for mbed::Ticker>:
	...
 8007348:	0671 0800 0695 0800 515d 0800               q.......]Q..

08007354 <vtable for mbed::RawSerial>:
	...
 800735c:	52c5 0800 52c5 0800 52dd 0800 52f1 0800     .R...R...R...R..

0800736c <vtable for mbed::InterruptIn>:
	...
 8007374:	5315 0800 533d 0800                         .S..=S..

0800737c <vtable for mbed::SerialBase>:
	...
 8007384:	54c1 0800 54c3 0800 18f5 0800 192d 0800     .T...T......-...

08007394 <vtable for mbed::TimerEvent>:
	...
 80073a4:	17f5 0800 704f 7265 7461 726f 6e20 7765     ....Operator new
 80073b4:	5d5b 6f20 7475 6f20 2066 656d 6f6d 7972     [] out of memory
 80073c4:	0a0d 0000                                   ....

080073c8 <__sf_fake_stderr>:
	...

080073e8 <__sf_fake_stdin>:
	...

08007408 <__sf_fake_stdout>:
	...

08007428 <_global_impure_ptr>:
 8007428:	01c0 2000 3130 3332 3534 3736 3938 4241     ... 0123456789AB
 8007438:	4443 4645 3000 3231 3433 3635 3837 6139     CDEF.0123456789a
 8007448:	6362 6564 0066 2d23 2b30 0020 6c68 004c     bcdef.#-0+ .hlL.
 8007458:	6665 4567 4746 0000                         efgEFG..

08007460 <__EH_FRAME_BEGIN__>:
 8007460:	0000 0000                                   ....
