
NUCLEO_F411RE/dc_motor_controll_new.elf:     file format elf32-littlearm
architecture: arm, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x08005ead


Disassembly of section .text:

08000000 <g_pfnVectors>:
 8000000:	00 00 02 20 ad 5e 00 08 e1 5e 00 08 e1 5e 00 08     ... .^...^...^..
 8000010:	e1 5e 00 08 e1 5e 00 08 e1 5e 00 08 00 00 00 00     .^...^...^......
	...
 800002c:	71 5d 00 08 e1 5e 00 08 00 00 00 00 17 5e 00 08     q]...^.......^..
 800003c:	77 5e 00 08 e1 5e 00 08 e1 5e 00 08 e1 5e 00 08     w^...^...^...^..
 800004c:	e1 5e 00 08 e1 5e 00 08 e1 5e 00 08 e1 5e 00 08     .^...^...^...^..
 800005c:	e1 5e 00 08 e1 5e 00 08 e1 5e 00 08 e1 5e 00 08     .^...^...^...^..
 800006c:	e1 5e 00 08 e1 5e 00 08 e1 5e 00 08 e1 5e 00 08     .^...^...^...^..
 800007c:	e1 5e 00 08 e1 5e 00 08 e1 5e 00 08 e1 5e 00 08     .^...^...^...^..
	...
 800009c:	e1 5e 00 08 e1 5e 00 08 e1 5e 00 08 e1 5e 00 08     .^...^...^...^..
 80000ac:	e1 5e 00 08 e1 5e 00 08 e1 5e 00 08 e1 5e 00 08     .^...^...^...^..
 80000bc:	e1 5e 00 08 e1 5e 00 08 e1 5e 00 08 e1 5e 00 08     .^...^...^...^..
 80000cc:	e1 5e 00 08 e1 5e 00 08 e1 5e 00 08 e1 5e 00 08     .^...^...^...^..
 80000dc:	00 00 00 00 e1 5e 00 08 e1 5e 00 08 e1 5e 00 08     .....^...^...^..
	...
 80000fc:	e1 5e 00 08 00 00 00 00 e1 5e 00 08 e1 5e 00 08     .^.......^...^..
 800010c:	e1 5e 00 08 00 00 00 00 00 00 00 00 00 00 00 00     .^..............
 800011c:	00 00 00 00 e1 5e 00 08 e1 5e 00 08 e1 5e 00 08     .....^...^...^..
 800012c:	e1 5e 00 08 e1 5e 00 08 00 00 00 00 00 00 00 00     .^...^..........
	...
 800014c:	e1 5e 00 08 e1 5e 00 08 e1 5e 00 08 e1 5e 00 08     .^...^...^...^..
 800015c:	e1 5e 00 08 e1 5e 00 08 e1 5e 00 08 00 00 00 00     .^...^...^......
	...
 8000184:	e1 5e 00 08 00 00 00 00 00 00 00 00 e1 5e 00 08     .^...........^..
 8000194:	e1 5e 00 08                                         .^..

08000198 <__do_global_dtors_aux>:
 8000198:	b510      	push	{r4, lr}
 800019a:	4c05      	ldr	r4, [pc, #20]	; (80001b0 <__do_global_dtors_aux+0x18>)
 800019c:	7823      	ldrb	r3, [r4, #0]
 800019e:	b933      	cbnz	r3, 80001ae <__do_global_dtors_aux+0x16>
 80001a0:	4b04      	ldr	r3, [pc, #16]	; (80001b4 <__do_global_dtors_aux+0x1c>)
 80001a2:	b113      	cbz	r3, 80001aa <__do_global_dtors_aux+0x12>
 80001a4:	4804      	ldr	r0, [pc, #16]	; (80001b8 <__do_global_dtors_aux+0x20>)
 80001a6:	f3af 8000 	nop.w
 80001aa:	2301      	movs	r3, #1
 80001ac:	7023      	strb	r3, [r4, #0]
 80001ae:	bd10      	pop	{r4, pc}
 80001b0:	20000240 	.word	0x20000240
 80001b4:	00000000 	.word	0x00000000
 80001b8:	08007ec8 	.word	0x08007ec8

080001bc <frame_dummy>:
 80001bc:	4b0c      	ldr	r3, [pc, #48]	; (80001f0 <frame_dummy+0x34>)
 80001be:	b143      	cbz	r3, 80001d2 <frame_dummy+0x16>
 80001c0:	480c      	ldr	r0, [pc, #48]	; (80001f4 <frame_dummy+0x38>)
 80001c2:	490d      	ldr	r1, [pc, #52]	; (80001f8 <frame_dummy+0x3c>)
 80001c4:	b510      	push	{r4, lr}
 80001c6:	f3af 8000 	nop.w
 80001ca:	480c      	ldr	r0, [pc, #48]	; (80001fc <frame_dummy+0x40>)
 80001cc:	6803      	ldr	r3, [r0, #0]
 80001ce:	b923      	cbnz	r3, 80001da <frame_dummy+0x1e>
 80001d0:	bd10      	pop	{r4, pc}
 80001d2:	480a      	ldr	r0, [pc, #40]	; (80001fc <frame_dummy+0x40>)
 80001d4:	6803      	ldr	r3, [r0, #0]
 80001d6:	b933      	cbnz	r3, 80001e6 <frame_dummy+0x2a>
 80001d8:	4770      	bx	lr
 80001da:	4b09      	ldr	r3, [pc, #36]	; (8000200 <frame_dummy+0x44>)
 80001dc:	2b00      	cmp	r3, #0
 80001de:	d0f7      	beq.n	80001d0 <frame_dummy+0x14>
 80001e0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80001e4:	4718      	bx	r3
 80001e6:	4b06      	ldr	r3, [pc, #24]	; (8000200 <frame_dummy+0x44>)
 80001e8:	2b00      	cmp	r3, #0
 80001ea:	d0f5      	beq.n	80001d8 <frame_dummy+0x1c>
 80001ec:	4718      	bx	r3
 80001ee:	bf00      	nop
 80001f0:	00000000 	.word	0x00000000
 80001f4:	08007ec8 	.word	0x08007ec8
 80001f8:	20000244 	.word	0x20000244
 80001fc:	20000238 	.word	0x20000238
 8000200:	00000000 	.word	0x00000000

08000204 <std_msgs::Time::serialize(unsigned char*) const>:
 8000204:	6843      	ldr	r3, [r0, #4]
 8000206:	700b      	strb	r3, [r1, #0]
 8000208:	6843      	ldr	r3, [r0, #4]
 800020a:	0a1b      	lsrs	r3, r3, #8
 800020c:	704b      	strb	r3, [r1, #1]
 800020e:	88c3      	ldrh	r3, [r0, #6]
 8000210:	708b      	strb	r3, [r1, #2]
 8000212:	79c3      	ldrb	r3, [r0, #7]
 8000214:	70cb      	strb	r3, [r1, #3]
 8000216:	6883      	ldr	r3, [r0, #8]
 8000218:	710b      	strb	r3, [r1, #4]
 800021a:	6883      	ldr	r3, [r0, #8]
 800021c:	0a1b      	lsrs	r3, r3, #8
 800021e:	714b      	strb	r3, [r1, #5]
 8000220:	8943      	ldrh	r3, [r0, #10]
 8000222:	718b      	strb	r3, [r1, #6]
 8000224:	7ac3      	ldrb	r3, [r0, #11]
 8000226:	71cb      	strb	r3, [r1, #7]
 8000228:	2008      	movs	r0, #8
 800022a:	4770      	bx	lr

0800022c <std_msgs::Time::deserialize(unsigned char*)>:
 800022c:	780b      	ldrb	r3, [r1, #0]
 800022e:	6043      	str	r3, [r0, #4]
 8000230:	784a      	ldrb	r2, [r1, #1]
 8000232:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8000236:	6043      	str	r3, [r0, #4]
 8000238:	788a      	ldrb	r2, [r1, #2]
 800023a:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800023e:	6043      	str	r3, [r0, #4]
 8000240:	78ca      	ldrb	r2, [r1, #3]
 8000242:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 8000246:	6043      	str	r3, [r0, #4]
 8000248:	790b      	ldrb	r3, [r1, #4]
 800024a:	6083      	str	r3, [r0, #8]
 800024c:	794a      	ldrb	r2, [r1, #5]
 800024e:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8000252:	6083      	str	r3, [r0, #8]
 8000254:	798a      	ldrb	r2, [r1, #6]
 8000256:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800025a:	6083      	str	r3, [r0, #8]
 800025c:	79ca      	ldrb	r2, [r1, #7]
 800025e:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 8000262:	6083      	str	r3, [r0, #8]
 8000264:	2008      	movs	r0, #8
 8000266:	4770      	bx	lr

08000268 <std_msgs::Time::getType()>:
 8000268:	4800      	ldr	r0, [pc, #0]	; (800026c <std_msgs::Time::getType()+0x4>)
 800026a:	4770      	bx	lr
 800026c:	08007787 	.word	0x08007787

08000270 <std_msgs::Time::getMD5()>:
 8000270:	4800      	ldr	r0, [pc, #0]	; (8000274 <std_msgs::Time::getMD5()+0x4>)
 8000272:	4770      	bx	lr
 8000274:	08007766 	.word	0x08007766

08000278 <rosserial_msgs::TopicInfo::getType()>:
 8000278:	4800      	ldr	r0, [pc, #0]	; (800027c <rosserial_msgs::TopicInfo::getType()+0x4>)
 800027a:	4770      	bx	lr
 800027c:	080076f8 	.word	0x080076f8

08000280 <rosserial_msgs::TopicInfo::getMD5()>:
 8000280:	4800      	ldr	r0, [pc, #0]	; (8000284 <rosserial_msgs::TopicInfo::getMD5()+0x4>)
 8000282:	4770      	bx	lr
 8000284:	080076d7 	.word	0x080076d7

08000288 <rosserial_msgs::Log::getType()>:
 8000288:	4800      	ldr	r0, [pc, #0]	; (800028c <rosserial_msgs::Log::getType()+0x4>)
 800028a:	4770      	bx	lr
 800028c:	080076c4 	.word	0x080076c4

08000290 <rosserial_msgs::Log::getMD5()>:
 8000290:	4800      	ldr	r0, [pc, #0]	; (8000294 <rosserial_msgs::Log::getMD5()+0x4>)
 8000292:	4770      	bx	lr
 8000294:	080076a3 	.word	0x080076a3

08000298 <rosserial_msgs::RequestParamResponse::getType()>:
 8000298:	4800      	ldr	r0, [pc, #0]	; (800029c <rosserial_msgs::RequestParamResponse::getType()+0x4>)
 800029a:	4770      	bx	lr
 800029c:	08007711 	.word	0x08007711

080002a0 <rosserial_msgs::RequestParamResponse::getMD5()>:
 80002a0:	4800      	ldr	r0, [pc, #0]	; (80002a4 <rosserial_msgs::RequestParamResponse::getMD5()+0x4>)
 80002a2:	4770      	bx	lr
 80002a4:	08007682 	.word	0x08007682

080002a8 <std_msgs::Empty::serialize(unsigned char*) const>:
 80002a8:	2000      	movs	r0, #0
 80002aa:	4770      	bx	lr

080002ac <std_msgs::Empty::deserialize(unsigned char*)>:
 80002ac:	2000      	movs	r0, #0
 80002ae:	4770      	bx	lr

080002b0 <std_msgs::Empty::getType()>:
 80002b0:	4800      	ldr	r0, [pc, #0]	; (80002b4 <std_msgs::Empty::getType()+0x4>)
 80002b2:	4770      	bx	lr
 80002b4:	080077b6 	.word	0x080077b6

080002b8 <std_msgs::Empty::getMD5()>:
 80002b8:	4800      	ldr	r0, [pc, #0]	; (80002bc <std_msgs::Empty::getMD5()+0x4>)
 80002ba:	4770      	bx	lr
 80002bc:	08007795 	.word	0x08007795

080002c0 <std_msgs::Float32::serialize(unsigned char*) const>:
 80002c0:	6843      	ldr	r3, [r0, #4]
 80002c2:	700b      	strb	r3, [r1, #0]
 80002c4:	0a1a      	lsrs	r2, r3, #8
 80002c6:	704a      	strb	r2, [r1, #1]
 80002c8:	0c1a      	lsrs	r2, r3, #16
 80002ca:	0e1b      	lsrs	r3, r3, #24
 80002cc:	708a      	strb	r2, [r1, #2]
 80002ce:	70cb      	strb	r3, [r1, #3]
 80002d0:	2004      	movs	r0, #4
 80002d2:	4770      	bx	lr

080002d4 <std_msgs::Float32::deserialize(unsigned char*)>:
 80002d4:	680b      	ldr	r3, [r1, #0]
 80002d6:	6043      	str	r3, [r0, #4]
 80002d8:	2004      	movs	r0, #4
 80002da:	4770      	bx	lr

080002dc <std_msgs::Float32::getType()>:
 80002dc:	4800      	ldr	r0, [pc, #0]	; (80002e0 <std_msgs::Float32::getType()+0x4>)
 80002de:	4770      	bx	lr
 80002e0:	080077e6 	.word	0x080077e6

080002e4 <std_msgs::Float32::getMD5()>:
 80002e4:	4800      	ldr	r0, [pc, #0]	; (80002e8 <std_msgs::Float32::getMD5()+0x4>)
 80002e6:	4770      	bx	lr
 80002e8:	080077c5 	.word	0x080077c5

080002ec <geometry_msgs::Vector3::serialize(unsigned char*) const>:
 80002ec:	6882      	ldr	r2, [r0, #8]
 80002ee:	68c3      	ldr	r3, [r0, #12]
 80002f0:	700a      	strb	r2, [r1, #0]
 80002f2:	b510      	push	{r4, lr}
 80002f4:	0a14      	lsrs	r4, r2, #8
 80002f6:	704c      	strb	r4, [r1, #1]
 80002f8:	0c14      	lsrs	r4, r2, #16
 80002fa:	0e12      	lsrs	r2, r2, #24
 80002fc:	70ca      	strb	r2, [r1, #3]
 80002fe:	0a1a      	lsrs	r2, r3, #8
 8000300:	710b      	strb	r3, [r1, #4]
 8000302:	714a      	strb	r2, [r1, #5]
 8000304:	0c1a      	lsrs	r2, r3, #16
 8000306:	0e1b      	lsrs	r3, r3, #24
 8000308:	708c      	strb	r4, [r1, #2]
 800030a:	718a      	strb	r2, [r1, #6]
 800030c:	71cb      	strb	r3, [r1, #7]
 800030e:	6902      	ldr	r2, [r0, #16]
 8000310:	6943      	ldr	r3, [r0, #20]
 8000312:	720a      	strb	r2, [r1, #8]
 8000314:	0a14      	lsrs	r4, r2, #8
 8000316:	724c      	strb	r4, [r1, #9]
 8000318:	0c14      	lsrs	r4, r2, #16
 800031a:	0e12      	lsrs	r2, r2, #24
 800031c:	72ca      	strb	r2, [r1, #11]
 800031e:	0a1a      	lsrs	r2, r3, #8
 8000320:	730b      	strb	r3, [r1, #12]
 8000322:	734a      	strb	r2, [r1, #13]
 8000324:	0c1a      	lsrs	r2, r3, #16
 8000326:	0e1b      	lsrs	r3, r3, #24
 8000328:	728c      	strb	r4, [r1, #10]
 800032a:	738a      	strb	r2, [r1, #14]
 800032c:	73cb      	strb	r3, [r1, #15]
 800032e:	6982      	ldr	r2, [r0, #24]
 8000330:	69c3      	ldr	r3, [r0, #28]
 8000332:	740a      	strb	r2, [r1, #16]
 8000334:	0a10      	lsrs	r0, r2, #8
 8000336:	7448      	strb	r0, [r1, #17]
 8000338:	0c10      	lsrs	r0, r2, #16
 800033a:	0e12      	lsrs	r2, r2, #24
 800033c:	74ca      	strb	r2, [r1, #19]
 800033e:	0a1a      	lsrs	r2, r3, #8
 8000340:	750b      	strb	r3, [r1, #20]
 8000342:	754a      	strb	r2, [r1, #21]
 8000344:	0c1a      	lsrs	r2, r3, #16
 8000346:	0e1b      	lsrs	r3, r3, #24
 8000348:	7488      	strb	r0, [r1, #18]
 800034a:	758a      	strb	r2, [r1, #22]
 800034c:	75cb      	strb	r3, [r1, #23]
 800034e:	2018      	movs	r0, #24
 8000350:	bd10      	pop	{r4, pc}

08000352 <geometry_msgs::Vector3::deserialize(unsigned char*)>:
 8000352:	680a      	ldr	r2, [r1, #0]
 8000354:	684b      	ldr	r3, [r1, #4]
 8000356:	e9c0 2302 	strd	r2, r3, [r0, #8]
 800035a:	688a      	ldr	r2, [r1, #8]
 800035c:	68cb      	ldr	r3, [r1, #12]
 800035e:	e9c0 2304 	strd	r2, r3, [r0, #16]
 8000362:	690a      	ldr	r2, [r1, #16]
 8000364:	694b      	ldr	r3, [r1, #20]
 8000366:	e9c0 2306 	strd	r2, r3, [r0, #24]
 800036a:	2018      	movs	r0, #24
 800036c:	4770      	bx	lr
	...

08000370 <geometry_msgs::Vector3::getType()>:
 8000370:	4800      	ldr	r0, [pc, #0]	; (8000374 <geometry_msgs::Vector3::getType()+0x4>)
 8000372:	4770      	bx	lr
 8000374:	0800766c 	.word	0x0800766c

08000378 <geometry_msgs::Vector3::getMD5()>:
 8000378:	4800      	ldr	r0, [pc, #0]	; (800037c <geometry_msgs::Vector3::getMD5()+0x4>)
 800037a:	4770      	bx	lr
 800037c:	0800764b 	.word	0x0800764b

08000380 <void mbed::Callback<void ()>::function_call<void (*)()>(void const*)>:
 8000380:	6803      	ldr	r3, [r0, #0]
 8000382:	4718      	bx	r3

08000384 <void mbed::Callback<void ()>::function_move<void (*)()>(void*, void const*)>:
 8000384:	b108      	cbz	r0, 800038a <void mbed::Callback<void ()>::function_move<void (*)()>(void*, void const*)+0x6>
 8000386:	680b      	ldr	r3, [r1, #0]
 8000388:	6003      	str	r3, [r0, #0]
 800038a:	4770      	bx	lr

0800038c <void mbed::Callback<void ()>::function_dtor<void (*)()>(void*)>:
 800038c:	4770      	bx	lr

0800038e <ros::Subscriber<geometry_msgs::Vector3, void>::callback(unsigned char*)>:
 800038e:	b570      	push	{r4, r5, r6, lr}
 8000390:	4605      	mov	r5, r0
 8000392:	f100 0410 	add.w	r4, r0, #16
 8000396:	4620      	mov	r0, r4
 8000398:	f7ff ffdb 	bl	8000352 <geometry_msgs::Vector3::deserialize(unsigned char*)>
 800039c:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 800039e:	4620      	mov	r0, r4
 80003a0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80003a4:	4718      	bx	r3

080003a6 <ros::Subscriber<geometry_msgs::Vector3, void>::getEndpointType()>:
 80003a6:	6b40      	ldr	r0, [r0, #52]	; 0x34
 80003a8:	4770      	bx	lr
	...

080003ac <ros::Subscriber<geometry_msgs::Vector3, void>::getMsgType()>:
 80003ac:	4800      	ldr	r0, [pc, #0]	; (80003b0 <ros::Subscriber<geometry_msgs::Vector3, void>::getMsgType()+0x4>)
 80003ae:	4770      	bx	lr
 80003b0:	0800766c 	.word	0x0800766c

080003b4 <ros::Subscriber<geometry_msgs::Vector3, void>::getMsgMD5()>:
 80003b4:	4800      	ldr	r0, [pc, #0]	; (80003b8 <ros::Subscriber<geometry_msgs::Vector3, void>::getMsgMD5()+0x4>)
 80003b6:	4770      	bx	lr
 80003b8:	0800764b 	.word	0x0800764b

080003bc <ros::Subscriber<std_msgs::Empty, void>::callback(unsigned char*)>:
 80003bc:	6903      	ldr	r3, [r0, #16]
 80003be:	300c      	adds	r0, #12
 80003c0:	4718      	bx	r3

080003c2 <ros::Subscriber<std_msgs::Empty, void>::getEndpointType()>:
 80003c2:	6940      	ldr	r0, [r0, #20]
 80003c4:	4770      	bx	lr
	...

080003c8 <ros::Subscriber<std_msgs::Empty, void>::getMsgType()>:
 80003c8:	4800      	ldr	r0, [pc, #0]	; (80003cc <ros::Subscriber<std_msgs::Empty, void>::getMsgType()+0x4>)
 80003ca:	4770      	bx	lr
 80003cc:	080077b6 	.word	0x080077b6

080003d0 <ros::Subscriber<std_msgs::Empty, void>::getMsgMD5()>:
 80003d0:	4800      	ldr	r0, [pc, #0]	; (80003d4 <ros::Subscriber<std_msgs::Empty, void>::getMsgMD5()+0x4>)
 80003d2:	4770      	bx	lr
 80003d4:	08007795 	.word	0x08007795

080003d8 <ros::Subscriber<std_msgs::Float32, void>::callback(unsigned char*)>:
 80003d8:	b570      	push	{r4, r5, r6, lr}
 80003da:	4605      	mov	r5, r0
 80003dc:	f100 040c 	add.w	r4, r0, #12
 80003e0:	4620      	mov	r0, r4
 80003e2:	f7ff ff77 	bl	80002d4 <std_msgs::Float32::deserialize(unsigned char*)>
 80003e6:	696b      	ldr	r3, [r5, #20]
 80003e8:	4620      	mov	r0, r4
 80003ea:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80003ee:	4718      	bx	r3

080003f0 <ros::Subscriber<std_msgs::Float32, void>::getEndpointType()>:
 80003f0:	6980      	ldr	r0, [r0, #24]
 80003f2:	4770      	bx	lr

080003f4 <ros::Subscriber<std_msgs::Float32, void>::getMsgType()>:
 80003f4:	4800      	ldr	r0, [pc, #0]	; (80003f8 <ros::Subscriber<std_msgs::Float32, void>::getMsgType()+0x4>)
 80003f6:	4770      	bx	lr
 80003f8:	080077e6 	.word	0x080077e6

080003fc <ros::Subscriber<std_msgs::Float32, void>::getMsgMD5()>:
 80003fc:	4800      	ldr	r0, [pc, #0]	; (8000400 <ros::Subscriber<std_msgs::Float32, void>::getMsgMD5()+0x4>)
 80003fe:	4770      	bx	lr
 8000400:	080077c5 	.word	0x080077c5

08000404 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::connected()>:
 8000404:	f890 05e8 	ldrb.w	r0, [r0, #1512]	; 0x5e8
 8000408:	4770      	bx	lr
	...

0800040c <pwmSub(std_msgs::Float32 const&)>:
 800040c:	b510      	push	{r4, lr}
 800040e:	4604      	mov	r4, r0
 8000410:	6841      	ldr	r1, [r0, #4]
 8000412:	4805      	ldr	r0, [pc, #20]	; (8000428 <pwmSub(std_msgs::Float32 const&)+0x1c>)
 8000414:	f000 ff73 	bl	80012fe <DcServo::revolute(float)>
 8000418:	6860      	ldr	r0, [r4, #4]
 800041a:	f005 fec7 	bl	80061ac <__aeabi_f2d>
 800041e:	4b03      	ldr	r3, [pc, #12]	; (800042c <pwmSub(std_msgs::Float32 const&)+0x20>)
 8000420:	e9c3 0104 	strd	r0, r1, [r3, #16]
 8000424:	bd10      	pop	{r4, pc}
 8000426:	bf00      	nop
 8000428:	2000031c 	.word	0x2000031c
 800042c:	20000750 	.word	0x20000750

08000430 <stopMotor(std_msgs::Empty const&)>:
 8000430:	4b02      	ldr	r3, [pc, #8]	; (800043c <stopMotor(std_msgs::Empty const&)+0xc>)
 8000432:	4803      	ldr	r0, [pc, #12]	; (8000440 <stopMotor(std_msgs::Empty const&)+0x10>)
 8000434:	2200      	movs	r2, #0
 8000436:	601a      	str	r2, [r3, #0]
 8000438:	f000 bfa3 	b.w	8001382 <DcServo::stop()>
 800043c:	20000e78 	.word	0x20000e78
 8000440:	2000031c 	.word	0x2000031c

08000444 <setAngleMotor1(std_msgs::Float32 const&)>:
 8000444:	4b02      	ldr	r3, [pc, #8]	; (8000450 <setAngleMotor1(std_msgs::Float32 const&)+0xc>)
 8000446:	4803      	ldr	r0, [pc, #12]	; (8000454 <setAngleMotor1(std_msgs::Float32 const&)+0x10>)
 8000448:	6819      	ldr	r1, [r3, #0]
 800044a:	f001 b867 	b.w	800151c <DcServo::setAngle(float)>
 800044e:	bf00      	nop
 8000450:	20000e78 	.word	0x20000e78
 8000454:	2000031c 	.word	0x2000031c

08000458 <setAngleMotor2(std_msgs::Float32 const&)>:
 8000458:	4b02      	ldr	r3, [pc, #8]	; (8000464 <setAngleMotor2(std_msgs::Float32 const&)+0xc>)
 800045a:	4803      	ldr	r0, [pc, #12]	; (8000468 <setAngleMotor2(std_msgs::Float32 const&)+0x10>)
 800045c:	6819      	ldr	r1, [r3, #0]
 800045e:	f001 b85d 	b.w	800151c <DcServo::setAngle(float)>
 8000462:	bf00      	nop
 8000464:	20000e78 	.word	0x20000e78
 8000468:	200004c0 	.word	0x200004c0

0800046c <setAngleMotor3(std_msgs::Float32 const&)>:
 800046c:	4b02      	ldr	r3, [pc, #8]	; (8000478 <setAngleMotor3(std_msgs::Float32 const&)+0xc>)
 800046e:	4803      	ldr	r0, [pc, #12]	; (800047c <setAngleMotor3(std_msgs::Float32 const&)+0x10>)
 8000470:	6819      	ldr	r1, [r3, #0]
 8000472:	f001 b853 	b.w	800151c <DcServo::setAngle(float)>
 8000476:	bf00      	nop
 8000478:	20000e78 	.word	0x20000e78
 800047c:	20000664 	.word	0x20000664

08000480 <pidTuningsCb(geometry_msgs::Vector3 const&)>:
 8000480:	b570      	push	{r4, r5, r6, lr}
 8000482:	4604      	mov	r4, r0
 8000484:	e9d0 0102 	ldrd	r0, r1, [r0, #8]
 8000488:	f006 f8f6 	bl	8006678 <__aeabi_d2f>
 800048c:	4b0b      	ldr	r3, [pc, #44]	; (80004bc <pidTuningsCb(geometry_msgs::Vector3 const&)+0x3c>)
 800048e:	4605      	mov	r5, r0
 8000490:	6018      	str	r0, [r3, #0]
 8000492:	e9d4 0104 	ldrd	r0, r1, [r4, #16]
 8000496:	f006 f8ef 	bl	8006678 <__aeabi_d2f>
 800049a:	4b09      	ldr	r3, [pc, #36]	; (80004c0 <pidTuningsCb(geometry_msgs::Vector3 const&)+0x40>)
 800049c:	4606      	mov	r6, r0
 800049e:	6018      	str	r0, [r3, #0]
 80004a0:	e9d4 0106 	ldrd	r0, r1, [r4, #24]
 80004a4:	f006 f8e8 	bl	8006678 <__aeabi_d2f>
 80004a8:	4a06      	ldr	r2, [pc, #24]	; (80004c4 <pidTuningsCb(geometry_msgs::Vector3 const&)+0x44>)
 80004aa:	4603      	mov	r3, r0
 80004ac:	6010      	str	r0, [r2, #0]
 80004ae:	4629      	mov	r1, r5
 80004b0:	4632      	mov	r2, r6
 80004b2:	4805      	ldr	r0, [pc, #20]	; (80004c8 <pidTuningsCb(geometry_msgs::Vector3 const&)+0x48>)
 80004b4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80004b8:	f000 bf8e 	b.w	80013d8 <DcServo::setPid(float, float, float)>
 80004bc:	200001a0 	.word	0x200001a0
 80004c0:	2000019c 	.word	0x2000019c
 80004c4:	20000748 	.word	0x20000748
 80004c8:	2000031c 	.word	0x2000031c

080004cc <getMotorInfo()>:
 80004cc:	4b10      	ldr	r3, [pc, #64]	; (8000510 <getMotorInfo()+0x44>)
 80004ce:	b570      	push	{r4, r5, r6, lr}
 80004d0:	6818      	ldr	r0, [r3, #0]
 80004d2:	4c10      	ldr	r4, [pc, #64]	; (8000514 <getMotorInfo()+0x48>)
 80004d4:	4d10      	ldr	r5, [pc, #64]	; (8000518 <getMotorInfo()+0x4c>)
 80004d6:	f005 fe69 	bl	80061ac <__aeabi_f2d>
 80004da:	e9c4 0102 	strd	r0, r1, [r4, #8]
 80004de:	4628      	mov	r0, r5
 80004e0:	f000 fedc 	bl	800129c <DcServo::getAngle()>
 80004e4:	f005 fe62 	bl	80061ac <__aeabi_f2d>
 80004e8:	e9c4 0104 	strd	r0, r1, [r4, #16]
 80004ec:	4628      	mov	r0, r5
 80004ee:	f000 fed2 	bl	8001296 <DcServo::getPWM()>
 80004f2:	f005 fe5b 	bl	80061ac <__aeabi_f2d>
 80004f6:	4b09      	ldr	r3, [pc, #36]	; (800051c <getMotorInfo()+0x50>)
 80004f8:	e9c4 0106 	strd	r0, r1, [r4, #24]
 80004fc:	68d8      	ldr	r0, [r3, #12]
 80004fe:	6899      	ldr	r1, [r3, #8]
 8000500:	6802      	ldr	r2, [r0, #0]
 8000502:	6815      	ldr	r5, [r2, #0]
 8000504:	4622      	mov	r2, r4
 8000506:	462b      	mov	r3, r5
 8000508:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800050c:	4718      	bx	r3
 800050e:	bf00      	nop
 8000510:	20000e78 	.word	0x20000e78
 8000514:	20000750 	.word	0x20000750
 8000518:	2000031c 	.word	0x2000031c
 800051c:	20000770 	.word	0x20000770

08000520 <mbed::Callback<void ()>::~Callback()>:
 8000520:	68c3      	ldr	r3, [r0, #12]
 8000522:	b510      	push	{r4, lr}
 8000524:	4604      	mov	r4, r0
 8000526:	b10b      	cbz	r3, 800052c <mbed::Callback<void ()>::~Callback()+0xc>
 8000528:	689b      	ldr	r3, [r3, #8]
 800052a:	4798      	blx	r3
 800052c:	4620      	mov	r0, r4
 800052e:	bd10      	pop	{r4, pc}

08000530 <mbed::Ticker::~Ticker()>:
 8000530:	b538      	push	{r3, r4, r5, lr}
 8000532:	4605      	mov	r5, r0
 8000534:	4b06      	ldr	r3, [pc, #24]	; (8000550 <mbed::Ticker::~Ticker()+0x20>)
 8000536:	f845 3b18 	str.w	r3, [r5], #24
 800053a:	4604      	mov	r4, r0
 800053c:	f004 fff2 	bl	8005524 <mbed::Ticker::detach()>
 8000540:	4628      	mov	r0, r5
 8000542:	f7ff ffed 	bl	8000520 <mbed::Callback<void ()>::~Callback()>
 8000546:	4620      	mov	r0, r4
 8000548:	f005 fa4e 	bl	80059e8 <mbed::TimerEvent::~TimerEvent()>
 800054c:	4620      	mov	r0, r4
 800054e:	bd38      	pop	{r3, r4, r5, pc}
 8000550:	08007db0 	.word	0x08007db0

08000554 <DcServo::~DcServo()>:
 8000554:	b510      	push	{r4, lr}
 8000556:	4604      	mov	r4, r0
 8000558:	30ac      	adds	r0, #172	; 0xac
 800055a:	f7ff ffe9 	bl	8000530 <mbed::Ticker::~Ticker()>
 800055e:	4620      	mov	r0, r4
 8000560:	bd10      	pop	{r4, pc}

08000562 <mbed::Ticker::~Ticker()>:
 8000562:	b510      	push	{r4, lr}
 8000564:	4604      	mov	r4, r0
 8000566:	f7ff ffe3 	bl	8000530 <mbed::Ticker::~Ticker()>
 800056a:	4620      	mov	r0, r4
 800056c:	f005 fbc6 	bl	8005cfc <operator delete(void*)>
 8000570:	4620      	mov	r0, r4
 8000572:	bd10      	pop	{r4, pc}

08000574 <mbed::Callback<void ()>::Callback(mbed::Callback<void ()> const&)>:
 8000574:	b538      	push	{r3, r4, r5, lr}
 8000576:	68cb      	ldr	r3, [r1, #12]
 8000578:	4604      	mov	r4, r0
 800057a:	460d      	mov	r5, r1
 800057c:	b10b      	cbz	r3, 8000582 <mbed::Callback<void ()>::Callback(mbed::Callback<void ()> const&)+0xe>
 800057e:	685b      	ldr	r3, [r3, #4]
 8000580:	4798      	blx	r3
 8000582:	68eb      	ldr	r3, [r5, #12]
 8000584:	60e3      	str	r3, [r4, #12]
 8000586:	4620      	mov	r0, r4
 8000588:	bd38      	pop	{r3, r4, r5, pc}

0800058a <void ros::Msg::varToArr<unsigned char*, unsigned long>(unsigned char*, unsigned long)>:
 800058a:	3801      	subs	r0, #1
 800058c:	2300      	movs	r3, #0
 800058e:	fa21 f203 	lsr.w	r2, r1, r3
 8000592:	3308      	adds	r3, #8
 8000594:	2b20      	cmp	r3, #32
 8000596:	f800 2f01 	strb.w	r2, [r0, #1]!
 800059a:	d1f8      	bne.n	800058e <void ros::Msg::varToArr<unsigned char*, unsigned long>(unsigned char*, unsigned long)+0x4>
 800059c:	4770      	bx	lr

0800059e <rosserial_msgs::RequestParamResponse::serialize(unsigned char*) const>:
 800059e:	6843      	ldr	r3, [r0, #4]
 80005a0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80005a4:	700b      	strb	r3, [r1, #0]
 80005a6:	6843      	ldr	r3, [r0, #4]
 80005a8:	0a1b      	lsrs	r3, r3, #8
 80005aa:	704b      	strb	r3, [r1, #1]
 80005ac:	88c3      	ldrh	r3, [r0, #6]
 80005ae:	708b      	strb	r3, [r1, #2]
 80005b0:	79c3      	ldrb	r3, [r0, #7]
 80005b2:	70cb      	strb	r3, [r1, #3]
 80005b4:	460d      	mov	r5, r1
 80005b6:	1d0a      	adds	r2, r1, #4
 80005b8:	4604      	mov	r4, r0
 80005ba:	2100      	movs	r1, #0
 80005bc:	6860      	ldr	r0, [r4, #4]
 80005be:	4281      	cmp	r1, r0
 80005c0:	eba2 0305 	sub.w	r3, r2, r5
 80005c4:	f102 0204 	add.w	r2, r2, #4
 80005c8:	d20f      	bcs.n	80005ea <rosserial_msgs::RequestParamResponse::serialize(unsigned char*) const+0x4c>
 80005ca:	68e3      	ldr	r3, [r4, #12]
 80005cc:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 80005d0:	f802 3c04 	strb.w	r3, [r2, #-4]
 80005d4:	0a18      	lsrs	r0, r3, #8
 80005d6:	f802 0c03 	strb.w	r0, [r2, #-3]
 80005da:	0c18      	lsrs	r0, r3, #16
 80005dc:	0e1b      	lsrs	r3, r3, #24
 80005de:	f802 0c02 	strb.w	r0, [r2, #-2]
 80005e2:	f802 3c01 	strb.w	r3, [r2, #-1]
 80005e6:	3101      	adds	r1, #1
 80005e8:	e7e8      	b.n	80005bc <rosserial_msgs::RequestParamResponse::serialize(unsigned char*) const+0x1e>
 80005ea:	6922      	ldr	r2, [r4, #16]
 80005ec:	54ea      	strb	r2, [r5, r3]
 80005ee:	6921      	ldr	r1, [r4, #16]
 80005f0:	18ea      	adds	r2, r5, r3
 80005f2:	0a09      	lsrs	r1, r1, #8
 80005f4:	7051      	strb	r1, [r2, #1]
 80005f6:	8a61      	ldrh	r1, [r4, #18]
 80005f8:	7091      	strb	r1, [r2, #2]
 80005fa:	7ce1      	ldrb	r1, [r4, #19]
 80005fc:	70d1      	strb	r1, [r2, #3]
 80005fe:	3304      	adds	r3, #4
 8000600:	442b      	add	r3, r5
 8000602:	2100      	movs	r1, #0
 8000604:	6922      	ldr	r2, [r4, #16]
 8000606:	4291      	cmp	r1, r2
 8000608:	eba3 0605 	sub.w	r6, r3, r5
 800060c:	f103 0304 	add.w	r3, r3, #4
 8000610:	d20f      	bcs.n	8000632 <rosserial_msgs::RequestParamResponse::serialize(unsigned char*) const+0x94>
 8000612:	69a2      	ldr	r2, [r4, #24]
 8000614:	f852 2021 	ldr.w	r2, [r2, r1, lsl #2]
 8000618:	f803 2c04 	strb.w	r2, [r3, #-4]
 800061c:	0a10      	lsrs	r0, r2, #8
 800061e:	f803 0c03 	strb.w	r0, [r3, #-3]
 8000622:	0c10      	lsrs	r0, r2, #16
 8000624:	0e12      	lsrs	r2, r2, #24
 8000626:	f803 0c02 	strb.w	r0, [r3, #-2]
 800062a:	f803 2c01 	strb.w	r2, [r3, #-1]
 800062e:	3101      	adds	r1, #1
 8000630:	e7e8      	b.n	8000604 <rosserial_msgs::RequestParamResponse::serialize(unsigned char*) const+0x66>
 8000632:	69e3      	ldr	r3, [r4, #28]
 8000634:	55ab      	strb	r3, [r5, r6]
 8000636:	69e2      	ldr	r2, [r4, #28]
 8000638:	19ab      	adds	r3, r5, r6
 800063a:	0a12      	lsrs	r2, r2, #8
 800063c:	705a      	strb	r2, [r3, #1]
 800063e:	8be2      	ldrh	r2, [r4, #30]
 8000640:	709a      	strb	r2, [r3, #2]
 8000642:	7fe2      	ldrb	r2, [r4, #31]
 8000644:	70da      	strb	r2, [r3, #3]
 8000646:	3604      	adds	r6, #4
 8000648:	2700      	movs	r7, #0
 800064a:	69e3      	ldr	r3, [r4, #28]
 800064c:	429f      	cmp	r7, r3
 800064e:	d214      	bcs.n	800067a <rosserial_msgs::RequestParamResponse::serialize(unsigned char*) const+0xdc>
 8000650:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8000652:	f853 0027 	ldr.w	r0, [r3, r7, lsl #2]
 8000656:	f006 fd6c 	bl	8007132 <strlen>
 800065a:	4680      	mov	r8, r0
 800065c:	4601      	mov	r1, r0
 800065e:	19a8      	adds	r0, r5, r6
 8000660:	f7ff ff93 	bl	800058a <void ros::Msg::varToArr<unsigned char*, unsigned long>(unsigned char*, unsigned long)>
 8000664:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8000666:	3604      	adds	r6, #4
 8000668:	f853 1027 	ldr.w	r1, [r3, r7, lsl #2]
 800066c:	19a8      	adds	r0, r5, r6
 800066e:	4642      	mov	r2, r8
 8000670:	f006 fa6e 	bl	8006b50 <memcpy>
 8000674:	4446      	add	r6, r8
 8000676:	3701      	adds	r7, #1
 8000678:	e7e7      	b.n	800064a <rosserial_msgs::RequestParamResponse::serialize(unsigned char*) const+0xac>
 800067a:	4630      	mov	r0, r6
 800067c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08000680 <rosserial_msgs::Log::serialize(unsigned char*) const>:
 8000680:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000682:	460e      	mov	r6, r1
 8000684:	7903      	ldrb	r3, [r0, #4]
 8000686:	f806 3b01 	strb.w	r3, [r6], #1
 800068a:	4605      	mov	r5, r0
 800068c:	6880      	ldr	r0, [r0, #8]
 800068e:	460f      	mov	r7, r1
 8000690:	f006 fd4f 	bl	8007132 <strlen>
 8000694:	4604      	mov	r4, r0
 8000696:	4601      	mov	r1, r0
 8000698:	4630      	mov	r0, r6
 800069a:	f7ff ff76 	bl	800058a <void ros::Msg::varToArr<unsigned char*, unsigned long>(unsigned char*, unsigned long)>
 800069e:	4622      	mov	r2, r4
 80006a0:	68a9      	ldr	r1, [r5, #8]
 80006a2:	1d78      	adds	r0, r7, #5
 80006a4:	f006 fa54 	bl	8006b50 <memcpy>
 80006a8:	1d60      	adds	r0, r4, #5
 80006aa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

080006ac <rosserial_msgs::TopicInfo::serialize(unsigned char*) const>:
 80006ac:	8883      	ldrh	r3, [r0, #4]
 80006ae:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80006b2:	700b      	strb	r3, [r1, #0]
 80006b4:	8883      	ldrh	r3, [r0, #4]
 80006b6:	0a1b      	lsrs	r3, r3, #8
 80006b8:	704b      	strb	r3, [r1, #1]
 80006ba:	4605      	mov	r5, r0
 80006bc:	6880      	ldr	r0, [r0, #8]
 80006be:	460c      	mov	r4, r1
 80006c0:	f006 fd37 	bl	8007132 <strlen>
 80006c4:	4607      	mov	r7, r0
 80006c6:	4601      	mov	r1, r0
 80006c8:	1ca0      	adds	r0, r4, #2
 80006ca:	f7ff ff5e 	bl	800058a <void ros::Msg::varToArr<unsigned char*, unsigned long>(unsigned char*, unsigned long)>
 80006ce:	463a      	mov	r2, r7
 80006d0:	68a9      	ldr	r1, [r5, #8]
 80006d2:	1da0      	adds	r0, r4, #6
 80006d4:	f006 fa3c 	bl	8006b50 <memcpy>
 80006d8:	68e8      	ldr	r0, [r5, #12]
 80006da:	f006 fd2a 	bl	8007132 <strlen>
 80006de:	f107 0806 	add.w	r8, r7, #6
 80006e2:	4606      	mov	r6, r0
 80006e4:	4601      	mov	r1, r0
 80006e6:	370a      	adds	r7, #10
 80006e8:	eb04 0008 	add.w	r0, r4, r8
 80006ec:	f7ff ff4d 	bl	800058a <void ros::Msg::varToArr<unsigned char*, unsigned long>(unsigned char*, unsigned long)>
 80006f0:	4632      	mov	r2, r6
 80006f2:	68e9      	ldr	r1, [r5, #12]
 80006f4:	19e0      	adds	r0, r4, r7
 80006f6:	f006 fa2b 	bl	8006b50 <memcpy>
 80006fa:	6928      	ldr	r0, [r5, #16]
 80006fc:	f006 fd19 	bl	8007132 <strlen>
 8000700:	443e      	add	r6, r7
 8000702:	4601      	mov	r1, r0
 8000704:	4607      	mov	r7, r0
 8000706:	19a0      	adds	r0, r4, r6
 8000708:	3604      	adds	r6, #4
 800070a:	f7ff ff3e 	bl	800058a <void ros::Msg::varToArr<unsigned char*, unsigned long>(unsigned char*, unsigned long)>
 800070e:	463a      	mov	r2, r7
 8000710:	19a0      	adds	r0, r4, r6
 8000712:	6929      	ldr	r1, [r5, #16]
 8000714:	443e      	add	r6, r7
 8000716:	f006 fa1b 	bl	8006b50 <memcpy>
 800071a:	696b      	ldr	r3, [r5, #20]
 800071c:	55a3      	strb	r3, [r4, r6]
 800071e:	4434      	add	r4, r6
 8000720:	0a1a      	lsrs	r2, r3, #8
 8000722:	7062      	strb	r2, [r4, #1]
 8000724:	0c1a      	lsrs	r2, r3, #16
 8000726:	0e1b      	lsrs	r3, r3, #24
 8000728:	70a2      	strb	r2, [r4, #2]
 800072a:	70e3      	strb	r3, [r4, #3]
 800072c:	1d30      	adds	r0, r6, #4
 800072e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08000732 <void ros::Msg::arrToVar<unsigned long, unsigned char*>(unsigned long&, unsigned char*)>:
 8000732:	b510      	push	{r4, lr}
 8000734:	2300      	movs	r3, #0
 8000736:	6003      	str	r3, [r0, #0]
 8000738:	3901      	subs	r1, #1
 800073a:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 800073e:	fa02 f403 	lsl.w	r4, r2, r3
 8000742:	6802      	ldr	r2, [r0, #0]
 8000744:	3308      	adds	r3, #8
 8000746:	4322      	orrs	r2, r4
 8000748:	2b20      	cmp	r3, #32
 800074a:	6002      	str	r2, [r0, #0]
 800074c:	d1f5      	bne.n	800073a <void ros::Msg::arrToVar<unsigned long, unsigned char*>(unsigned long&, unsigned char*)+0x8>
 800074e:	bd10      	pop	{r4, pc}

08000750 <rosserial_msgs::Log::deserialize(unsigned char*)>:
 8000750:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8000752:	460c      	mov	r4, r1
 8000754:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000758:	7103      	strb	r3, [r0, #4]
 800075a:	4605      	mov	r5, r0
 800075c:	a801      	add	r0, sp, #4
 800075e:	f7ff ffe8 	bl	8000732 <void ros::Msg::arrToVar<unsigned long, unsigned char*>(unsigned long&, unsigned char*)>
 8000762:	9b01      	ldr	r3, [sp, #4]
 8000764:	1d62      	adds	r2, r4, #5
 8000766:	1d58      	adds	r0, r3, #5
 8000768:	1b11      	subs	r1, r2, r4
 800076a:	4288      	cmp	r0, r1
 800076c:	d904      	bls.n	8000778 <rosserial_msgs::Log::deserialize(unsigned char*)+0x28>
 800076e:	f812 1b01 	ldrb.w	r1, [r2], #1
 8000772:	f802 1c02 	strb.w	r1, [r2, #-2]
 8000776:	e7f7      	b.n	8000768 <rosserial_msgs::Log::deserialize(unsigned char*)+0x18>
 8000778:	4423      	add	r3, r4
 800077a:	2200      	movs	r2, #0
 800077c:	3404      	adds	r4, #4
 800077e:	711a      	strb	r2, [r3, #4]
 8000780:	60ac      	str	r4, [r5, #8]
 8000782:	b003      	add	sp, #12
 8000784:	bd30      	pop	{r4, r5, pc}

08000786 <rosserial_msgs::TopicInfo::deserialize(unsigned char*)>:
 8000786:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000788:	780b      	ldrb	r3, [r1, #0]
 800078a:	8083      	strh	r3, [r0, #4]
 800078c:	784a      	ldrb	r2, [r1, #1]
 800078e:	b085      	sub	sp, #20
 8000790:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8000794:	8083      	strh	r3, [r0, #4]
 8000796:	460c      	mov	r4, r1
 8000798:	4606      	mov	r6, r0
 800079a:	3102      	adds	r1, #2
 800079c:	a801      	add	r0, sp, #4
 800079e:	f7ff ffc8 	bl	8000732 <void ros::Msg::arrToVar<unsigned long, unsigned char*>(unsigned long&, unsigned char*)>
 80007a2:	9f01      	ldr	r7, [sp, #4]
 80007a4:	1da3      	adds	r3, r4, #6
 80007a6:	1dbd      	adds	r5, r7, #6
 80007a8:	1b1a      	subs	r2, r3, r4
 80007aa:	4295      	cmp	r5, r2
 80007ac:	d904      	bls.n	80007b8 <rosserial_msgs::TopicInfo::deserialize(unsigned char*)+0x32>
 80007ae:	f813 2b01 	ldrb.w	r2, [r3], #1
 80007b2:	f803 2c02 	strb.w	r2, [r3, #-2]
 80007b6:	e7f7      	b.n	80007a8 <rosserial_msgs::TopicInfo::deserialize(unsigned char*)+0x22>
 80007b8:	19e3      	adds	r3, r4, r7
 80007ba:	2200      	movs	r2, #0
 80007bc:	715a      	strb	r2, [r3, #5]
 80007be:	1d63      	adds	r3, r4, #5
 80007c0:	60b3      	str	r3, [r6, #8]
 80007c2:	1961      	adds	r1, r4, r5
 80007c4:	a802      	add	r0, sp, #8
 80007c6:	f7ff ffb4 	bl	8000732 <void ros::Msg::arrToVar<unsigned long, unsigned char*>(unsigned long&, unsigned char*)>
 80007ca:	1d2b      	adds	r3, r5, #4
 80007cc:	9d02      	ldr	r5, [sp, #8]
 80007ce:	f107 020a 	add.w	r2, r7, #10
 80007d2:	441d      	add	r5, r3
 80007d4:	4422      	add	r2, r4
 80007d6:	1b11      	subs	r1, r2, r4
 80007d8:	428d      	cmp	r5, r1
 80007da:	d904      	bls.n	80007e6 <rosserial_msgs::TopicInfo::deserialize(unsigned char*)+0x60>
 80007dc:	f812 1b01 	ldrb.w	r1, [r2], #1
 80007e0:	f802 1c02 	strb.w	r1, [r2, #-2]
 80007e4:	e7f7      	b.n	80007d6 <rosserial_msgs::TopicInfo::deserialize(unsigned char*)+0x50>
 80007e6:	1961      	adds	r1, r4, r5
 80007e8:	3b01      	subs	r3, #1
 80007ea:	4423      	add	r3, r4
 80007ec:	2200      	movs	r2, #0
 80007ee:	f801 2c01 	strb.w	r2, [r1, #-1]
 80007f2:	a803      	add	r0, sp, #12
 80007f4:	60f3      	str	r3, [r6, #12]
 80007f6:	f7ff ff9c 	bl	8000732 <void ros::Msg::arrToVar<unsigned long, unsigned char*>(unsigned long&, unsigned char*)>
 80007fa:	9803      	ldr	r0, [sp, #12]
 80007fc:	3504      	adds	r5, #4
 80007fe:	4428      	add	r0, r5
 8000800:	1963      	adds	r3, r4, r5
 8000802:	1b1a      	subs	r2, r3, r4
 8000804:	4290      	cmp	r0, r2
 8000806:	d904      	bls.n	8000812 <rosserial_msgs::TopicInfo::deserialize(unsigned char*)+0x8c>
 8000808:	f813 2b01 	ldrb.w	r2, [r3], #1
 800080c:	f803 2c02 	strb.w	r2, [r3, #-2]
 8000810:	e7f7      	b.n	8000802 <rosserial_msgs::TopicInfo::deserialize(unsigned char*)+0x7c>
 8000812:	1822      	adds	r2, r4, r0
 8000814:	3d01      	subs	r5, #1
 8000816:	2300      	movs	r3, #0
 8000818:	4425      	add	r5, r4
 800081a:	f802 3c01 	strb.w	r3, [r2, #-1]
 800081e:	6135      	str	r5, [r6, #16]
 8000820:	7893      	ldrb	r3, [r2, #2]
 8000822:	7851      	ldrb	r1, [r2, #1]
 8000824:	78d2      	ldrb	r2, [r2, #3]
 8000826:	041b      	lsls	r3, r3, #16
 8000828:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 800082c:	5c21      	ldrb	r1, [r4, r0]
 800082e:	430b      	orrs	r3, r1
 8000830:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 8000834:	3004      	adds	r0, #4
 8000836:	6173      	str	r3, [r6, #20]
 8000838:	b005      	add	sp, #20
 800083a:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800083c <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)>:
 800083c:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8000840:	6843      	ldr	r3, [r0, #4]
 8000842:	680d      	ldr	r5, [r1, #0]
 8000844:	429d      	cmp	r5, r3
 8000846:	4604      	mov	r4, r0
 8000848:	460e      	mov	r6, r1
 800084a:	d904      	bls.n	8000856 <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0x1a>
 800084c:	00a9      	lsls	r1, r5, #2
 800084e:	68c0      	ldr	r0, [r0, #12]
 8000850:	f006 fc14 	bl	800707c <realloc>
 8000854:	60e0      	str	r0, [r4, #12]
 8000856:	6065      	str	r5, [r4, #4]
 8000858:	1d32      	adds	r2, r6, #4
 800085a:	2100      	movs	r1, #0
 800085c:	6860      	ldr	r0, [r4, #4]
 800085e:	4281      	cmp	r1, r0
 8000860:	eba2 0306 	sub.w	r3, r2, r6
 8000864:	f102 0204 	add.w	r2, r2, #4
 8000868:	d213      	bcs.n	8000892 <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0x56>
 800086a:	f812 3c02 	ldrb.w	r3, [r2, #-2]
 800086e:	f812 0c03 	ldrb.w	r0, [r2, #-3]
 8000872:	041b      	lsls	r3, r3, #16
 8000874:	ea43 2300 	orr.w	r3, r3, r0, lsl #8
 8000878:	f812 0c04 	ldrb.w	r0, [r2, #-4]
 800087c:	4303      	orrs	r3, r0
 800087e:	f812 0c01 	ldrb.w	r0, [r2, #-1]
 8000882:	ea43 6300 	orr.w	r3, r3, r0, lsl #24
 8000886:	68e0      	ldr	r0, [r4, #12]
 8000888:	60a3      	str	r3, [r4, #8]
 800088a:	f840 3021 	str.w	r3, [r0, r1, lsl #2]
 800088e:	3101      	adds	r1, #1
 8000890:	e7e4      	b.n	800085c <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0x20>
 8000892:	18f2      	adds	r2, r6, r3
 8000894:	5cf1      	ldrb	r1, [r6, r3]
 8000896:	7895      	ldrb	r5, [r2, #2]
 8000898:	7850      	ldrb	r0, [r2, #1]
 800089a:	78d2      	ldrb	r2, [r2, #3]
 800089c:	042d      	lsls	r5, r5, #16
 800089e:	ea45 2500 	orr.w	r5, r5, r0, lsl #8
 80008a2:	430d      	orrs	r5, r1
 80008a4:	1d1f      	adds	r7, r3, #4
 80008a6:	6923      	ldr	r3, [r4, #16]
 80008a8:	ea45 6502 	orr.w	r5, r5, r2, lsl #24
 80008ac:	429d      	cmp	r5, r3
 80008ae:	d904      	bls.n	80008ba <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0x7e>
 80008b0:	00a9      	lsls	r1, r5, #2
 80008b2:	69a0      	ldr	r0, [r4, #24]
 80008b4:	f006 fbe2 	bl	800707c <realloc>
 80008b8:	61a0      	str	r0, [r4, #24]
 80008ba:	6125      	str	r5, [r4, #16]
 80008bc:	19f3      	adds	r3, r6, r7
 80008be:	2100      	movs	r1, #0
 80008c0:	6922      	ldr	r2, [r4, #16]
 80008c2:	4291      	cmp	r1, r2
 80008c4:	eba3 0506 	sub.w	r5, r3, r6
 80008c8:	f103 0304 	add.w	r3, r3, #4
 80008cc:	d213      	bcs.n	80008f6 <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0xba>
 80008ce:	f813 2c02 	ldrb.w	r2, [r3, #-2]
 80008d2:	f813 0c03 	ldrb.w	r0, [r3, #-3]
 80008d6:	0412      	lsls	r2, r2, #16
 80008d8:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 80008dc:	f813 0c04 	ldrb.w	r0, [r3, #-4]
 80008e0:	4302      	orrs	r2, r0
 80008e2:	f813 0c01 	ldrb.w	r0, [r3, #-1]
 80008e6:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
 80008ea:	69a0      	ldr	r0, [r4, #24]
 80008ec:	6162      	str	r2, [r4, #20]
 80008ee:	f840 2021 	str.w	r2, [r0, r1, lsl #2]
 80008f2:	3101      	adds	r1, #1
 80008f4:	e7e4      	b.n	80008c0 <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0x84>
 80008f6:	1973      	adds	r3, r6, r5
 80008f8:	5d72      	ldrb	r2, [r6, r5]
 80008fa:	789f      	ldrb	r7, [r3, #2]
 80008fc:	7859      	ldrb	r1, [r3, #1]
 80008fe:	78db      	ldrb	r3, [r3, #3]
 8000900:	043f      	lsls	r7, r7, #16
 8000902:	ea47 2701 	orr.w	r7, r7, r1, lsl #8
 8000906:	4317      	orrs	r7, r2
 8000908:	ea47 6703 	orr.w	r7, r7, r3, lsl #24
 800090c:	69e3      	ldr	r3, [r4, #28]
 800090e:	429f      	cmp	r7, r3
 8000910:	f105 0504 	add.w	r5, r5, #4
 8000914:	d904      	bls.n	8000920 <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0xe4>
 8000916:	00b9      	lsls	r1, r7, #2
 8000918:	6a60      	ldr	r0, [r4, #36]	; 0x24
 800091a:	f006 fbaf 	bl	800707c <realloc>
 800091e:	6260      	str	r0, [r4, #36]	; 0x24
 8000920:	61e7      	str	r7, [r4, #28]
 8000922:	2700      	movs	r7, #0
 8000924:	46b8      	mov	r8, r7
 8000926:	69e3      	ldr	r3, [r4, #28]
 8000928:	429f      	cmp	r7, r3
 800092a:	d21a      	bcs.n	8000962 <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0x126>
 800092c:	1971      	adds	r1, r6, r5
 800092e:	a801      	add	r0, sp, #4
 8000930:	f7ff feff 	bl	8000732 <void ros::Msg::arrToVar<unsigned long, unsigned char*>(unsigned long&, unsigned char*)>
 8000934:	1d2b      	adds	r3, r5, #4
 8000936:	9d01      	ldr	r5, [sp, #4]
 8000938:	18f2      	adds	r2, r6, r3
 800093a:	441d      	add	r5, r3
 800093c:	1b91      	subs	r1, r2, r6
 800093e:	42a9      	cmp	r1, r5
 8000940:	d204      	bcs.n	800094c <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0x110>
 8000942:	f812 1b01 	ldrb.w	r1, [r2], #1
 8000946:	f802 1c02 	strb.w	r1, [r2, #-2]
 800094a:	e7f7      	b.n	800093c <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0x100>
 800094c:	1972      	adds	r2, r6, r5
 800094e:	3b01      	subs	r3, #1
 8000950:	f802 8c01 	strb.w	r8, [r2, #-1]
 8000954:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8000956:	4433      	add	r3, r6
 8000958:	6223      	str	r3, [r4, #32]
 800095a:	f842 3027 	str.w	r3, [r2, r7, lsl #2]
 800095e:	3701      	adds	r7, #1
 8000960:	e7e1      	b.n	8000926 <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0xea>
 8000962:	4628      	mov	r0, r5
 8000964:	b002      	add	sp, #8
 8000966:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800096a <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::subscribe(ros::Subscriber_&)>:
 800096a:	b510      	push	{r4, lr}
 800096c:	f500 62ae 	add.w	r2, r0, #1392	; 0x570
 8000970:	2300      	movs	r3, #0
 8000972:	f852 4b04 	ldr.w	r4, [r2], #4
 8000976:	b93c      	cbnz	r4, 8000988 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::subscribe(ros::Subscriber_&)+0x1e>
 8000978:	f503 72ae 	add.w	r2, r3, #348	; 0x15c
 800097c:	3364      	adds	r3, #100	; 0x64
 800097e:	f840 1022 	str.w	r1, [r0, r2, lsl #2]
 8000982:	604b      	str	r3, [r1, #4]
 8000984:	2001      	movs	r0, #1
 8000986:	bd10      	pop	{r4, pc}
 8000988:	3301      	adds	r3, #1
 800098a:	2b19      	cmp	r3, #25
 800098c:	d1f1      	bne.n	8000972 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::subscribe(ros::Subscriber_&)+0x8>
 800098e:	2000      	movs	r0, #0
 8000990:	bd10      	pop	{r4, pc}
	...

08000994 <initRosTopics()>:
 8000994:	4a15      	ldr	r2, [pc, #84]	; (80009ec <initRosTopics()+0x58>)
 8000996:	b508      	push	{r3, lr}
 8000998:	2300      	movs	r3, #0
 800099a:	f852 1f04 	ldr.w	r1, [r2, #4]!
 800099e:	bb09      	cbnz	r1, 80009e4 <initRosTopics()+0x50>
 80009a0:	4913      	ldr	r1, [pc, #76]	; (80009f0 <initRosTopics()+0x5c>)
 80009a2:	4a14      	ldr	r2, [pc, #80]	; (80009f4 <initRosTopics()+0x60>)
 80009a4:	eb01 0083 	add.w	r0, r1, r3, lsl #2
 80009a8:	337d      	adds	r3, #125	; 0x7d
 80009aa:	f8c0 250c 	str.w	r2, [r0, #1292]	; 0x50c
 80009ae:	6093      	str	r3, [r2, #8]
 80009b0:	60d1      	str	r1, [r2, #12]
 80009b2:	4911      	ldr	r1, [pc, #68]	; (80009f8 <initRosTopics()+0x64>)
 80009b4:	480e      	ldr	r0, [pc, #56]	; (80009f0 <initRosTopics()+0x5c>)
 80009b6:	f7ff ffd8 	bl	800096a <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::subscribe(ros::Subscriber_&)>
 80009ba:	4910      	ldr	r1, [pc, #64]	; (80009fc <initRosTopics()+0x68>)
 80009bc:	480c      	ldr	r0, [pc, #48]	; (80009f0 <initRosTopics()+0x5c>)
 80009be:	f7ff ffd4 	bl	800096a <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::subscribe(ros::Subscriber_&)>
 80009c2:	490f      	ldr	r1, [pc, #60]	; (8000a00 <initRosTopics()+0x6c>)
 80009c4:	480a      	ldr	r0, [pc, #40]	; (80009f0 <initRosTopics()+0x5c>)
 80009c6:	f7ff ffd0 	bl	800096a <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::subscribe(ros::Subscriber_&)>
 80009ca:	490e      	ldr	r1, [pc, #56]	; (8000a04 <initRosTopics()+0x70>)
 80009cc:	4808      	ldr	r0, [pc, #32]	; (80009f0 <initRosTopics()+0x5c>)
 80009ce:	f7ff ffcc 	bl	800096a <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::subscribe(ros::Subscriber_&)>
 80009d2:	490d      	ldr	r1, [pc, #52]	; (8000a08 <initRosTopics()+0x74>)
 80009d4:	4806      	ldr	r0, [pc, #24]	; (80009f0 <initRosTopics()+0x5c>)
 80009d6:	f7ff ffc8 	bl	800096a <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::subscribe(ros::Subscriber_&)>
 80009da:	490c      	ldr	r1, [pc, #48]	; (8000a0c <initRosTopics()+0x78>)
 80009dc:	4804      	ldr	r0, [pc, #16]	; (80009f0 <initRosTopics()+0x5c>)
 80009de:	f7ff ffc4 	bl	800096a <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::subscribe(ros::Subscriber_&)>
 80009e2:	bd08      	pop	{r3, pc}
 80009e4:	3301      	adds	r3, #1
 80009e6:	2b19      	cmp	r3, #25
 80009e8:	d1d7      	bne.n	800099a <initRosTopics()+0x6>
 80009ea:	e7e2      	b.n	80009b2 <initRosTopics()+0x1e>
 80009ec:	20000d24 	.word	0x20000d24
 80009f0:	2000081c 	.word	0x2000081c
 80009f4:	20000770 	.word	0x20000770
 80009f8:	20000800 	.word	0x20000800
 80009fc:	20000e7c 	.word	0x20000e7c
 8000a00:	20000784 	.word	0x20000784
 8000a04:	200007a0 	.word	0x200007a0
 8000a08:	200007bc 	.word	0x200007bc
 8000a0c:	20000e40 	.word	0x20000e40

08000a10 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::requestSyncTime()>:
 8000a10:	b530      	push	{r4, r5, lr}
 8000a12:	b085      	sub	sp, #20
 8000a14:	4604      	mov	r4, r0
 8000a16:	4b09      	ldr	r3, [pc, #36]	; (8000a3c <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::requestSyncTime()+0x2c>)
 8000a18:	9301      	str	r3, [sp, #4]
 8000a1a:	2300      	movs	r3, #0
 8000a1c:	9302      	str	r3, [sp, #8]
 8000a1e:	9303      	str	r3, [sp, #12]
 8000a20:	f854 3bec 	ldr.w	r3, [r4], #236
 8000a24:	aa01      	add	r2, sp, #4
 8000a26:	681b      	ldr	r3, [r3, #0]
 8000a28:	210a      	movs	r1, #10
 8000a2a:	4605      	mov	r5, r0
 8000a2c:	4798      	blx	r3
 8000a2e:	4620      	mov	r0, r4
 8000a30:	f004 fdc5 	bl	80055be <mbed::Timer::read_ms()>
 8000a34:	f8c5 00fc 	str.w	r0, [r5, #252]	; 0xfc
 8000a38:	b005      	add	sp, #20
 8000a3a:	bd30      	pop	{r4, r5, pc}
 8000a3c:	080074e4 	.word	0x080074e4

08000a40 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::negotiateTopics()>:
 8000a40:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000a44:	b086      	sub	sp, #24
 8000a46:	4b2b      	ldr	r3, [pc, #172]	; (8000af4 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::negotiateTopics()+0xb4>)
 8000a48:	9300      	str	r3, [sp, #0]
 8000a4a:	2200      	movs	r2, #0
 8000a4c:	4b2a      	ldr	r3, [pc, #168]	; (8000af8 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::negotiateTopics()+0xb8>)
 8000a4e:	f8ad 2004 	strh.w	r2, [sp, #4]
 8000a52:	4605      	mov	r5, r0
 8000a54:	9302      	str	r3, [sp, #8]
 8000a56:	9303      	str	r3, [sp, #12]
 8000a58:	9304      	str	r3, [sp, #16]
 8000a5a:	9205      	str	r2, [sp, #20]
 8000a5c:	f200 540c 	addw	r4, r0, #1292	; 0x50c
 8000a60:	f500 66ae 	add.w	r6, r0, #1392	; 0x570
 8000a64:	f44f 7700 	mov.w	r7, #512	; 0x200
 8000a68:	6823      	ldr	r3, [r4, #0]
 8000a6a:	b1bb      	cbz	r3, 8000a9c <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::negotiateTopics()+0x5c>
 8000a6c:	6858      	ldr	r0, [r3, #4]
 8000a6e:	689a      	ldr	r2, [r3, #8]
 8000a70:	f8ad 2004 	strh.w	r2, [sp, #4]
 8000a74:	681a      	ldr	r2, [r3, #0]
 8000a76:	6803      	ldr	r3, [r0, #0]
 8000a78:	9202      	str	r2, [sp, #8]
 8000a7a:	689b      	ldr	r3, [r3, #8]
 8000a7c:	4798      	blx	r3
 8000a7e:	6823      	ldr	r3, [r4, #0]
 8000a80:	9003      	str	r0, [sp, #12]
 8000a82:	6858      	ldr	r0, [r3, #4]
 8000a84:	6803      	ldr	r3, [r0, #0]
 8000a86:	68db      	ldr	r3, [r3, #12]
 8000a88:	4798      	blx	r3
 8000a8a:	6821      	ldr	r1, [r4, #0]
 8000a8c:	682b      	ldr	r3, [r5, #0]
 8000a8e:	9004      	str	r0, [sp, #16]
 8000a90:	9705      	str	r7, [sp, #20]
 8000a92:	681b      	ldr	r3, [r3, #0]
 8000a94:	6909      	ldr	r1, [r1, #16]
 8000a96:	466a      	mov	r2, sp
 8000a98:	4628      	mov	r0, r5
 8000a9a:	4798      	blx	r3
 8000a9c:	3404      	adds	r4, #4
 8000a9e:	42b4      	cmp	r4, r6
 8000aa0:	d1e2      	bne.n	8000a68 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::negotiateTopics()+0x28>
 8000aa2:	f205 56d4 	addw	r6, r5, #1492	; 0x5d4
 8000aa6:	f44f 7700 	mov.w	r7, #512	; 0x200
 8000aaa:	6820      	ldr	r0, [r4, #0]
 8000aac:	b1c8      	cbz	r0, 8000ae2 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::negotiateTopics()+0xa2>
 8000aae:	6843      	ldr	r3, [r0, #4]
 8000ab0:	f8ad 3004 	strh.w	r3, [sp, #4]
 8000ab4:	6883      	ldr	r3, [r0, #8]
 8000ab6:	9302      	str	r3, [sp, #8]
 8000ab8:	6803      	ldr	r3, [r0, #0]
 8000aba:	689b      	ldr	r3, [r3, #8]
 8000abc:	4798      	blx	r3
 8000abe:	9003      	str	r0, [sp, #12]
 8000ac0:	6820      	ldr	r0, [r4, #0]
 8000ac2:	6803      	ldr	r3, [r0, #0]
 8000ac4:	68db      	ldr	r3, [r3, #12]
 8000ac6:	4798      	blx	r3
 8000ac8:	682b      	ldr	r3, [r5, #0]
 8000aca:	9004      	str	r0, [sp, #16]
 8000acc:	6820      	ldr	r0, [r4, #0]
 8000ace:	f8d3 8000 	ldr.w	r8, [r3]
 8000ad2:	6803      	ldr	r3, [r0, #0]
 8000ad4:	9705      	str	r7, [sp, #20]
 8000ad6:	685b      	ldr	r3, [r3, #4]
 8000ad8:	4798      	blx	r3
 8000ada:	466a      	mov	r2, sp
 8000adc:	4601      	mov	r1, r0
 8000ade:	4628      	mov	r0, r5
 8000ae0:	47c0      	blx	r8
 8000ae2:	3404      	adds	r4, #4
 8000ae4:	42a6      	cmp	r6, r4
 8000ae6:	d1e0      	bne.n	8000aaa <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::negotiateTopics()+0x6a>
 8000ae8:	2301      	movs	r3, #1
 8000aea:	f885 35e8 	strb.w	r3, [r5, #1512]	; 0x5e8
 8000aee:	b006      	add	sp, #24
 8000af0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000af4:	080074fc 	.word	0x080074fc
 8000af8:	08007894 	.word	0x08007894

08000afc <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::syncTime(unsigned char*)>:
 8000afc:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000afe:	b085      	sub	sp, #20
 8000b00:	f100 05ec 	add.w	r5, r0, #236	; 0xec
 8000b04:	4b1f      	ldr	r3, [pc, #124]	; (8000b84 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::syncTime(unsigned char*)+0x88>)
 8000b06:	9301      	str	r3, [sp, #4]
 8000b08:	4604      	mov	r4, r0
 8000b0a:	2300      	movs	r3, #0
 8000b0c:	4628      	mov	r0, r5
 8000b0e:	9302      	str	r3, [sp, #8]
 8000b10:	9303      	str	r3, [sp, #12]
 8000b12:	460e      	mov	r6, r1
 8000b14:	f004 fd53 	bl	80055be <mbed::Timer::read_ms()>
 8000b18:	f8d4 20fc 	ldr.w	r2, [r4, #252]	; 0xfc
 8000b1c:	4631      	mov	r1, r6
 8000b1e:	1a87      	subs	r7, r0, r2
 8000b20:	a801      	add	r0, sp, #4
 8000b22:	f7ff fb83 	bl	800022c <std_msgs::Time::deserialize(unsigned char*)>
 8000b26:	9b02      	ldr	r3, [sp, #8]
 8000b28:	f44f 767a 	mov.w	r6, #1000	; 0x3e8
 8000b2c:	fbb7 f2f6 	udiv	r2, r7, r6
 8000b30:	4413      	add	r3, r2
 8000b32:	9302      	str	r3, [sp, #8]
 8000b34:	fb06 7212 	mls	r2, r6, r2, r7
 8000b38:	9b03      	ldr	r3, [sp, #12]
 8000b3a:	4f13      	ldr	r7, [pc, #76]	; (8000b88 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::syncTime(unsigned char*)+0x8c>)
 8000b3c:	4628      	mov	r0, r5
 8000b3e:	fb07 3202 	mla	r2, r7, r2, r3
 8000b42:	9203      	str	r2, [sp, #12]
 8000b44:	f004 fd3b 	bl	80055be <mbed::Timer::read_ms()>
 8000b48:	9a02      	ldr	r2, [sp, #8]
 8000b4a:	fbb0 f3f6 	udiv	r3, r0, r6
 8000b4e:	3a01      	subs	r2, #1
 8000b50:	1ad2      	subs	r2, r2, r3
 8000b52:	9903      	ldr	r1, [sp, #12]
 8000b54:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 8000b58:	4a0c      	ldr	r2, [pc, #48]	; (8000b8c <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::syncTime(unsigned char*)+0x90>)
 8000b5a:	fb06 0313 	mls	r3, r6, r3, r0
 8000b5e:	440a      	add	r2, r1
 8000b60:	fb07 2313 	mls	r3, r7, r3, r2
 8000b64:	f8c4 3104 	str.w	r3, [r4, #260]	; 0x104
 8000b68:	f504 7182 	add.w	r1, r4, #260	; 0x104
 8000b6c:	f504 7080 	add.w	r0, r4, #256	; 0x100
 8000b70:	f001 f806 	bl	8001b80 <ros::normalizeSecNSec(unsigned long&, unsigned long&)>
 8000b74:	4628      	mov	r0, r5
 8000b76:	f004 fd22 	bl	80055be <mbed::Timer::read_ms()>
 8000b7a:	f8c4 05f0 	str.w	r0, [r4, #1520]	; 0x5f0
 8000b7e:	b005      	add	sp, #20
 8000b80:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000b82:	bf00      	nop
 8000b84:	080074e4 	.word	0x080074e4
 8000b88:	000f4240 	.word	0x000f4240
 8000b8c:	3b9aca00 	.word	0x3b9aca00

08000b90 <_GLOBAL__sub_I_kp>:
 8000b90:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, r10, r11, lr}
 8000b94:	4ca6      	ldr	r4, [pc, #664]	; (8000e30 <_GLOBAL__sub_I_kp+0x2a0>)
 8000b96:	4fa7      	ldr	r7, [pc, #668]	; (8000e34 <_GLOBAL__sub_I_kp+0x2a4>)
 8000b98:	f8df a2fc 	ldr.w	r10, [pc, #764]	; 8000e98 <_GLOBAL__sub_I_kp+0x308>
 8000b9c:	f8df 92fc 	ldr.w	r9, [pc, #764]	; 8000e9c <_GLOBAL__sub_I_kp+0x30c>
 8000ba0:	f8df 82fc 	ldr.w	r8, [pc, #764]	; 8000ea0 <_GLOBAL__sub_I_kp+0x310>
 8000ba4:	4620      	mov	r0, r4
 8000ba6:	2500      	movs	r5, #0
 8000ba8:	f004 ff00 	bl	80059ac <mbed::TimerEvent::TimerEvent()>
 8000bac:	4ba2      	ldr	r3, [pc, #648]	; (8000e38 <_GLOBAL__sub_I_kp+0x2a8>)
 8000bae:	6023      	str	r3, [r4, #0]
 8000bb0:	6265      	str	r5, [r4, #36]	; 0x24
 8000bb2:	4620      	mov	r0, r4
 8000bb4:	4ca1      	ldr	r4, [pc, #644]	; (8000e3c <_GLOBAL__sub_I_kp+0x2ac>)
 8000bb6:	49a2      	ldr	r1, [pc, #648]	; (8000e40 <_GLOBAL__sub_I_kp+0x2b0>)
 8000bb8:	2601      	movs	r6, #1
 8000bba:	f04f 0b10 	mov.w	r11, #16
 8000bbe:	463a      	mov	r2, r7
 8000bc0:	f005 f87e 	bl	8005cc0 <__aeabi_atexit>
 8000bc4:	2364      	movs	r3, #100	; 0x64
 8000bc6:	9601      	str	r6, [sp, #4]
 8000bc8:	f8cd b000 	str.w	r11, [sp]
 8000bcc:	2218      	movs	r2, #24
 8000bce:	2119      	movs	r1, #25
 8000bd0:	4620      	mov	r0, r4
 8000bd2:	f000 fd49 	bl	8001668 <Encoder::Encoder(PinName, PinName, int, int, bool)>
 8000bd6:	463a      	mov	r2, r7
 8000bd8:	4651      	mov	r1, r10
 8000bda:	4620      	mov	r0, r4
 8000bdc:	f005 f870 	bl	8005cc0 <__aeabi_atexit>
 8000be0:	2364      	movs	r3, #100	; 0x64
 8000be2:	9601      	str	r6, [sp, #4]
 8000be4:	f8cd b000 	str.w	r11, [sp]
 8000be8:	2206      	movs	r2, #6
 8000bea:	2107      	movs	r1, #7
 8000bec:	4648      	mov	r0, r9
 8000bee:	f000 fd3b 	bl	8001668 <Encoder::Encoder(PinName, PinName, int, int, bool)>
 8000bf2:	463a      	mov	r2, r7
 8000bf4:	4651      	mov	r1, r10
 8000bf6:	4648      	mov	r0, r9
 8000bf8:	f005 f862 	bl	8005cc0 <__aeabi_atexit>
 8000bfc:	2364      	movs	r3, #100	; 0x64
 8000bfe:	9601      	str	r6, [sp, #4]
 8000c00:	f8cd b000 	str.w	r11, [sp]
 8000c04:	2216      	movs	r2, #22
 8000c06:	2127      	movs	r1, #39	; 0x27
 8000c08:	4640      	mov	r0, r8
 8000c0a:	f000 fd2d 	bl	8001668 <Encoder::Encoder(PinName, PinName, int, int, bool)>
 8000c0e:	4651      	mov	r1, r10
 8000c10:	f8df a290 	ldr.w	r10, [pc, #656]	; 8000ea4 <_GLOBAL__sub_I_kp+0x314>
 8000c14:	463a      	mov	r2, r7
 8000c16:	4640      	mov	r0, r8
 8000c18:	f005 f852 	bl	8005cc0 <__aeabi_atexit>
 8000c1c:	9400      	str	r4, [sp, #0]
 8000c1e:	2303      	movs	r3, #3
 8000c20:	4c88      	ldr	r4, [pc, #544]	; (8000e44 <_GLOBAL__sub_I_kp+0x2b4>)
 8000c22:	2213      	movs	r2, #19
 8000c24:	2102      	movs	r1, #2
 8000c26:	4650      	mov	r0, r10
 8000c28:	f000 fc2a 	bl	8001480 <DcServo::DcServo(PinName, PinName, PinName, Encoder*)>
 8000c2c:	4650      	mov	r0, r10
 8000c2e:	f8df a278 	ldr.w	r10, [pc, #632]	; 8000ea8 <_GLOBAL__sub_I_kp+0x318>
 8000c32:	463a      	mov	r2, r7
 8000c34:	4621      	mov	r1, r4
 8000c36:	f005 f843 	bl	8005cc0 <__aeabi_atexit>
 8000c3a:	f8cd 9000 	str.w	r9, [sp]
 8000c3e:	2314      	movs	r3, #20
 8000c40:	f8df 9268 	ldr.w	r9, [pc, #616]	; 8000eac <_GLOBAL__sub_I_kp+0x31c>
 8000c44:	2209      	movs	r2, #9
 8000c46:	2108      	movs	r1, #8
 8000c48:	4650      	mov	r0, r10
 8000c4a:	f000 fc19 	bl	8001480 <DcServo::DcServo(PinName, PinName, PinName, Encoder*)>
 8000c4e:	463a      	mov	r2, r7
 8000c50:	4621      	mov	r1, r4
 8000c52:	4650      	mov	r0, r10
 8000c54:	f005 f834 	bl	8005cc0 <__aeabi_atexit>
 8000c58:	f8cd 8000 	str.w	r8, [sp]
 8000c5c:	231a      	movs	r3, #26
 8000c5e:	2215      	movs	r2, #21
 8000c60:	210a      	movs	r1, #10
 8000c62:	4648      	mov	r0, r9
 8000c64:	f000 fc0c 	bl	8001480 <DcServo::DcServo(PinName, PinName, PinName, Encoder*)>
 8000c68:	4621      	mov	r1, r4
 8000c6a:	4c77      	ldr	r4, [pc, #476]	; (8000e48 <_GLOBAL__sub_I_kp+0x2b8>)
 8000c6c:	463a      	mov	r2, r7
 8000c6e:	4648      	mov	r0, r9
 8000c70:	f005 f826 	bl	8005cc0 <__aeabi_atexit>
 8000c74:	4620      	mov	r0, r4
 8000c76:	4b75      	ldr	r3, [pc, #468]	; (8000e4c <_GLOBAL__sub_I_kp+0x2bc>)
 8000c78:	f840 3b04 	str.w	r3, [r0], #4
 8000c7c:	2304      	movs	r3, #4
 8000c7e:	2203      	movs	r2, #3
 8000c80:	2102      	movs	r1, #2
 8000c82:	f104 08ec 	add.w	r8, r4, #236	; 0xec
 8000c86:	9300      	str	r3, [sp, #0]
 8000c88:	9501      	str	r5, [sp, #4]
 8000c8a:	f44f 7380 	mov.w	r3, #256	; 0x100
 8000c8e:	f001 f865 	bl	8001d5c <BufferedSerial::BufferedSerial(PinName, PinName, unsigned long, unsigned long, char const*)>
 8000c92:	4640      	mov	r0, r8
 8000c94:	f004 fca9 	bl	80055ea <mbed::Timer::Timer()>
 8000c98:	f44f 4361 	mov.w	r3, #57600	; 0xe100
 8000c9c:	f8c4 30e8 	str.w	r3, [r4, #232]	; 0xe8
 8000ca0:	4640      	mov	r0, r8
 8000ca2:	f44f 7800 	mov.w	r8, #512	; 0x200
 8000ca6:	f004 fc5e 	bl	8005566 <mbed::Timer::start()>
 8000caa:	4642      	mov	r2, r8
 8000cac:	4629      	mov	r1, r5
 8000cae:	f504 7086 	add.w	r0, r4, #268	; 0x10c
 8000cb2:	f8c4 50fc 	str.w	r5, [r4, #252]	; 0xfc
 8000cb6:	f8c4 5100 	str.w	r5, [r4, #256]	; 0x100
 8000cba:	f8c4 5104 	str.w	r5, [r4, #260]	; 0x104
 8000cbe:	f8c4 5108 	str.w	r5, [r4, #264]	; 0x108
 8000cc2:	f005 ff6a 	bl	8006b9a <memset>
 8000cc6:	4642      	mov	r2, r8
 8000cc8:	4629      	mov	r1, r5
 8000cca:	f04f 0864 	mov.w	r8, #100	; 0x64
 8000cce:	f504 7043 	add.w	r0, r4, #780	; 0x30c
 8000cd2:	f005 ff62 	bl	8006b9a <memset>
 8000cd6:	4642      	mov	r2, r8
 8000cd8:	4629      	mov	r1, r5
 8000cda:	f204 500c 	addw	r0, r4, #1292	; 0x50c
 8000cde:	f005 ff5c 	bl	8006b9a <memset>
 8000ce2:	4642      	mov	r2, r8
 8000ce4:	4629      	mov	r1, r5
 8000ce6:	f504 60ae 	add.w	r0, r4, #1392	; 0x570
 8000cea:	f005 ff56 	bl	8006b9a <memset>
 8000cee:	4b58      	ldr	r3, [pc, #352]	; (8000e50 <_GLOBAL__sub_I_kp+0x2c0>)
 8000cf0:	f8c4 35fc 	str.w	r3, [r4, #1532]	; 0x5fc
 8000cf4:	f504 63c2 	add.w	r3, r4, #1552	; 0x610
 8000cf8:	f04f 0800 	mov.w	r8, #0
 8000cfc:	f8c4 5600 	str.w	r5, [r4, #1536]	; 0x600
 8000d00:	f8c4 5604 	str.w	r5, [r4, #1540]	; 0x604
 8000d04:	f8c4 5608 	str.w	r5, [r4, #1544]	; 0x608
 8000d08:	f8c4 560c 	str.w	r5, [r4, #1548]	; 0x60c
 8000d0c:	f8c3 8000 	str.w	r8, [r3]
 8000d10:	f8c4 5614 	str.w	r5, [r4, #1556]	; 0x614
 8000d14:	f8c4 5618 	str.w	r5, [r4, #1560]	; 0x618
 8000d18:	f8c4 561c 	str.w	r5, [r4, #1564]	; 0x61c
 8000d1c:	f8c4 5620 	str.w	r5, [r4, #1568]	; 0x620
 8000d20:	463a      	mov	r2, r7
 8000d22:	494c      	ldr	r1, [pc, #304]	; (8000e54 <_GLOBAL__sub_I_kp+0x2c4>)
 8000d24:	f8c4 55d4 	str.w	r5, [r4, #1492]	; 0x5d4
 8000d28:	4620      	mov	r0, r4
 8000d2a:	f8c4 55d8 	str.w	r5, [r4, #1496]	; 0x5d8
 8000d2e:	f8c4 55dc 	str.w	r5, [r4, #1500]	; 0x5dc
 8000d32:	f8c4 55e0 	str.w	r5, [r4, #1504]	; 0x5e0
 8000d36:	f8c4 55e4 	str.w	r5, [r4, #1508]	; 0x5e4
 8000d3a:	f884 55e8 	strb.w	r5, [r4, #1512]	; 0x5e8
 8000d3e:	f8c4 55ec 	str.w	r5, [r4, #1516]	; 0x5ec
 8000d42:	f8c4 55f0 	str.w	r5, [r4, #1520]	; 0x5f0
 8000d46:	f8c4 55f4 	str.w	r5, [r4, #1524]	; 0x5f4
 8000d4a:	f884 55f8 	strb.w	r5, [r4, #1528]	; 0x5f8
 8000d4e:	f004 ffb7 	bl	8005cc0 <__aeabi_atexit>
 8000d52:	4b41      	ldr	r3, [pc, #260]	; (8000e58 <_GLOBAL__sub_I_kp+0x2c8>)
 8000d54:	f8df c158 	ldr.w	r12, [pc, #344]	; 8000eb0 <_GLOBAL__sub_I_kp+0x320>
 8000d58:	f8c3 c014 	str.w	r12, [r3, #20]
 8000d5c:	f8df e154 	ldr.w	lr, [pc, #340]	; 8000eb4 <_GLOBAL__sub_I_kp+0x324>
 8000d60:	4c3e      	ldr	r4, [pc, #248]	; (8000e5c <_GLOBAL__sub_I_kp+0x2cc>)
 8000d62:	f8df c154 	ldr.w	r12, [pc, #340]	; 8000eb8 <_GLOBAL__sub_I_kp+0x328>
 8000d66:	f8c3 e000 	str.w	lr, [r3]
 8000d6a:	60dc      	str	r4, [r3, #12]
 8000d6c:	f8c3 8010 	str.w	r8, [r3, #16]
 8000d70:	619e      	str	r6, [r3, #24]
 8000d72:	f8c3 c008 	str.w	r12, [r3, #8]
 8000d76:	4b3a      	ldr	r3, [pc, #232]	; (8000e60 <_GLOBAL__sub_I_kp+0x2d0>)
 8000d78:	f8df c140 	ldr.w	r12, [pc, #320]	; 8000ebc <_GLOBAL__sub_I_kp+0x32c>
 8000d7c:	f8c3 c000 	str.w	r12, [r3]
 8000d80:	f8df c13c 	ldr.w	r12, [pc, #316]	; 8000ec0 <_GLOBAL__sub_I_kp+0x330>
 8000d84:	f8c3 c00c 	str.w	r12, [r3, #12]
 8000d88:	f8df c138 	ldr.w	r12, [pc, #312]	; 8000ec4 <_GLOBAL__sub_I_kp+0x334>
 8000d8c:	f8c3 c010 	str.w	r12, [r3, #16]
 8000d90:	f8df c134 	ldr.w	r12, [pc, #308]	; 8000ec8 <_GLOBAL__sub_I_kp+0x338>
 8000d94:	615e      	str	r6, [r3, #20]
 8000d96:	f8c3 c008 	str.w	r12, [r3, #8]
 8000d9a:	4b32      	ldr	r3, [pc, #200]	; (8000e64 <_GLOBAL__sub_I_kp+0x2d4>)
 8000d9c:	f8df c12c 	ldr.w	r12, [pc, #300]	; 8000ecc <_GLOBAL__sub_I_kp+0x33c>
 8000da0:	f8c3 c014 	str.w	r12, [r3, #20]
 8000da4:	f8df c128 	ldr.w	r12, [pc, #296]	; 8000ed0 <_GLOBAL__sub_I_kp+0x340>
 8000da8:	f8c3 e000 	str.w	lr, [r3]
 8000dac:	60dc      	str	r4, [r3, #12]
 8000dae:	f8c3 8010 	str.w	r8, [r3, #16]
 8000db2:	619e      	str	r6, [r3, #24]
 8000db4:	f8c3 c008 	str.w	r12, [r3, #8]
 8000db8:	4b2b      	ldr	r3, [pc, #172]	; (8000e68 <_GLOBAL__sub_I_kp+0x2d8>)
 8000dba:	f8df c118 	ldr.w	r12, [pc, #280]	; 8000ed4 <_GLOBAL__sub_I_kp+0x344>
 8000dbe:	f8c3 c014 	str.w	r12, [r3, #20]
 8000dc2:	f8df c114 	ldr.w	r12, [pc, #276]	; 8000ed8 <_GLOBAL__sub_I_kp+0x348>
 8000dc6:	f8c3 e000 	str.w	lr, [r3]
 8000dca:	60dc      	str	r4, [r3, #12]
 8000dcc:	f8c3 8010 	str.w	r8, [r3, #16]
 8000dd0:	619e      	str	r6, [r3, #24]
 8000dd2:	f8c3 c008 	str.w	r12, [r3, #8]
 8000dd6:	4b25      	ldr	r3, [pc, #148]	; (8000e6c <_GLOBAL__sub_I_kp+0x2dc>)
 8000dd8:	4a25      	ldr	r2, [pc, #148]	; (8000e70 <_GLOBAL__sub_I_kp+0x2e0>)
 8000dda:	60dc      	str	r4, [r3, #12]
 8000ddc:	4c25      	ldr	r4, [pc, #148]	; (8000e74 <_GLOBAL__sub_I_kp+0x2e4>)
 8000dde:	4f26      	ldr	r7, [pc, #152]	; (8000e78 <_GLOBAL__sub_I_kp+0x2e8>)
 8000de0:	615c      	str	r4, [r3, #20]
 8000de2:	2000      	movs	r0, #0
 8000de4:	2100      	movs	r1, #0
 8000de6:	4c25      	ldr	r4, [pc, #148]	; (8000e7c <_GLOBAL__sub_I_kp+0x2ec>)
 8000de8:	f8c3 e000 	str.w	lr, [r3]
 8000dec:	e9c2 0102 	strd	r0, r1, [r2, #8]
 8000df0:	e9c2 0104 	strd	r0, r1, [r2, #16]
 8000df4:	e9c2 0106 	strd	r0, r1, [r2, #24]
 8000df8:	f8c3 8010 	str.w	r8, [r3, #16]
 8000dfc:	619e      	str	r6, [r3, #24]
 8000dfe:	6017      	str	r7, [r2, #0]
 8000e00:	609c      	str	r4, [r3, #8]
 8000e02:	4b1f      	ldr	r3, [pc, #124]	; (8000e80 <_GLOBAL__sub_I_kp+0x2f0>)
 8000e04:	4c1f      	ldr	r4, [pc, #124]	; (8000e84 <_GLOBAL__sub_I_kp+0x2f4>)
 8000e06:	601c      	str	r4, [r3, #0]
 8000e08:	e9c3 0106 	strd	r0, r1, [r3, #24]
 8000e0c:	e9c3 0108 	strd	r0, r1, [r3, #32]
 8000e10:	e9c3 010a 	strd	r0, r1, [r3, #40]	; 0x28
 8000e14:	491c      	ldr	r1, [pc, #112]	; (8000e88 <_GLOBAL__sub_I_kp+0x2f8>)
 8000e16:	6319      	str	r1, [r3, #48]	; 0x30
 8000e18:	491c      	ldr	r1, [pc, #112]	; (8000e8c <_GLOBAL__sub_I_kp+0x2fc>)
 8000e1a:	611f      	str	r7, [r3, #16]
 8000e1c:	6099      	str	r1, [r3, #8]
 8000e1e:	635e      	str	r6, [r3, #52]	; 0x34
 8000e20:	491b      	ldr	r1, [pc, #108]	; (8000e90 <_GLOBAL__sub_I_kp+0x300>)
 8000e22:	4b1c      	ldr	r3, [pc, #112]	; (8000e94 <_GLOBAL__sub_I_kp+0x304>)
 8000e24:	e883 0006 	stmia.w	r3, {r1, r2}
 8000e28:	611d      	str	r5, [r3, #16]
 8000e2a:	b003      	add	sp, #12
 8000e2c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, pc}
 8000e30:	200007d8 	.word	0x200007d8
 8000e34:	20000198 	.word	0x20000198
 8000e38:	08007db0 	.word	0x08007db0
 8000e3c:	2000025c 	.word	0x2000025c
 8000e40:	08000531 	.word	0x08000531
 8000e44:	08000555 	.word	0x08000555
 8000e48:	2000081c 	.word	0x2000081c
 8000e4c:	0800758c 	.word	0x0800758c
 8000e50:	0800752c 	.word	0x0800752c
 8000e54:	08001245 	.word	0x08001245
 8000e58:	20000800 	.word	0x20000800
 8000e5c:	0800755c 	.word	0x0800755c
 8000e60:	20000e7c 	.word	0x20000e7c
 8000e64:	20000784 	.word	0x20000784
 8000e68:	200007a0 	.word	0x200007a0
 8000e6c:	200007bc 	.word	0x200007bc
 8000e70:	20000750 	.word	0x20000750
 8000e74:	0800046d 	.word	0x0800046d
 8000e78:	08007574 	.word	0x08007574
 8000e7c:	08007623 	.word	0x08007623
 8000e80:	20000e40 	.word	0x20000e40
 8000e84:	080075d0 	.word	0x080075d0
 8000e88:	08000481 	.word	0x08000481
 8000e8c:	08007634 	.word	0x08007634
 8000e90:	08007640 	.word	0x08007640
 8000e94:	20000770 	.word	0x20000770
 8000e98:	0800125d 	.word	0x0800125d
 8000e9c:	20000400 	.word	0x20000400
 8000ea0:	200005a4 	.word	0x200005a4
 8000ea4:	2000031c 	.word	0x2000031c
 8000ea8:	200004c0 	.word	0x200004c0
 8000eac:	20000664 	.word	0x20000664
 8000eb0:	0800040d 	.word	0x0800040d
 8000eb4:	080075a0 	.word	0x080075a0
 8000eb8:	080075ec 	.word	0x080075ec
 8000ebc:	080075b8 	.word	0x080075b8
 8000ec0:	08007544 	.word	0x08007544
 8000ec4:	08000431 	.word	0x08000431
 8000ec8:	080075f6 	.word	0x080075f6
 8000ecc:	08000445 	.word	0x08000445
 8000ed0:	08007601 	.word	0x08007601
 8000ed4:	08000459 	.word	0x08000459
 8000ed8:	08007612 	.word	0x08007612

08000edc <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()>:
 8000edc:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, r10, r11, lr}
 8000ee0:	f100 09ec 	add.w	r9, r0, #236	; 0xec
 8000ee4:	4604      	mov	r4, r0
 8000ee6:	4648      	mov	r0, r9
 8000ee8:	f004 fb69 	bl	80055be <mbed::Timer::read_ms()>
 8000eec:	f8d4 35f0 	ldr.w	r3, [r4, #1520]	; 0x5f0
 8000ef0:	f642 22f8 	movw	r2, #11000	; 0x2af8
 8000ef4:	1ac3      	subs	r3, r0, r3
 8000ef6:	4293      	cmp	r3, r2
 8000ef8:	bf84      	itt	hi
 8000efa:	2300      	movhi	r3, #0
 8000efc:	f884 35e8 	strbhi.w	r3, [r4, #1512]	; 0x5e8
 8000f00:	f8d4 35d4 	ldr.w	r3, [r4, #1492]	; 0x5d4
 8000f04:	4605      	mov	r5, r0
 8000f06:	b133      	cbz	r3, 8000f16 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x3a>
 8000f08:	f8d4 35f4 	ldr.w	r3, [r4, #1524]	; 0x5f4
 8000f0c:	4283      	cmp	r3, r0
 8000f0e:	bf3c      	itt	cc
 8000f10:	2300      	movcc	r3, #0
 8000f12:	f8c4 35d4 	strcc.w	r3, [r4, #1492]	; 0x5d4
 8000f16:	2700      	movs	r7, #0
 8000f18:	46ba      	mov	r10, r7
 8000f1a:	f104 0b04 	add.w	r11, r4, #4
 8000f1e:	463e      	mov	r6, r7
 8000f20:	f504 7886 	add.w	r8, r4, #268	; 0x10c
 8000f24:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8000f28:	b9e3      	cbnz	r3, 8000f64 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x88>
 8000f2a:	4658      	mov	r0, r11
 8000f2c:	f000 fe36 	bl	8001b9c <BufferedSerial::readable()>
 8000f30:	bb18      	cbnz	r0, 8000f7a <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x9e>
 8000f32:	f894 35e8 	ldrb.w	r3, [r4, #1512]	; 0x5e8
 8000f36:	b15b      	cbz	r3, 8000f50 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x74>
 8000f38:	f8d4 35ec 	ldr.w	r3, [r4, #1516]	; 0x5ec
 8000f3c:	f640 12c4 	movw	r2, #2500	; 0x9c4
 8000f40:	1aeb      	subs	r3, r5, r3
 8000f42:	4293      	cmp	r3, r2
 8000f44:	d904      	bls.n	8000f50 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x74>
 8000f46:	4620      	mov	r0, r4
 8000f48:	f7ff fd62 	bl	8000a10 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::requestSyncTime()>
 8000f4c:	f8c4 55ec 	str.w	r5, [r4, #1516]	; 0x5ec
 8000f50:	2f00      	cmp	r7, #0
 8000f52:	f040 80d7 	bne.w	8001104 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x228>
 8000f56:	f1ba 0f00 	cmp.w	r10, #0
 8000f5a:	bf14      	ite	ne
 8000f5c:	f06f 0002 	mvnne.w	r0, #2
 8000f60:	2000      	moveq	r0, #0
 8000f62:	e0a7      	b.n	80010b4 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x1d8>
 8000f64:	4648      	mov	r0, r9
 8000f66:	f004 fb2a 	bl	80055be <mbed::Timer::read_ms()>
 8000f6a:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8000f6e:	1b40      	subs	r0, r0, r5
 8000f70:	4298      	cmp	r0, r3
 8000f72:	d9da      	bls.n	8000f2a <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x4e>
 8000f74:	f06f 0001 	mvn.w	r0, #1
 8000f78:	e09c      	b.n	80010b4 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x1d8>
 8000f7a:	4658      	mov	r0, r11
 8000f7c:	f000 fe18 	bl	8001bb0 <BufferedSerial::getc()>
 8000f80:	2800      	cmp	r0, #0
 8000f82:	dbd6      	blt.n	8000f32 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x56>
 8000f84:	f8d4 35e4 	ldr.w	r3, [r4, #1508]	; 0x5e4
 8000f88:	f8d4 25d4 	ldr.w	r2, [r4, #1492]	; 0x5d4
 8000f8c:	4403      	add	r3, r0
 8000f8e:	2a07      	cmp	r2, #7
 8000f90:	f8c4 35e4 	str.w	r3, [r4, #1508]	; 0x5e4
 8000f94:	d110      	bne.n	8000fb8 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0xdc>
 8000f96:	f8d4 35e0 	ldr.w	r3, [r4, #1504]	; 0x5e0
 8000f9a:	1c5a      	adds	r2, r3, #1
 8000f9c:	4423      	add	r3, r4
 8000f9e:	f8c4 25e0 	str.w	r2, [r4, #1504]	; 0x5e0
 8000fa2:	f883 010c 	strb.w	r0, [r3, #268]	; 0x10c
 8000fa6:	f8d4 35d8 	ldr.w	r3, [r4, #1496]	; 0x5d8
 8000faa:	3b01      	subs	r3, #1
 8000fac:	f8c4 35d8 	str.w	r3, [r4, #1496]	; 0x5d8
 8000fb0:	2b00      	cmp	r3, #0
 8000fb2:	d1b7      	bne.n	8000f24 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x48>
 8000fb4:	2308      	movs	r3, #8
 8000fb6:	e01c      	b.n	8000ff2 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x116>
 8000fb8:	b9b2      	cbnz	r2, 8000fe8 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x10c>
 8000fba:	28ff      	cmp	r0, #255	; 0xff
 8000fbc:	d107      	bne.n	8000fce <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0xf2>
 8000fbe:	2301      	movs	r3, #1
 8000fc0:	f8c4 35d4 	str.w	r3, [r4, #1492]	; 0x5d4
 8000fc4:	f105 0314 	add.w	r3, r5, #20
 8000fc8:	f8c4 35f4 	str.w	r3, [r4, #1524]	; 0x5f4
 8000fcc:	e7aa      	b.n	8000f24 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x48>
 8000fce:	4648      	mov	r0, r9
 8000fd0:	9201      	str	r2, [sp, #4]
 8000fd2:	f004 faf4 	bl	80055be <mbed::Timer::read_ms()>
 8000fd6:	f241 3388 	movw	r3, #5000	; 0x1388
 8000fda:	1b40      	subs	r0, r0, r5
 8000fdc:	4298      	cmp	r0, r3
 8000fde:	9a01      	ldr	r2, [sp, #4]
 8000fe0:	d9a0      	bls.n	8000f24 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x48>
 8000fe2:	f884 25e8 	strb.w	r2, [r4, #1512]	; 0x5e8
 8000fe6:	e7c5      	b.n	8000f74 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x98>
 8000fe8:	2a01      	cmp	r2, #1
 8000fea:	d10f      	bne.n	800100c <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x130>
 8000fec:	28fe      	cmp	r0, #254	; 0xfe
 8000fee:	d103      	bne.n	8000ff8 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x11c>
 8000ff0:	2302      	movs	r3, #2
 8000ff2:	f8c4 35d4 	str.w	r3, [r4, #1492]	; 0x5d4
 8000ff6:	e795      	b.n	8000f24 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x48>
 8000ff8:	f894 35e8 	ldrb.w	r3, [r4, #1512]	; 0x5e8
 8000ffc:	f8c4 65d4 	str.w	r6, [r4, #1492]	; 0x5d4
 8001000:	2b00      	cmp	r3, #0
 8001002:	d18f      	bne.n	8000f24 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x48>
 8001004:	4620      	mov	r0, r4
 8001006:	f7ff fd03 	bl	8000a10 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::requestSyncTime()>
 800100a:	e78b      	b.n	8000f24 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x48>
 800100c:	2a02      	cmp	r2, #2
 800100e:	d109      	bne.n	8001024 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x148>
 8001010:	f8c4 05d8 	str.w	r0, [r4, #1496]	; 0x5d8
 8001014:	f8c4 65e0 	str.w	r6, [r4, #1504]	; 0x5e0
 8001018:	2303      	movs	r3, #3
 800101a:	f8c4 35d4 	str.w	r3, [r4, #1492]	; 0x5d4
 800101e:	f8c4 05e4 	str.w	r0, [r4, #1508]	; 0x5e4
 8001022:	e77f      	b.n	8000f24 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x48>
 8001024:	2a03      	cmp	r2, #3
 8001026:	d107      	bne.n	8001038 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x15c>
 8001028:	f8d4 35d8 	ldr.w	r3, [r4, #1496]	; 0x5d8
 800102c:	eb03 2000 	add.w	r0, r3, r0, lsl #8
 8001030:	f8c4 05d8 	str.w	r0, [r4, #1496]	; 0x5d8
 8001034:	2304      	movs	r3, #4
 8001036:	e7dc      	b.n	8000ff2 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x116>
 8001038:	2a04      	cmp	r2, #4
 800103a:	d10b      	bne.n	8001054 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x178>
 800103c:	425a      	negs	r2, r3
 800103e:	b2d2      	uxtb	r2, r2
 8001040:	b2db      	uxtb	r3, r3
 8001042:	bf58      	it	pl
 8001044:	4253      	negpl	r3, r2
 8001046:	2bff      	cmp	r3, #255	; 0xff
 8001048:	d101      	bne.n	800104e <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x172>
 800104a:	2305      	movs	r3, #5
 800104c:	e7d1      	b.n	8000ff2 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x116>
 800104e:	f8c4 65d4 	str.w	r6, [r4, #1492]	; 0x5d4
 8001052:	e767      	b.n	8000f24 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x48>
 8001054:	2a05      	cmp	r2, #5
 8001056:	d103      	bne.n	8001060 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x184>
 8001058:	f8c4 05dc 	str.w	r0, [r4, #1500]	; 0x5dc
 800105c:	2306      	movs	r3, #6
 800105e:	e7dc      	b.n	800101a <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x13e>
 8001060:	2a06      	cmp	r2, #6
 8001062:	d10b      	bne.n	800107c <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x1a0>
 8001064:	f8d4 35dc 	ldr.w	r3, [r4, #1500]	; 0x5dc
 8001068:	eb03 2000 	add.w	r0, r3, r0, lsl #8
 800106c:	2307      	movs	r3, #7
 800106e:	f8c4 35d4 	str.w	r3, [r4, #1492]	; 0x5d4
 8001072:	f8c4 05dc 	str.w	r0, [r4, #1500]	; 0x5dc
 8001076:	f8d4 35d8 	ldr.w	r3, [r4, #1496]	; 0x5d8
 800107a:	e799      	b.n	8000fb0 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0xd4>
 800107c:	2a08      	cmp	r2, #8
 800107e:	f47f af51 	bne.w	8000f24 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x48>
 8001082:	425a      	negs	r2, r3
 8001084:	b2d2      	uxtb	r2, r2
 8001086:	b2db      	uxtb	r3, r3
 8001088:	bf58      	it	pl
 800108a:	4253      	negpl	r3, r2
 800108c:	2bff      	cmp	r3, #255	; 0xff
 800108e:	f8c4 65d4 	str.w	r6, [r4, #1492]	; 0x5d4
 8001092:	f47f af47 	bne.w	8000f24 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x48>
 8001096:	f8d4 35dc 	ldr.w	r3, [r4, #1500]	; 0x5dc
 800109a:	b973      	cbnz	r3, 80010ba <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x1de>
 800109c:	4620      	mov	r0, r4
 800109e:	f7ff fcb7 	bl	8000a10 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::requestSyncTime()>
 80010a2:	4620      	mov	r0, r4
 80010a4:	f7ff fccc 	bl	8000a40 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::negotiateTopics()>
 80010a8:	f8c4 55ec 	str.w	r5, [r4, #1516]	; 0x5ec
 80010ac:	f8c4 55f0 	str.w	r5, [r4, #1520]	; 0x5f0
 80010b0:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80010b4:	b003      	add	sp, #12
 80010b6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, pc}
 80010ba:	2b0a      	cmp	r3, #10
 80010bc:	d105      	bne.n	80010ca <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x1ee>
 80010be:	4641      	mov	r1, r8
 80010c0:	4620      	mov	r0, r4
 80010c2:	f7ff fd1b 	bl	8000afc <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::syncTime(unsigned char*)>
 80010c6:	2701      	movs	r7, #1
 80010c8:	e72c      	b.n	8000f24 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x48>
 80010ca:	2b06      	cmp	r3, #6
 80010cc:	d108      	bne.n	80010e0 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x204>
 80010ce:	4641      	mov	r1, r8
 80010d0:	f204 50fc 	addw	r0, r4, #1532	; 0x5fc
 80010d4:	f7ff fbb2 	bl	800083c <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)>
 80010d8:	2301      	movs	r3, #1
 80010da:	f884 35f8 	strb.w	r3, [r4, #1528]	; 0x5f8
 80010de:	e721      	b.n	8000f24 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x48>
 80010e0:	2b0b      	cmp	r3, #11
 80010e2:	d104      	bne.n	80010ee <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x212>
 80010e4:	f884 65e8 	strb.w	r6, [r4, #1512]	; 0x5e8
 80010e8:	f04f 0a01 	mov.w	r10, #1
 80010ec:	e71a      	b.n	8000f24 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x48>
 80010ee:	33f8      	adds	r3, #248	; 0xf8
 80010f0:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 80010f4:	2800      	cmp	r0, #0
 80010f6:	f43f af15 	beq.w	8000f24 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x48>
 80010fa:	6803      	ldr	r3, [r0, #0]
 80010fc:	4641      	mov	r1, r8
 80010fe:	681b      	ldr	r3, [r3, #0]
 8001100:	4798      	blx	r3
 8001102:	e70f      	b.n	8000f24 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x48>
 8001104:	f06f 0003 	mvn.w	r0, #3
 8001108:	e7d4      	b.n	80010b4 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x1d8>
	...

0800110c <main>:
 800110c:	b500      	push	{lr}
 800110e:	4c17      	ldr	r4, [pc, #92]	; (800116c <main+0x60>)
 8001110:	b089      	sub	sp, #36	; 0x24
 8001112:	f8d4 10e8 	ldr.w	r1, [r4, #232]	; 0xe8
 8001116:	1d20      	adds	r0, r4, #4
 8001118:	f004 fb92 	bl	8005840 <mbed::SerialBase::baud(int)>
 800111c:	2300      	movs	r3, #0
 800111e:	f8c4 35d4 	str.w	r3, [r4, #1492]	; 0x5d4
 8001122:	f8c4 35d8 	str.w	r3, [r4, #1496]	; 0x5d8
 8001126:	f8c4 35e0 	str.w	r3, [r4, #1504]	; 0x5e0
 800112a:	f8c4 35dc 	str.w	r3, [r4, #1500]	; 0x5dc
 800112e:	f7ff fc31 	bl	8000994 <initRosTopics()>
 8001132:	4b0f      	ldr	r3, [pc, #60]	; (8001170 <main+0x64>)
 8001134:	9300      	str	r3, [sp, #0]
 8001136:	4669      	mov	r1, sp
 8001138:	4b0e      	ldr	r3, [pc, #56]	; (8001174 <main+0x68>)
 800113a:	9303      	str	r3, [sp, #12]
 800113c:	a804      	add	r0, sp, #16
 800113e:	f7ff fa19 	bl	8000574 <mbed::Callback<void ()>::Callback(mbed::Callback<void ()> const&)>
 8001142:	480d      	ldr	r0, [pc, #52]	; (8001178 <main+0x6c>)
 8001144:	f7ff f9ec 	bl	8000520 <mbed::Callback<void ()>::~Callback()>
 8001148:	a904      	add	r1, sp, #16
 800114a:	480b      	ldr	r0, [pc, #44]	; (8001178 <main+0x6c>)
 800114c:	f7ff fa12 	bl	8000574 <mbed::Callback<void ()>::Callback(mbed::Callback<void ()> const&)>
 8001150:	490a      	ldr	r1, [pc, #40]	; (800117c <main+0x70>)
 8001152:	480b      	ldr	r0, [pc, #44]	; (8001180 <main+0x74>)
 8001154:	f004 f9d2 	bl	80054fc <mbed::Ticker::setup(unsigned long)>
 8001158:	a804      	add	r0, sp, #16
 800115a:	f7ff f9e1 	bl	8000520 <mbed::Callback<void ()>::~Callback()>
 800115e:	4668      	mov	r0, sp
 8001160:	f7ff f9de 	bl	8000520 <mbed::Callback<void ()>::~Callback()>
 8001164:	4620      	mov	r0, r4
 8001166:	f7ff feb9 	bl	8000edc <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()>
 800116a:	e7fb      	b.n	8001164 <main+0x58>
 800116c:	2000081c 	.word	0x2000081c
 8001170:	080004cd 	.word	0x080004cd
 8001174:	080075e0 	.word	0x080075e0
 8001178:	200007f0 	.word	0x200007f0
 800117c:	000186a0 	.word	0x000186a0
 8001180:	200007d8 	.word	0x200007d8

08001184 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)>:
 8001184:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001186:	2963      	cmp	r1, #99	; 0x63
 8001188:	b085      	sub	sp, #20
 800118a:	4604      	mov	r4, r0
 800118c:	460e      	mov	r6, r1
 800118e:	dd03      	ble.n	8001198 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0x14>
 8001190:	f890 55e8 	ldrb.w	r5, [r0, #1512]	; 0x5e8
 8001194:	2d00      	cmp	r5, #0
 8001196:	d04d      	beq.n	8001234 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0xb0>
 8001198:	6813      	ldr	r3, [r2, #0]
 800119a:	f204 3113 	addw	r1, r4, #787	; 0x313
 800119e:	681b      	ldr	r3, [r3, #0]
 80011a0:	4610      	mov	r0, r2
 80011a2:	4798      	blx	r3
 80011a4:	23ff      	movs	r3, #255	; 0xff
 80011a6:	f884 330c 	strb.w	r3, [r4, #780]	; 0x30c
 80011aa:	23fe      	movs	r3, #254	; 0xfe
 80011ac:	f3c0 2207 	ubfx	r2, r0, #8, #8
 80011b0:	f884 330d 	strb.w	r3, [r4, #781]	; 0x30d
 80011b4:	b2c3      	uxtb	r3, r0
 80011b6:	f884 330e 	strb.w	r3, [r4, #782]	; 0x30e
 80011ba:	4413      	add	r3, r2
 80011bc:	43db      	mvns	r3, r3
 80011be:	f884 6311 	strb.w	r6, [r4, #785]	; 0x311
 80011c2:	f346 2607 	sbfx	r6, r6, #8, #8
 80011c6:	f884 230f 	strb.w	r2, [r4, #783]	; 0x30f
 80011ca:	f884 3310 	strb.w	r3, [r4, #784]	; 0x310
 80011ce:	f884 6312 	strb.w	r6, [r4, #786]	; 0x312
 80011d2:	f204 3111 	addw	r1, r4, #785	; 0x311
 80011d6:	2205      	movs	r2, #5
 80011d8:	2300      	movs	r3, #0
 80011da:	1d86      	adds	r6, r0, #6
 80011dc:	42b2      	cmp	r2, r6
 80011de:	dc04      	bgt.n	80011ea <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0x66>
 80011e0:	f811 5b01 	ldrb.w	r5, [r1], #1
 80011e4:	3201      	adds	r2, #1
 80011e6:	442b      	add	r3, r5
 80011e8:	e7f8      	b.n	80011dc <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0x58>
 80011ea:	f100 0508 	add.w	r5, r0, #8
 80011ee:	4420      	add	r0, r4
 80011f0:	43db      	mvns	r3, r3
 80011f2:	f5b5 7f00 	cmp.w	r5, #512	; 0x200
 80011f6:	f880 3313 	strb.w	r3, [r0, #787]	; 0x313
 80011fa:	dc0c      	bgt.n	8001216 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0x92>
 80011fc:	f504 7743 	add.w	r7, r4, #780	; 0x30c
 8001200:	463e      	mov	r6, r7
 8001202:	3404      	adds	r4, #4
 8001204:	1bf3      	subs	r3, r6, r7
 8001206:	429d      	cmp	r5, r3
 8001208:	dd14      	ble.n	8001234 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0xb0>
 800120a:	f816 1b01 	ldrb.w	r1, [r6], #1
 800120e:	4620      	mov	r0, r4
 8001210:	f000 fe14 	bl	8001e3c <BufferedSerial::putc(int)>
 8001214:	e7f6      	b.n	8001204 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0x80>
 8001216:	4b09      	ldr	r3, [pc, #36]	; (800123c <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0xb8>)
 8001218:	9301      	str	r3, [sp, #4]
 800121a:	2303      	movs	r3, #3
 800121c:	f88d 3008 	strb.w	r3, [sp, #8]
 8001220:	4b07      	ldr	r3, [pc, #28]	; (8001240 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0xbc>)
 8001222:	9303      	str	r3, [sp, #12]
 8001224:	6823      	ldr	r3, [r4, #0]
 8001226:	aa01      	add	r2, sp, #4
 8001228:	681b      	ldr	r3, [r3, #0]
 800122a:	2107      	movs	r1, #7
 800122c:	4620      	mov	r0, r4
 800122e:	4798      	blx	r3
 8001230:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
 8001234:	4628      	mov	r0, r5
 8001236:	b005      	add	sp, #20
 8001238:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800123a:	bf00      	nop
 800123c:	08007514 	.word	0x08007514
 8001240:	0800772d 	.word	0x0800772d

08001244 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::~NodeHandle_()>:
 8001244:	b510      	push	{r4, lr}
 8001246:	4b04      	ldr	r3, [pc, #16]	; (8001258 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::~NodeHandle_()+0x14>)
 8001248:	4604      	mov	r4, r0
 800124a:	f840 3b04 	str.w	r3, [r0], #4
 800124e:	f000 fd39 	bl	8001cc4 <BufferedSerial::~BufferedSerial()>
 8001252:	4620      	mov	r0, r4
 8001254:	bd10      	pop	{r4, pc}
 8001256:	bf00      	nop
 8001258:	0800758c 	.word	0x0800758c

0800125c <Encoder::~Encoder()>:
 800125c:	b510      	push	{r4, lr}
 800125e:	4604      	mov	r4, r0
 8001260:	3050      	adds	r0, #80	; 0x50
 8001262:	f004 f9f7 	bl	8005654 <mbed::InterruptIn::~InterruptIn()>
 8001266:	4620      	mov	r0, r4
 8001268:	f004 f9f4 	bl	8005654 <mbed::InterruptIn::~InterruptIn()>
 800126c:	4620      	mov	r0, r4
 800126e:	bd10      	pop	{r4, pc}

08001270 <void mbed::Callback<void ()>::function_move<mbed::Callback<void ()>::method_context<DcServo, void (DcServo::*)()> >(void*, void const*)>:
 8001270:	4603      	mov	r3, r0
 8001272:	b110      	cbz	r0, 800127a <void mbed::Callback<void ()>::function_move<mbed::Callback<void ()>::method_context<DcServo, void (DcServo::*)()> >(void*, void const*)+0xa>
 8001274:	c907      	ldmia	r1, {r0, r1, r2}
 8001276:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800127a:	4770      	bx	lr

0800127c <void mbed::Callback<void ()>::function_dtor<mbed::Callback<void ()>::method_context<DcServo, void (DcServo::*)()> >(void*)>:
 800127c:	4770      	bx	lr

0800127e <void mbed::Callback<void ()>::function_call<mbed::Callback<void ()>::method_context<DcServo, void (DcServo::*)()> >(void const*)>:
 800127e:	6842      	ldr	r2, [r0, #4]
 8001280:	6881      	ldr	r1, [r0, #8]
 8001282:	6803      	ldr	r3, [r0, #0]
 8001284:	f012 0f01 	tst.w	r2, #1
 8001288:	ea4f 0262 	mov.w	r2, r2, asr #1
 800128c:	bf1c      	itt	ne
 800128e:	5888      	ldrne	r0, [r1, r2]
 8001290:	58c3      	ldrne	r3, [r0, r3]
 8001292:	1888      	adds	r0, r1, r2
 8001294:	4718      	bx	r3

08001296 <DcServo::getPWM()>:
 8001296:	f8d0 00e0 	ldr.w	r0, [r0, #224]	; 0xe0
 800129a:	4770      	bx	lr

0800129c <DcServo::getAngle()>:
 800129c:	b508      	push	{r3, lr}
 800129e:	6d00      	ldr	r0, [r0, #80]	; 0x50
 80012a0:	f000 f9c2 	bl	8001628 <Encoder::getCurAngle()>
 80012a4:	f080 4000 	eor.w	r0, r0, #2147483648	; 0x80000000
 80012a8:	bd08      	pop	{r3, pc}

080012aa <DcServo::directRevolute(float)>:
 80012aa:	b538      	push	{r3, r4, r5, lr}
 80012ac:	6883      	ldr	r3, [r0, #8]
 80012ae:	6802      	ldr	r2, [r0, #0]
 80012b0:	601a      	str	r2, [r3, #0]
 80012b2:	69c3      	ldr	r3, [r0, #28]
 80012b4:	6a82      	ldr	r2, [r0, #40]	; 0x28
 80012b6:	041b      	lsls	r3, r3, #16
 80012b8:	4604      	mov	r4, r0
 80012ba:	460d      	mov	r5, r1
 80012bc:	6013      	str	r3, [r2, #0]
 80012be:	f000 ff97 	bl	80021f0 <core_util_critical_section_enter>
 80012c2:	4629      	mov	r1, r5
 80012c4:	f104 0038 	add.w	r0, r4, #56	; 0x38
 80012c8:	f002 fd7e 	bl	8003dc8 <pwmout_write>
 80012cc:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80012d0:	f000 bfa4 	b.w	800221c <core_util_critical_section_exit>

080012d4 <DcServo::inverseRevolute(float)>:
 80012d4:	b538      	push	{r3, r4, r5, lr}
 80012d6:	6803      	ldr	r3, [r0, #0]
 80012d8:	68c2      	ldr	r2, [r0, #12]
 80012da:	041b      	lsls	r3, r3, #16
 80012dc:	6013      	str	r3, [r2, #0]
 80012de:	6a43      	ldr	r3, [r0, #36]	; 0x24
 80012e0:	69c2      	ldr	r2, [r0, #28]
 80012e2:	601a      	str	r2, [r3, #0]
 80012e4:	4604      	mov	r4, r0
 80012e6:	460d      	mov	r5, r1
 80012e8:	f000 ff82 	bl	80021f0 <core_util_critical_section_enter>
 80012ec:	4629      	mov	r1, r5
 80012ee:	f104 0038 	add.w	r0, r4, #56	; 0x38
 80012f2:	f002 fd69 	bl	8003dc8 <pwmout_write>
 80012f6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80012fa:	f000 bf8f 	b.w	800221c <core_util_critical_section_exit>

080012fe <DcServo::revolute(float)>:
 80012fe:	ee07 1a90 	vmov	s15, r1
 8001302:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8001306:	eef4 7ac7 	vcmpe.f32	s15, s14
 800130a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800130e:	f8c0 10e0 	str.w	r1, [r0, #224]	; 0xe0
 8001312:	db03      	blt.n	800131c <DcServo::revolute(float)+0x1e>
 8001314:	ee17 1a10 	vmov	r1, s14
 8001318:	f7ff bfc7 	b.w	80012aa <DcServo::directRevolute(float)>
 800131c:	eeff 6a00 	vmov.f32	s13, #240	; 0xbf800000 -1.0
 8001320:	eef4 7ae6 	vcmpe.f32	s15, s13
 8001324:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001328:	d803      	bhi.n	8001332 <DcServo::revolute(float)+0x34>
 800132a:	ee17 1a10 	vmov	r1, s14
 800132e:	f7ff bfd1 	b.w	80012d4 <DcServo::inverseRevolute(float)>
 8001332:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8001336:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800133a:	dced      	bgt.n	8001318 <DcServo::revolute(float)+0x1a>
 800133c:	eef1 7a67 	vneg.f32	s15, s15
 8001340:	ee17 1a90 	vmov	r1, s15
 8001344:	e7f3      	b.n	800132e <DcServo::revolute(float)+0x30>

08001346 <DcServo::revoluteMotor()>:
 8001346:	b538      	push	{r3, r4, r5, lr}
 8001348:	ed2d 8b02 	vpush	{d8}
 800134c:	f100 0554 	add.w	r5, r0, #84	; 0x54
 8001350:	4604      	mov	r4, r0
 8001352:	ed90 8a37 	vldr	s16, [r0, #220]	; 0xdc
 8001356:	f7ff ffa1 	bl	800129c <DcServo::getAngle()>
 800135a:	ee07 0a90 	vmov	s15, r0
 800135e:	ee78 7a67 	vsub.f32	s15, s16, s15
 8001362:	4628      	mov	r0, r5
 8001364:	ee17 1a90 	vmov	r1, s15
 8001368:	f000 fb52 	bl	8001a10 <PID::setProcessValue(float)>
 800136c:	4628      	mov	r0, r5
 800136e:	f000 fb55 	bl	8001a1c <PID::compute()>
 8001372:	ecbd 8b02 	vpop	{d8}
 8001376:	4601      	mov	r1, r0
 8001378:	4620      	mov	r0, r4
 800137a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800137e:	f7ff bfbe 	b.w	80012fe <DcServo::revolute(float)>

08001382 <DcServo::stop()>:
 8001382:	6803      	ldr	r3, [r0, #0]
 8001384:	68c2      	ldr	r2, [r0, #12]
 8001386:	041b      	lsls	r3, r3, #16
 8001388:	b510      	push	{r4, lr}
 800138a:	6013      	str	r3, [r2, #0]
 800138c:	69c3      	ldr	r3, [r0, #28]
 800138e:	6a82      	ldr	r2, [r0, #40]	; 0x28
 8001390:	041b      	lsls	r3, r3, #16
 8001392:	6013      	str	r3, [r2, #0]
 8001394:	4604      	mov	r4, r0
 8001396:	f000 ff2b 	bl	80021f0 <core_util_critical_section_enter>
 800139a:	2100      	movs	r1, #0
 800139c:	f104 0038 	add.w	r0, r4, #56	; 0x38
 80013a0:	f002 fd12 	bl	8003dc8 <pwmout_write>
 80013a4:	f000 ff3a 	bl	800221c <core_util_critical_section_exit>
 80013a8:	f894 30d4 	ldrb.w	r3, [r4, #212]	; 0xd4
 80013ac:	b133      	cbz	r3, 80013bc <DcServo::stop()+0x3a>
 80013ae:	f104 00ac 	add.w	r0, r4, #172	; 0xac
 80013b2:	f004 f8b7 	bl	8005524 <mbed::Ticker::detach()>
 80013b6:	2300      	movs	r3, #0
 80013b8:	f884 30d4 	strb.w	r3, [r4, #212]	; 0xd4
 80013bc:	f04f 507c 	mov.w	r0, #1056964608	; 0x3f000000
 80013c0:	f004 fb6e 	bl	8005aa0 <wait>
 80013c4:	2300      	movs	r3, #0
 80013c6:	f8c4 30e0 	str.w	r3, [r4, #224]	; 0xe0
 80013ca:	f8c4 30dc 	str.w	r3, [r4, #220]	; 0xdc
 80013ce:	6d20      	ldr	r0, [r4, #80]	; 0x50
 80013d0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80013d4:	f000 b944 	b.w	8001660 <Encoder::reset()>

080013d8 <DcServo::setPid(float, float, float)>:
 80013d8:	3054      	adds	r0, #84	; 0x54
 80013da:	f000 ba15 	b.w	8001808 <PID::setTunings(float, float, float)>
	...

080013e0 <DcServo::initPid()>:
 80013e0:	b510      	push	{r4, lr}
 80013e2:	f100 0454 	add.w	r4, r0, #84	; 0x54
 80013e6:	4620      	mov	r0, r4
 80013e8:	4a09      	ldr	r2, [pc, #36]	; (8001410 <DcServo::initPid()+0x30>)
 80013ea:	490a      	ldr	r1, [pc, #40]	; (8001414 <DcServo::initPid()+0x34>)
 80013ec:	f000 f9a6 	bl	800173c <PID::setInputLimits(float, float)>
 80013f0:	4620      	mov	r0, r4
 80013f2:	f04f 527e 	mov.w	r2, #1065353216	; 0x3f800000
 80013f6:	4908      	ldr	r1, [pc, #32]	; (8001418 <DcServo::initPid()+0x38>)
 80013f8:	f000 f9d4 	bl	80017a4 <PID::setOutputLimits(float, float)>
 80013fc:	4620      	mov	r0, r4
 80013fe:	2100      	movs	r1, #0
 8001400:	f000 fb08 	bl	8001a14 <PID::setBias(float)>
 8001404:	4620      	mov	r0, r4
 8001406:	2101      	movs	r1, #1
 8001408:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800140c:	f000 baf4 	b.w	80019f8 <PID::setMode(int)>
 8001410:	43b40000 	.word	0x43b40000
 8001414:	c3b40000 	.word	0xc3b40000
 8001418:	bf800000 	.word	0xbf800000

0800141c <DcServo::attachPidTiker()>:
 800141c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800141e:	b089      	sub	sp, #36	; 0x24
 8001420:	4b15      	ldr	r3, [pc, #84]	; (8001478 <DcServo::attachPidTiker()+0x5c>)
 8001422:	9300      	str	r3, [sp, #0]
 8001424:	4604      	mov	r4, r0
 8001426:	2300      	movs	r3, #0
 8001428:	ad04      	add	r5, sp, #16
 800142a:	9301      	str	r3, [sp, #4]
 800142c:	9002      	str	r0, [sp, #8]
 800142e:	4b13      	ldr	r3, [pc, #76]	; (800147c <DcServo::attachPidTiker()+0x60>)
 8001430:	9303      	str	r3, [sp, #12]
 8001432:	f100 07ac 	add.w	r7, r0, #172	; 0xac
 8001436:	4669      	mov	r1, sp
 8001438:	4628      	mov	r0, r5
 800143a:	f104 06c4 	add.w	r6, r4, #196	; 0xc4
 800143e:	f7ff f899 	bl	8000574 <mbed::Callback<void ()>::Callback(mbed::Callback<void ()> const&)>
 8001442:	42ae      	cmp	r6, r5
 8001444:	d007      	beq.n	8001456 <DcServo::attachPidTiker()+0x3a>
 8001446:	4630      	mov	r0, r6
 8001448:	f7ff f86a 	bl	8000520 <mbed::Callback<void ()>::~Callback()>
 800144c:	b11e      	cbz	r6, 8001456 <DcServo::attachPidTiker()+0x3a>
 800144e:	4629      	mov	r1, r5
 8001450:	4630      	mov	r0, r6
 8001452:	f7ff f88f 	bl	8000574 <mbed::Callback<void ()>::Callback(mbed::Callback<void ()> const&)>
 8001456:	f242 7110 	movw	r1, #10000	; 0x2710
 800145a:	4638      	mov	r0, r7
 800145c:	f004 f84e 	bl	80054fc <mbed::Ticker::setup(unsigned long)>
 8001460:	4628      	mov	r0, r5
 8001462:	f7ff f85d 	bl	8000520 <mbed::Callback<void ()>::~Callback()>
 8001466:	4668      	mov	r0, sp
 8001468:	f7ff f85a 	bl	8000520 <mbed::Callback<void ()>::~Callback()>
 800146c:	2301      	movs	r3, #1
 800146e:	f884 30d4 	strb.w	r3, [r4, #212]	; 0xd4
 8001472:	b009      	add	sp, #36	; 0x24
 8001474:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001476:	bf00      	nop
 8001478:	08001347 	.word	0x08001347
 800147c:	080077f8 	.word	0x080077f8

08001480 <DcServo::DcServo(PinName, PinName, PinName, Encoder*)>:
 8001480:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8001484:	261c      	movs	r6, #28
 8001486:	4604      	mov	r4, r0
 8001488:	460d      	mov	r5, r1
 800148a:	4690      	mov	r8, r2
 800148c:	2100      	movs	r1, #0
 800148e:	4632      	mov	r2, r6
 8001490:	461f      	mov	r7, r3
 8001492:	f005 fb82 	bl	8006b9a <memset>
 8001496:	4629      	mov	r1, r5
 8001498:	4620      	mov	r0, r4
 800149a:	19a5      	adds	r5, r4, r6
 800149c:	f000 fda6 	bl	8001fec <gpio_init_out>
 80014a0:	4632      	mov	r2, r6
 80014a2:	2100      	movs	r1, #0
 80014a4:	4628      	mov	r0, r5
 80014a6:	f005 fb78 	bl	8006b9a <memset>
 80014aa:	4641      	mov	r1, r8
 80014ac:	4628      	mov	r0, r5
 80014ae:	f000 fd9d 	bl	8001fec <gpio_init_out>
 80014b2:	f000 fe9d 	bl	80021f0 <core_util_critical_section_enter>
 80014b6:	4639      	mov	r1, r7
 80014b8:	f104 0038 	add.w	r0, r4, #56	; 0x38
 80014bc:	f002 fd9e 	bl	8003ffc <pwmout_init>
 80014c0:	f000 feac 	bl	800221c <core_util_critical_section_exit>
 80014c4:	9b08      	ldr	r3, [sp, #32]
 80014c6:	6523      	str	r3, [r4, #80]	; 0x50
 80014c8:	2500      	movs	r5, #0
 80014ca:	4b12      	ldr	r3, [pc, #72]	; (8001514 <DcServo::DcServo(PinName, PinName, PinName, Encoder*)+0x94>)
 80014cc:	9300      	str	r3, [sp, #0]
 80014ce:	462a      	mov	r2, r5
 80014d0:	f04f 517e 	mov.w	r1, #1065353216	; 0x3f800000
 80014d4:	462b      	mov	r3, r5
 80014d6:	f104 0054 	add.w	r0, r4, #84	; 0x54
 80014da:	f000 f9ff 	bl	80018dc <PID::PID(float, float, float, float)>
 80014de:	f104 00ac 	add.w	r0, r4, #172	; 0xac
 80014e2:	f004 fa63 	bl	80059ac <mbed::TimerEvent::TimerEvent()>
 80014e6:	4b0c      	ldr	r3, [pc, #48]	; (8001518 <DcServo::DcServo(PinName, PinName, PinName, Encoder*)+0x98>)
 80014e8:	f8c4 30ac 	str.w	r3, [r4, #172]	; 0xac
 80014ec:	2300      	movs	r3, #0
 80014ee:	f8c4 30d0 	str.w	r3, [r4, #208]	; 0xd0
 80014f2:	f884 30d4 	strb.w	r3, [r4, #212]	; 0xd4
 80014f6:	4620      	mov	r0, r4
 80014f8:	f8c4 50dc 	str.w	r5, [r4, #220]	; 0xdc
 80014fc:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 8001500:	f7ff ff6e 	bl	80013e0 <DcServo::initPid()>
 8001504:	4620      	mov	r0, r4
 8001506:	f7ff ff89 	bl	800141c <DcServo::attachPidTiker()>
 800150a:	4620      	mov	r0, r4
 800150c:	b002      	add	sp, #8
 800150e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001512:	bf00      	nop
 8001514:	3c23d70a 	.word	0x3c23d70a
 8001518:	08007db0 	.word	0x08007db0

0800151c <DcServo::setAngle(float)>:
 800151c:	b538      	push	{r3, r4, r5, lr}
 800151e:	f890 30d4 	ldrb.w	r3, [r0, #212]	; 0xd4
 8001522:	4604      	mov	r4, r0
 8001524:	460d      	mov	r5, r1
 8001526:	b90b      	cbnz	r3, 800152c <DcServo::setAngle(float)+0x10>
 8001528:	f7ff ff78 	bl	800141c <DcServo::attachPidTiker()>
 800152c:	f8c4 50dc 	str.w	r5, [r4, #220]	; 0xdc
 8001530:	bd38      	pop	{r3, r4, r5, pc}

08001532 <void mbed::Callback<void ()>::function_move<mbed::Callback<void ()>::method_context<Encoder, void (Encoder::*)()> >(void*, void const*)>:
 8001532:	4603      	mov	r3, r0
 8001534:	b110      	cbz	r0, 800153c <void mbed::Callback<void ()>::function_move<mbed::Callback<void ()>::method_context<Encoder, void (Encoder::*)()> >(void*, void const*)+0xa>
 8001536:	c907      	ldmia	r1, {r0, r1, r2}
 8001538:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800153c:	4770      	bx	lr

0800153e <void mbed::Callback<void ()>::function_dtor<mbed::Callback<void ()>::method_context<Encoder, void (Encoder::*)()> >(void*)>:
 800153e:	4770      	bx	lr

08001540 <void mbed::Callback<void ()>::function_call<mbed::Callback<void ()>::method_context<Encoder, void (Encoder::*)()> >(void const*)>:
 8001540:	6842      	ldr	r2, [r0, #4]
 8001542:	6881      	ldr	r1, [r0, #8]
 8001544:	6803      	ldr	r3, [r0, #0]
 8001546:	f012 0f01 	tst.w	r2, #1
 800154a:	ea4f 0262 	mov.w	r2, r2, asr #1
 800154e:	bf1c      	itt	ne
 8001550:	5888      	ldrne	r0, [r1, r2]
 8001552:	58c3      	ldrne	r3, [r0, r3]
 8001554:	1888      	adds	r0, r1, r2
 8001556:	4718      	bx	r3

08001558 <Encoder::incrementEncTicks()>:
 8001558:	b538      	push	{r3, r4, r5, lr}
 800155a:	4604      	mov	r4, r0
 800155c:	f004 f872 	bl	8005644 <mbed::InterruptIn::read()>
 8001560:	4605      	mov	r5, r0
 8001562:	f104 0050 	add.w	r0, r4, #80	; 0x50
 8001566:	f004 f86d 	bl	8005644 <mbed::InterruptIn::read()>
 800156a:	f894 30a0 	ldrb.w	r3, [r4, #160]	; 0xa0
 800156e:	ea40 0045 	orr.w	r0, r0, r5, lsl #1
 8001572:	f8c4 00b4 	str.w	r0, [r4, #180]	; 0xb4
 8001576:	b9b3      	cbnz	r3, 80015a6 <Encoder::incrementEncTicks()+0x4e>
 8001578:	f8d4 30b8 	ldr.w	r3, [r4, #184]	; 0xb8
 800157c:	2b03      	cmp	r3, #3
 800157e:	d102      	bne.n	8001586 <Encoder::incrementEncTicks()+0x2e>
 8001580:	f8d4 30b4 	ldr.w	r3, [r4, #180]	; 0xb4
 8001584:	b133      	cbz	r3, 8001594 <Encoder::incrementEncTicks()+0x3c>
 8001586:	f8d4 30b8 	ldr.w	r3, [r4, #184]	; 0xb8
 800158a:	bb4b      	cbnz	r3, 80015e0 <Encoder::incrementEncTicks()+0x88>
 800158c:	f8d4 30b4 	ldr.w	r3, [r4, #180]	; 0xb4
 8001590:	2b03      	cmp	r3, #3
 8001592:	d125      	bne.n	80015e0 <Encoder::incrementEncTicks()+0x88>
 8001594:	f8d4 30b0 	ldr.w	r3, [r4, #176]	; 0xb0
 8001598:	3301      	adds	r3, #1
 800159a:	f8c4 30b0 	str.w	r3, [r4, #176]	; 0xb0
 800159e:	2300      	movs	r3, #0
 80015a0:	f884 30bd 	strb.w	r3, [r4, #189]	; 0xbd
 80015a4:	e00c      	b.n	80015c0 <Encoder::incrementEncTicks()+0x68>
 80015a6:	f8d4 30b4 	ldr.w	r3, [r4, #180]	; 0xb4
 80015aa:	f8d4 20b8 	ldr.w	r2, [r4, #184]	; 0xb8
 80015ae:	4053      	eors	r3, r2
 80015b0:	2b03      	cmp	r3, #3
 80015b2:	d005      	beq.n	80015c0 <Encoder::incrementEncTicks()+0x68>
 80015b4:	f8d4 20b4 	ldr.w	r2, [r4, #180]	; 0xb4
 80015b8:	f8d4 30b8 	ldr.w	r3, [r4, #184]	; 0xb8
 80015bc:	429a      	cmp	r2, r3
 80015be:	d126      	bne.n	800160e <Encoder::incrementEncTicks()+0xb6>
 80015c0:	f8d4 30b4 	ldr.w	r3, [r4, #180]	; 0xb4
 80015c4:	f8c4 30b8 	str.w	r3, [r4, #184]	; 0xb8
 80015c8:	bd38      	pop	{r3, r4, r5, pc}
 80015ca:	2301      	movs	r3, #1
 80015cc:	f884 30bd 	strb.w	r3, [r4, #189]	; 0xbd
 80015d0:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 80015d4:	f8d4 20b0 	ldr.w	r2, [r4, #176]	; 0xb0
 80015d8:	1ad3      	subs	r3, r2, r3
 80015da:	f8c4 30b0 	str.w	r3, [r4, #176]	; 0xb0
 80015de:	e7ef      	b.n	80015c0 <Encoder::incrementEncTicks()+0x68>
 80015e0:	f8d4 30b8 	ldr.w	r3, [r4, #184]	; 0xb8
 80015e4:	2b02      	cmp	r3, #2
 80015e6:	d103      	bne.n	80015f0 <Encoder::incrementEncTicks()+0x98>
 80015e8:	f8d4 30b4 	ldr.w	r3, [r4, #180]	; 0xb4
 80015ec:	2b01      	cmp	r3, #1
 80015ee:	d007      	beq.n	8001600 <Encoder::incrementEncTicks()+0xa8>
 80015f0:	f8d4 30b8 	ldr.w	r3, [r4, #184]	; 0xb8
 80015f4:	2b01      	cmp	r3, #1
 80015f6:	d1e3      	bne.n	80015c0 <Encoder::incrementEncTicks()+0x68>
 80015f8:	f8d4 30b4 	ldr.w	r3, [r4, #180]	; 0xb4
 80015fc:	2b02      	cmp	r3, #2
 80015fe:	d1df      	bne.n	80015c0 <Encoder::incrementEncTicks()+0x68>
 8001600:	f8d4 30b0 	ldr.w	r3, [r4, #176]	; 0xb0
 8001604:	3b01      	subs	r3, #1
 8001606:	f8c4 30b0 	str.w	r3, [r4, #176]	; 0xb0
 800160a:	2301      	movs	r3, #1
 800160c:	e7c8      	b.n	80015a0 <Encoder::incrementEncTicks()+0x48>
 800160e:	f8d4 30b8 	ldr.w	r3, [r4, #184]	; 0xb8
 8001612:	f8d4 20b4 	ldr.w	r2, [r4, #180]	; 0xb4
 8001616:	ea83 0362 	eor.w	r3, r3, r2, asr #1
 800161a:	f013 0301 	ands.w	r3, r3, #1
 800161e:	d0d4      	beq.n	80015ca <Encoder::incrementEncTicks()+0x72>
 8001620:	2200      	movs	r2, #0
 8001622:	f884 20bd 	strb.w	r2, [r4, #189]	; 0xbd
 8001626:	e7d5      	b.n	80015d4 <Encoder::incrementEncTicks()+0x7c>

08001628 <Encoder::getCurAngle()>:
 8001628:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 800162c:	f8d0 20a8 	ldr.w	r2, [r0, #168]	; 0xa8
 8001630:	ed90 7a2c 	vldr	s14, [r0, #176]	; 0xb0
 8001634:	eddf 7a09 	vldr	s15, [pc, #36]	; 800165c <Encoder::getCurAngle()+0x34>
 8001638:	435a      	muls	r2, r3
 800163a:	f8d0 30ac 	ldr.w	r3, [r0, #172]	; 0xac
 800163e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8001642:	4353      	muls	r3, r2
 8001644:	ee27 7a27 	vmul.f32	s14, s14, s15
 8001648:	ee07 3a90 	vmov	s15, r3
 800164c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8001650:	eec7 6a27 	vdiv.f32	s13, s14, s15
 8001654:	ee16 0a90 	vmov	r0, s13
 8001658:	4770      	bx	lr
 800165a:	bf00      	nop
 800165c:	43b40000 	.word	0x43b40000

08001660 <Encoder::reset()>:
 8001660:	2300      	movs	r3, #0
 8001662:	f8c0 30b0 	str.w	r3, [r0, #176]	; 0xb0
 8001666:	4770      	bx	lr

08001668 <Encoder::Encoder(PinName, PinName, int, int, bool)>:
 8001668:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 800166c:	4604      	mov	r4, r0
 800166e:	4617      	mov	r7, r2
 8001670:	f104 0550 	add.w	r5, r4, #80	; 0x50
 8001674:	461e      	mov	r6, r3
 8001676:	f004 f81d 	bl	80056b4 <mbed::InterruptIn::InterruptIn(PinName)>
 800167a:	4639      	mov	r1, r7
 800167c:	4628      	mov	r0, r5
 800167e:	f004 f819 	bl	80056b4 <mbed::InterruptIn::InterruptIn(PinName)>
 8001682:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8001684:	f8c4 30a4 	str.w	r3, [r4, #164]	; 0xa4
 8001688:	f89d 302c 	ldrb.w	r3, [sp, #44]	; 0x2c
 800168c:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
 8001690:	f8c4 60a8 	str.w	r6, [r4, #168]	; 0xa8
 8001694:	4620      	mov	r0, r4
 8001696:	f003 ffd5 	bl	8005644 <mbed::InterruptIn::read()>
 800169a:	4606      	mov	r6, r0
 800169c:	4628      	mov	r0, r5
 800169e:	f003 ffd1 	bl	8005644 <mbed::InterruptIn::read()>
 80016a2:	ea40 0046 	orr.w	r0, r0, r6, lsl #1
 80016a6:	f8c4 00b4 	str.w	r0, [r4, #180]	; 0xb4
 80016aa:	f8d4 30b4 	ldr.w	r3, [r4, #180]	; 0xb4
 80016ae:	f8c4 30b8 	str.w	r3, [r4, #184]	; 0xb8
 80016b2:	4669      	mov	r1, sp
 80016b4:	f8df 8080 	ldr.w	r8, [pc, #128]	; 8001738 <Encoder::Encoder(PinName, PinName, int, int, bool)+0xd0>
 80016b8:	4e1e      	ldr	r6, [pc, #120]	; (8001734 <Encoder::Encoder(PinName, PinName, int, int, bool)+0xcc>)
 80016ba:	f8cd 8000 	str.w	r8, [sp]
 80016be:	2700      	movs	r7, #0
 80016c0:	4620      	mov	r0, r4
 80016c2:	9701      	str	r7, [sp, #4]
 80016c4:	9402      	str	r4, [sp, #8]
 80016c6:	9603      	str	r6, [sp, #12]
 80016c8:	f004 f83e 	bl	8005748 <mbed::InterruptIn::rise(mbed::Callback<void ()>)>
 80016cc:	4668      	mov	r0, sp
 80016ce:	f7fe ff27 	bl	8000520 <mbed::Callback<void ()>::~Callback()>
 80016d2:	4669      	mov	r1, sp
 80016d4:	4620      	mov	r0, r4
 80016d6:	f8cd 8000 	str.w	r8, [sp]
 80016da:	9701      	str	r7, [sp, #4]
 80016dc:	9402      	str	r4, [sp, #8]
 80016de:	9603      	str	r6, [sp, #12]
 80016e0:	f004 f858 	bl	8005794 <mbed::InterruptIn::fall(mbed::Callback<void ()>)>
 80016e4:	4668      	mov	r0, sp
 80016e6:	f7fe ff1b 	bl	8000520 <mbed::Callback<void ()>::~Callback()>
 80016ea:	f894 30a0 	ldrb.w	r3, [r4, #160]	; 0xa0
 80016ee:	b1f3      	cbz	r3, 800172e <Encoder::Encoder(PinName, PinName, int, int, bool)+0xc6>
 80016f0:	4669      	mov	r1, sp
 80016f2:	4628      	mov	r0, r5
 80016f4:	f8cd 8000 	str.w	r8, [sp]
 80016f8:	9701      	str	r7, [sp, #4]
 80016fa:	9402      	str	r4, [sp, #8]
 80016fc:	9603      	str	r6, [sp, #12]
 80016fe:	f004 f823 	bl	8005748 <mbed::InterruptIn::rise(mbed::Callback<void ()>)>
 8001702:	4668      	mov	r0, sp
 8001704:	f7fe ff0c 	bl	8000520 <mbed::Callback<void ()>::~Callback()>
 8001708:	4669      	mov	r1, sp
 800170a:	4628      	mov	r0, r5
 800170c:	f8cd 8000 	str.w	r8, [sp]
 8001710:	9701      	str	r7, [sp, #4]
 8001712:	9402      	str	r4, [sp, #8]
 8001714:	9603      	str	r6, [sp, #12]
 8001716:	f004 f83d 	bl	8005794 <mbed::InterruptIn::fall(mbed::Callback<void ()>)>
 800171a:	4668      	mov	r0, sp
 800171c:	f7fe ff00 	bl	8000520 <mbed::Callback<void ()>::~Callback()>
 8001720:	2304      	movs	r3, #4
 8001722:	4620      	mov	r0, r4
 8001724:	f8c4 30ac 	str.w	r3, [r4, #172]	; 0xac
 8001728:	b004      	add	sp, #16
 800172a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800172e:	2302      	movs	r3, #2
 8001730:	e7f7      	b.n	8001722 <Encoder::Encoder(PinName, PinName, int, int, bool)+0xba>
 8001732:	bf00      	nop
 8001734:	08007804 	.word	0x08007804
 8001738:	08001559 	.word	0x08001559

0800173c <PID::setInputLimits(float, float)>:
 800173c:	ee06 1a90 	vmov	s13, r1
 8001740:	ee07 2a10 	vmov	s14, r2
 8001744:	eef4 6ac7 	vcmpe.f32	s13, s14
 8001748:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800174c:	da20      	bge.n	8001790 <PID::setInputLimits(float, float)+0x54>
 800174e:	edd0 7a0e 	vldr	s15, [r0, #56]	; 0x38
 8001752:	ed90 6a12 	vldr	s12, [r0, #72]	; 0x48
 8001756:	ee77 5a66 	vsub.f32	s11, s14, s13
 800175a:	ee85 5aa7 	vdiv.f32	s10, s11, s15
 800175e:	edd0 7a09 	vldr	s15, [r0, #36]	; 0x24
 8001762:	ee26 6a05 	vmul.f32	s12, s12, s10
 8001766:	ee65 7a27 	vmul.f32	s15, s10, s15
 800176a:	ed80 6a12 	vstr	s12, [r0, #72]	; 0x48
 800176e:	eeb7 6a00 	vmov.f32	s12, #112	; 0x3f800000  1.0
 8001772:	eef4 7ac6 	vcmpe.f32	s15, s12
 8001776:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800177a:	edc0 7a09 	vstr	s15, [r0, #36]	; 0x24
 800177e:	dd08      	ble.n	8001792 <PID::setInputLimits(float, float)+0x56>
 8001780:	ed80 6a09 	vstr	s12, [r0, #36]	; 0x24
 8001784:	edc0 6a0c 	vstr	s13, [r0, #48]	; 0x30
 8001788:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 800178c:	edc0 5a0e 	vstr	s11, [r0, #56]	; 0x38
 8001790:	4770      	bx	lr
 8001792:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8001796:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800179a:	bf44      	itt	mi
 800179c:	2300      	movmi	r3, #0
 800179e:	6243      	strmi	r3, [r0, #36]	; 0x24
 80017a0:	e7f0      	b.n	8001784 <PID::setInputLimits(float, float)+0x48>
	...

080017a4 <PID::setOutputLimits(float, float)>:
 80017a4:	ee06 1a90 	vmov	s13, r1
 80017a8:	ee07 2a10 	vmov	s14, r2
 80017ac:	eef4 6ac7 	vcmpe.f32	s13, s14
 80017b0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80017b4:	da18      	bge.n	80017e8 <PID::setOutputLimits(float, float)+0x44>
 80017b6:	ed90 6a11 	vldr	s12, [r0, #68]	; 0x44
 80017ba:	ee77 5a66 	vsub.f32	s11, s14, s13
 80017be:	eec5 7a86 	vdiv.f32	s15, s11, s12
 80017c2:	ed90 6a0b 	vldr	s12, [r0, #44]	; 0x2c
 80017c6:	ee67 7a86 	vmul.f32	s15, s15, s12
 80017ca:	eeb7 6a00 	vmov.f32	s12, #112	; 0x3f800000  1.0
 80017ce:	eef4 7ac6 	vcmpe.f32	s15, s12
 80017d2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80017d6:	dd08      	ble.n	80017ea <PID::setOutputLimits(float, float)+0x46>
 80017d8:	ed80 6a0b 	vstr	s12, [r0, #44]	; 0x2c
 80017dc:	edc0 6a0f 	vstr	s13, [r0, #60]	; 0x3c
 80017e0:	ed80 7a10 	vstr	s14, [r0, #64]	; 0x40
 80017e4:	edc0 5a11 	vstr	s11, [r0, #68]	; 0x44
 80017e8:	4770      	bx	lr
 80017ea:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80017ee:	ed9f 6a05 	vldr	s12, [pc, #20]	; 8001804 <PID::setOutputLimits(float, float)+0x60>
 80017f2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80017f6:	bf48      	it	mi
 80017f8:	eef0 7a46 	vmovmi.f32	s15, s12
 80017fc:	edc0 7a0b 	vstr	s15, [r0, #44]	; 0x2c
 8001800:	e7ec      	b.n	80017dc <PID::setOutputLimits(float, float)+0x38>
 8001802:	bf00      	nop
 8001804:	00000000 	.word	0x00000000

08001808 <PID::setTunings(float, float, float)>:
 8001808:	b5d0      	push	{r4, r6, r7, lr}
 800180a:	ed2d 8b04 	vpush	{d8-d9}
 800180e:	ee08 1a10 	vmov	s16, r1
 8001812:	eeb5 8a40 	vcmp.f32	s16, #0.0
 8001816:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800181a:	4604      	mov	r4, r0
 800181c:	ee07 2a90 	vmov	s15, r2
 8001820:	ee08 3a90 	vmov	s17, r3
 8001824:	ed9f 9a2b 	vldr	s18, [pc, #172]	; 80018d4 <PID::setTunings(float, float, float)+0xcc>
 8001828:	d03c      	beq.n	80018a4 <PID::setTunings(float, float, float)+0x9c>
 800182a:	eef4 7ac9 	vcmpe.f32	s15, s18
 800182e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001832:	d437      	bmi.n	80018a4 <PID::setTunings(float, float, float)+0x9c>
 8001834:	eef4 8ac9 	vcmpe.f32	s17, s18
 8001838:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800183c:	d432      	bmi.n	80018a4 <PID::setTunings(float, float, float)+0x9c>
 800183e:	eef4 7a49 	vcmp.f32	s15, s18
 8001842:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001846:	6121      	str	r1, [r4, #16]
 8001848:	6162      	str	r2, [r4, #20]
 800184a:	61a3      	str	r3, [r4, #24]
 800184c:	d02d      	beq.n	80018aa <PID::setTunings(float, float, float)+0xa2>
 800184e:	4610      	mov	r0, r2
 8001850:	f004 fcac 	bl	80061ac <__aeabi_f2d>
 8001854:	4602      	mov	r2, r0
 8001856:	460b      	mov	r3, r1
 8001858:	2000      	movs	r0, #0
 800185a:	491f      	ldr	r1, [pc, #124]	; (80018d8 <PID::setTunings(float, float, float)+0xd0>)
 800185c:	f004 fe24 	bl	80064a8 <__aeabi_ddiv>
 8001860:	4606      	mov	r6, r0
 8001862:	6d20      	ldr	r0, [r4, #80]	; 0x50
 8001864:	460f      	mov	r7, r1
 8001866:	f004 fca1 	bl	80061ac <__aeabi_f2d>
 800186a:	4602      	mov	r2, r0
 800186c:	460b      	mov	r3, r1
 800186e:	4630      	mov	r0, r6
 8001870:	4639      	mov	r1, r7
 8001872:	f004 fcef 	bl	8006254 <__aeabi_dmul>
 8001876:	f004 feff 	bl	8006678 <__aeabi_d2f>
 800187a:	ee07 0a90 	vmov	s15, r0
 800187e:	7863      	ldrb	r3, [r4, #1]
 8001880:	b133      	cbz	r3, 8001890 <PID::setTunings(float, float, float)+0x88>
 8001882:	eef5 7a40 	vcmp.f32	s15, #0.0
 8001886:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800188a:	d111      	bne.n	80018b0 <PID::setTunings(float, float, float)+0xa8>
 800188c:	ed84 9a12 	vstr	s18, [r4, #72]	; 0x48
 8001890:	ed94 7a14 	vldr	s14, [r4, #80]	; 0x50
 8001894:	edc4 7a02 	vstr	s15, [r4, #8]
 8001898:	eec8 7a87 	vdiv.f32	s15, s17, s14
 800189c:	ed84 8a01 	vstr	s16, [r4, #4]
 80018a0:	edc4 7a03 	vstr	s15, [r4, #12]
 80018a4:	ecbd 8b04 	vpop	{d8-d9}
 80018a8:	bdd0      	pop	{r4, r6, r7, pc}
 80018aa:	eef0 7a49 	vmov.f32	s15, s18
 80018ae:	e7e6      	b.n	800187e <PID::setTunings(float, float, float)+0x76>
 80018b0:	ed94 7a02 	vldr	s14, [r4, #8]
 80018b4:	edd4 6a01 	vldr	s13, [r4, #4]
 80018b8:	ee66 6a87 	vmul.f32	s13, s13, s14
 80018bc:	ee28 7a27 	vmul.f32	s14, s16, s15
 80018c0:	ee86 6a87 	vdiv.f32	s12, s13, s14
 80018c4:	ed94 7a12 	vldr	s14, [r4, #72]	; 0x48
 80018c8:	ee27 7a06 	vmul.f32	s14, s14, s12
 80018cc:	ed84 7a12 	vstr	s14, [r4, #72]	; 0x48
 80018d0:	e7de      	b.n	8001890 <PID::setTunings(float, float, float)+0x88>
 80018d2:	bf00      	nop
 80018d4:	00000000 	.word	0x00000000
 80018d8:	3ff00000 	.word	0x3ff00000

080018dc <PID::PID(float, float, float, float)>:
 80018dc:	b510      	push	{r4, lr}
 80018de:	4604      	mov	r4, r0
 80018e0:	ed94 7a0e 	vldr	s14, [r4, #56]	; 0x38
 80018e4:	eddf 7a32 	vldr	s15, [pc, #200]	; 80019b0 <PID::PID(float, float, float, float)+0xd4>
 80018e8:	edd4 6a12 	vldr	s13, [r4, #72]	; 0x48
 80018ec:	ee87 6a87 	vdiv.f32	s12, s15, s14
 80018f0:	2000      	movs	r0, #0
 80018f2:	7020      	strb	r0, [r4, #0]
 80018f4:	7060      	strb	r0, [r4, #1]
 80018f6:	ed94 7a09 	vldr	s14, [r4, #36]	; 0x24
 80018fa:	ee66 6a86 	vmul.f32	s13, s13, s12
 80018fe:	ee26 7a07 	vmul.f32	s14, s12, s14
 8001902:	edc4 6a12 	vstr	s13, [r4, #72]	; 0x48
 8001906:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800190a:	eeb4 7ae6 	vcmpe.f32	s14, s13
 800190e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001912:	ed2d 8b02 	vpush	{d8}
 8001916:	ed84 7a09 	vstr	s14, [r4, #36]	; 0x24
 800191a:	ed9f 8a26 	vldr	s16, [pc, #152]	; 80019b4 <PID::PID(float, float, float, float)+0xd8>
 800191e:	dd35      	ble.n	800198c <PID::PID(float, float, float, float)+0xb0>
 8001920:	edc4 6a09 	vstr	s13, [r4, #36]	; 0x24
 8001924:	ed94 6a11 	vldr	s12, [r4, #68]	; 0x44
 8001928:	ed84 8a0c 	vstr	s16, [r4, #48]	; 0x30
 800192c:	ee87 7a86 	vdiv.f32	s14, s15, s12
 8001930:	ed94 6a0b 	vldr	s12, [r4, #44]	; 0x2c
 8001934:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 8001938:	ee27 7a06 	vmul.f32	s14, s14, s12
 800193c:	edc4 7a0e 	vstr	s15, [r4, #56]	; 0x38
 8001940:	eeb4 7ae6 	vcmpe.f32	s14, s13
 8001944:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001948:	dd28      	ble.n	800199c <PID::PID(float, float, float, float)+0xc0>
 800194a:	edc4 6a0b 	vstr	s13, [r4, #44]	; 0x2c
 800194e:	9804      	ldr	r0, [sp, #16]
 8001950:	ed84 8a0f 	vstr	s16, [r4, #60]	; 0x3c
 8001954:	6520      	str	r0, [r4, #80]	; 0x50
 8001956:	edc4 7a10 	vstr	s15, [r4, #64]	; 0x40
 800195a:	4620      	mov	r0, r4
 800195c:	edc4 7a11 	vstr	s15, [r4, #68]	; 0x44
 8001960:	f7ff ff52 	bl	8001808 <PID::setTunings(float, float, float)>
 8001964:	ed84 8a07 	vstr	s16, [r4, #28]
 8001968:	ed84 8a08 	vstr	s16, [r4, #32]
 800196c:	ed84 8a09 	vstr	s16, [r4, #36]	; 0x24
 8001970:	ed84 8a0a 	vstr	s16, [r4, #40]	; 0x28
 8001974:	ed84 8a0b 	vstr	s16, [r4, #44]	; 0x2c
 8001978:	ed84 8a12 	vstr	s16, [r4, #72]	; 0x48
 800197c:	ed84 8a13 	vstr	s16, [r4, #76]	; 0x4c
 8001980:	ed84 8a15 	vstr	s16, [r4, #84]	; 0x54
 8001984:	ecbd 8b02 	vpop	{d8}
 8001988:	4620      	mov	r0, r4
 800198a:	bd10      	pop	{r4, pc}
 800198c:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8001990:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001994:	bf48      	it	mi
 8001996:	ed84 8a09 	vstrmi	s16, [r4, #36]	; 0x24
 800199a:	e7c3      	b.n	8001924 <PID::PID(float, float, float, float)+0x48>
 800199c:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 80019a0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80019a4:	bf48      	it	mi
 80019a6:	eeb0 7a48 	vmovmi.f32	s14, s16
 80019aa:	ed84 7a0b 	vstr	s14, [r4, #44]	; 0x2c
 80019ae:	e7ce      	b.n	800194e <PID::PID(float, float, float, float)+0x72>
 80019b0:	40533333 	.word	0x40533333
 80019b4:	00000000 	.word	0x00000000

080019b8 <PID::reset()>:
 80019b8:	7803      	ldrb	r3, [r0, #0]
 80019ba:	ed90 7a0f 	vldr	s14, [r0, #60]	; 0x3c
 80019be:	edd0 6a11 	vldr	s13, [r0, #68]	; 0x44
 80019c2:	b1b3      	cbz	r3, 80019f2 <PID::reset()+0x3a>
 80019c4:	edd0 7a13 	vldr	s15, [r0, #76]	; 0x4c
 80019c8:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80019cc:	2300      	movs	r3, #0
 80019ce:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 80019d2:	6483      	str	r3, [r0, #72]	; 0x48
 80019d4:	edd0 7a08 	vldr	s15, [r0, #32]
 80019d8:	ed80 7a0b 	vstr	s14, [r0, #44]	; 0x2c
 80019dc:	ed90 7a0c 	vldr	s14, [r0, #48]	; 0x30
 80019e0:	edd0 6a0e 	vldr	s13, [r0, #56]	; 0x38
 80019e4:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80019e8:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 80019ec:	ed80 7a09 	vstr	s14, [r0, #36]	; 0x24
 80019f0:	4770      	bx	lr
 80019f2:	edd0 7a15 	vldr	s15, [r0, #84]	; 0x54
 80019f6:	e7e7      	b.n	80019c8 <PID::reset()+0x10>

080019f8 <PID::setMode(int)>:
 80019f8:	b508      	push	{r3, lr}
 80019fa:	4602      	mov	r2, r0
 80019fc:	b119      	cbz	r1, 8001a06 <PID::setMode(int)+0xe>
 80019fe:	7843      	ldrb	r3, [r0, #1]
 8001a00:	b90b      	cbnz	r3, 8001a06 <PID::setMode(int)+0xe>
 8001a02:	f7ff ffd9 	bl	80019b8 <PID::reset()>
 8001a06:	3100      	adds	r1, #0
 8001a08:	bf18      	it	ne
 8001a0a:	2101      	movne	r1, #1
 8001a0c:	7051      	strb	r1, [r2, #1]
 8001a0e:	bd08      	pop	{r3, pc}

08001a10 <PID::setProcessValue(float)>:
 8001a10:	6201      	str	r1, [r0, #32]
 8001a12:	4770      	bx	lr

08001a14 <PID::setBias(float)>:
 8001a14:	2301      	movs	r3, #1
 8001a16:	64c1      	str	r1, [r0, #76]	; 0x4c
 8001a18:	7003      	strb	r3, [r0, #0]
 8001a1a:	4770      	bx	lr

08001a1c <PID::compute()>:
 8001a1c:	ed90 5a0c 	vldr	s10, [r0, #48]	; 0x30
 8001a20:	edd0 7a08 	vldr	s15, [r0, #32]
 8001a24:	edd0 5a0e 	vldr	s11, [r0, #56]	; 0x38
 8001a28:	ed9f 4a46 	vldr	s8, [pc, #280]	; 8001b44 <PID::compute()+0x128>
 8001a2c:	ee77 7ac5 	vsub.f32	s15, s15, s10
 8001a30:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8001a34:	eec7 6aa5 	vdiv.f32	s13, s15, s11
 8001a38:	eef4 6ac7 	vcmpe.f32	s13, s14
 8001a3c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001a40:	dc6c      	bgt.n	8001b1c <PID::compute()+0x100>
 8001a42:	eef4 6a44 	vcmp.f32	s13, s8
 8001a46:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001a4a:	bf48      	it	mi
 8001a4c:	eef0 6a44 	vmovmi.f32	s13, s8
 8001a50:	ed90 6a07 	vldr	s12, [r0, #28]
 8001a54:	ee36 6a45 	vsub.f32	s12, s12, s10
 8001a58:	eec6 7a25 	vdiv.f32	s15, s12, s11
 8001a5c:	eef4 7ac7 	vcmpe.f32	s15, s14
 8001a60:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001a64:	dc5d      	bgt.n	8001b22 <PID::compute()+0x106>
 8001a66:	eef5 7a40 	vcmp.f32	s15, #0.0
 8001a6a:	ed9f 6a36 	vldr	s12, [pc, #216]	; 8001b44 <PID::compute()+0x128>
 8001a6e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001a72:	bf48      	it	mi
 8001a74:	eef0 7a46 	vmovmi.f32	s15, s12
 8001a78:	ed90 6a0b 	vldr	s12, [r0, #44]	; 0x2c
 8001a7c:	eeb4 6ac7 	vcmpe.f32	s12, s14
 8001a80:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001a84:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8001a88:	db04      	blt.n	8001a94 <PID::compute()+0x78>
 8001a8a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8001a8e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001a92:	dc0f      	bgt.n	8001ab4 <PID::compute()+0x98>
 8001a94:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 8001a98:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001a9c:	d804      	bhi.n	8001aa8 <PID::compute()+0x8c>
 8001a9e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8001aa2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001aa6:	d405      	bmi.n	8001ab4 <PID::compute()+0x98>
 8001aa8:	ed90 6a12 	vldr	s12, [r0, #72]	; 0x48
 8001aac:	ee36 6a27 	vadd.f32	s12, s12, s15
 8001ab0:	ed80 6a12 	vstr	s12, [r0, #72]	; 0x48
 8001ab4:	ed90 6a09 	vldr	s12, [r0, #36]	; 0x24
 8001ab8:	edd0 5a14 	vldr	s11, [r0, #80]	; 0x50
 8001abc:	7803      	ldrb	r3, [r0, #0]
 8001abe:	ed90 5a0f 	vldr	s10, [r0, #60]	; 0x3c
 8001ac2:	edd0 4a11 	vldr	s9, [r0, #68]	; 0x44
 8001ac6:	ee36 6ac6 	vsub.f32	s12, s13, s12
 8001aca:	eec6 3a25 	vdiv.f32	s7, s12, s11
 8001ace:	b35b      	cbz	r3, 8001b28 <PID::compute()+0x10c>
 8001ad0:	edd0 5a13 	vldr	s11, [r0, #76]	; 0x4c
 8001ad4:	ee75 5ac5 	vsub.f32	s11, s11, s10
 8001ad8:	ee85 6aa4 	vdiv.f32	s12, s11, s9
 8001adc:	edd0 5a12 	vldr	s11, [r0, #72]	; 0x48
 8001ae0:	ed90 3a02 	vldr	s6, [r0, #8]
 8001ae4:	eee3 7a25 	vfma.f32	s15, s6, s11
 8001ae8:	edd0 5a03 	vldr	s11, [r0, #12]
 8001aec:	eee3 7ae5 	vfms.f32	s15, s7, s11
 8001af0:	edd0 5a01 	vldr	s11, [r0, #4]
 8001af4:	eea5 6aa7 	vfma.f32	s12, s11, s15
 8001af8:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 8001afc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001b00:	d515      	bpl.n	8001b2e <PID::compute()+0x112>
 8001b02:	ed80 4a0a 	vstr	s8, [r0, #40]	; 0x28
 8001b06:	edd0 7a0a 	vldr	s15, [r0, #40]	; 0x28
 8001b0a:	edc0 6a09 	vstr	s13, [r0, #36]	; 0x24
 8001b0e:	eea7 5aa4 	vfma.f32	s10, s15, s9
 8001b12:	edc0 7a0b 	vstr	s15, [r0, #44]	; 0x2c
 8001b16:	ee15 0a10 	vmov	r0, s10
 8001b1a:	4770      	bx	lr
 8001b1c:	eef0 6a47 	vmov.f32	s13, s14
 8001b20:	e796      	b.n	8001a50 <PID::compute()+0x34>
 8001b22:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 8001b26:	e7a7      	b.n	8001a78 <PID::compute()+0x5c>
 8001b28:	ed9f 6a06 	vldr	s12, [pc, #24]	; 8001b44 <PID::compute()+0x128>
 8001b2c:	e7d6      	b.n	8001adc <PID::compute()+0xc0>
 8001b2e:	eeb4 6ac7 	vcmpe.f32	s12, s14
 8001b32:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001b36:	bfd8      	it	le
 8001b38:	eeb0 7a46 	vmovle.f32	s14, s12
 8001b3c:	ed80 7a0a 	vstr	s14, [r0, #40]	; 0x28
 8001b40:	e7e1      	b.n	8001b06 <PID::compute()+0xea>
 8001b42:	bf00      	nop
 8001b44:	00000000 	.word	0x00000000

08001b48 <_start>:
 8001b48:	4807      	ldr	r0, [pc, #28]	; (8001b68 <_start+0x20>)
 8001b4a:	4a08      	ldr	r2, [pc, #32]	; (8001b6c <_start+0x24>)
 8001b4c:	b508      	push	{r3, lr}
 8001b4e:	1a12      	subs	r2, r2, r0
 8001b50:	2100      	movs	r1, #0
 8001b52:	f005 f822 	bl	8006b9a <memset>
 8001b56:	f004 f871 	bl	8005c3c <software_init_hook>
 8001b5a:	f004 ff71 	bl	8006a40 <__libc_init_array>
 8001b5e:	f004 f874 	bl	8005c4a <__wrap_main>
 8001b62:	f004 f8af 	bl	8005cc4 <__wrap_exit>
 8001b66:	bf00      	nop
 8001b68:	20000240 	.word	0x20000240
 8001b6c:	20003008 	.word	0x20003008

08001b70 <abort>:
 8001b70:	b508      	push	{r3, lr}
 8001b72:	2001      	movs	r0, #1
 8001b74:	f004 f8a6 	bl	8005cc4 <__wrap_exit>

08001b78 <__cxa_pure_virtual>:
 8001b78:	b508      	push	{r3, lr}
 8001b7a:	f7ff fff9 	bl	8001b70 <abort>
	...

08001b80 <ros::normalizeSecNSec(unsigned long&, unsigned long&)>:
 8001b80:	b530      	push	{r4, r5, lr}
 8001b82:	6802      	ldr	r2, [r0, #0]
 8001b84:	680d      	ldr	r5, [r1, #0]
 8001b86:	4c04      	ldr	r4, [pc, #16]	; (8001b98 <ros::normalizeSecNSec(unsigned long&, unsigned long&)+0x18>)
 8001b88:	fbb5 f3f4 	udiv	r3, r5, r4
 8001b8c:	441a      	add	r2, r3
 8001b8e:	fb04 5313 	mls	r3, r4, r3, r5
 8001b92:	6002      	str	r2, [r0, #0]
 8001b94:	600b      	str	r3, [r1, #0]
 8001b96:	bd30      	pop	{r4, r5, pc}
 8001b98:	3b9aca00 	.word	0x3b9aca00

08001b9c <BufferedSerial::readable()>:
 8001b9c:	f8d0 20c0 	ldr.w	r2, [r0, #192]	; 0xc0
 8001ba0:	f8d0 00c4 	ldr.w	r0, [r0, #196]	; 0xc4
 8001ba4:	1a10      	subs	r0, r2, r0
 8001ba6:	bf18      	it	ne
 8001ba8:	2001      	movne	r0, #1
 8001baa:	4770      	bx	lr

08001bac <BufferedSerial::writeable()>:
 8001bac:	2001      	movs	r0, #1
 8001bae:	4770      	bx	lr

08001bb0 <BufferedSerial::getc()>:
 8001bb0:	b510      	push	{r4, lr}
 8001bb2:	f8d0 20c4 	ldr.w	r2, [r0, #196]	; 0xc4
 8001bb6:	f8d0 10bc 	ldr.w	r1, [r0, #188]	; 0xbc
 8001bba:	4603      	mov	r3, r0
 8001bbc:	1c50      	adds	r0, r2, #1
 8001bbe:	f8c3 00c4 	str.w	r0, [r3, #196]	; 0xc4
 8001bc2:	5c88      	ldrb	r0, [r1, r2]
 8001bc4:	f8d3 20c8 	ldr.w	r2, [r3, #200]	; 0xc8
 8001bc8:	f8d3 40c4 	ldr.w	r4, [r3, #196]	; 0xc4
 8001bcc:	3a01      	subs	r2, #1
 8001bce:	fbb4 f1f2 	udiv	r1, r4, r2
 8001bd2:	fb02 4211 	mls	r2, r2, r1, r4
 8001bd6:	f8c3 20c4 	str.w	r2, [r3, #196]	; 0xc4
 8001bda:	bd10      	pop	{r4, pc}

08001bdc <void mbed::Callback<void ()>::function_move<mbed::Callback<void ()>::method_context<BufferedSerial, void (BufferedSerial::*)()> >(void*, void const*)>:
 8001bdc:	4603      	mov	r3, r0
 8001bde:	b110      	cbz	r0, 8001be6 <void mbed::Callback<void ()>::function_move<mbed::Callback<void ()>::method_context<BufferedSerial, void (BufferedSerial::*)()> >(void*, void const*)+0xa>
 8001be0:	c907      	ldmia	r1, {r0, r1, r2}
 8001be2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8001be6:	4770      	bx	lr

08001be8 <void mbed::Callback<void ()>::function_dtor<mbed::Callback<void ()>::method_context<BufferedSerial, void (BufferedSerial::*)()> >(void*)>:
 8001be8:	4770      	bx	lr

08001bea <void mbed::Callback<void ()>::function_call<mbed::Callback<void ()>::method_context<BufferedSerial, void (BufferedSerial::*)()> >(void const*)>:
 8001bea:	6842      	ldr	r2, [r0, #4]
 8001bec:	6881      	ldr	r1, [r0, #8]
 8001bee:	6803      	ldr	r3, [r0, #0]
 8001bf0:	f012 0f01 	tst.w	r2, #1
 8001bf4:	ea4f 0262 	mov.w	r2, r2, asr #1
 8001bf8:	bf1c      	itt	ne
 8001bfa:	5888      	ldrne	r0, [r1, r2]
 8001bfc:	58c3      	ldrne	r3, [r0, r3]
 8001bfe:	1888      	adds	r0, r1, r2
 8001c00:	4718      	bx	r3

08001c02 <BufferedSerial::txIrq()>:
 8001c02:	b530      	push	{r4, r5, lr}
 8001c04:	4604      	mov	r4, r0
 8001c06:	b085      	sub	sp, #20
 8001c08:	f100 054c 	add.w	r5, r0, #76	; 0x4c
 8001c0c:	4628      	mov	r0, r5
 8001c0e:	f002 fd1d 	bl	800464c <serial_writable>
 8001c12:	b330      	cbz	r0, 8001c62 <BufferedSerial::txIrq()+0x60>
 8001c14:	f8d4 20d0 	ldr.w	r2, [r4, #208]	; 0xd0
 8001c18:	f8d4 30d4 	ldr.w	r3, [r4, #212]	; 0xd4
 8001c1c:	429a      	cmp	r2, r3
 8001c1e:	d016      	beq.n	8001c4e <BufferedSerial::txIrq()+0x4c>
 8001c20:	f8d4 30d4 	ldr.w	r3, [r4, #212]	; 0xd4
 8001c24:	f8d4 20cc 	ldr.w	r2, [r4, #204]	; 0xcc
 8001c28:	1c59      	adds	r1, r3, #1
 8001c2a:	f8c4 10d4 	str.w	r1, [r4, #212]	; 0xd4
 8001c2e:	5cd1      	ldrb	r1, [r2, r3]
 8001c30:	f8d4 30d8 	ldr.w	r3, [r4, #216]	; 0xd8
 8001c34:	f8d4 00d4 	ldr.w	r0, [r4, #212]	; 0xd4
 8001c38:	3b01      	subs	r3, #1
 8001c3a:	fbb0 f2f3 	udiv	r2, r0, r3
 8001c3e:	fb03 0312 	mls	r3, r3, r2, r0
 8001c42:	f8c4 30d4 	str.w	r3, [r4, #212]	; 0xd4
 8001c46:	4628      	mov	r0, r5
 8001c48:	f002 fd0a 	bl	8004660 <serial_putc>
 8001c4c:	e7de      	b.n	8001c0c <BufferedSerial::txIrq()+0xa>
 8001c4e:	2300      	movs	r3, #0
 8001c50:	4620      	mov	r0, r4
 8001c52:	2201      	movs	r2, #1
 8001c54:	4669      	mov	r1, sp
 8001c56:	9303      	str	r3, [sp, #12]
 8001c58:	f003 fe6e 	bl	8005938 <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)>
 8001c5c:	4668      	mov	r0, sp
 8001c5e:	f7fe fc5f 	bl	8000520 <mbed::Callback<void ()>::~Callback()>
 8001c62:	b005      	add	sp, #20
 8001c64:	bd30      	pop	{r4, r5, pc}

08001c66 <mbed::Callback<void (int)>::~Callback()>:
 8001c66:	68c3      	ldr	r3, [r0, #12]
 8001c68:	b510      	push	{r4, lr}
 8001c6a:	4604      	mov	r4, r0
 8001c6c:	b10b      	cbz	r3, 8001c72 <mbed::Callback<void (int)>::~Callback()+0xc>
 8001c6e:	689b      	ldr	r3, [r3, #8]
 8001c70:	4798      	blx	r3
 8001c72:	4620      	mov	r0, r4
 8001c74:	bd10      	pop	{r4, pc}
	...

08001c78 <mbed::SerialBase::~SerialBase()>:
 8001c78:	b570      	push	{r4, r5, r6, lr}
 8001c7a:	4606      	mov	r6, r0
 8001c7c:	4b0b      	ldr	r3, [pc, #44]	; (8001cac <mbed::SerialBase::~SerialBase()+0x34>)
 8001c7e:	f846 3b98 	str.w	r3, [r6], #152
 8001c82:	4604      	mov	r4, r0
 8001c84:	b146      	cbz	r6, 8001c98 <mbed::SerialBase::~SerialBase()+0x20>
 8001c86:	f100 05b8 	add.w	r5, r0, #184	; 0xb8
 8001c8a:	42b5      	cmp	r5, r6
 8001c8c:	d004      	beq.n	8001c98 <mbed::SerialBase::~SerialBase()+0x20>
 8001c8e:	3d10      	subs	r5, #16
 8001c90:	4628      	mov	r0, r5
 8001c92:	f7fe fc45 	bl	8000520 <mbed::Callback<void ()>::~Callback()>
 8001c96:	e7f8      	b.n	8001c8a <mbed::SerialBase::~SerialBase()+0x12>
 8001c98:	f104 0038 	add.w	r0, r4, #56	; 0x38
 8001c9c:	f7ff ffe3 	bl	8001c66 <mbed::Callback<void (int)>::~Callback()>
 8001ca0:	f104 0028 	add.w	r0, r4, #40	; 0x28
 8001ca4:	f7ff ffdf 	bl	8001c66 <mbed::Callback<void (int)>::~Callback()>
 8001ca8:	4620      	mov	r0, r4
 8001caa:	bd70      	pop	{r4, r5, r6, pc}
 8001cac:	08007dec 	.word	0x08007dec

08001cb0 <mbed::SerialBase::~SerialBase()>:
 8001cb0:	b510      	push	{r4, lr}
 8001cb2:	4604      	mov	r4, r0
 8001cb4:	f7ff ffe0 	bl	8001c78 <mbed::SerialBase::~SerialBase()>
 8001cb8:	4620      	mov	r0, r4
 8001cba:	f004 f81f 	bl	8005cfc <operator delete(void*)>
 8001cbe:	4620      	mov	r0, r4
 8001cc0:	bd10      	pop	{r4, pc}
	...

08001cc4 <BufferedSerial::~BufferedSerial()>:
 8001cc4:	b530      	push	{r4, r5, lr}
 8001cc6:	4b13      	ldr	r3, [pc, #76]	; (8001d14 <BufferedSerial::~BufferedSerial()+0x50>)
 8001cc8:	6003      	str	r3, [r0, #0]
 8001cca:	b085      	sub	sp, #20
 8001ccc:	2500      	movs	r5, #0
 8001cce:	462a      	mov	r2, r5
 8001cd0:	4669      	mov	r1, sp
 8001cd2:	4604      	mov	r4, r0
 8001cd4:	9503      	str	r5, [sp, #12]
 8001cd6:	f003 fe2f 	bl	8005938 <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)>
 8001cda:	4668      	mov	r0, sp
 8001cdc:	f7fe fc20 	bl	8000520 <mbed::Callback<void ()>::~Callback()>
 8001ce0:	2201      	movs	r2, #1
 8001ce2:	4669      	mov	r1, sp
 8001ce4:	4620      	mov	r0, r4
 8001ce6:	9503      	str	r5, [sp, #12]
 8001ce8:	f003 fe26 	bl	8005938 <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)>
 8001cec:	4668      	mov	r0, sp
 8001cee:	f7fe fc17 	bl	8000520 <mbed::Callback<void ()>::~Callback()>
 8001cf2:	f104 00cc 	add.w	r0, r4, #204	; 0xcc
 8001cf6:	f000 f923 	bl	8001f40 <Buffer<char>::~Buffer()>
 8001cfa:	f104 00bc 	add.w	r0, r4, #188	; 0xbc
 8001cfe:	f000 f91f 	bl	8001f40 <Buffer<char>::~Buffer()>
 8001d02:	4b05      	ldr	r3, [pc, #20]	; (8001d18 <BufferedSerial::~BufferedSerial()+0x54>)
 8001d04:	6023      	str	r3, [r4, #0]
 8001d06:	4620      	mov	r0, r4
 8001d08:	f7ff ffb6 	bl	8001c78 <mbed::SerialBase::~SerialBase()>
 8001d0c:	4620      	mov	r0, r4
 8001d0e:	b005      	add	sp, #20
 8001d10:	bd30      	pop	{r4, r5, pc}
 8001d12:	bf00      	nop
 8001d14:	080078a0 	.word	0x080078a0
 8001d18:	08007dc4 	.word	0x08007dc4

08001d1c <BufferedSerial::~BufferedSerial()>:
 8001d1c:	b510      	push	{r4, lr}
 8001d1e:	4604      	mov	r4, r0
 8001d20:	f7ff ffd0 	bl	8001cc4 <BufferedSerial::~BufferedSerial()>
 8001d24:	4620      	mov	r0, r4
 8001d26:	f003 ffe9 	bl	8005cfc <operator delete(void*)>
 8001d2a:	4620      	mov	r0, r4
 8001d2c:	bd10      	pop	{r4, pc}
	...

08001d30 <void mbed::SerialBase::attach<BufferedSerial>(BufferedSerial*, void (BufferedSerial::*)(), mbed::SerialBase::IrqType)>:
 8001d30:	b510      	push	{r4, lr}
 8001d32:	b086      	sub	sp, #24
 8001d34:	e88d 000c 	stmia.w	sp, {r2, r3}
 8001d38:	9b01      	ldr	r3, [sp, #4]
 8001d3a:	9202      	str	r2, [sp, #8]
 8001d3c:	9303      	str	r3, [sp, #12]
 8001d3e:	9104      	str	r1, [sp, #16]
 8001d40:	4b05      	ldr	r3, [pc, #20]	; (8001d58 <void mbed::SerialBase::attach<BufferedSerial>(BufferedSerial*, void (BufferedSerial::*)(), mbed::SerialBase::IrqType)+0x28>)
 8001d42:	f89d 2020 	ldrb.w	r2, [sp, #32]
 8001d46:	9305      	str	r3, [sp, #20]
 8001d48:	a902      	add	r1, sp, #8
 8001d4a:	f003 fdf5 	bl	8005938 <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)>
 8001d4e:	a802      	add	r0, sp, #8
 8001d50:	f7fe fbe6 	bl	8000520 <mbed::Callback<void ()>::~Callback()>
 8001d54:	b006      	add	sp, #24
 8001d56:	bd10      	pop	{r4, pc}
 8001d58:	08007810 	.word	0x08007810

08001d5c <BufferedSerial::BufferedSerial(PinName, PinName, unsigned long, unsigned long, char const*)>:
 8001d5c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8001d5e:	4604      	mov	r4, r0
 8001d60:	461d      	mov	r5, r3
 8001d62:	f44f 5316 	mov.w	r3, #9600	; 0x2580
 8001d66:	9e08      	ldr	r6, [sp, #32]
 8001d68:	f003 fc4e 	bl	8005608 <mbed::RawSerial::RawSerial(PinName, PinName, int)>
 8001d6c:	4620      	mov	r0, r4
 8001d6e:	4b0f      	ldr	r3, [pc, #60]	; (8001dac <BufferedSerial::BufferedSerial(PinName, PinName, unsigned long, unsigned long, char const*)+0x50>)
 8001d70:	f840 3bbc 	str.w	r3, [r0], #188
 8001d74:	4629      	mov	r1, r5
 8001d76:	f000 f8f2 	bl	8001f5e <Buffer<char>::Buffer(unsigned long)>
 8001d7a:	fb06 f105 	mul.w	r1, r6, r5
 8001d7e:	f104 00cc 	add.w	r0, r4, #204	; 0xcc
 8001d82:	f000 f8ec 	bl	8001f5e <Buffer<char>::Buffer(unsigned long)>
 8001d86:	4b0a      	ldr	r3, [pc, #40]	; (8001db0 <BufferedSerial::BufferedSerial(PinName, PinName, unsigned long, unsigned long, char const*)+0x54>)
 8001d88:	9302      	str	r3, [sp, #8]
 8001d8a:	2300      	movs	r3, #0
 8001d8c:	9303      	str	r3, [sp, #12]
 8001d8e:	9300      	str	r3, [sp, #0]
 8001d90:	ab04      	add	r3, sp, #16
 8001d92:	4620      	mov	r0, r4
 8001d94:	e913 000c 	ldmdb	r3, {r2, r3}
 8001d98:	4621      	mov	r1, r4
 8001d9a:	f7ff ffc9 	bl	8001d30 <void mbed::SerialBase::attach<BufferedSerial>(BufferedSerial*, void (BufferedSerial::*)(), mbed::SerialBase::IrqType)>
 8001d9e:	4620      	mov	r0, r4
 8001da0:	f8c4 50dc 	str.w	r5, [r4, #220]	; 0xdc
 8001da4:	f8c4 60e0 	str.w	r6, [r4, #224]	; 0xe0
 8001da8:	b004      	add	sp, #16
 8001daa:	bd70      	pop	{r4, r5, r6, pc}
 8001dac:	080078a0 	.word	0x080078a0
 8001db0:	08001e1b 	.word	0x08001e1b

08001db4 <BufferedSerial::prime()>:
 8001db4:	b570      	push	{r4, r5, r6, lr}
 8001db6:	4604      	mov	r4, r0
 8001db8:	b086      	sub	sp, #24
 8001dba:	304c      	adds	r0, #76	; 0x4c
 8001dbc:	f002 fc46 	bl	800464c <serial_writable>
 8001dc0:	b1c0      	cbz	r0, 8001df4 <BufferedSerial::prime()+0x40>
 8001dc2:	ad02      	add	r5, sp, #8
 8001dc4:	2201      	movs	r2, #1
 8001dc6:	4629      	mov	r1, r5
 8001dc8:	2600      	movs	r6, #0
 8001dca:	4620      	mov	r0, r4
 8001dcc:	9605      	str	r6, [sp, #20]
 8001dce:	f003 fdb3 	bl	8005938 <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)>
 8001dd2:	4628      	mov	r0, r5
 8001dd4:	f7fe fba4 	bl	8000520 <mbed::Callback<void ()>::~Callback()>
 8001dd8:	4620      	mov	r0, r4
 8001dda:	f7ff ff12 	bl	8001c02 <BufferedSerial::txIrq()>
 8001dde:	4b06      	ldr	r3, [pc, #24]	; (8001df8 <BufferedSerial::prime()+0x44>)
 8001de0:	9302      	str	r3, [sp, #8]
 8001de2:	2301      	movs	r3, #1
 8001de4:	9603      	str	r6, [sp, #12]
 8001de6:	9300      	str	r3, [sp, #0]
 8001de8:	e895 000c 	ldmia.w	r5, {r2, r3}
 8001dec:	4621      	mov	r1, r4
 8001dee:	4620      	mov	r0, r4
 8001df0:	f7ff ff9e 	bl	8001d30 <void mbed::SerialBase::attach<BufferedSerial>(BufferedSerial*, void (BufferedSerial::*)(), mbed::SerialBase::IrqType)>
 8001df4:	b006      	add	sp, #24
 8001df6:	bd70      	pop	{r4, r5, r6, pc}
 8001df8:	08001c03 	.word	0x08001c03

08001dfc <Buffer<char>::put(char)>:
 8001dfc:	6843      	ldr	r3, [r0, #4]
 8001dfe:	6802      	ldr	r2, [r0, #0]
 8001e00:	b510      	push	{r4, lr}
 8001e02:	1c5c      	adds	r4, r3, #1
 8001e04:	6044      	str	r4, [r0, #4]
 8001e06:	54d1      	strb	r1, [r2, r3]
 8001e08:	68c3      	ldr	r3, [r0, #12]
 8001e0a:	6841      	ldr	r1, [r0, #4]
 8001e0c:	3b01      	subs	r3, #1
 8001e0e:	fbb1 f2f3 	udiv	r2, r1, r3
 8001e12:	fb03 1312 	mls	r3, r3, r2, r1
 8001e16:	6043      	str	r3, [r0, #4]
 8001e18:	bd10      	pop	{r4, pc}

08001e1a <BufferedSerial::rxIrq()>:
 8001e1a:	b538      	push	{r3, r4, r5, lr}
 8001e1c:	f100 054c 	add.w	r5, r0, #76	; 0x4c
 8001e20:	4604      	mov	r4, r0
 8001e22:	4628      	mov	r0, r5
 8001e24:	f002 fbf6 	bl	8004614 <serial_readable>
 8001e28:	b138      	cbz	r0, 8001e3a <BufferedSerial::rxIrq()+0x20>
 8001e2a:	4628      	mov	r0, r5
 8001e2c:	f002 fbfc 	bl	8004628 <serial_getc>
 8001e30:	b2c1      	uxtb	r1, r0
 8001e32:	f104 00bc 	add.w	r0, r4, #188	; 0xbc
 8001e36:	f7ff ffe1 	bl	8001dfc <Buffer<char>::put(char)>
 8001e3a:	bd38      	pop	{r3, r4, r5, pc}

08001e3c <BufferedSerial::putc(int)>:
 8001e3c:	b538      	push	{r3, r4, r5, lr}
 8001e3e:	4605      	mov	r5, r0
 8001e40:	460c      	mov	r4, r1
 8001e42:	30cc      	adds	r0, #204	; 0xcc
 8001e44:	b2c9      	uxtb	r1, r1
 8001e46:	f7ff ffd9 	bl	8001dfc <Buffer<char>::put(char)>
 8001e4a:	4628      	mov	r0, r5
 8001e4c:	f7ff ffb2 	bl	8001db4 <BufferedSerial::prime()>
 8001e50:	4620      	mov	r0, r4
 8001e52:	bd38      	pop	{r3, r4, r5, pc}

08001e54 <BufferedSerial::puts(char const*)>:
 8001e54:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001e58:	4607      	mov	r7, r0
 8001e5a:	460c      	mov	r4, r1
 8001e5c:	b1b1      	cbz	r1, 8001e8c <BufferedSerial::puts(char const*)+0x38>
 8001e5e:	460d      	mov	r5, r1
 8001e60:	f100 08cc 	add.w	r8, r0, #204	; 0xcc
 8001e64:	462e      	mov	r6, r5
 8001e66:	f816 1b01 	ldrb.w	r1, [r6], #1
 8001e6a:	b121      	cbz	r1, 8001e76 <BufferedSerial::puts(char const*)+0x22>
 8001e6c:	4640      	mov	r0, r8
 8001e6e:	f7ff ffc5 	bl	8001dfc <Buffer<char>::put(char)>
 8001e72:	4635      	mov	r5, r6
 8001e74:	e7f6      	b.n	8001e64 <BufferedSerial::puts(char const*)+0x10>
 8001e76:	210a      	movs	r1, #10
 8001e78:	4640      	mov	r0, r8
 8001e7a:	f7ff ffbf 	bl	8001dfc <Buffer<char>::put(char)>
 8001e7e:	1b2c      	subs	r4, r5, r4
 8001e80:	4638      	mov	r0, r7
 8001e82:	f7ff ff97 	bl	8001db4 <BufferedSerial::prime()>
 8001e86:	1c60      	adds	r0, r4, #1
 8001e88:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001e8c:	4608      	mov	r0, r1
 8001e8e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08001e92 <BufferedSerial::write(void const*, unsigned int)>:
 8001e92:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001e96:	4607      	mov	r7, r0
 8001e98:	460d      	mov	r5, r1
 8001e9a:	b191      	cbz	r1, 8001ec2 <BufferedSerial::write(void const*, unsigned int)+0x30>
 8001e9c:	b1a2      	cbz	r2, 8001ec8 <BufferedSerial::write(void const*, unsigned int)+0x36>
 8001e9e:	188c      	adds	r4, r1, r2
 8001ea0:	460e      	mov	r6, r1
 8001ea2:	f100 08cc 	add.w	r8, r0, #204	; 0xcc
 8001ea6:	42b4      	cmp	r4, r6
 8001ea8:	d005      	beq.n	8001eb6 <BufferedSerial::write(void const*, unsigned int)+0x24>
 8001eaa:	f816 1b01 	ldrb.w	r1, [r6], #1
 8001eae:	4640      	mov	r0, r8
 8001eb0:	f7ff ffa4 	bl	8001dfc <Buffer<char>::put(char)>
 8001eb4:	e7f7      	b.n	8001ea6 <BufferedSerial::write(void const*, unsigned int)+0x14>
 8001eb6:	4638      	mov	r0, r7
 8001eb8:	f7ff ff7c 	bl	8001db4 <BufferedSerial::prime()>
 8001ebc:	1b60      	subs	r0, r4, r5
 8001ebe:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001ec2:	4608      	mov	r0, r1
 8001ec4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001ec8:	4610      	mov	r0, r2
 8001eca:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

08001ed0 <BufferedSerial::printf(char const*, ...)>:
 8001ed0:	b40e      	push	{r1, r2, r3}
 8001ed2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001ed6:	b085      	sub	sp, #20
 8001ed8:	f8d0 20dc 	ldr.w	r2, [r0, #220]	; 0xdc
 8001edc:	af02      	add	r7, sp, #8
 8001ede:	1dd3      	adds	r3, r2, #7
 8001ee0:	f023 0307 	bic.w	r3, r3, #7
 8001ee4:	f107 0424 	add.w	r4, r7, #36	; 0x24
 8001ee8:	ebad 0d03 	sub.w	sp, sp, r3
 8001eec:	f854 8b04 	ldr.w	r8, [r4], #4
 8001ef0:	ae02      	add	r6, sp, #8
 8001ef2:	4605      	mov	r5, r0
 8001ef4:	2100      	movs	r1, #0
 8001ef6:	4630      	mov	r0, r6
 8001ef8:	f004 fe4f 	bl	8006b9a <memset>
 8001efc:	4622      	mov	r2, r4
 8001efe:	4641      	mov	r1, r8
 8001f00:	4630      	mov	r0, r6
 8001f02:	607c      	str	r4, [r7, #4]
 8001f04:	f005 f936 	bl	8007174 <vsiprintf>
 8001f08:	f8d5 30dc 	ldr.w	r3, [r5, #220]	; 0xdc
 8001f0c:	4283      	cmp	r3, r0
 8001f0e:	4602      	mov	r2, r0
 8001f10:	d20c      	bcs.n	8001f2c <BufferedSerial::printf(char const*, ...)+0x5c>
 8001f12:	9000      	str	r0, [sp, #0]
 8001f14:	225d      	movs	r2, #93	; 0x5d
 8001f16:	4808      	ldr	r0, [pc, #32]	; (8001f38 <BufferedSerial::printf(char const*, ...)+0x68>)
 8001f18:	4908      	ldr	r1, [pc, #32]	; (8001f3c <BufferedSerial::printf(char const*, ...)+0x6c>)
 8001f1a:	f000 f993 	bl	8002244 <error>
 8001f1e:	2000      	movs	r0, #0
 8001f20:	370c      	adds	r7, #12
 8001f22:	46bd      	mov	sp, r7
 8001f24:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8001f28:	b003      	add	sp, #12
 8001f2a:	4770      	bx	lr
 8001f2c:	4631      	mov	r1, r6
 8001f2e:	4628      	mov	r0, r5
 8001f30:	f7ff ffaf 	bl	8001e92 <BufferedSerial::write(void const*, unsigned int)>
 8001f34:	e7f4      	b.n	8001f20 <BufferedSerial::printf(char const*, ...)+0x50>
 8001f36:	bf00      	nop
 8001f38:	0800785b 	.word	0x0800785b
 8001f3c:	0800781c 	.word	0x0800781c

08001f40 <Buffer<char>::~Buffer()>:
 8001f40:	b510      	push	{r4, lr}
 8001f42:	4604      	mov	r4, r0
 8001f44:	6800      	ldr	r0, [r0, #0]
 8001f46:	b108      	cbz	r0, 8001f4c <Buffer<char>::~Buffer()+0xc>
 8001f48:	f003 fed4 	bl	8005cf4 <operator delete[](void*)>
 8001f4c:	4620      	mov	r0, r4
 8001f4e:	bd10      	pop	{r4, pc}

08001f50 <Buffer<char>::clear()>:
 8001f50:	2100      	movs	r1, #0
 8001f52:	6041      	str	r1, [r0, #4]
 8001f54:	68c2      	ldr	r2, [r0, #12]
 8001f56:	6081      	str	r1, [r0, #8]
 8001f58:	6800      	ldr	r0, [r0, #0]
 8001f5a:	f004 be1e 	b.w	8006b9a <memset>

08001f5e <Buffer<char>::Buffer(unsigned long)>:
 8001f5e:	b538      	push	{r3, r4, r5, lr}
 8001f60:	4604      	mov	r4, r0
 8001f62:	4608      	mov	r0, r1
 8001f64:	460d      	mov	r5, r1
 8001f66:	f003 feb9 	bl	8005cdc <operator new[](unsigned int)>
 8001f6a:	60e5      	str	r5, [r4, #12]
 8001f6c:	6020      	str	r0, [r4, #0]
 8001f6e:	4620      	mov	r0, r4
 8001f70:	f7ff ffee 	bl	8001f50 <Buffer<char>::clear()>
 8001f74:	4620      	mov	r0, r4
 8001f76:	bd38      	pop	{r3, r4, r5, pc}

08001f78 <_gpio_init_in>:
 8001f78:	b570      	push	{r4, r5, r6, lr}
 8001f7a:	460e      	mov	r6, r1
 8001f7c:	4604      	mov	r4, r0
 8001f7e:	4615      	mov	r5, r2
 8001f80:	f001 fe84 	bl	8003c8c <gpio_init>
 8001f84:	3601      	adds	r6, #1
 8001f86:	d009      	beq.n	8001f9c <_gpio_init_in+0x24>
 8001f88:	4620      	mov	r0, r4
 8001f8a:	2100      	movs	r1, #0
 8001f8c:	f001 fea2 	bl	8003cd4 <gpio_dir>
 8001f90:	4629      	mov	r1, r5
 8001f92:	4620      	mov	r0, r4
 8001f94:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8001f98:	f001 be98 	b.w	8003ccc <gpio_mode>
 8001f9c:	bd70      	pop	{r4, r5, r6, pc}

08001f9e <_gpio_init_out.part.2>:
 8001f9e:	b538      	push	{r3, r4, r5, lr}
 8001fa0:	4604      	mov	r4, r0
 8001fa2:	460d      	mov	r5, r1
 8001fa4:	6803      	ldr	r3, [r0, #0]
 8001fa6:	b15a      	cbz	r2, 8001fc0 <_gpio_init_out.part.2+0x22>
 8001fa8:	6882      	ldr	r2, [r0, #8]
 8001faa:	6013      	str	r3, [r2, #0]
 8001fac:	4620      	mov	r0, r4
 8001fae:	2101      	movs	r1, #1
 8001fb0:	f001 fe90 	bl	8003cd4 <gpio_dir>
 8001fb4:	4629      	mov	r1, r5
 8001fb6:	4620      	mov	r0, r4
 8001fb8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8001fbc:	f001 be86 	b.w	8003ccc <gpio_mode>
 8001fc0:	68c2      	ldr	r2, [r0, #12]
 8001fc2:	041b      	lsls	r3, r3, #16
 8001fc4:	e7f1      	b.n	8001faa <_gpio_init_out.part.2+0xc>

08001fc6 <gpio_init_in>:
 8001fc6:	2200      	movs	r2, #0
 8001fc8:	f7ff bfd6 	b.w	8001f78 <_gpio_init_in>

08001fcc <gpio_init_out_ex>:
 8001fcc:	b570      	push	{r4, r5, r6, lr}
 8001fce:	460e      	mov	r6, r1
 8001fd0:	4604      	mov	r4, r0
 8001fd2:	4615      	mov	r5, r2
 8001fd4:	f001 fe5a 	bl	8003c8c <gpio_init>
 8001fd8:	3601      	adds	r6, #1
 8001fda:	d006      	beq.n	8001fea <gpio_init_out_ex+0x1e>
 8001fdc:	462a      	mov	r2, r5
 8001fde:	4620      	mov	r0, r4
 8001fe0:	2100      	movs	r1, #0
 8001fe2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8001fe6:	f7ff bfda 	b.w	8001f9e <_gpio_init_out.part.2>
 8001fea:	bd70      	pop	{r4, r5, r6, pc}

08001fec <gpio_init_out>:
 8001fec:	2200      	movs	r2, #0
 8001fee:	f7ff bfed 	b.w	8001fcc <gpio_init_out_ex>
	...

08001ff4 <get_us_ticker_data>:
 8001ff4:	4800      	ldr	r0, [pc, #0]	; (8001ff8 <get_us_ticker_data+0x4>)
 8001ff6:	4770      	bx	lr
 8001ff8:	080078cc 	.word	0x080078cc

08001ffc <us_ticker_irq_handler>:
 8001ffc:	4801      	ldr	r0, [pc, #4]	; (8002004 <us_ticker_irq_handler+0x8>)
 8001ffe:	f000 b80c 	b.w	800201a <ticker_irq_handler>
 8002002:	bf00      	nop
 8002004:	080078cc 	.word	0x080078cc

08002008 <ticker_set_handler>:
 8002008:	b538      	push	{r3, r4, r5, lr}
 800200a:	6803      	ldr	r3, [r0, #0]
 800200c:	4604      	mov	r4, r0
 800200e:	681b      	ldr	r3, [r3, #0]
 8002010:	460d      	mov	r5, r1
 8002012:	4798      	blx	r3
 8002014:	6863      	ldr	r3, [r4, #4]
 8002016:	601d      	str	r5, [r3, #0]
 8002018:	bd38      	pop	{r3, r4, r5, pc}

0800201a <ticker_irq_handler>:
 800201a:	6803      	ldr	r3, [r0, #0]
 800201c:	b570      	push	{r4, r5, r6, lr}
 800201e:	68db      	ldr	r3, [r3, #12]
 8002020:	4604      	mov	r4, r0
 8002022:	4798      	blx	r3
 8002024:	6863      	ldr	r3, [r4, #4]
 8002026:	685a      	ldr	r2, [r3, #4]
 8002028:	6823      	ldr	r3, [r4, #0]
 800202a:	b91a      	cbnz	r2, 8002034 <ticker_irq_handler+0x1a>
 800202c:	689b      	ldr	r3, [r3, #8]
 800202e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8002032:	4718      	bx	r3
 8002034:	685b      	ldr	r3, [r3, #4]
 8002036:	6815      	ldr	r5, [r2, #0]
 8002038:	4798      	blx	r3
 800203a:	6863      	ldr	r3, [r4, #4]
 800203c:	1a28      	subs	r0, r5, r0
 800203e:	2800      	cmp	r0, #0
 8002040:	685a      	ldr	r2, [r3, #4]
 8002042:	dc07      	bgt.n	8002054 <ticker_irq_handler+0x3a>
 8002044:	6891      	ldr	r1, [r2, #8]
 8002046:	6059      	str	r1, [r3, #4]
 8002048:	681b      	ldr	r3, [r3, #0]
 800204a:	2b00      	cmp	r3, #0
 800204c:	d0ea      	beq.n	8002024 <ticker_irq_handler+0xa>
 800204e:	6850      	ldr	r0, [r2, #4]
 8002050:	4798      	blx	r3
 8002052:	e7e7      	b.n	8002024 <ticker_irq_handler+0xa>
 8002054:	6823      	ldr	r3, [r4, #0]
 8002056:	6810      	ldr	r0, [r2, #0]
 8002058:	691b      	ldr	r3, [r3, #16]
 800205a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800205e:	4718      	bx	r3

08002060 <ticker_insert_event>:
 8002060:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002062:	4606      	mov	r6, r0
 8002064:	460c      	mov	r4, r1
 8002066:	461f      	mov	r7, r3
 8002068:	4615      	mov	r5, r2
 800206a:	f000 f8c1 	bl	80021f0 <core_util_critical_section_enter>
 800206e:	6870      	ldr	r0, [r6, #4]
 8002070:	e884 00a0 	stmia.w	r4, {r5, r7}
 8002074:	6843      	ldr	r3, [r0, #4]
 8002076:	2100      	movs	r1, #0
 8002078:	b953      	cbnz	r3, 8002090 <ticker_insert_event+0x30>
 800207a:	60a3      	str	r3, [r4, #8]
 800207c:	b979      	cbnz	r1, 800209e <ticker_insert_event+0x3e>
 800207e:	6833      	ldr	r3, [r6, #0]
 8002080:	6044      	str	r4, [r0, #4]
 8002082:	691b      	ldr	r3, [r3, #16]
 8002084:	4628      	mov	r0, r5
 8002086:	4798      	blx	r3
 8002088:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 800208c:	f000 b8c6 	b.w	800221c <core_util_critical_section_exit>
 8002090:	681a      	ldr	r2, [r3, #0]
 8002092:	1aaa      	subs	r2, r5, r2
 8002094:	2a00      	cmp	r2, #0
 8002096:	dbf0      	blt.n	800207a <ticker_insert_event+0x1a>
 8002098:	4619      	mov	r1, r3
 800209a:	689b      	ldr	r3, [r3, #8]
 800209c:	e7ec      	b.n	8002078 <ticker_insert_event+0x18>
 800209e:	608c      	str	r4, [r1, #8]
 80020a0:	e7f2      	b.n	8002088 <ticker_insert_event+0x28>

080020a2 <ticker_remove_event>:
 80020a2:	b538      	push	{r3, r4, r5, lr}
 80020a4:	4605      	mov	r5, r0
 80020a6:	460c      	mov	r4, r1
 80020a8:	f000 f8a2 	bl	80021f0 <core_util_critical_section_enter>
 80020ac:	686a      	ldr	r2, [r5, #4]
 80020ae:	6853      	ldr	r3, [r2, #4]
 80020b0:	42a3      	cmp	r3, r4
 80020b2:	d10e      	bne.n	80020d2 <ticker_remove_event+0x30>
 80020b4:	689b      	ldr	r3, [r3, #8]
 80020b6:	6053      	str	r3, [r2, #4]
 80020b8:	682a      	ldr	r2, [r5, #0]
 80020ba:	b92b      	cbnz	r3, 80020c8 <ticker_remove_event+0x26>
 80020bc:	6893      	ldr	r3, [r2, #8]
 80020be:	4798      	blx	r3
 80020c0:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80020c4:	f000 b8aa 	b.w	800221c <core_util_critical_section_exit>
 80020c8:	6912      	ldr	r2, [r2, #16]
 80020ca:	6818      	ldr	r0, [r3, #0]
 80020cc:	4790      	blx	r2
 80020ce:	e7f7      	b.n	80020c0 <ticker_remove_event+0x1e>
 80020d0:	4613      	mov	r3, r2
 80020d2:	2b00      	cmp	r3, #0
 80020d4:	d0f4      	beq.n	80020c0 <ticker_remove_event+0x1e>
 80020d6:	689a      	ldr	r2, [r3, #8]
 80020d8:	4294      	cmp	r4, r2
 80020da:	d1f9      	bne.n	80020d0 <ticker_remove_event+0x2e>
 80020dc:	68a2      	ldr	r2, [r4, #8]
 80020de:	609a      	str	r2, [r3, #8]
 80020e0:	e7ee      	b.n	80020c0 <ticker_remove_event+0x1e>

080020e2 <ticker_read>:
 80020e2:	6803      	ldr	r3, [r0, #0]
 80020e4:	685b      	ldr	r3, [r3, #4]
 80020e6:	4718      	bx	r3

080020e8 <pinmap_pinout>:
 80020e8:	b510      	push	{r4, lr}
 80020ea:	4604      	mov	r4, r0
 80020ec:	3001      	adds	r0, #1
 80020ee:	d10d      	bne.n	800210c <pinmap_pinout+0x24>
 80020f0:	bd10      	pop	{r4, pc}
 80020f2:	429c      	cmp	r4, r3
 80020f4:	d109      	bne.n	800210a <pinmap_pinout+0x22>
 80020f6:	4620      	mov	r0, r4
 80020f8:	6889      	ldr	r1, [r1, #8]
 80020fa:	f002 f84d 	bl	8004198 <pin_function>
 80020fe:	4620      	mov	r0, r4
 8002100:	2100      	movs	r1, #0
 8002102:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8002106:	f002 b8cb 	b.w	80042a0 <pin_mode>
 800210a:	310c      	adds	r1, #12
 800210c:	f9b1 3000 	ldrsh.w	r3, [r1]
 8002110:	1c5a      	adds	r2, r3, #1
 8002112:	d1ee      	bne.n	80020f2 <pinmap_pinout+0xa>
 8002114:	4802      	ldr	r0, [pc, #8]	; (8002120 <pinmap_pinout+0x38>)
 8002116:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800211a:	f000 b893 	b.w	8002244 <error>
 800211e:	bf00      	nop
 8002120:	08007937 	.word	0x08007937

08002124 <pinmap_merge>:
 8002124:	4288      	cmp	r0, r1
 8002126:	b508      	push	{r3, lr}
 8002128:	d008      	beq.n	800213c <pinmap_merge+0x18>
 800212a:	1c43      	adds	r3, r0, #1
 800212c:	d006      	beq.n	800213c <pinmap_merge+0x18>
 800212e:	3101      	adds	r1, #1
 8002130:	d006      	beq.n	8002140 <pinmap_merge+0x1c>
 8002132:	4804      	ldr	r0, [pc, #16]	; (8002144 <pinmap_merge+0x20>)
 8002134:	f000 f886 	bl	8002244 <error>
 8002138:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 800213c:	4608      	mov	r0, r1
 800213e:	bd08      	pop	{r3, pc}
 8002140:	4601      	mov	r1, r0
 8002142:	e7fb      	b.n	800213c <pinmap_merge+0x18>
 8002144:	08007906 	.word	0x08007906

08002148 <pinmap_find_peripheral>:
 8002148:	f9b1 3000 	ldrsh.w	r3, [r1]
 800214c:	1c5a      	adds	r2, r3, #1
 800214e:	d101      	bne.n	8002154 <pinmap_find_peripheral+0xc>
 8002150:	4618      	mov	r0, r3
 8002152:	4770      	bx	lr
 8002154:	4283      	cmp	r3, r0
 8002156:	d101      	bne.n	800215c <pinmap_find_peripheral+0x14>
 8002158:	6848      	ldr	r0, [r1, #4]
 800215a:	4770      	bx	lr
 800215c:	310c      	adds	r1, #12
 800215e:	e7f3      	b.n	8002148 <pinmap_find_peripheral>

08002160 <pinmap_peripheral>:
 8002160:	1c42      	adds	r2, r0, #1
 8002162:	b510      	push	{r4, lr}
 8002164:	4604      	mov	r4, r0
 8002166:	d007      	beq.n	8002178 <pinmap_peripheral+0x18>
 8002168:	f7ff ffee 	bl	8002148 <pinmap_find_peripheral>
 800216c:	1c43      	adds	r3, r0, #1
 800216e:	4604      	mov	r4, r0
 8002170:	d102      	bne.n	8002178 <pinmap_peripheral+0x18>
 8002172:	4802      	ldr	r0, [pc, #8]	; (800217c <pinmap_peripheral+0x1c>)
 8002174:	f000 f866 	bl	8002244 <error>
 8002178:	4620      	mov	r0, r4
 800217a:	bd10      	pop	{r4, pc}
 800217c:	08007917 	.word	0x08007917

08002180 <pinmap_find_function>:
 8002180:	f9b1 3000 	ldrsh.w	r3, [r1]
 8002184:	1c5a      	adds	r2, r3, #1
 8002186:	d101      	bne.n	800218c <pinmap_find_function+0xc>
 8002188:	4618      	mov	r0, r3
 800218a:	4770      	bx	lr
 800218c:	4283      	cmp	r3, r0
 800218e:	d101      	bne.n	8002194 <pinmap_find_function+0x14>
 8002190:	6888      	ldr	r0, [r1, #8]
 8002192:	4770      	bx	lr
 8002194:	310c      	adds	r1, #12
 8002196:	e7f3      	b.n	8002180 <pinmap_find_function>

08002198 <pinmap_function>:
 8002198:	1c42      	adds	r2, r0, #1
 800219a:	b510      	push	{r4, lr}
 800219c:	4604      	mov	r4, r0
 800219e:	d007      	beq.n	80021b0 <pinmap_function+0x18>
 80021a0:	f7ff ffee 	bl	8002180 <pinmap_find_function>
 80021a4:	1c43      	adds	r3, r0, #1
 80021a6:	4604      	mov	r4, r0
 80021a8:	d102      	bne.n	80021b0 <pinmap_function+0x18>
 80021aa:	4802      	ldr	r0, [pc, #8]	; (80021b4 <pinmap_function+0x1c>)
 80021ac:	f000 f84a 	bl	8002244 <error>
 80021b0:	4620      	mov	r0, r4
 80021b2:	bd10      	pop	{r4, pc}
 80021b4:	080078e8 	.word	0x080078e8

080021b8 <mbed_die>:
 80021b8:	b500      	push	{lr}
 80021ba:	b089      	sub	sp, #36	; 0x24
 80021bc:	f000 f818 	bl	80021f0 <core_util_critical_section_enter>
 80021c0:	2105      	movs	r1, #5
 80021c2:	a801      	add	r0, sp, #4
 80021c4:	f7ff ff12 	bl	8001fec <gpio_init_out>
 80021c8:	9b03      	ldr	r3, [sp, #12]
 80021ca:	9a01      	ldr	r2, [sp, #4]
 80021cc:	601a      	str	r2, [r3, #0]
 80021ce:	2096      	movs	r0, #150	; 0x96
 80021d0:	f003 fc74 	bl	8005abc <wait_ms>
 80021d4:	9b01      	ldr	r3, [sp, #4]
 80021d6:	9a04      	ldr	r2, [sp, #16]
 80021d8:	041b      	lsls	r3, r3, #16
 80021da:	6013      	str	r3, [r2, #0]
 80021dc:	2096      	movs	r0, #150	; 0x96
 80021de:	f003 fc6d 	bl	8005abc <wait_ms>
 80021e2:	e7f1      	b.n	80021c8 <mbed_die+0x10>

080021e4 <core_util_are_interrupts_enabled>:
 80021e4:	f3ef 8010 	mrs	r0, PRIMASK
 80021e8:	43c0      	mvns	r0, r0
 80021ea:	f000 0001 	and.w	r0, r0, #1
 80021ee:	4770      	bx	lr

080021f0 <core_util_critical_section_enter>:
 80021f0:	b508      	push	{r3, lr}
 80021f2:	f7ff fff7 	bl	80021e4 <core_util_are_interrupts_enabled>
 80021f6:	b672      	cpsid	i
 80021f8:	4b06      	ldr	r3, [pc, #24]	; (8002214 <core_util_critical_section_enter+0x24>)
 80021fa:	681a      	ldr	r2, [r3, #0]
 80021fc:	b922      	cbnz	r2, 8002208 <core_util_critical_section_enter+0x18>
 80021fe:	f080 0001 	eor.w	r0, r0, #1
 8002202:	4a05      	ldr	r2, [pc, #20]	; (8002218 <core_util_critical_section_enter+0x28>)
 8002204:	b2c0      	uxtb	r0, r0
 8002206:	7010      	strb	r0, [r2, #0]
 8002208:	681a      	ldr	r2, [r3, #0]
 800220a:	681a      	ldr	r2, [r3, #0]
 800220c:	3201      	adds	r2, #1
 800220e:	601a      	str	r2, [r3, #0]
 8002210:	bd08      	pop	{r3, pc}
 8002212:	bf00      	nop
 8002214:	20000ea0 	.word	0x20000ea0
 8002218:	20000e9c 	.word	0x20000e9c

0800221c <core_util_critical_section_exit>:
 800221c:	b508      	push	{r3, lr}
 800221e:	4b07      	ldr	r3, [pc, #28]	; (800223c <core_util_critical_section_exit+0x20>)
 8002220:	681a      	ldr	r2, [r3, #0]
 8002222:	b152      	cbz	r2, 800223a <core_util_critical_section_exit+0x1e>
 8002224:	f7ff ffde 	bl	80021e4 <core_util_are_interrupts_enabled>
 8002228:	681a      	ldr	r2, [r3, #0]
 800222a:	3a01      	subs	r2, #1
 800222c:	601a      	str	r2, [r3, #0]
 800222e:	681b      	ldr	r3, [r3, #0]
 8002230:	b91b      	cbnz	r3, 800223a <core_util_critical_section_exit+0x1e>
 8002232:	4b03      	ldr	r3, [pc, #12]	; (8002240 <core_util_critical_section_exit+0x24>)
 8002234:	781b      	ldrb	r3, [r3, #0]
 8002236:	b903      	cbnz	r3, 800223a <core_util_critical_section_exit+0x1e>
 8002238:	b662      	cpsie	i
 800223a:	bd08      	pop	{r3, pc}
 800223c:	20000ea0 	.word	0x20000ea0
 8002240:	20000e9c 	.word	0x20000e9c

08002244 <error>:
 8002244:	b40f      	push	{r0, r1, r2, r3}
 8002246:	2001      	movs	r0, #1
 8002248:	b508      	push	{r3, lr}
 800224a:	f003 fd3b 	bl	8005cc4 <__wrap_exit>

0800224e <default_idle_hook>:
 800224e:	f001 bd6a 	b.w	8003d26 <hal_sleep>
	...

08002254 <rtos_idle_loop>:
 8002254:	b508      	push	{r3, lr}
 8002256:	4c02      	ldr	r4, [pc, #8]	; (8002260 <rtos_idle_loop+0xc>)
 8002258:	6823      	ldr	r3, [r4, #0]
 800225a:	4798      	blx	r3
 800225c:	e7fc      	b.n	8002258 <rtos_idle_loop+0x4>
 800225e:	bf00      	nop
 8002260:	200001a4 	.word	0x200001a4

08002264 <pre_main>:
 8002264:	b508      	push	{r3, lr}
 8002266:	480b      	ldr	r0, [pc, #44]	; (8002294 <pre_main+0x30>)
 8002268:	f000 fd9c 	bl	8002da4 <osMutexCreate>
 800226c:	4b0a      	ldr	r3, [pc, #40]	; (8002298 <pre_main+0x34>)
 800226e:	6018      	str	r0, [r3, #0]
 8002270:	480a      	ldr	r0, [pc, #40]	; (800229c <pre_main+0x38>)
 8002272:	f000 fd97 	bl	8002da4 <osMutexCreate>
 8002276:	4b0a      	ldr	r3, [pc, #40]	; (80022a0 <pre_main+0x3c>)
 8002278:	6018      	str	r0, [r3, #0]
 800227a:	480a      	ldr	r0, [pc, #40]	; (80022a4 <pre_main+0x40>)
 800227c:	f000 fd92 	bl	8002da4 <osMutexCreate>
 8002280:	4b09      	ldr	r3, [pc, #36]	; (80022a8 <pre_main+0x44>)
 8002282:	6018      	str	r0, [r3, #0]
 8002284:	f004 fbdc 	bl	8006a40 <__libc_init_array>
 8002288:	2100      	movs	r1, #0
 800228a:	4608      	mov	r0, r1
 800228c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8002290:	f003 bcdb 	b.w	8005c4a <__wrap_main>
 8002294:	08007994 	.word	0x08007994
 8002298:	200027ec 	.word	0x200027ec
 800229c:	08007990 	.word	0x08007990
 80022a0:	20000eac 	.word	0x20000eac
 80022a4:	0800798c 	.word	0x0800798c
 80022a8:	20000ea4 	.word	0x20000ea4

080022ac <os_idle_demon>:
 80022ac:	f7ff bfd2 	b.w	8002254 <rtos_idle_loop>

080022b0 <os_error>:
 80022b0:	b510      	push	{r4, lr}
 80022b2:	4604      	mov	r4, r0
 80022b4:	f000 fce4 	bl	8002c80 <svcThreadGetId>
 80022b8:	4621      	mov	r1, r4
 80022ba:	4602      	mov	r2, r0
 80022bc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80022c0:	4801      	ldr	r0, [pc, #4]	; (80022c8 <os_error+0x18>)
 80022c2:	f7ff bfbf 	b.w	8002244 <error>
 80022c6:	bf00      	nop
 80022c8:	08007954 	.word	0x08007954

080022cc <sysThreadTerminate>:
 80022cc:	f003 bd18 	b.w	8005d00 <thread_terminate_hook>

080022d0 <set_stack_heap>:
 80022d0:	4a0b      	ldr	r2, [pc, #44]	; (8002300 <set_stack_heap+0x30>)
 80022d2:	4b0c      	ldr	r3, [pc, #48]	; (8002304 <set_stack_heap+0x34>)
 80022d4:	480c      	ldr	r0, [pc, #48]	; (8002308 <set_stack_heap+0x38>)
 80022d6:	b430      	push	{r4, r5}
 80022d8:	601a      	str	r2, [r3, #0]
 80022da:	f1c2 5300 	rsb	r3, r2, #536870912	; 0x20000000
 80022de:	f503 3300 	add.w	r3, r3, #131072	; 0x20000
 80022e2:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 80022e6:	4619      	mov	r1, r3
 80022e8:	bf28      	it	cs
 80022ea:	f44f 6180 	movcs.w	r1, #1024	; 0x400
 80022ee:	4d07      	ldr	r5, [pc, #28]	; (800230c <set_stack_heap+0x3c>)
 80022f0:	4c07      	ldr	r4, [pc, #28]	; (8002310 <set_stack_heap+0x40>)
 80022f2:	6001      	str	r1, [r0, #0]
 80022f4:	1a5b      	subs	r3, r3, r1
 80022f6:	441a      	add	r2, r3
 80022f8:	602a      	str	r2, [r5, #0]
 80022fa:	6023      	str	r3, [r4, #0]
 80022fc:	bc30      	pop	{r4, r5}
 80022fe:	4770      	bx	lr
 8002300:	20003008 	.word	0x20003008
 8002304:	20002508 	.word	0x20002508
 8002308:	20000eb0 	.word	0x20000eb0
 800230c:	20000eb4 	.word	0x20000eb4
 8002310:	20002504 	.word	0x20002504

08002314 <software_init_hook_rtos>:
 8002314:	f000 fe1a 	bl	8002f4c <osKernelInitialize>
 8002318:	f7ff ffda 	bl	80022d0 <set_stack_heap>
 800231c:	4803      	ldr	r0, [pc, #12]	; (800232c <software_init_hook_rtos+0x18>)
 800231e:	2100      	movs	r1, #0
 8002320:	f000 fdc8 	bl	8002eb4 <osThreadCreate>
 8002324:	f000 fc2e 	bl	8002b84 <osKernelStart>
 8002328:	e7fe      	b.n	8002328 <software_init_hook_rtos+0x14>
 800232a:	0000      	.short	0x0000
 800232c:	200001a8 	.word	0x200001a8

08002330 <__rtos_malloc_lock>:
 8002330:	4b02      	ldr	r3, [pc, #8]	; (800233c <__rtos_malloc_lock+0xc>)
 8002332:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8002336:	6818      	ldr	r0, [r3, #0]
 8002338:	f000 bd52 	b.w	8002de0 <osMutexWait>
 800233c:	20000eac 	.word	0x20000eac

08002340 <__rtos_malloc_unlock>:
 8002340:	4b01      	ldr	r3, [pc, #4]	; (8002348 <__rtos_malloc_unlock+0x8>)
 8002342:	6818      	ldr	r0, [r3, #0]
 8002344:	f000 bd74 	b.w	8002e30 <osMutexRelease>
 8002348:	20000eac 	.word	0x20000eac

0800234c <rt_put_prio>:
 800234c:	b530      	push	{r4, r5, lr}
 800234e:	7802      	ldrb	r2, [r0, #0]
 8002350:	788c      	ldrb	r4, [r1, #2]
 8002352:	6843      	ldr	r3, [r0, #4]
 8002354:	3a01      	subs	r2, #1
 8002356:	b2d2      	uxtb	r2, r2
 8002358:	b113      	cbz	r3, 8002360 <rt_put_prio+0x14>
 800235a:	789d      	ldrb	r5, [r3, #2]
 800235c:	42a5      	cmp	r5, r4
 800235e:	d207      	bcs.n	8002370 <rt_put_prio+0x24>
 8002360:	2a02      	cmp	r2, #2
 8002362:	604b      	str	r3, [r1, #4]
 8002364:	6041      	str	r1, [r0, #4]
 8002366:	d806      	bhi.n	8002376 <rt_put_prio+0x2a>
 8002368:	b103      	cbz	r3, 800236c <rt_put_prio+0x20>
 800236a:	6099      	str	r1, [r3, #8]
 800236c:	6088      	str	r0, [r1, #8]
 800236e:	bd30      	pop	{r4, r5, pc}
 8002370:	4618      	mov	r0, r3
 8002372:	685b      	ldr	r3, [r3, #4]
 8002374:	e7f0      	b.n	8002358 <rt_put_prio+0xc>
 8002376:	2300      	movs	r3, #0
 8002378:	608b      	str	r3, [r1, #8]
 800237a:	bd30      	pop	{r4, r5, pc}

0800237c <rt_get_first>:
 800237c:	7802      	ldrb	r2, [r0, #0]
 800237e:	6843      	ldr	r3, [r0, #4]
 8002380:	3a01      	subs	r2, #1
 8002382:	6859      	ldr	r1, [r3, #4]
 8002384:	6041      	str	r1, [r0, #4]
 8002386:	2a02      	cmp	r2, #2
 8002388:	f04f 0200 	mov.w	r2, #0
 800238c:	d805      	bhi.n	800239a <rt_get_first+0x1e>
 800238e:	b109      	cbz	r1, 8002394 <rt_get_first+0x18>
 8002390:	6088      	str	r0, [r1, #8]
 8002392:	605a      	str	r2, [r3, #4]
 8002394:	609a      	str	r2, [r3, #8]
 8002396:	4618      	mov	r0, r3
 8002398:	4770      	bx	lr
 800239a:	605a      	str	r2, [r3, #4]
 800239c:	e7fb      	b.n	8002396 <rt_get_first+0x1a>
	...

080023a0 <rt_put_rdy_first>:
 80023a0:	4b03      	ldr	r3, [pc, #12]	; (80023b0 <rt_put_rdy_first+0x10>)
 80023a2:	685a      	ldr	r2, [r3, #4]
 80023a4:	6042      	str	r2, [r0, #4]
 80023a6:	2200      	movs	r2, #0
 80023a8:	6082      	str	r2, [r0, #8]
 80023aa:	6058      	str	r0, [r3, #4]
 80023ac:	4770      	bx	lr
 80023ae:	bf00      	nop
 80023b0:	20002ee0 	.word	0x20002ee0

080023b4 <rt_put_dly>:
 80023b4:	4b10      	ldr	r3, [pc, #64]	; (80023f8 <rt_put_dly+0x44>)
 80023b6:	68da      	ldr	r2, [r3, #12]
 80023b8:	b510      	push	{r4, lr}
 80023ba:	b18a      	cbz	r2, 80023e0 <rt_put_dly+0x2c>
 80023bc:	8a9a      	ldrh	r2, [r3, #20]
 80023be:	68dc      	ldr	r4, [r3, #12]
 80023c0:	428a      	cmp	r2, r1
 80023c2:	d30c      	bcc.n	80023de <rt_put_dly+0x2a>
 80023c4:	60c4      	str	r4, [r0, #12]
 80023c6:	60d8      	str	r0, [r3, #12]
 80023c8:	68c4      	ldr	r4, [r0, #12]
 80023ca:	6103      	str	r3, [r0, #16]
 80023cc:	b104      	cbz	r4, 80023d0 <rt_put_dly+0x1c>
 80023ce:	6120      	str	r0, [r4, #16]
 80023d0:	1a52      	subs	r2, r2, r1
 80023d2:	b292      	uxth	r2, r2
 80023d4:	8282      	strh	r2, [r0, #20]
 80023d6:	8a99      	ldrh	r1, [r3, #20]
 80023d8:	1a8a      	subs	r2, r1, r2
 80023da:	829a      	strh	r2, [r3, #20]
 80023dc:	bd10      	pop	{r4, pc}
 80023de:	b93c      	cbnz	r4, 80023f0 <rt_put_dly+0x3c>
 80023e0:	2400      	movs	r4, #0
 80023e2:	1a8a      	subs	r2, r1, r2
 80023e4:	60c4      	str	r4, [r0, #12]
 80023e6:	60d8      	str	r0, [r3, #12]
 80023e8:	6103      	str	r3, [r0, #16]
 80023ea:	829a      	strh	r2, [r3, #20]
 80023ec:	8284      	strh	r4, [r0, #20]
 80023ee:	bd10      	pop	{r4, pc}
 80023f0:	8aa3      	ldrh	r3, [r4, #20]
 80023f2:	441a      	add	r2, r3
 80023f4:	4623      	mov	r3, r4
 80023f6:	e7e2      	b.n	80023be <rt_put_dly+0xa>
 80023f8:	20002ef8 	.word	0x20002ef8

080023fc <rt_dec_dly>:
 80023fc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8002400:	4d17      	ldr	r5, [pc, #92]	; (8002460 <rt_dec_dly+0x64>)
 8002402:	68eb      	ldr	r3, [r5, #12]
 8002404:	b153      	cbz	r3, 800241c <rt_dec_dly+0x20>
 8002406:	8aab      	ldrh	r3, [r5, #20]
 8002408:	4f16      	ldr	r7, [pc, #88]	; (8002464 <rt_dec_dly+0x68>)
 800240a:	f8df 805c 	ldr.w	r8, [pc, #92]	; 8002468 <rt_dec_dly+0x6c>
 800240e:	3b01      	subs	r3, #1
 8002410:	82ab      	strh	r3, [r5, #20]
 8002412:	2600      	movs	r6, #0
 8002414:	8aaa      	ldrh	r2, [r5, #20]
 8002416:	b90a      	cbnz	r2, 800241c <rt_dec_dly+0x20>
 8002418:	68ec      	ldr	r4, [r5, #12]
 800241a:	b90c      	cbnz	r4, 8002420 <rt_dec_dly+0x24>
 800241c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8002420:	68a3      	ldr	r3, [r4, #8]
 8002422:	b133      	cbz	r3, 8002432 <rt_dec_dly+0x36>
 8002424:	6861      	ldr	r1, [r4, #4]
 8002426:	6059      	str	r1, [r3, #4]
 8002428:	6861      	ldr	r1, [r4, #4]
 800242a:	b109      	cbz	r1, 8002430 <rt_dec_dly+0x34>
 800242c:	608b      	str	r3, [r1, #8]
 800242e:	6062      	str	r2, [r4, #4]
 8002430:	60a6      	str	r6, [r4, #8]
 8002432:	4621      	mov	r1, r4
 8002434:	4638      	mov	r0, r7
 8002436:	f7ff ff89 	bl	800234c <rt_put_prio>
 800243a:	8aa3      	ldrh	r3, [r4, #20]
 800243c:	82ab      	strh	r3, [r5, #20]
 800243e:	7863      	ldrb	r3, [r4, #1]
 8002440:	2b04      	cmp	r3, #4
 8002442:	bf01      	itttt	eq
 8002444:	f8d8 3000 	ldreq.w	r3, [r8]
 8002448:	8ae2      	ldrheq	r2, [r4, #22]
 800244a:	189b      	addeq	r3, r3, r2
 800244c:	82a3      	strheq	r3, [r4, #20]
 800244e:	2301      	movs	r3, #1
 8002450:	7063      	strb	r3, [r4, #1]
 8002452:	68e3      	ldr	r3, [r4, #12]
 8002454:	60eb      	str	r3, [r5, #12]
 8002456:	b10b      	cbz	r3, 800245c <rt_dec_dly+0x60>
 8002458:	611d      	str	r5, [r3, #16]
 800245a:	60e6      	str	r6, [r4, #12]
 800245c:	6126      	str	r6, [r4, #16]
 800245e:	e7d9      	b.n	8002414 <rt_dec_dly+0x18>
 8002460:	20002ef8 	.word	0x20002ef8
 8002464:	20002ee0 	.word	0x20002ee0
 8002468:	20002f74 	.word	0x20002f74

0800246c <rt_rmv_list>:
 800246c:	6883      	ldr	r3, [r0, #8]
 800246e:	b12b      	cbz	r3, 800247c <rt_rmv_list+0x10>
 8002470:	6842      	ldr	r2, [r0, #4]
 8002472:	605a      	str	r2, [r3, #4]
 8002474:	6842      	ldr	r2, [r0, #4]
 8002476:	b15a      	cbz	r2, 8002490 <rt_rmv_list+0x24>
 8002478:	6093      	str	r3, [r2, #8]
 800247a:	4770      	bx	lr
 800247c:	4b05      	ldr	r3, [pc, #20]	; (8002494 <rt_rmv_list+0x28>)
 800247e:	685a      	ldr	r2, [r3, #4]
 8002480:	4290      	cmp	r0, r2
 8002482:	d102      	bne.n	800248a <rt_rmv_list+0x1e>
 8002484:	6842      	ldr	r2, [r0, #4]
 8002486:	605a      	str	r2, [r3, #4]
 8002488:	4770      	bx	lr
 800248a:	4613      	mov	r3, r2
 800248c:	2a00      	cmp	r2, #0
 800248e:	d1f6      	bne.n	800247e <rt_rmv_list+0x12>
 8002490:	4770      	bx	lr
 8002492:	bf00      	nop
 8002494:	20002ee0 	.word	0x20002ee0

08002498 <rt_resort_prio>:
 8002498:	b510      	push	{r4, lr}
 800249a:	6884      	ldr	r4, [r0, #8]
 800249c:	4601      	mov	r1, r0
 800249e:	b92c      	cbnz	r4, 80024ac <rt_resort_prio+0x14>
 80024a0:	7843      	ldrb	r3, [r0, #1]
 80024a2:	2b01      	cmp	r3, #1
 80024a4:	d10d      	bne.n	80024c2 <rt_resort_prio+0x2a>
 80024a6:	4c07      	ldr	r4, [pc, #28]	; (80024c4 <rt_resort_prio+0x2c>)
 80024a8:	e003      	b.n	80024b2 <rt_resort_prio+0x1a>
 80024aa:	68a4      	ldr	r4, [r4, #8]
 80024ac:	7823      	ldrb	r3, [r4, #0]
 80024ae:	2b00      	cmp	r3, #0
 80024b0:	d0fb      	beq.n	80024aa <rt_resort_prio+0x12>
 80024b2:	4608      	mov	r0, r1
 80024b4:	f7ff ffda 	bl	800246c <rt_rmv_list>
 80024b8:	4620      	mov	r0, r4
 80024ba:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80024be:	f7ff bf45 	b.w	800234c <rt_put_prio>
 80024c2:	bd10      	pop	{r4, pc}
 80024c4:	20002ee0 	.word	0x20002ee0

080024c8 <rt_rmv_dly>:
 80024c8:	6903      	ldr	r3, [r0, #16]
 80024ca:	b510      	push	{r4, lr}
 80024cc:	b163      	cbz	r3, 80024e8 <rt_rmv_dly+0x20>
 80024ce:	68c2      	ldr	r2, [r0, #12]
 80024d0:	60da      	str	r2, [r3, #12]
 80024d2:	68c2      	ldr	r2, [r0, #12]
 80024d4:	b14a      	cbz	r2, 80024ea <rt_rmv_dly+0x22>
 80024d6:	8a99      	ldrh	r1, [r3, #20]
 80024d8:	8a84      	ldrh	r4, [r0, #20]
 80024da:	4421      	add	r1, r4
 80024dc:	8299      	strh	r1, [r3, #20]
 80024de:	6113      	str	r3, [r2, #16]
 80024e0:	2300      	movs	r3, #0
 80024e2:	60c3      	str	r3, [r0, #12]
 80024e4:	2300      	movs	r3, #0
 80024e6:	6103      	str	r3, [r0, #16]
 80024e8:	bd10      	pop	{r4, pc}
 80024ea:	829a      	strh	r2, [r3, #20]
 80024ec:	e7fa      	b.n	80024e4 <rt_rmv_dly+0x1c>
	...

080024f0 <rt_psq_enq>:
 80024f0:	b470      	push	{r4, r5, r6}
 80024f2:	4b11      	ldr	r3, [pc, #68]	; (8002538 <rt_psq_enq+0x48>)
 80024f4:	78dd      	ldrb	r5, [r3, #3]
 80024f6:	f3ef 8610 	mrs	r6, PRIMASK
 80024fa:	f3ef 8210 	mrs	r2, PRIMASK
 80024fe:	b672      	cpsid	i
 8002500:	789a      	ldrb	r2, [r3, #2]
 8002502:	4295      	cmp	r5, r2
 8002504:	d911      	bls.n	800252a <rt_psq_enq+0x3a>
 8002506:	3201      	adds	r2, #1
 8002508:	709a      	strb	r2, [r3, #2]
 800250a:	781a      	ldrb	r2, [r3, #0]
 800250c:	1c54      	adds	r4, r2, #1
 800250e:	42a5      	cmp	r5, r4
 8002510:	bf08      	it	eq
 8002512:	2400      	moveq	r4, #0
 8002514:	701c      	strb	r4, [r3, #0]
 8002516:	b906      	cbnz	r6, 800251a <rt_psq_enq+0x2a>
 8002518:	b662      	cpsie	i
 800251a:	4295      	cmp	r5, r2
 800251c:	d907      	bls.n	800252e <rt_psq_enq+0x3e>
 800251e:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8002522:	bc70      	pop	{r4, r5, r6}
 8002524:	6058      	str	r0, [r3, #4]
 8002526:	6099      	str	r1, [r3, #8]
 8002528:	4770      	bx	lr
 800252a:	2e00      	cmp	r6, #0
 800252c:	d0f4      	beq.n	8002518 <rt_psq_enq+0x28>
 800252e:	2002      	movs	r0, #2
 8002530:	bc70      	pop	{r4, r5, r6}
 8002532:	f7ff bebd 	b.w	80022b0 <os_error>
 8002536:	bf00      	nop
 8002538:	20002764 	.word	0x20002764

0800253c <rt_init_stack>:
 800253c:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800253e:	089b      	lsrs	r3, r3, #2
 8002540:	bf04      	itt	eq
 8002542:	4b22      	ldreq	r3, [pc, #136]	; (80025cc <rt_init_stack+0x90>)
 8002544:	881b      	ldrheq	r3, [r3, #0]
 8002546:	b5f0      	push	{r4, r5, r6, r7, lr}
 8002548:	6b05      	ldr	r5, [r0, #48]	; 0x30
 800254a:	bf08      	it	eq
 800254c:	089b      	lsreq	r3, r3, #2
 800254e:	eb05 0283 	add.w	r2, r5, r3, lsl #2
 8002552:	0754      	lsls	r4, r2, #29
 8002554:	bf48      	it	mi
 8002556:	3a04      	submi	r2, #4
 8002558:	f04f 7680 	mov.w	r6, #16777216	; 0x1000000
 800255c:	e902 0042 	stmdb	r2, {r1, r6}
 8002560:	f1a2 0440 	sub.w	r4, r2, #64	; 0x40
 8002564:	f1a2 0644 	sub.w	r6, r2, #68	; 0x44
 8002568:	f1a2 070c 	sub.w	r7, r2, #12
 800256c:	f04f 0e00 	mov.w	lr, #0
 8002570:	f846 ef04 	str.w	lr, [r6, #4]!
 8002574:	42be      	cmp	r6, r7
 8002576:	d1fb      	bne.n	8002570 <rt_init_stack+0x34>
 8002578:	69c6      	ldr	r6, [r0, #28]
 800257a:	f842 6c20 	str.w	r6, [r2, #-32]
 800257e:	6341      	str	r1, [r0, #52]	; 0x34
 8002580:	4912      	ldr	r1, [pc, #72]	; (80025cc <rt_init_stack+0x90>)
 8002582:	62c4      	str	r4, [r0, #44]	; 0x2c
 8002584:	6809      	ldr	r1, [r1, #0]
 8002586:	00c9      	lsls	r1, r1, #3
 8002588:	d517      	bpl.n	80025ba <rt_init_stack+0x7e>
 800258a:	2b11      	cmp	r3, #17
 800258c:	d915      	bls.n	80025ba <rt_init_stack+0x7e>
 800258e:	3b10      	subs	r3, #16
 8002590:	f06f 0107 	mvn.w	r1, #7
 8002594:	085b      	lsrs	r3, r3, #1
 8002596:	434b      	muls	r3, r1
 8002598:	f1a3 0138 	sub.w	r1, r3, #56	; 0x38
 800259c:	440a      	add	r2, r1
 800259e:	f04f 30cc 	mov.w	r0, #3435973836	; 0xcccccccc
 80025a2:	4621      	mov	r1, r4
 80025a4:	4291      	cmp	r1, r2
 80025a6:	d10b      	bne.n	80025c0 <rt_init_stack+0x84>
 80025a8:	3308      	adds	r3, #8
 80025aa:	441c      	add	r4, r3
 80025ac:	1f23      	subs	r3, r4, #4
 80025ae:	429d      	cmp	r5, r3
 80025b0:	bf3c      	itt	cc
 80025b2:	f04f 33cc 	movcc.w	r3, #3435973836	; 0xcccccccc
 80025b6:	f844 3c04 	strcc.w	r3, [r4, #-4]
 80025ba:	4b05      	ldr	r3, [pc, #20]	; (80025d0 <rt_init_stack+0x94>)
 80025bc:	602b      	str	r3, [r5, #0]
 80025be:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80025c0:	f841 0c04 	str.w	r0, [r1, #-4]
 80025c4:	f841 0d08 	str.w	r0, [r1, #-8]!
 80025c8:	e7ec      	b.n	80025a4 <rt_init_stack+0x68>
 80025ca:	bf00      	nop
 80025cc:	0800799c 	.word	0x0800799c
 80025d0:	e25a2ea5 	.word	0xe25a2ea5

080025d4 <rt_ret_val>:
 80025d4:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 80025d8:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 80025da:	b112      	cbz	r2, 80025e2 <rt_ret_val+0xe>
 80025dc:	3360      	adds	r3, #96	; 0x60
 80025de:	6019      	str	r1, [r3, #0]
 80025e0:	4770      	bx	lr
 80025e2:	3320      	adds	r3, #32
 80025e4:	e7fb      	b.n	80025de <rt_ret_val+0xa>

080025e6 <rt_ret_val2>:
 80025e6:	b510      	push	{r4, lr}
 80025e8:	f890 4025 	ldrb.w	r4, [r0, #37]	; 0x25
 80025ec:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 80025ee:	b11c      	cbz	r4, 80025f8 <rt_ret_val2+0x12>
 80025f0:	3360      	adds	r3, #96	; 0x60
 80025f2:	e883 0006 	stmia.w	r3, {r1, r2}
 80025f6:	bd10      	pop	{r4, pc}
 80025f8:	3320      	adds	r3, #32
 80025fa:	e7fa      	b.n	80025f2 <rt_ret_val2+0xc>

080025fc <rt_psh_req>:
 80025fc:	4b05      	ldr	r3, [pc, #20]	; (8002614 <rt_psh_req+0x18>)
 80025fe:	781b      	ldrb	r3, [r3, #0]
 8002600:	b923      	cbnz	r3, 800260c <rt_psh_req+0x10>
 8002602:	4b05      	ldr	r3, [pc, #20]	; (8002618 <rt_psh_req+0x1c>)
 8002604:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8002608:	601a      	str	r2, [r3, #0]
 800260a:	4770      	bx	lr
 800260c:	4b03      	ldr	r3, [pc, #12]	; (800261c <rt_psh_req+0x20>)
 800260e:	2201      	movs	r2, #1
 8002610:	701a      	strb	r2, [r3, #0]
 8002612:	4770      	bx	lr
 8002614:	20001f08 	.word	0x20001f08
 8002618:	e000ed04 	.word	0xe000ed04
 800261c:	20001f09 	.word	0x20001f09

08002620 <rt_pop_req>:
 8002620:	b538      	push	{r3, r4, r5, lr}
 8002622:	4b1a      	ldr	r3, [pc, #104]	; (800268c <rt_pop_req+0x6c>)
 8002624:	4c1a      	ldr	r4, [pc, #104]	; (8002690 <rt_pop_req+0x70>)
 8002626:	6818      	ldr	r0, [r3, #0]
 8002628:	2301      	movs	r3, #1
 800262a:	7043      	strb	r3, [r0, #1]
 800262c:	f7ff feb8 	bl	80023a0 <rt_put_rdy_first>
 8002630:	7865      	ldrb	r5, [r4, #1]
 8002632:	78a3      	ldrb	r3, [r4, #2]
 8002634:	b93b      	cbnz	r3, 8002646 <rt_pop_req+0x26>
 8002636:	4817      	ldr	r0, [pc, #92]	; (8002694 <rt_pop_req+0x74>)
 8002638:	7065      	strb	r5, [r4, #1]
 800263a:	f7ff fe9f 	bl	800237c <rt_get_first>
 800263e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8002642:	f000 bd5d 	b.w	8003100 <rt_switch_req>
 8002646:	eb04 03c5 	add.w	r3, r4, r5, lsl #3
 800264a:	6858      	ldr	r0, [r3, #4]
 800264c:	7802      	ldrb	r2, [r0, #0]
 800264e:	b99a      	cbnz	r2, 8002678 <rt_pop_req+0x58>
 8002650:	8919      	ldrh	r1, [r3, #8]
 8002652:	f000 f9bb 	bl	80029cc <rt_evt_psh>
 8002656:	78e3      	ldrb	r3, [r4, #3]
 8002658:	3501      	adds	r5, #1
 800265a:	429d      	cmp	r5, r3
 800265c:	bf08      	it	eq
 800265e:	2500      	moveq	r5, #0
 8002660:	f3ef 8310 	mrs	r3, PRIMASK
 8002664:	f3ef 8210 	mrs	r2, PRIMASK
 8002668:	b672      	cpsid	i
 800266a:	78a2      	ldrb	r2, [r4, #2]
 800266c:	3a01      	subs	r2, #1
 800266e:	70a2      	strb	r2, [r4, #2]
 8002670:	2b00      	cmp	r3, #0
 8002672:	d1de      	bne.n	8002632 <rt_pop_req+0x12>
 8002674:	b662      	cpsie	i
 8002676:	e7dc      	b.n	8002632 <rt_pop_req+0x12>
 8002678:	2a01      	cmp	r2, #1
 800267a:	d103      	bne.n	8002684 <rt_pop_req+0x64>
 800267c:	6899      	ldr	r1, [r3, #8]
 800267e:	f000 f933 	bl	80028e8 <rt_mbx_psh>
 8002682:	e7e8      	b.n	8002656 <rt_pop_req+0x36>
 8002684:	f001 f844 	bl	8003710 <rt_sem_psh>
 8002688:	e7e5      	b.n	8002656 <rt_pop_req+0x36>
 800268a:	bf00      	nop
 800268c:	20002f2c 	.word	0x20002f2c
 8002690:	20002764 	.word	0x20002764
 8002694:	20002ee0 	.word	0x20002ee0

08002698 <os_tick_init>:
 8002698:	4b08      	ldr	r3, [pc, #32]	; (80026bc <os_tick_init+0x24>)
 800269a:	681a      	ldr	r2, [r3, #0]
 800269c:	4b08      	ldr	r3, [pc, #32]	; (80026c0 <os_tick_init+0x28>)
 800269e:	601a      	str	r2, [r3, #0]
 80026a0:	2200      	movs	r2, #0
 80026a2:	605a      	str	r2, [r3, #4]
 80026a4:	2207      	movs	r2, #7
 80026a6:	f843 2c04 	str.w	r2, [r3, #-4]
 80026aa:	4a06      	ldr	r2, [pc, #24]	; (80026c4 <os_tick_init+0x2c>)
 80026ac:	6813      	ldr	r3, [r2, #0]
 80026ae:	f043 437f 	orr.w	r3, r3, #4278190080	; 0xff000000
 80026b2:	6013      	str	r3, [r2, #0]
 80026b4:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80026b8:	4770      	bx	lr
 80026ba:	bf00      	nop
 80026bc:	080079b4 	.word	0x080079b4
 80026c0:	e000e014 	.word	0xe000e014
 80026c4:	e000ed20 	.word	0xe000ed20

080026c8 <os_tick_irqack>:
 80026c8:	4770      	bx	lr
	...

080026cc <rt_systick>:
 80026cc:	b508      	push	{r3, lr}
 80026ce:	4b0b      	ldr	r3, [pc, #44]	; (80026fc <rt_systick+0x30>)
 80026d0:	6818      	ldr	r0, [r3, #0]
 80026d2:	2301      	movs	r3, #1
 80026d4:	7043      	strb	r3, [r0, #1]
 80026d6:	f7ff fe63 	bl	80023a0 <rt_put_rdy_first>
 80026da:	f000 f9ad 	bl	8002a38 <rt_chk_robin>
 80026de:	4a08      	ldr	r2, [pc, #32]	; (8002700 <rt_systick+0x34>)
 80026e0:	6813      	ldr	r3, [r2, #0]
 80026e2:	3301      	adds	r3, #1
 80026e4:	6013      	str	r3, [r2, #0]
 80026e6:	f7ff fe89 	bl	80023fc <rt_dec_dly>
 80026ea:	f000 fc91 	bl	8003010 <sysTimerTick>
 80026ee:	4805      	ldr	r0, [pc, #20]	; (8002704 <rt_systick+0x38>)
 80026f0:	f7ff fe44 	bl	800237c <rt_get_first>
 80026f4:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80026f8:	f000 bd02 	b.w	8003100 <rt_switch_req>
 80026fc:	20002f2c 	.word	0x20002f2c
 8002700:	20002f74 	.word	0x20002f74
 8002704:	20002ee0 	.word	0x20002ee0

08002708 <rt_stk_check>:
 8002708:	4b06      	ldr	r3, [pc, #24]	; (8002724 <rt_stk_check+0x1c>)
 800270a:	681a      	ldr	r2, [r3, #0]
 800270c:	6b13      	ldr	r3, [r2, #48]	; 0x30
 800270e:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 8002710:	4293      	cmp	r3, r2
 8002712:	d803      	bhi.n	800271c <rt_stk_check+0x14>
 8002714:	681a      	ldr	r2, [r3, #0]
 8002716:	4b04      	ldr	r3, [pc, #16]	; (8002728 <rt_stk_check+0x20>)
 8002718:	429a      	cmp	r2, r3
 800271a:	d002      	beq.n	8002722 <rt_stk_check+0x1a>
 800271c:	2001      	movs	r0, #1
 800271e:	f7ff bdc7 	b.w	80022b0 <os_error>
 8002722:	4770      	bx	lr
 8002724:	20002f2c 	.word	0x20002f2c
 8002728:	e25a2ea5 	.word	0xe25a2ea5

0800272c <_init_box>:
 800272c:	2a00      	cmp	r2, #0
 800272e:	bfbb      	ittet	lt
 8002730:	f022 4200 	biclt.w	r2, r2, #2147483648	; 0x80000000
 8002734:	3207      	addlt	r2, #7
 8002736:	3203      	addge	r2, #3
 8002738:	f022 0207 	biclt.w	r2, r2, #7
 800273c:	bfa8      	it	ge
 800273e:	f022 0203 	bicge.w	r2, r2, #3
 8002742:	b510      	push	{r4, lr}
 8002744:	bfb4      	ite	lt
 8002746:	2310      	movlt	r3, #16
 8002748:	230c      	movge	r3, #12
 800274a:	b192      	cbz	r2, 8002772 <_init_box+0x46>
 800274c:	18d4      	adds	r4, r2, r3
 800274e:	428c      	cmp	r4, r1
 8002750:	d80f      	bhi.n	8002772 <_init_box+0x46>
 8002752:	4401      	add	r1, r0
 8002754:	4403      	add	r3, r0
 8002756:	4254      	negs	r4, r2
 8002758:	6041      	str	r1, [r0, #4]
 800275a:	6003      	str	r3, [r0, #0]
 800275c:	6082      	str	r2, [r0, #8]
 800275e:	4421      	add	r1, r4
 8002760:	1898      	adds	r0, r3, r2
 8002762:	4281      	cmp	r1, r0
 8002764:	d302      	bcc.n	800276c <_init_box+0x40>
 8002766:	5100      	str	r0, [r0, r4]
 8002768:	4603      	mov	r3, r0
 800276a:	e7f9      	b.n	8002760 <_init_box+0x34>
 800276c:	2000      	movs	r0, #0
 800276e:	6018      	str	r0, [r3, #0]
 8002770:	bd10      	pop	{r4, pc}
 8002772:	2001      	movs	r0, #1
 8002774:	bd10      	pop	{r4, pc}

08002776 <rt_alloc_box>:
 8002776:	f3ef 8310 	mrs	r3, PRIMASK
 800277a:	b672      	cpsid	i
 800277c:	6802      	ldr	r2, [r0, #0]
 800277e:	f003 0301 	and.w	r3, r3, #1
 8002782:	b10a      	cbz	r2, 8002788 <rt_alloc_box+0x12>
 8002784:	6811      	ldr	r1, [r2, #0]
 8002786:	6001      	str	r1, [r0, #0]
 8002788:	b903      	cbnz	r3, 800278c <rt_alloc_box+0x16>
 800278a:	b662      	cpsie	i
 800278c:	4610      	mov	r0, r2
 800278e:	4770      	bx	lr

08002790 <rt_free_box>:
 8002790:	4281      	cmp	r1, r0
 8002792:	d30d      	bcc.n	80027b0 <rt_free_box+0x20>
 8002794:	6843      	ldr	r3, [r0, #4]
 8002796:	4299      	cmp	r1, r3
 8002798:	d20a      	bcs.n	80027b0 <rt_free_box+0x20>
 800279a:	f3ef 8310 	mrs	r3, PRIMASK
 800279e:	b672      	cpsid	i
 80027a0:	6802      	ldr	r2, [r0, #0]
 80027a2:	600a      	str	r2, [r1, #0]
 80027a4:	6001      	str	r1, [r0, #0]
 80027a6:	f013 0001 	ands.w	r0, r3, #1
 80027aa:	d103      	bne.n	80027b4 <rt_free_box+0x24>
 80027ac:	b662      	cpsie	i
 80027ae:	4770      	bx	lr
 80027b0:	2001      	movs	r0, #1
 80027b2:	4770      	bx	lr
 80027b4:	2000      	movs	r0, #0
 80027b6:	4770      	bx	lr

080027b8 <rt_mbx_init>:
 80027b8:	2301      	movs	r3, #1
 80027ba:	3910      	subs	r1, #16
 80027bc:	7003      	strb	r3, [r0, #0]
 80027be:	0889      	lsrs	r1, r1, #2
 80027c0:	2300      	movs	r3, #0
 80027c2:	7043      	strb	r3, [r0, #1]
 80027c4:	7083      	strb	r3, [r0, #2]
 80027c6:	6043      	str	r3, [r0, #4]
 80027c8:	8103      	strh	r3, [r0, #8]
 80027ca:	8143      	strh	r3, [r0, #10]
 80027cc:	8183      	strh	r3, [r0, #12]
 80027ce:	81c1      	strh	r1, [r0, #14]
 80027d0:	4770      	bx	lr
	...

080027d4 <rt_mbx_wait>:
 80027d4:	b570      	push	{r4, r5, r6, lr}
 80027d6:	8985      	ldrh	r5, [r0, #12]
 80027d8:	4604      	mov	r4, r0
 80027da:	4616      	mov	r6, r2
 80027dc:	2d00      	cmp	r5, #0
 80027de:	d038      	beq.n	8002852 <rt_mbx_wait+0x7e>
 80027e0:	8943      	ldrh	r3, [r0, #10]
 80027e2:	1d1a      	adds	r2, r3, #4
 80027e4:	3301      	adds	r3, #1
 80027e6:	f850 2022 	ldr.w	r2, [r0, r2, lsl #2]
 80027ea:	600a      	str	r2, [r1, #0]
 80027ec:	89c2      	ldrh	r2, [r0, #14]
 80027ee:	b29b      	uxth	r3, r3
 80027f0:	429a      	cmp	r2, r3
 80027f2:	8143      	strh	r3, [r0, #10]
 80027f4:	bf04      	itt	eq
 80027f6:	2300      	moveq	r3, #0
 80027f8:	8143      	strheq	r3, [r0, #10]
 80027fa:	6843      	ldr	r3, [r0, #4]
 80027fc:	b1f3      	cbz	r3, 800283c <rt_mbx_wait+0x68>
 80027fe:	7843      	ldrb	r3, [r0, #1]
 8002800:	2b02      	cmp	r3, #2
 8002802:	d11b      	bne.n	800283c <rt_mbx_wait+0x68>
 8002804:	f7ff fdba 	bl	800237c <rt_get_first>
 8002808:	2100      	movs	r1, #0
 800280a:	4605      	mov	r5, r0
 800280c:	f7ff fee2 	bl	80025d4 <rt_ret_val>
 8002810:	8923      	ldrh	r3, [r4, #8]
 8002812:	69e9      	ldr	r1, [r5, #28]
 8002814:	1d1a      	adds	r2, r3, #4
 8002816:	3301      	adds	r3, #1
 8002818:	f844 1022 	str.w	r1, [r4, r2, lsl #2]
 800281c:	89e2      	ldrh	r2, [r4, #14]
 800281e:	b29b      	uxth	r3, r3
 8002820:	429a      	cmp	r2, r3
 8002822:	8123      	strh	r3, [r4, #8]
 8002824:	bf08      	it	eq
 8002826:	2300      	moveq	r3, #0
 8002828:	4628      	mov	r0, r5
 800282a:	bf08      	it	eq
 800282c:	8123      	strheq	r3, [r4, #8]
 800282e:	f7ff fe4b 	bl	80024c8 <rt_rmv_dly>
 8002832:	4628      	mov	r0, r5
 8002834:	f000 fc7e 	bl	8003134 <rt_dispatch>
 8002838:	2000      	movs	r0, #0
 800283a:	bd70      	pop	{r4, r5, r6, pc}
 800283c:	f3ef 8010 	mrs	r0, PRIMASK
 8002840:	f3ef 8310 	mrs	r3, PRIMASK
 8002844:	b672      	cpsid	i
 8002846:	3d01      	subs	r5, #1
 8002848:	81a5      	strh	r5, [r4, #12]
 800284a:	2800      	cmp	r0, #0
 800284c:	d1f4      	bne.n	8002838 <rt_mbx_wait+0x64>
 800284e:	b662      	cpsie	i
 8002850:	bd70      	pop	{r4, r5, r6, pc}
 8002852:	b14a      	cbz	r2, 8002868 <rt_mbx_wait+0x94>
 8002854:	6842      	ldr	r2, [r0, #4]
 8002856:	4b09      	ldr	r3, [pc, #36]	; (800287c <rt_mbx_wait+0xa8>)
 8002858:	b142      	cbz	r2, 800286c <rt_mbx_wait+0x98>
 800285a:	6819      	ldr	r1, [r3, #0]
 800285c:	f7ff fd76 	bl	800234c <rt_put_prio>
 8002860:	2108      	movs	r1, #8
 8002862:	4630      	mov	r0, r6
 8002864:	f000 fc8a 	bl	800317c <rt_block>
 8002868:	2001      	movs	r0, #1
 800286a:	bd70      	pop	{r4, r5, r6, pc}
 800286c:	681b      	ldr	r3, [r3, #0]
 800286e:	6043      	str	r3, [r0, #4]
 8002870:	605a      	str	r2, [r3, #4]
 8002872:	6098      	str	r0, [r3, #8]
 8002874:	2301      	movs	r3, #1
 8002876:	7043      	strb	r3, [r0, #1]
 8002878:	e7f2      	b.n	8002860 <rt_mbx_wait+0x8c>
 800287a:	bf00      	nop
 800287c:	20002f2c 	.word	0x20002f2c

08002880 <rt_mbx_check>:
 8002880:	89c2      	ldrh	r2, [r0, #14]
 8002882:	8980      	ldrh	r0, [r0, #12]
 8002884:	1a10      	subs	r0, r2, r0
 8002886:	4770      	bx	lr

08002888 <isr_mbx_send>:
 8002888:	b508      	push	{r3, lr}
 800288a:	f7ff fe31 	bl	80024f0 <rt_psq_enq>
 800288e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8002892:	f7ff beb3 	b.w	80025fc <rt_psh_req>

08002896 <isr_mbx_receive>:
 8002896:	8983      	ldrh	r3, [r0, #12]
 8002898:	b510      	push	{r4, lr}
 800289a:	4604      	mov	r4, r0
 800289c:	b30b      	cbz	r3, 80028e2 <isr_mbx_receive+0x4c>
 800289e:	8943      	ldrh	r3, [r0, #10]
 80028a0:	3304      	adds	r3, #4
 80028a2:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 80028a6:	600b      	str	r3, [r1, #0]
 80028a8:	7843      	ldrb	r3, [r0, #1]
 80028aa:	2b02      	cmp	r3, #2
 80028ac:	d104      	bne.n	80028b8 <isr_mbx_receive+0x22>
 80028ae:	2100      	movs	r1, #0
 80028b0:	f7ff fe1e 	bl	80024f0 <rt_psq_enq>
 80028b4:	f7ff fea2 	bl	80025fc <rt_psh_req>
 80028b8:	f3ef 8310 	mrs	r3, PRIMASK
 80028bc:	f3ef 8210 	mrs	r2, PRIMASK
 80028c0:	b672      	cpsid	i
 80028c2:	89a2      	ldrh	r2, [r4, #12]
 80028c4:	3a01      	subs	r2, #1
 80028c6:	81a2      	strh	r2, [r4, #12]
 80028c8:	b903      	cbnz	r3, 80028cc <isr_mbx_receive+0x36>
 80028ca:	b662      	cpsie	i
 80028cc:	8963      	ldrh	r3, [r4, #10]
 80028ce:	89e2      	ldrh	r2, [r4, #14]
 80028d0:	3301      	adds	r3, #1
 80028d2:	b29b      	uxth	r3, r3
 80028d4:	429a      	cmp	r2, r3
 80028d6:	8163      	strh	r3, [r4, #10]
 80028d8:	d101      	bne.n	80028de <isr_mbx_receive+0x48>
 80028da:	2300      	movs	r3, #0
 80028dc:	8163      	strh	r3, [r4, #10]
 80028de:	2004      	movs	r0, #4
 80028e0:	bd10      	pop	{r4, pc}
 80028e2:	4618      	mov	r0, r3
 80028e4:	bd10      	pop	{r4, pc}
	...

080028e8 <rt_mbx_psh>:
 80028e8:	6843      	ldr	r3, [r0, #4]
 80028ea:	b570      	push	{r4, r5, r6, lr}
 80028ec:	4604      	mov	r4, r0
 80028ee:	460e      	mov	r6, r1
 80028f0:	2b00      	cmp	r3, #0
 80028f2:	d04b      	beq.n	800298c <rt_mbx_psh+0xa4>
 80028f4:	7845      	ldrb	r5, [r0, #1]
 80028f6:	2d02      	cmp	r5, #2
 80028f8:	d020      	beq.n	800293c <rt_mbx_psh+0x54>
 80028fa:	2d03      	cmp	r5, #3
 80028fc:	d00a      	beq.n	8002914 <rt_mbx_psh+0x2c>
 80028fe:	2d01      	cmp	r5, #1
 8002900:	d161      	bne.n	80029c6 <rt_mbx_psh+0xde>
 8002902:	f7ff fd3b 	bl	800237c <rt_get_first>
 8002906:	4604      	mov	r4, r0
 8002908:	4632      	mov	r2, r6
 800290a:	2110      	movs	r1, #16
 800290c:	f7ff fe6b 	bl	80025e6 <rt_ret_val2>
 8002910:	7065      	strb	r5, [r4, #1]
 8002912:	e00e      	b.n	8002932 <rt_mbx_psh+0x4a>
 8002914:	4608      	mov	r0, r1
 8002916:	f7ff ff2e 	bl	8002776 <rt_alloc_box>
 800291a:	4605      	mov	r5, r0
 800291c:	2800      	cmp	r0, #0
 800291e:	d052      	beq.n	80029c6 <rt_mbx_psh+0xde>
 8002920:	4620      	mov	r0, r4
 8002922:	f7ff fd2b 	bl	800237c <rt_get_first>
 8002926:	4629      	mov	r1, r5
 8002928:	4604      	mov	r4, r0
 800292a:	f7ff fe53 	bl	80025d4 <rt_ret_val>
 800292e:	2301      	movs	r3, #1
 8002930:	7063      	strb	r3, [r4, #1]
 8002932:	4620      	mov	r0, r4
 8002934:	f7ff fdc8 	bl	80024c8 <rt_rmv_dly>
 8002938:	4621      	mov	r1, r4
 800293a:	e022      	b.n	8002982 <rt_mbx_psh+0x9a>
 800293c:	f7ff fd1e 	bl	800237c <rt_get_first>
 8002940:	2100      	movs	r1, #0
 8002942:	4605      	mov	r5, r0
 8002944:	f7ff fe46 	bl	80025d4 <rt_ret_val>
 8002948:	8923      	ldrh	r3, [r4, #8]
 800294a:	69e9      	ldr	r1, [r5, #28]
 800294c:	1d1a      	adds	r2, r3, #4
 800294e:	f844 1022 	str.w	r1, [r4, r2, lsl #2]
 8002952:	f3ef 8210 	mrs	r2, PRIMASK
 8002956:	f3ef 8110 	mrs	r1, PRIMASK
 800295a:	b672      	cpsid	i
 800295c:	89a1      	ldrh	r1, [r4, #12]
 800295e:	3101      	adds	r1, #1
 8002960:	81a1      	strh	r1, [r4, #12]
 8002962:	b902      	cbnz	r2, 8002966 <rt_mbx_psh+0x7e>
 8002964:	b662      	cpsie	i
 8002966:	89e2      	ldrh	r2, [r4, #14]
 8002968:	3301      	adds	r3, #1
 800296a:	b29b      	uxth	r3, r3
 800296c:	429a      	cmp	r2, r3
 800296e:	8123      	strh	r3, [r4, #8]
 8002970:	bf04      	itt	eq
 8002972:	2300      	moveq	r3, #0
 8002974:	8123      	strheq	r3, [r4, #8]
 8002976:	2301      	movs	r3, #1
 8002978:	706b      	strb	r3, [r5, #1]
 800297a:	4628      	mov	r0, r5
 800297c:	f7ff fda4 	bl	80024c8 <rt_rmv_dly>
 8002980:	4629      	mov	r1, r5
 8002982:	4811      	ldr	r0, [pc, #68]	; (80029c8 <rt_mbx_psh+0xe0>)
 8002984:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8002988:	f7ff bce0 	b.w	800234c <rt_put_prio>
 800298c:	8980      	ldrh	r0, [r0, #12]
 800298e:	89e1      	ldrh	r1, [r4, #14]
 8002990:	4288      	cmp	r0, r1
 8002992:	d213      	bcs.n	80029bc <rt_mbx_psh+0xd4>
 8002994:	8923      	ldrh	r3, [r4, #8]
 8002996:	1d1a      	adds	r2, r3, #4
 8002998:	f844 6022 	str.w	r6, [r4, r2, lsl #2]
 800299c:	f3ef 8210 	mrs	r2, PRIMASK
 80029a0:	f3ef 8510 	mrs	r5, PRIMASK
 80029a4:	b672      	cpsid	i
 80029a6:	3001      	adds	r0, #1
 80029a8:	81a0      	strh	r0, [r4, #12]
 80029aa:	b902      	cbnz	r2, 80029ae <rt_mbx_psh+0xc6>
 80029ac:	b662      	cpsie	i
 80029ae:	3301      	adds	r3, #1
 80029b0:	b29b      	uxth	r3, r3
 80029b2:	4299      	cmp	r1, r3
 80029b4:	bf08      	it	eq
 80029b6:	2300      	moveq	r3, #0
 80029b8:	8123      	strh	r3, [r4, #8]
 80029ba:	bd70      	pop	{r4, r5, r6, pc}
 80029bc:	2003      	movs	r0, #3
 80029be:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80029c2:	f7ff bc75 	b.w	80022b0 <os_error>
 80029c6:	bd70      	pop	{r4, r5, r6, pc}
 80029c8:	20002ee0 	.word	0x20002ee0

080029cc <rt_evt_psh>:
 80029cc:	b510      	push	{r4, lr}
 80029ce:	8b03      	ldrh	r3, [r0, #24]
 80029d0:	7842      	ldrb	r2, [r0, #1]
 80029d2:	4319      	orrs	r1, r3
 80029d4:	2a06      	cmp	r2, #6
 80029d6:	4604      	mov	r4, r0
 80029d8:	8301      	strh	r1, [r0, #24]
 80029da:	8b43      	ldrh	r3, [r0, #26]
 80029dc:	d115      	bne.n	8002a0a <rt_evt_psh+0x3e>
 80029de:	ea33 0201 	bics.w	r2, r3, r1
 80029e2:	d119      	bne.n	8002a18 <rt_evt_psh+0x4c>
 80029e4:	ea21 0103 	bic.w	r1, r1, r3
 80029e8:	8321      	strh	r1, [r4, #24]
 80029ea:	4620      	mov	r0, r4
 80029ec:	f7ff fd6c 	bl	80024c8 <rt_rmv_dly>
 80029f0:	2301      	movs	r3, #1
 80029f2:	4620      	mov	r0, r4
 80029f4:	7063      	strb	r3, [r4, #1]
 80029f6:	8b62      	ldrh	r2, [r4, #26]
 80029f8:	2108      	movs	r1, #8
 80029fa:	f7ff fdf4 	bl	80025e6 <rt_ret_val2>
 80029fe:	4621      	mov	r1, r4
 8002a00:	4806      	ldr	r0, [pc, #24]	; (8002a1c <rt_evt_psh+0x50>)
 8002a02:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8002a06:	f7ff bca1 	b.w	800234c <rt_put_prio>
 8002a0a:	2a05      	cmp	r2, #5
 8002a0c:	d104      	bne.n	8002a18 <rt_evt_psh+0x4c>
 8002a0e:	ea11 0203 	ands.w	r2, r1, r3
 8002a12:	d001      	beq.n	8002a18 <rt_evt_psh+0x4c>
 8002a14:	8342      	strh	r2, [r0, #26]
 8002a16:	e7e5      	b.n	80029e4 <rt_evt_psh+0x18>
 8002a18:	bd10      	pop	{r4, pc}
 8002a1a:	bf00      	nop
 8002a1c:	20002ee0 	.word	0x20002ee0

08002a20 <rt_init_robin>:
 8002a20:	4b03      	ldr	r3, [pc, #12]	; (8002a30 <rt_init_robin+0x10>)
 8002a22:	2200      	movs	r2, #0
 8002a24:	601a      	str	r2, [r3, #0]
 8002a26:	4a03      	ldr	r2, [pc, #12]	; (8002a34 <rt_init_robin+0x14>)
 8002a28:	6812      	ldr	r2, [r2, #0]
 8002a2a:	80da      	strh	r2, [r3, #6]
 8002a2c:	4770      	bx	lr
 8002a2e:	bf00      	nop
 8002a30:	20002f18 	.word	0x20002f18
 8002a34:	08007998 	.word	0x08007998

08002a38 <rt_chk_robin>:
 8002a38:	b508      	push	{r3, lr}
 8002a3a:	4b0e      	ldr	r3, [pc, #56]	; (8002a74 <rt_chk_robin+0x3c>)
 8002a3c:	685a      	ldr	r2, [r3, #4]
 8002a3e:	4b0e      	ldr	r3, [pc, #56]	; (8002a78 <rt_chk_robin+0x40>)
 8002a40:	6819      	ldr	r1, [r3, #0]
 8002a42:	4291      	cmp	r1, r2
 8002a44:	490d      	ldr	r1, [pc, #52]	; (8002a7c <rt_chk_robin+0x44>)
 8002a46:	d005      	beq.n	8002a54 <rt_chk_robin+0x1c>
 8002a48:	601a      	str	r2, [r3, #0]
 8002a4a:	88da      	ldrh	r2, [r3, #6]
 8002a4c:	6808      	ldr	r0, [r1, #0]
 8002a4e:	3a01      	subs	r2, #1
 8002a50:	4402      	add	r2, r0
 8002a52:	809a      	strh	r2, [r3, #4]
 8002a54:	8898      	ldrh	r0, [r3, #4]
 8002a56:	880a      	ldrh	r2, [r1, #0]
 8002a58:	4290      	cmp	r0, r2
 8002a5a:	d10a      	bne.n	8002a72 <rt_chk_robin+0x3a>
 8002a5c:	2200      	movs	r2, #0
 8002a5e:	4805      	ldr	r0, [pc, #20]	; (8002a74 <rt_chk_robin+0x3c>)
 8002a60:	601a      	str	r2, [r3, #0]
 8002a62:	f7ff fc8b 	bl	800237c <rt_get_first>
 8002a66:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8002a6a:	4601      	mov	r1, r0
 8002a6c:	4801      	ldr	r0, [pc, #4]	; (8002a74 <rt_chk_robin+0x3c>)
 8002a6e:	f7ff bc6d 	b.w	800234c <rt_put_prio>
 8002a72:	bd08      	pop	{r3, pc}
 8002a74:	20002ee0 	.word	0x20002ee0
 8002a78:	20002f18 	.word	0x20002f18
 8002a7c:	20002f74 	.word	0x20002f74

08002a80 <rt_timer_insert>:
 8002a80:	4a0b      	ldr	r2, [pc, #44]	; (8002ab0 <rt_timer_insert+0x30>)
 8002a82:	6813      	ldr	r3, [r2, #0]
 8002a84:	b530      	push	{r4, r5, lr}
 8002a86:	2400      	movs	r4, #0
 8002a88:	b943      	cbnz	r3, 8002a9c <rt_timer_insert+0x1c>
 8002a8a:	6003      	str	r3, [r0, #0]
 8002a8c:	6081      	str	r1, [r0, #8]
 8002a8e:	b113      	cbz	r3, 8002a96 <rt_timer_insert+0x16>
 8002a90:	689d      	ldr	r5, [r3, #8]
 8002a92:	1a69      	subs	r1, r5, r1
 8002a94:	6099      	str	r1, [r3, #8]
 8002a96:	b144      	cbz	r4, 8002aaa <rt_timer_insert+0x2a>
 8002a98:	6020      	str	r0, [r4, #0]
 8002a9a:	bd30      	pop	{r4, r5, pc}
 8002a9c:	689d      	ldr	r5, [r3, #8]
 8002a9e:	42a9      	cmp	r1, r5
 8002aa0:	d3f3      	bcc.n	8002a8a <rt_timer_insert+0xa>
 8002aa2:	461c      	mov	r4, r3
 8002aa4:	1b49      	subs	r1, r1, r5
 8002aa6:	681b      	ldr	r3, [r3, #0]
 8002aa8:	e7ee      	b.n	8002a88 <rt_timer_insert+0x8>
 8002aaa:	6010      	str	r0, [r2, #0]
 8002aac:	bd30      	pop	{r4, r5, pc}
 8002aae:	bf00      	nop
 8002ab0:	20002f28 	.word	0x20002f28

08002ab4 <rt_ms2tick>:
 8002ab4:	b1c0      	cbz	r0, 8002ae8 <rt_ms2tick+0x34>
 8002ab6:	1c43      	adds	r3, r0, #1
 8002ab8:	d011      	beq.n	8002ade <rt_ms2tick+0x2a>
 8002aba:	4b0c      	ldr	r3, [pc, #48]	; (8002aec <rt_ms2tick+0x38>)
 8002abc:	4298      	cmp	r0, r3
 8002abe:	d811      	bhi.n	8002ae4 <rt_ms2tick+0x30>
 8002ac0:	4b0b      	ldr	r3, [pc, #44]	; (8002af0 <rt_ms2tick+0x3c>)
 8002ac2:	681b      	ldr	r3, [r3, #0]
 8002ac4:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 8002ac8:	1e5a      	subs	r2, r3, #1
 8002aca:	fb01 2000 	mla	r0, r1, r0, r2
 8002ace:	fbb0 f3f3 	udiv	r3, r0, r3
 8002ad2:	f64f 70fe 	movw	r0, #65534	; 0xfffe
 8002ad6:	4283      	cmp	r3, r0
 8002ad8:	d806      	bhi.n	8002ae8 <rt_ms2tick+0x34>
 8002ada:	b298      	uxth	r0, r3
 8002adc:	4770      	bx	lr
 8002ade:	f64f 70ff 	movw	r0, #65535	; 0xffff
 8002ae2:	4770      	bx	lr
 8002ae4:	f64f 70fe 	movw	r0, #65534	; 0xfffe
 8002ae8:	4770      	bx	lr
 8002aea:	bf00      	nop
 8002aec:	003d0900 	.word	0x003d0900
 8002af0:	08007950 	.word	0x08007950

08002af4 <rt_tid2ptcb>:
 8002af4:	b138      	cbz	r0, 8002b06 <rt_tid2ptcb+0x12>
 8002af6:	0783      	lsls	r3, r0, #30
 8002af8:	d104      	bne.n	8002b04 <rt_tid2ptcb+0x10>
 8002afa:	7803      	ldrb	r3, [r0, #0]
 8002afc:	2b00      	cmp	r3, #0
 8002afe:	bf18      	it	ne
 8002b00:	2000      	movne	r0, #0
 8002b02:	4770      	bx	lr
 8002b04:	2000      	movs	r0, #0
 8002b06:	4770      	bx	lr

08002b08 <svcKernelStart>:
 8002b08:	b5b0      	push	{r4, r5, r7, lr}
 8002b0a:	4d0e      	ldr	r5, [pc, #56]	; (8002b44 <svcKernelStart+0x3c>)
 8002b0c:	7828      	ldrb	r0, [r5, #0]
 8002b0e:	af00      	add	r7, sp, #0
 8002b10:	b9a8      	cbnz	r0, 8002b3e <svcKernelStart+0x36>
 8002b12:	4c0d      	ldr	r4, [pc, #52]	; (8002b48 <svcKernelStart+0x40>)
 8002b14:	6823      	ldr	r3, [r4, #0]
 8002b16:	f893 1024 	ldrb.w	r1, [r3, #36]	; 0x24
 8002b1a:	f000 fb51 	bl	80031c0 <rt_tsk_prio>
 8002b1e:	6823      	ldr	r3, [r4, #0]
 8002b20:	78da      	ldrb	r2, [r3, #3]
 8002b22:	2aff      	cmp	r2, #255	; 0xff
 8002b24:	d103      	bne.n	8002b2e <svcKernelStart+0x26>
 8002b26:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8002b28:	3220      	adds	r2, #32
 8002b2a:	f382 8809 	msr	PSP, r2
 8002b2e:	6862      	ldr	r2, [r4, #4]
 8002b30:	b90a      	cbnz	r2, 8002b36 <svcKernelStart+0x2e>
 8002b32:	e884 000c 	stmia.w	r4, {r2, r3}
 8002b36:	f000 fcfb 	bl	8003530 <rt_sys_start>
 8002b3a:	2301      	movs	r3, #1
 8002b3c:	702b      	strb	r3, [r5, #0]
 8002b3e:	2000      	movs	r0, #0
 8002b40:	bdb0      	pop	{r4, r5, r7, pc}
 8002b42:	bf00      	nop
 8002b44:	20002f25 	.word	0x20002f25
 8002b48:	20002f2c 	.word	0x20002f2c

08002b4c <svcKernelRunning>:
 8002b4c:	4b01      	ldr	r3, [pc, #4]	; (8002b54 <svcKernelRunning+0x8>)
 8002b4e:	7818      	ldrb	r0, [r3, #0]
 8002b50:	4770      	bx	lr
 8002b52:	bf00      	nop
 8002b54:	20002f25 	.word	0x20002f25

08002b58 <osKernelRunning>:
 8002b58:	b510      	push	{r4, lr}
 8002b5a:	f3ef 8410 	mrs	r4, PRIMASK
 8002b5e:	b934      	cbnz	r4, 8002b6e <osKernelRunning+0x16>
 8002b60:	f3ef 8405 	mrs	r4, IPSR
 8002b64:	b91c      	cbnz	r4, 8002b6e <osKernelRunning+0x16>
 8002b66:	f3ef 8414 	mrs	r4, CONTROL
 8002b6a:	07e4      	lsls	r4, r4, #31
 8002b6c:	d402      	bmi.n	8002b74 <osKernelRunning+0x1c>
 8002b6e:	4b03      	ldr	r3, [pc, #12]	; (8002b7c <osKernelRunning+0x24>)
 8002b70:	7818      	ldrb	r0, [r3, #0]
 8002b72:	bd10      	pop	{r4, pc}
 8002b74:	f8df c008 	ldr.w	r12, [pc, #8]	; 8002b80 <osKernelRunning+0x28>
 8002b78:	df00      	svc	0
 8002b7a:	bd10      	pop	{r4, pc}
 8002b7c:	20002f25 	.word	0x20002f25
 8002b80:	08002b4d 	.word	0x08002b4d

08002b84 <osKernelStart>:
 8002b84:	b590      	push	{r4, r7, lr}
 8002b86:	b089      	sub	sp, #36	; 0x24
 8002b88:	af00      	add	r7, sp, #0
 8002b8a:	f3ef 8310 	mrs	r3, PRIMASK
 8002b8e:	2b00      	cmp	r3, #0
 8002b90:	d137      	bne.n	8002c02 <osKernelStart+0x7e>
 8002b92:	f3ef 8305 	mrs	r3, IPSR
 8002b96:	2b00      	cmp	r3, #0
 8002b98:	d133      	bne.n	8002c02 <osKernelStart+0x7e>
 8002b9a:	f7ff ffdd 	bl	8002b58 <osKernelRunning>
 8002b9e:	b928      	cbnz	r0, 8002bac <osKernelStart+0x28>
 8002ba0:	4c19      	ldr	r4, [pc, #100]	; (8002c08 <osKernelStart+0x84>)
 8002ba2:	6824      	ldr	r4, [r4, #0]
 8002ba4:	b114      	cbz	r4, 8002bac <osKernelStart+0x28>
 8002ba6:	6864      	ldr	r4, [r4, #4]
 8002ba8:	b104      	cbz	r4, 8002bac <osKernelStart+0x28>
 8002baa:	47a0      	blx	r4
 8002bac:	f3ef 8414 	mrs	r4, CONTROL
 8002bb0:	f004 0403 	and.w	r4, r4, #3
 8002bb4:	2c02      	cmp	r4, #2
 8002bb6:	d018      	beq.n	8002bea <osKernelStart+0x66>
 8002bb8:	2c03      	cmp	r4, #3
 8002bba:	d01c      	beq.n	8002bf6 <osKernelStart+0x72>
 8002bbc:	2c01      	cmp	r4, #1
 8002bbe:	d01e      	beq.n	8002bfe <osKernelStart+0x7a>
 8002bc0:	f107 0420 	add.w	r4, r7, #32
 8002bc4:	f384 8809 	msr	PSP, r4
 8002bc8:	4c10      	ldr	r4, [pc, #64]	; (8002c0c <osKernelStart+0x88>)
 8002bca:	7824      	ldrb	r4, [r4, #0]
 8002bcc:	07e4      	lsls	r4, r4, #31
 8002bce:	d510      	bpl.n	8002bf2 <osKernelStart+0x6e>
 8002bd0:	2402      	movs	r4, #2
 8002bd2:	f384 8814 	msr	CONTROL, r4
 8002bd6:	f3bf 8f4f 	dsb	sy
 8002bda:	f3bf 8f6f 	isb	sy
 8002bde:	f8df c030 	ldr.w	r12, [pc, #48]	; 8002c10 <osKernelStart+0x8c>
 8002be2:	df00      	svc	0
 8002be4:	3724      	adds	r7, #36	; 0x24
 8002be6:	46bd      	mov	sp, r7
 8002be8:	bd90      	pop	{r4, r7, pc}
 8002bea:	4c08      	ldr	r4, [pc, #32]	; (8002c0c <osKernelStart+0x88>)
 8002bec:	7824      	ldrb	r4, [r4, #0]
 8002bee:	07e4      	lsls	r4, r4, #31
 8002bf0:	d4f5      	bmi.n	8002bde <osKernelStart+0x5a>
 8002bf2:	2403      	movs	r4, #3
 8002bf4:	e7ed      	b.n	8002bd2 <osKernelStart+0x4e>
 8002bf6:	4c05      	ldr	r4, [pc, #20]	; (8002c0c <osKernelStart+0x88>)
 8002bf8:	7824      	ldrb	r4, [r4, #0]
 8002bfa:	07e4      	lsls	r4, r4, #31
 8002bfc:	d5ef      	bpl.n	8002bde <osKernelStart+0x5a>
 8002bfe:	20ff      	movs	r0, #255	; 0xff
 8002c00:	e7f0      	b.n	8002be4 <osKernelStart+0x60>
 8002c02:	2082      	movs	r0, #130	; 0x82
 8002c04:	e7ee      	b.n	8002be4 <osKernelStart+0x60>
 8002c06:	bf00      	nop
 8002c08:	20002f14 	.word	0x20002f14
 8002c0c:	0800797e 	.word	0x0800797e
 8002c10:	08002b09 	.word	0x08002b09

08002c14 <svcThreadCreate>:
 8002c14:	b570      	push	{r4, r5, r6, lr}
 8002c16:	460b      	mov	r3, r1
 8002c18:	4616      	mov	r6, r2
 8002c1a:	4602      	mov	r2, r0
 8002c1c:	b910      	cbnz	r0, 8002c24 <svcThreadCreate+0x10>
 8002c1e:	2400      	movs	r4, #0
 8002c20:	4620      	mov	r0, r4
 8002c22:	bd70      	pop	{r4, r5, r6, pc}
 8002c24:	6800      	ldr	r0, [r0, #0]
 8002c26:	2800      	cmp	r0, #0
 8002c28:	d0f9      	beq.n	8002c1e <svcThreadCreate+0xa>
 8002c2a:	f9b2 4004 	ldrsh.w	r4, [r2, #4]
 8002c2e:	1ce5      	adds	r5, r4, #3
 8002c30:	b2ad      	uxth	r5, r5
 8002c32:	2d06      	cmp	r5, #6
 8002c34:	d8f3      	bhi.n	8002c1e <svcThreadCreate+0xa>
 8002c36:	68d1      	ldr	r1, [r2, #12]
 8002c38:	b1c1      	cbz	r1, 8002c6c <svcThreadCreate+0x58>
 8002c3a:	6912      	ldr	r2, [r2, #16]
 8002c3c:	3404      	adds	r4, #4
 8002c3e:	ea44 2101 	orr.w	r1, r4, r1, lsl #8
 8002c42:	f000 fafb 	bl	800323c <rt_tsk_create>
 8002c46:	2800      	cmp	r0, #0
 8002c48:	d0e9      	beq.n	8002c1e <svcThreadCreate+0xa>
 8002c4a:	4b0a      	ldr	r3, [pc, #40]	; (8002c74 <svcThreadCreate+0x60>)
 8002c4c:	4a0a      	ldr	r2, [pc, #40]	; (8002c78 <svcThreadCreate+0x64>)
 8002c4e:	3801      	subs	r0, #1
 8002c50:	f853 4020 	ldr.w	r4, [r3, r0, lsl #2]
 8002c54:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8002c56:	635a      	str	r2, [r3, #52]	; 0x34
 8002c58:	4b08      	ldr	r3, [pc, #32]	; (8002c7c <svcThreadCreate+0x68>)
 8002c5a:	681b      	ldr	r3, [r3, #0]
 8002c5c:	b143      	cbz	r3, 8002c70 <svcThreadCreate+0x5c>
 8002c5e:	689b      	ldr	r3, [r3, #8]
 8002c60:	b133      	cbz	r3, 8002c70 <svcThreadCreate+0x5c>
 8002c62:	4631      	mov	r1, r6
 8002c64:	78e0      	ldrb	r0, [r4, #3]
 8002c66:	4798      	blx	r3
 8002c68:	63e0      	str	r0, [r4, #60]	; 0x3c
 8002c6a:	e7d9      	b.n	8002c20 <svcThreadCreate+0xc>
 8002c6c:	460a      	mov	r2, r1
 8002c6e:	e7e5      	b.n	8002c3c <svcThreadCreate+0x28>
 8002c70:	63e6      	str	r6, [r4, #60]	; 0x3c
 8002c72:	e7d5      	b.n	8002c20 <svcThreadCreate+0xc>
 8002c74:	20002728 	.word	0x20002728
 8002c78:	08002e01 	.word	0x08002e01
 8002c7c:	20002f14 	.word	0x20002f14

08002c80 <svcThreadGetId>:
 8002c80:	b508      	push	{r3, lr}
 8002c82:	f000 fa95 	bl	80031b0 <rt_tsk_self>
 8002c86:	b118      	cbz	r0, 8002c90 <svcThreadGetId+0x10>
 8002c88:	3801      	subs	r0, #1
 8002c8a:	4b02      	ldr	r3, [pc, #8]	; (8002c94 <svcThreadGetId+0x14>)
 8002c8c:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
 8002c90:	bd08      	pop	{r3, pc}
 8002c92:	bf00      	nop
 8002c94:	20002728 	.word	0x20002728

08002c98 <svcThreadTerminate>:
 8002c98:	b510      	push	{r4, lr}
 8002c9a:	f7ff ff2b 	bl	8002af4 <rt_tid2ptcb>
 8002c9e:	4604      	mov	r4, r0
 8002ca0:	b170      	cbz	r0, 8002cc0 <svcThreadTerminate+0x28>
 8002ca2:	4b08      	ldr	r3, [pc, #32]	; (8002cc4 <svcThreadTerminate+0x2c>)
 8002ca4:	681b      	ldr	r3, [r3, #0]
 8002ca6:	b11b      	cbz	r3, 8002cb0 <svcThreadTerminate+0x18>
 8002ca8:	68db      	ldr	r3, [r3, #12]
 8002caa:	b10b      	cbz	r3, 8002cb0 <svcThreadTerminate+0x18>
 8002cac:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 8002cae:	4798      	blx	r3
 8002cb0:	78e0      	ldrb	r0, [r4, #3]
 8002cb2:	f000 fb19 	bl	80032e8 <rt_tsk_delete>
 8002cb6:	28ff      	cmp	r0, #255	; 0xff
 8002cb8:	bf0c      	ite	eq
 8002cba:	2081      	moveq	r0, #129	; 0x81
 8002cbc:	2000      	movne	r0, #0
 8002cbe:	bd10      	pop	{r4, pc}
 8002cc0:	2080      	movs	r0, #128	; 0x80
 8002cc2:	bd10      	pop	{r4, pc}
 8002cc4:	20002f14 	.word	0x20002f14

08002cc8 <svcDelay>:
 8002cc8:	b508      	push	{r3, lr}
 8002cca:	b128      	cbz	r0, 8002cd8 <svcDelay+0x10>
 8002ccc:	f7ff fef2 	bl	8002ab4 <rt_ms2tick>
 8002cd0:	f000 fd1a 	bl	8003708 <rt_dly_wait>
 8002cd4:	2040      	movs	r0, #64	; 0x40
 8002cd6:	bd08      	pop	{r3, pc}
 8002cd8:	bd08      	pop	{r3, pc}
	...

08002cdc <osDelay>:
 8002cdc:	b510      	push	{r4, lr}
 8002cde:	f3ef 8410 	mrs	r4, PRIMASK
 8002ce2:	b934      	cbnz	r4, 8002cf2 <osDelay+0x16>
 8002ce4:	f3ef 8405 	mrs	r4, IPSR
 8002ce8:	b91c      	cbnz	r4, 8002cf2 <osDelay+0x16>
 8002cea:	f8df c00c 	ldr.w	r12, [pc, #12]	; 8002cf8 <osDelay+0x1c>
 8002cee:	df00      	svc	0
 8002cf0:	bd10      	pop	{r4, pc}
 8002cf2:	2082      	movs	r0, #130	; 0x82
 8002cf4:	bd10      	pop	{r4, pc}
 8002cf6:	0000      	.short	0x0000
 8002cf8:	08002cc9 	.word	0x08002cc9

08002cfc <svcTimerCall>:
 8002cfc:	0783      	lsls	r3, r0, #30
 8002cfe:	d105      	bne.n	8002d0c <svcTimerCall+0x10>
 8002d00:	b138      	cbz	r0, 8002d12 <svcTimerCall+0x16>
 8002d02:	6943      	ldr	r3, [r0, #20]
 8002d04:	6901      	ldr	r1, [r0, #16]
 8002d06:	681b      	ldr	r3, [r3, #0]
 8002d08:	4618      	mov	r0, r3
 8002d0a:	4770      	bx	lr
 8002d0c:	2300      	movs	r3, #0
 8002d0e:	4619      	mov	r1, r3
 8002d10:	e7fa      	b.n	8002d08 <svcTimerCall+0xc>
 8002d12:	4603      	mov	r3, r0
 8002d14:	e7fb      	b.n	8002d0e <svcTimerCall+0x12>
	...

08002d18 <osTimerCall>:
 8002d18:	b510      	push	{r4, lr}
 8002d1a:	4604      	mov	r4, r0
 8002d1c:	4608      	mov	r0, r1
 8002d1e:	f8df c00c 	ldr.w	r12, [pc, #12]	; 8002d2c <osTimerCall+0x14>
 8002d22:	df00      	svc	0
 8002d24:	e884 0003 	stmia.w	r4, {r0, r1}
 8002d28:	4620      	mov	r0, r4
 8002d2a:	bd10      	pop	{r4, pc}
 8002d2c:	08002cfd 	.word	0x08002cfd

08002d30 <svcMutexCreate>:
 8002d30:	b510      	push	{r4, lr}
 8002d32:	b148      	cbz	r0, 8002d48 <svcMutexCreate+0x18>
 8002d34:	6804      	ldr	r4, [r0, #0]
 8002d36:	b124      	cbz	r4, 8002d42 <svcMutexCreate+0x12>
 8002d38:	7823      	ldrb	r3, [r4, #0]
 8002d3a:	b923      	cbnz	r3, 8002d46 <svcMutexCreate+0x16>
 8002d3c:	4620      	mov	r0, r4
 8002d3e:	f000 fc3d 	bl	80035bc <rt_mut_init>
 8002d42:	4620      	mov	r0, r4
 8002d44:	bd10      	pop	{r4, pc}
 8002d46:	2000      	movs	r0, #0
 8002d48:	bd10      	pop	{r4, pc}

08002d4a <svcMutexWait>:
 8002d4a:	b570      	push	{r4, r5, r6, lr}
 8002d4c:	f010 0403 	ands.w	r4, r0, #3
 8002d50:	4605      	mov	r5, r0
 8002d52:	460e      	mov	r6, r1
 8002d54:	d111      	bne.n	8002d7a <svcMutexWait+0x30>
 8002d56:	b180      	cbz	r0, 8002d7a <svcMutexWait+0x30>
 8002d58:	7803      	ldrb	r3, [r0, #0]
 8002d5a:	2b03      	cmp	r3, #3
 8002d5c:	d10d      	bne.n	8002d7a <svcMutexWait+0x30>
 8002d5e:	4608      	mov	r0, r1
 8002d60:	f7ff fea8 	bl	8002ab4 <rt_ms2tick>
 8002d64:	4601      	mov	r1, r0
 8002d66:	4628      	mov	r0, r5
 8002d68:	f000 fca0 	bl	80036ac <rt_mut_wait>
 8002d6c:	2801      	cmp	r0, #1
 8002d6e:	d106      	bne.n	8002d7e <svcMutexWait+0x34>
 8002d70:	2e00      	cmp	r6, #0
 8002d72:	bf14      	ite	ne
 8002d74:	20c1      	movne	r0, #193	; 0xc1
 8002d76:	2081      	moveq	r0, #129	; 0x81
 8002d78:	bd70      	pop	{r4, r5, r6, pc}
 8002d7a:	2080      	movs	r0, #128	; 0x80
 8002d7c:	bd70      	pop	{r4, r5, r6, pc}
 8002d7e:	4620      	mov	r0, r4
 8002d80:	bd70      	pop	{r4, r5, r6, pc}

08002d82 <svcMutexRelease>:
 8002d82:	0782      	lsls	r2, r0, #30
 8002d84:	b508      	push	{r3, lr}
 8002d86:	d10a      	bne.n	8002d9e <svcMutexRelease+0x1c>
 8002d88:	b148      	cbz	r0, 8002d9e <svcMutexRelease+0x1c>
 8002d8a:	7803      	ldrb	r3, [r0, #0]
 8002d8c:	2b03      	cmp	r3, #3
 8002d8e:	d106      	bne.n	8002d9e <svcMutexRelease+0x1c>
 8002d90:	f000 fc1c 	bl	80035cc <rt_mut_release>
 8002d94:	28ff      	cmp	r0, #255	; 0xff
 8002d96:	bf0c      	ite	eq
 8002d98:	2081      	moveq	r0, #129	; 0x81
 8002d9a:	2000      	movne	r0, #0
 8002d9c:	bd08      	pop	{r3, pc}
 8002d9e:	2080      	movs	r0, #128	; 0x80
 8002da0:	bd08      	pop	{r3, pc}
	...

08002da4 <osMutexCreate>:
 8002da4:	b570      	push	{r4, r5, r6, lr}
 8002da6:	4605      	mov	r5, r0
 8002da8:	f3ef 8410 	mrs	r4, PRIMASK
 8002dac:	b994      	cbnz	r4, 8002dd4 <osMutexCreate+0x30>
 8002dae:	f3ef 8605 	mrs	r6, IPSR
 8002db2:	b97e      	cbnz	r6, 8002dd4 <osMutexCreate+0x30>
 8002db4:	f3ef 8414 	mrs	r4, CONTROL
 8002db8:	07e4      	lsls	r4, r4, #31
 8002dba:	d406      	bmi.n	8002dca <osMutexCreate+0x26>
 8002dbc:	4c06      	ldr	r4, [pc, #24]	; (8002dd8 <osMutexCreate+0x34>)
 8002dbe:	7824      	ldrb	r4, [r4, #0]
 8002dc0:	b91c      	cbnz	r4, 8002dca <osMutexCreate+0x26>
 8002dc2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8002dc6:	f7ff bfb3 	b.w	8002d30 <svcMutexCreate>
 8002dca:	4628      	mov	r0, r5
 8002dcc:	f8df c00c 	ldr.w	r12, [pc, #12]	; 8002ddc <osMutexCreate+0x38>
 8002dd0:	df00      	svc	0
 8002dd2:	bd70      	pop	{r4, r5, r6, pc}
 8002dd4:	2000      	movs	r0, #0
 8002dd6:	bd70      	pop	{r4, r5, r6, pc}
 8002dd8:	20002f25 	.word	0x20002f25
 8002ddc:	08002d31 	.word	0x08002d31

08002de0 <osMutexWait>:
 8002de0:	b510      	push	{r4, lr}
 8002de2:	f3ef 8410 	mrs	r4, PRIMASK
 8002de6:	b934      	cbnz	r4, 8002df6 <osMutexWait+0x16>
 8002de8:	f3ef 8405 	mrs	r4, IPSR
 8002dec:	b91c      	cbnz	r4, 8002df6 <osMutexWait+0x16>
 8002dee:	f8df c00c 	ldr.w	r12, [pc, #12]	; 8002dfc <osMutexWait+0x1c>
 8002df2:	df00      	svc	0
 8002df4:	bd10      	pop	{r4, pc}
 8002df6:	2082      	movs	r0, #130	; 0x82
 8002df8:	bd10      	pop	{r4, pc}
 8002dfa:	0000      	.short	0x0000
 8002dfc:	08002d4b 	.word	0x08002d4b

08002e00 <osThreadExit>:
 8002e00:	4808      	ldr	r0, [pc, #32]	; (8002e24 <osThreadExit+0x24>)
 8002e02:	b508      	push	{r3, lr}
 8002e04:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8002e08:	6800      	ldr	r0, [r0, #0]
 8002e0a:	f7ff ffe9 	bl	8002de0 <osMutexWait>
 8002e0e:	f8df c018 	ldr.w	r12, [pc, #24]	; 8002e28 <osThreadExit+0x28>
 8002e12:	df00      	svc	0
 8002e14:	4604      	mov	r4, r0
 8002e16:	f7ff fa59 	bl	80022cc <sysThreadTerminate>
 8002e1a:	4620      	mov	r0, r4
 8002e1c:	f8df c00c 	ldr.w	r12, [pc, #12]	; 8002e2c <osThreadExit+0x2c>
 8002e20:	df00      	svc	0
 8002e22:	e7fe      	b.n	8002e22 <osThreadExit+0x22>
 8002e24:	20002f20 	.word	0x20002f20
 8002e28:	08002c81 	.word	0x08002c81
 8002e2c:	08002c99 	.word	0x08002c99

08002e30 <osMutexRelease>:
 8002e30:	b510      	push	{r4, lr}
 8002e32:	f3ef 8410 	mrs	r4, PRIMASK
 8002e36:	b934      	cbnz	r4, 8002e46 <osMutexRelease+0x16>
 8002e38:	f3ef 8405 	mrs	r4, IPSR
 8002e3c:	b91c      	cbnz	r4, 8002e46 <osMutexRelease+0x16>
 8002e3e:	f8df c00c 	ldr.w	r12, [pc, #12]	; 8002e4c <osMutexRelease+0x1c>
 8002e42:	df00      	svc	0
 8002e44:	bd10      	pop	{r4, pc}
 8002e46:	2082      	movs	r0, #130	; 0x82
 8002e48:	bd10      	pop	{r4, pc}
 8002e4a:	0000      	.short	0x0000
 8002e4c:	08002d83 	.word	0x08002d83

08002e50 <osThreadContextCreate>:
 8002e50:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8002e54:	4680      	mov	r8, r0
 8002e56:	460f      	mov	r7, r1
 8002e58:	4616      	mov	r6, r2
 8002e5a:	f3ef 8410 	mrs	r4, PRIMASK
 8002e5e:	bb04      	cbnz	r4, 8002ea2 <osThreadContextCreate+0x52>
 8002e60:	f3ef 8305 	mrs	r3, IPSR
 8002e64:	b9d3      	cbnz	r3, 8002e9c <osThreadContextCreate+0x4c>
 8002e66:	f3ef 8314 	mrs	r3, CONTROL
 8002e6a:	07db      	lsls	r3, r3, #31
 8002e6c:	d406      	bmi.n	8002e7c <osThreadContextCreate+0x2c>
 8002e6e:	4b0e      	ldr	r3, [pc, #56]	; (8002ea8 <osThreadContextCreate+0x58>)
 8002e70:	781b      	ldrb	r3, [r3, #0]
 8002e72:	b91b      	cbnz	r3, 8002e7c <osThreadContextCreate+0x2c>
 8002e74:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8002e78:	f7ff becc 	b.w	8002c14 <svcThreadCreate>
 8002e7c:	4d0b      	ldr	r5, [pc, #44]	; (8002eac <osThreadContextCreate+0x5c>)
 8002e7e:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8002e82:	6828      	ldr	r0, [r5, #0]
 8002e84:	f7ff ffac 	bl	8002de0 <osMutexWait>
 8002e88:	4640      	mov	r0, r8
 8002e8a:	4639      	mov	r1, r7
 8002e8c:	4632      	mov	r2, r6
 8002e8e:	f8df c020 	ldr.w	r12, [pc, #32]	; 8002eb0 <osThreadContextCreate+0x60>
 8002e92:	df00      	svc	0
 8002e94:	4604      	mov	r4, r0
 8002e96:	6828      	ldr	r0, [r5, #0]
 8002e98:	f7ff ffca 	bl	8002e30 <osMutexRelease>
 8002e9c:	4620      	mov	r0, r4
 8002e9e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8002ea2:	2400      	movs	r4, #0
 8002ea4:	e7fa      	b.n	8002e9c <osThreadContextCreate+0x4c>
 8002ea6:	bf00      	nop
 8002ea8:	20002f25 	.word	0x20002f25
 8002eac:	20002f20 	.word	0x20002f20
 8002eb0:	08002c15 	.word	0x08002c15

08002eb4 <osThreadCreate>:
 8002eb4:	2200      	movs	r2, #0
 8002eb6:	f7ff bfcb 	b.w	8002e50 <osThreadContextCreate>

08002eba <svcMessageCreate>:
 8002eba:	b510      	push	{r4, lr}
 8002ebc:	4604      	mov	r4, r0
 8002ebe:	b160      	cbz	r0, 8002eda <svcMessageCreate+0x20>
 8002ec0:	6801      	ldr	r1, [r0, #0]
 8002ec2:	b151      	cbz	r1, 8002eda <svcMessageCreate+0x20>
 8002ec4:	6840      	ldr	r0, [r0, #4]
 8002ec6:	b148      	cbz	r0, 8002edc <svcMessageCreate+0x22>
 8002ec8:	7803      	ldrb	r3, [r0, #0]
 8002eca:	b933      	cbnz	r3, 8002eda <svcMessageCreate+0x20>
 8002ecc:	3104      	adds	r1, #4
 8002ece:	0089      	lsls	r1, r1, #2
 8002ed0:	b289      	uxth	r1, r1
 8002ed2:	f7ff fc71 	bl	80027b8 <rt_mbx_init>
 8002ed6:	6860      	ldr	r0, [r4, #4]
 8002ed8:	bd10      	pop	{r4, pc}
 8002eda:	2000      	movs	r0, #0
 8002edc:	bd10      	pop	{r4, pc}
	...

08002ee0 <svcKernelInitialize>:
 8002ee0:	b538      	push	{r3, r4, r5, lr}
 8002ee2:	4c11      	ldr	r4, [pc, #68]	; (8002f28 <svcKernelInitialize+0x48>)
 8002ee4:	7823      	ldrb	r3, [r4, #0]
 8002ee6:	b90b      	cbnz	r3, 8002eec <svcKernelInitialize+0xc>
 8002ee8:	f000 faa8 	bl	800343c <rt_sys_init>
 8002eec:	4b0f      	ldr	r3, [pc, #60]	; (8002f2c <svcKernelInitialize+0x4c>)
 8002eee:	7825      	ldrb	r5, [r4, #0]
 8002ef0:	681b      	ldr	r3, [r3, #0]
 8002ef2:	22ff      	movs	r2, #255	; 0xff
 8002ef4:	709a      	strb	r2, [r3, #2]
 8002ef6:	b98d      	cbnz	r5, 8002f1c <svcKernelInitialize+0x3c>
 8002ef8:	4629      	mov	r1, r5
 8002efa:	480d      	ldr	r0, [pc, #52]	; (8002f30 <svcKernelInitialize+0x50>)
 8002efc:	f7ff ffdd 	bl	8002eba <svcMessageCreate>
 8002f00:	4b0c      	ldr	r3, [pc, #48]	; (8002f34 <svcKernelInitialize+0x54>)
 8002f02:	462a      	mov	r2, r5
 8002f04:	6018      	str	r0, [r3, #0]
 8002f06:	4629      	mov	r1, r5
 8002f08:	480b      	ldr	r0, [pc, #44]	; (8002f38 <svcKernelInitialize+0x58>)
 8002f0a:	f7ff fe83 	bl	8002c14 <svcThreadCreate>
 8002f0e:	4b0b      	ldr	r3, [pc, #44]	; (8002f3c <svcKernelInitialize+0x5c>)
 8002f10:	6018      	str	r0, [r3, #0]
 8002f12:	480b      	ldr	r0, [pc, #44]	; (8002f40 <svcKernelInitialize+0x60>)
 8002f14:	f7ff ff46 	bl	8002da4 <osMutexCreate>
 8002f18:	4b0a      	ldr	r3, [pc, #40]	; (8002f44 <svcKernelInitialize+0x64>)
 8002f1a:	6018      	str	r0, [r3, #0]
 8002f1c:	2301      	movs	r3, #1
 8002f1e:	7023      	strb	r3, [r4, #0]
 8002f20:	4b09      	ldr	r3, [pc, #36]	; (8002f48 <svcKernelInitialize+0x68>)
 8002f22:	2000      	movs	r0, #0
 8002f24:	7018      	strb	r0, [r3, #0]
 8002f26:	bd38      	pop	{r3, r4, r5, pc}
 8002f28:	20002f24 	.word	0x20002f24
 8002f2c:	20002f2c 	.word	0x20002f2c
 8002f30:	08007984 	.word	0x08007984
 8002f34:	200027e8 	.word	0x200027e8
 8002f38:	080079a0 	.word	0x080079a0
 8002f3c:	20002edc 	.word	0x20002edc
 8002f40:	080079b8 	.word	0x080079b8
 8002f44:	20002f20 	.word	0x20002f20
 8002f48:	20002f25 	.word	0x20002f25

08002f4c <osKernelInitialize>:
 8002f4c:	b510      	push	{r4, lr}
 8002f4e:	f3ef 8410 	mrs	r4, PRIMASK
 8002f52:	b974      	cbnz	r4, 8002f72 <osKernelInitialize+0x26>
 8002f54:	f3ef 8405 	mrs	r4, IPSR
 8002f58:	b95c      	cbnz	r4, 8002f72 <osKernelInitialize+0x26>
 8002f5a:	f3ef 8414 	mrs	r4, CONTROL
 8002f5e:	07e4      	lsls	r4, r4, #31
 8002f60:	d403      	bmi.n	8002f6a <osKernelInitialize+0x1e>
 8002f62:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8002f66:	f7ff bfbb 	b.w	8002ee0 <svcKernelInitialize>
 8002f6a:	f8df c00c 	ldr.w	r12, [pc, #12]	; 8002f78 <osKernelInitialize+0x2c>
 8002f6e:	df00      	svc	0
 8002f70:	bd10      	pop	{r4, pc}
 8002f72:	2082      	movs	r0, #130	; 0x82
 8002f74:	bd10      	pop	{r4, pc}
 8002f76:	0000      	.short	0x0000
 8002f78:	08002ee1 	.word	0x08002ee1

08002f7c <svcMessageGet>:
 8002f7c:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8002f80:	460c      	mov	r4, r1
 8002f82:	4680      	mov	r8, r0
 8002f84:	b318      	cbz	r0, 8002fce <svcMessageGet+0x52>
 8002f86:	7803      	ldrb	r3, [r0, #0]
 8002f88:	2b01      	cmp	r3, #1
 8002f8a:	d125      	bne.n	8002fd8 <svcMessageGet+0x5c>
 8002f8c:	4608      	mov	r0, r1
 8002f8e:	f7ff fd91 	bl	8002ab4 <rt_ms2tick>
 8002f92:	a902      	add	r1, sp, #8
 8002f94:	4602      	mov	r2, r0
 8002f96:	4640      	mov	r0, r8
 8002f98:	f7ff fc1c 	bl	80027d4 <rt_mbx_wait>
 8002f9c:	2801      	cmp	r0, #1
 8002f9e:	d111      	bne.n	8002fc4 <svcMessageGet+0x48>
 8002fa0:	2000      	movs	r0, #0
 8002fa2:	2c00      	cmp	r4, #0
 8002fa4:	4602      	mov	r2, r0
 8002fa6:	4603      	mov	r3, r0
 8002fa8:	bf18      	it	ne
 8002faa:	2040      	movne	r0, #64	; 0x40
 8002fac:	9902      	ldr	r1, [sp, #8]
 8002fae:	4604      	mov	r4, r0
 8002fb0:	460d      	mov	r5, r1
 8002fb2:	4616      	mov	r6, r2
 8002fb4:	461f      	mov	r7, r3
 8002fb6:	4620      	mov	r0, r4
 8002fb8:	4629      	mov	r1, r5
 8002fba:	4632      	mov	r2, r6
 8002fbc:	463b      	mov	r3, r7
 8002fbe:	b004      	add	sp, #16
 8002fc0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8002fc4:	2000      	movs	r0, #0
 8002fc6:	4602      	mov	r2, r0
 8002fc8:	4603      	mov	r3, r0
 8002fca:	2010      	movs	r0, #16
 8002fcc:	e7ee      	b.n	8002fac <svcMessageGet+0x30>
 8002fce:	2480      	movs	r4, #128	; 0x80
 8002fd0:	4605      	mov	r5, r0
 8002fd2:	4606      	mov	r6, r0
 8002fd4:	4607      	mov	r7, r0
 8002fd6:	e7ee      	b.n	8002fb6 <svcMessageGet+0x3a>
 8002fd8:	2500      	movs	r5, #0
 8002fda:	2480      	movs	r4, #128	; 0x80
 8002fdc:	462e      	mov	r6, r5
 8002fde:	462f      	mov	r7, r5
 8002fe0:	e7e9      	b.n	8002fb6 <svcMessageGet+0x3a>

08002fe2 <isrMessagePut>:
 8002fe2:	b570      	push	{r4, r5, r6, lr}
 8002fe4:	460e      	mov	r6, r1
 8002fe6:	4614      	mov	r4, r2
 8002fe8:	4605      	mov	r5, r0
 8002fea:	b160      	cbz	r0, 8003006 <isrMessagePut+0x24>
 8002fec:	b95a      	cbnz	r2, 8003006 <isrMessagePut+0x24>
 8002fee:	7803      	ldrb	r3, [r0, #0]
 8002ff0:	2b01      	cmp	r3, #1
 8002ff2:	d108      	bne.n	8003006 <isrMessagePut+0x24>
 8002ff4:	f7ff fc44 	bl	8002880 <rt_mbx_check>
 8002ff8:	b138      	cbz	r0, 800300a <isrMessagePut+0x28>
 8002ffa:	4628      	mov	r0, r5
 8002ffc:	4631      	mov	r1, r6
 8002ffe:	f7ff fc43 	bl	8002888 <isr_mbx_send>
 8003002:	4620      	mov	r0, r4
 8003004:	bd70      	pop	{r4, r5, r6, pc}
 8003006:	2080      	movs	r0, #128	; 0x80
 8003008:	bd70      	pop	{r4, r5, r6, pc}
 800300a:	2081      	movs	r0, #129	; 0x81
 800300c:	bd70      	pop	{r4, r5, r6, pc}
	...

08003010 <sysTimerTick>:
 8003010:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003012:	4e11      	ldr	r6, [pc, #68]	; (8003058 <sysTimerTick+0x48>)
 8003014:	6834      	ldr	r4, [r6, #0]
 8003016:	b12c      	cbz	r4, 8003024 <sysTimerTick+0x14>
 8003018:	68a3      	ldr	r3, [r4, #8]
 800301a:	4f10      	ldr	r7, [pc, #64]	; (800305c <sysTimerTick+0x4c>)
 800301c:	3b01      	subs	r3, #1
 800301e:	60a3      	str	r3, [r4, #8]
 8003020:	68a2      	ldr	r2, [r4, #8]
 8003022:	b102      	cbz	r2, 8003026 <sysTimerTick+0x16>
 8003024:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8003026:	6825      	ldr	r5, [r4, #0]
 8003028:	6838      	ldr	r0, [r7, #0]
 800302a:	6035      	str	r5, [r6, #0]
 800302c:	4621      	mov	r1, r4
 800302e:	f7ff ffd8 	bl	8002fe2 <isrMessagePut>
 8003032:	b110      	cbz	r0, 800303a <sysTimerTick+0x2a>
 8003034:	2004      	movs	r0, #4
 8003036:	f7ff f93b 	bl	80022b0 <os_error>
 800303a:	7963      	ldrb	r3, [r4, #5]
 800303c:	2b01      	cmp	r3, #1
 800303e:	d107      	bne.n	8003050 <sysTimerTick+0x40>
 8003040:	68e1      	ldr	r1, [r4, #12]
 8003042:	4620      	mov	r0, r4
 8003044:	f7ff fd1c 	bl	8002a80 <rt_timer_insert>
 8003048:	2d00      	cmp	r5, #0
 800304a:	d0eb      	beq.n	8003024 <sysTimerTick+0x14>
 800304c:	462c      	mov	r4, r5
 800304e:	e7e7      	b.n	8003020 <sysTimerTick+0x10>
 8003050:	2301      	movs	r3, #1
 8003052:	7123      	strb	r3, [r4, #4]
 8003054:	e7f8      	b.n	8003048 <sysTimerTick+0x38>
 8003056:	bf00      	nop
 8003058:	20002f28 	.word	0x20002f28
 800305c:	200027e8 	.word	0x200027e8

08003060 <isrMessageGet>:
 8003060:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8003062:	4604      	mov	r4, r0
 8003064:	4616      	mov	r6, r2
 8003066:	4608      	mov	r0, r1
 8003068:	b101      	cbz	r1, 800306c <isrMessageGet+0xc>
 800306a:	b122      	cbz	r2, 8003076 <isrMessageGet+0x16>
 800306c:	2380      	movs	r3, #128	; 0x80
 800306e:	6023      	str	r3, [r4, #0]
 8003070:	4620      	mov	r0, r4
 8003072:	b004      	add	sp, #16
 8003074:	bd70      	pop	{r4, r5, r6, pc}
 8003076:	780b      	ldrb	r3, [r1, #0]
 8003078:	2b01      	cmp	r3, #1
 800307a:	d1f7      	bne.n	800306c <isrMessageGet+0xc>
 800307c:	a902      	add	r1, sp, #8
 800307e:	f7ff fc0a 	bl	8002896 <isr_mbx_receive>
 8003082:	2804      	cmp	r0, #4
 8003084:	bf08      	it	eq
 8003086:	2310      	moveq	r3, #16
 8003088:	ad01      	add	r5, sp, #4
 800308a:	bf14      	ite	ne
 800308c:	9601      	strne	r6, [sp, #4]
 800308e:	9301      	streq	r3, [sp, #4]
 8003090:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8003094:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 8003098:	e7ea      	b.n	8003070 <isrMessageGet+0x10>
	...

0800309c <osMessageGet>:
 800309c:	b538      	push	{r3, r4, r5, lr}
 800309e:	4604      	mov	r4, r0
 80030a0:	4615      	mov	r5, r2
 80030a2:	f3ef 8010 	mrs	r0, PRIMASK
 80030a6:	b910      	cbnz	r0, 80030ae <osMessageGet+0x12>
 80030a8:	f3ef 8005 	mrs	r0, IPSR
 80030ac:	b128      	cbz	r0, 80030ba <osMessageGet+0x1e>
 80030ae:	462a      	mov	r2, r5
 80030b0:	4620      	mov	r0, r4
 80030b2:	f7ff ffd5 	bl	8003060 <isrMessageGet>
 80030b6:	4620      	mov	r0, r4
 80030b8:	bd38      	pop	{r3, r4, r5, pc}
 80030ba:	4608      	mov	r0, r1
 80030bc:	4611      	mov	r1, r2
 80030be:	f8df c00c 	ldr.w	r12, [pc, #12]	; 80030cc <osMessageGet+0x30>
 80030c2:	df00      	svc	0
 80030c4:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 80030c8:	e7f5      	b.n	80030b6 <osMessageGet+0x1a>
 80030ca:	0000      	.short	0x0000
 80030cc:	08002f7d 	.word	0x08002f7d

080030d0 <osTimerThread>:
 80030d0:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 80030d2:	4c0a      	ldr	r4, [pc, #40]	; (80030fc <osTimerThread+0x2c>)
 80030d4:	6821      	ldr	r1, [r4, #0]
 80030d6:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 80030da:	a803      	add	r0, sp, #12
 80030dc:	f7ff ffde 	bl	800309c <osMessageGet>
 80030e0:	9b03      	ldr	r3, [sp, #12]
 80030e2:	2b10      	cmp	r3, #16
 80030e4:	d1f6      	bne.n	80030d4 <osTimerThread+0x4>
 80030e6:	9904      	ldr	r1, [sp, #16]
 80030e8:	a801      	add	r0, sp, #4
 80030ea:	f7ff fe15 	bl	8002d18 <osTimerCall>
 80030ee:	9b01      	ldr	r3, [sp, #4]
 80030f0:	2b00      	cmp	r3, #0
 80030f2:	d0ef      	beq.n	80030d4 <osTimerThread+0x4>
 80030f4:	9802      	ldr	r0, [sp, #8]
 80030f6:	4798      	blx	r3
 80030f8:	e7ec      	b.n	80030d4 <osTimerThread+0x4>
 80030fa:	bf00      	nop
 80030fc:	200027e8 	.word	0x200027e8

08003100 <rt_switch_req>:
 8003100:	4b05      	ldr	r3, [pc, #20]	; (8003118 <rt_switch_req+0x18>)
 8003102:	6058      	str	r0, [r3, #4]
 8003104:	2302      	movs	r3, #2
 8003106:	7043      	strb	r3, [r0, #1]
 8003108:	4b04      	ldr	r3, [pc, #16]	; (800311c <rt_switch_req+0x1c>)
 800310a:	681b      	ldr	r3, [r3, #0]
 800310c:	b11b      	cbz	r3, 8003116 <rt_switch_req+0x16>
 800310e:	691b      	ldr	r3, [r3, #16]
 8003110:	b10b      	cbz	r3, 8003116 <rt_switch_req+0x16>
 8003112:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 8003114:	4718      	bx	r3
 8003116:	4770      	bx	lr
 8003118:	20002f2c 	.word	0x20002f2c
 800311c:	20002f14 	.word	0x20002f14

08003120 <rt_dispatch.part.0>:
 8003120:	b508      	push	{r3, lr}
 8003122:	4803      	ldr	r0, [pc, #12]	; (8003130 <rt_dispatch.part.0+0x10>)
 8003124:	f7ff f92a 	bl	800237c <rt_get_first>
 8003128:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800312c:	f7ff bfe8 	b.w	8003100 <rt_switch_req>
 8003130:	20002ee0 	.word	0x20002ee0

08003134 <rt_dispatch>:
 8003134:	b570      	push	{r4, r5, r6, lr}
 8003136:	4604      	mov	r4, r0
 8003138:	b918      	cbnz	r0, 8003142 <rt_dispatch+0xe>
 800313a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800313e:	f7ff bfef 	b.w	8003120 <rt_dispatch.part.0>
 8003142:	4e0c      	ldr	r6, [pc, #48]	; (8003174 <rt_dispatch+0x40>)
 8003144:	78a2      	ldrb	r2, [r4, #2]
 8003146:	6830      	ldr	r0, [r6, #0]
 8003148:	7883      	ldrb	r3, [r0, #2]
 800314a:	429a      	cmp	r2, r3
 800314c:	f04f 0501 	mov.w	r5, #1
 8003150:	d908      	bls.n	8003164 <rt_dispatch+0x30>
 8003152:	f7ff f925 	bl	80023a0 <rt_put_rdy_first>
 8003156:	6833      	ldr	r3, [r6, #0]
 8003158:	705d      	strb	r5, [r3, #1]
 800315a:	4620      	mov	r0, r4
 800315c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8003160:	f7ff bfce 	b.w	8003100 <rt_switch_req>
 8003164:	7065      	strb	r5, [r4, #1]
 8003166:	4621      	mov	r1, r4
 8003168:	4803      	ldr	r0, [pc, #12]	; (8003178 <rt_dispatch+0x44>)
 800316a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800316e:	f7ff b8ed 	b.w	800234c <rt_put_prio>
 8003172:	bf00      	nop
 8003174:	20002f2c 	.word	0x20002f2c
 8003178:	20002ee0 	.word	0x20002ee0

0800317c <rt_block>:
 800317c:	b538      	push	{r3, r4, r5, lr}
 800317e:	460d      	mov	r5, r1
 8003180:	4601      	mov	r1, r0
 8003182:	b180      	cbz	r0, 80031a6 <rt_block+0x2a>
 8003184:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8003188:	4298      	cmp	r0, r3
 800318a:	4c07      	ldr	r4, [pc, #28]	; (80031a8 <rt_block+0x2c>)
 800318c:	d002      	beq.n	8003194 <rt_block+0x18>
 800318e:	6820      	ldr	r0, [r4, #0]
 8003190:	f7ff f910 	bl	80023b4 <rt_put_dly>
 8003194:	6823      	ldr	r3, [r4, #0]
 8003196:	4805      	ldr	r0, [pc, #20]	; (80031ac <rt_block+0x30>)
 8003198:	705d      	strb	r5, [r3, #1]
 800319a:	f7ff f8ef 	bl	800237c <rt_get_first>
 800319e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80031a2:	f7ff bfad 	b.w	8003100 <rt_switch_req>
 80031a6:	bd38      	pop	{r3, r4, r5, pc}
 80031a8:	20002f2c 	.word	0x20002f2c
 80031ac:	20002ee0 	.word	0x20002ee0

080031b0 <rt_tsk_self>:
 80031b0:	4b02      	ldr	r3, [pc, #8]	; (80031bc <rt_tsk_self+0xc>)
 80031b2:	6818      	ldr	r0, [r3, #0]
 80031b4:	b100      	cbz	r0, 80031b8 <rt_tsk_self+0x8>
 80031b6:	78c0      	ldrb	r0, [r0, #3]
 80031b8:	4770      	bx	lr
 80031ba:	bf00      	nop
 80031bc:	20002f2c 	.word	0x20002f2c

080031c0 <rt_tsk_prio>:
 80031c0:	b510      	push	{r4, lr}
 80031c2:	b9a8      	cbnz	r0, 80031f0 <rt_tsk_prio+0x30>
 80031c4:	4b19      	ldr	r3, [pc, #100]	; (800322c <rt_tsk_prio+0x6c>)
 80031c6:	681b      	ldr	r3, [r3, #0]
 80031c8:	7099      	strb	r1, [r3, #2]
 80031ca:	f883 1024 	strb.w	r1, [r3, #36]	; 0x24
 80031ce:	4818      	ldr	r0, [pc, #96]	; (8003230 <rt_tsk_prio+0x70>)
 80031d0:	6843      	ldr	r3, [r0, #4]
 80031d2:	789b      	ldrb	r3, [r3, #2]
 80031d4:	428b      	cmp	r3, r1
 80031d6:	d801      	bhi.n	80031dc <rt_tsk_prio+0x1c>
 80031d8:	2000      	movs	r0, #0
 80031da:	bd10      	pop	{r4, pc}
 80031dc:	4c13      	ldr	r4, [pc, #76]	; (800322c <rt_tsk_prio+0x6c>)
 80031de:	6821      	ldr	r1, [r4, #0]
 80031e0:	f7ff f8b4 	bl	800234c <rt_put_prio>
 80031e4:	6823      	ldr	r3, [r4, #0]
 80031e6:	2201      	movs	r2, #1
 80031e8:	705a      	strb	r2, [r3, #1]
 80031ea:	f7ff ff99 	bl	8003120 <rt_dispatch.part.0>
 80031ee:	e7f3      	b.n	80031d8 <rt_tsk_prio+0x18>
 80031f0:	4b10      	ldr	r3, [pc, #64]	; (8003234 <rt_tsk_prio+0x74>)
 80031f2:	881b      	ldrh	r3, [r3, #0]
 80031f4:	4298      	cmp	r0, r3
 80031f6:	d817      	bhi.n	8003228 <rt_tsk_prio+0x68>
 80031f8:	3801      	subs	r0, #1
 80031fa:	4b0f      	ldr	r3, [pc, #60]	; (8003238 <rt_tsk_prio+0x78>)
 80031fc:	f853 4020 	ldr.w	r4, [r3, r0, lsl #2]
 8003200:	b194      	cbz	r4, 8003228 <rt_tsk_prio+0x68>
 8003202:	4b0a      	ldr	r3, [pc, #40]	; (800322c <rt_tsk_prio+0x6c>)
 8003204:	70a1      	strb	r1, [r4, #2]
 8003206:	681b      	ldr	r3, [r3, #0]
 8003208:	f884 1024 	strb.w	r1, [r4, #36]	; 0x24
 800320c:	429c      	cmp	r4, r3
 800320e:	d0de      	beq.n	80031ce <rt_tsk_prio+0xe>
 8003210:	4620      	mov	r0, r4
 8003212:	f7ff f941 	bl	8002498 <rt_resort_prio>
 8003216:	7863      	ldrb	r3, [r4, #1]
 8003218:	2b01      	cmp	r3, #1
 800321a:	d1dd      	bne.n	80031d8 <rt_tsk_prio+0x18>
 800321c:	4804      	ldr	r0, [pc, #16]	; (8003230 <rt_tsk_prio+0x70>)
 800321e:	f7ff f8ad 	bl	800237c <rt_get_first>
 8003222:	f7ff ff87 	bl	8003134 <rt_dispatch>
 8003226:	e7d7      	b.n	80031d8 <rt_tsk_prio+0x18>
 8003228:	20ff      	movs	r0, #255	; 0xff
 800322a:	bd10      	pop	{r4, pc}
 800322c:	20002f2c 	.word	0x20002f2c
 8003230:	20002ee0 	.word	0x20002ee0
 8003234:	08007980 	.word	0x08007980
 8003238:	20002728 	.word	0x20002728

0800323c <rt_tsk_create>:
 800323c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, lr}
 8003240:	f011 0fff 	tst.w	r1, #255	; 0xff
 8003244:	460d      	mov	r5, r1
 8003246:	4680      	mov	r8, r0
 8003248:	4823      	ldr	r0, [pc, #140]	; (80032d8 <rt_tsk_create+0x9c>)
 800324a:	4616      	mov	r6, r2
 800324c:	469a      	mov	r10, r3
 800324e:	bf08      	it	eq
 8003250:	3501      	addeq	r5, #1
 8003252:	f7ff fa90 	bl	8002776 <rt_alloc_box>
 8003256:	4604      	mov	r4, r0
 8003258:	b920      	cbnz	r0, 8003264 <rt_tsk_create+0x28>
 800325a:	f04f 0900 	mov.w	r9, #0
 800325e:	4648      	mov	r0, r9
 8003260:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 8003264:	4b1d      	ldr	r3, [pc, #116]	; (80032dc <rt_tsk_create+0xa0>)
 8003266:	6306      	str	r6, [r0, #48]	; 0x30
 8003268:	881b      	ldrh	r3, [r3, #0]
 800326a:	4e1d      	ldr	r6, [pc, #116]	; (80032e0 <rt_tsk_create+0xa4>)
 800326c:	0a28      	lsrs	r0, r5, #8
 800326e:	62a0      	str	r0, [r4, #40]	; 0x28
 8003270:	2100      	movs	r1, #0
 8003272:	428b      	cmp	r3, r1
 8003274:	f101 0901 	add.w	r9, r1, #1
 8003278:	d0ef      	beq.n	800325a <rt_tsk_create+0x1e>
 800327a:	eb06 0289 	add.w	r2, r6, r9, lsl #2
 800327e:	460f      	mov	r7, r1
 8003280:	f852 2c04 	ldr.w	r2, [r2, #-4]
 8003284:	4649      	mov	r1, r9
 8003286:	2a00      	cmp	r2, #0
 8003288:	d1f3      	bne.n	8003272 <rt_tsk_create+0x36>
 800328a:	b2ed      	uxtb	r5, r5
 800328c:	2301      	movs	r3, #1
 800328e:	f884 9003 	strb.w	r9, [r4, #3]
 8003292:	f8c4 a01c 	str.w	r10, [r4, #28]
 8003296:	f8c4 a038 	str.w	r10, [r4, #56]	; 0x38
 800329a:	7022      	strb	r2, [r4, #0]
 800329c:	7063      	strb	r3, [r4, #1]
 800329e:	70a5      	strb	r5, [r4, #2]
 80032a0:	f884 5024 	strb.w	r5, [r4, #36]	; 0x24
 80032a4:	6062      	str	r2, [r4, #4]
 80032a6:	60a2      	str	r2, [r4, #8]
 80032a8:	60e2      	str	r2, [r4, #12]
 80032aa:	6122      	str	r2, [r4, #16]
 80032ac:	6222      	str	r2, [r4, #32]
 80032ae:	82a2      	strh	r2, [r4, #20]
 80032b0:	82e2      	strh	r2, [r4, #22]
 80032b2:	8322      	strh	r2, [r4, #24]
 80032b4:	8362      	strh	r2, [r4, #26]
 80032b6:	f884 2025 	strb.w	r2, [r4, #37]	; 0x25
 80032ba:	b918      	cbnz	r0, 80032c4 <rt_tsk_create+0x88>
 80032bc:	4809      	ldr	r0, [pc, #36]	; (80032e4 <rt_tsk_create+0xa8>)
 80032be:	f7ff fa5a 	bl	8002776 <rt_alloc_box>
 80032c2:	6320      	str	r0, [r4, #48]	; 0x30
 80032c4:	4620      	mov	r0, r4
 80032c6:	4641      	mov	r1, r8
 80032c8:	f7ff f938 	bl	800253c <rt_init_stack>
 80032cc:	4620      	mov	r0, r4
 80032ce:	f846 4027 	str.w	r4, [r6, r7, lsl #2]
 80032d2:	f7ff ff2f 	bl	8003134 <rt_dispatch>
 80032d6:	e7c2      	b.n	800325e <rt_tsk_create+0x22>
 80032d8:	20002b10 	.word	0x20002b10
 80032dc:	08007980 	.word	0x08007980
 80032e0:	20002728 	.word	0x20002728
 80032e4:	20002518 	.word	0x20002518

080032e8 <rt_tsk_delete>:
 80032e8:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, r10, r11, lr}
 80032ec:	4d4d      	ldr	r5, [pc, #308]	; (8003424 <rt_tsk_delete+0x13c>)
 80032ee:	b118      	cbz	r0, 80032f8 <rt_tsk_delete+0x10>
 80032f0:	682b      	ldr	r3, [r5, #0]
 80032f2:	78db      	ldrb	r3, [r3, #3]
 80032f4:	4298      	cmp	r0, r3
 80032f6:	d141      	bne.n	800337c <rt_tsk_delete+0x94>
 80032f8:	682c      	ldr	r4, [r5, #0]
 80032fa:	f8df 813c 	ldr.w	r8, [pc, #316]	; 8003438 <rt_tsk_delete+0x150>
 80032fe:	2300      	movs	r3, #0
 8003300:	7063      	strb	r3, [r4, #1]
 8003302:	f002 fd0a 	bl	8005d1a <rt_get_PSP>
 8003306:	62e0      	str	r0, [r4, #44]	; 0x2c
 8003308:	f7ff f9fe 	bl	8002708 <rt_stk_check>
 800330c:	682b      	ldr	r3, [r5, #0]
 800330e:	6a1c      	ldr	r4, [r3, #32]
 8003310:	2701      	movs	r7, #1
 8003312:	b9a4      	cbnz	r4, 800333e <rt_tsk_delete+0x56>
 8003314:	682a      	ldr	r2, [r5, #0]
 8003316:	4944      	ldr	r1, [pc, #272]	; (8003428 <rt_tsk_delete+0x140>)
 8003318:	78d3      	ldrb	r3, [r2, #3]
 800331a:	4844      	ldr	r0, [pc, #272]	; (800342c <rt_tsk_delete+0x144>)
 800331c:	3b01      	subs	r3, #1
 800331e:	f841 4023 	str.w	r4, [r1, r3, lsl #2]
 8003322:	6b11      	ldr	r1, [r2, #48]	; 0x30
 8003324:	f7ff fa34 	bl	8002790 <rt_free_box>
 8003328:	6829      	ldr	r1, [r5, #0]
 800332a:	4841      	ldr	r0, [pc, #260]	; (8003430 <rt_tsk_delete+0x148>)
 800332c:	630c      	str	r4, [r1, #48]	; 0x30
 800332e:	f7ff fa2f 	bl	8002790 <rt_free_box>
 8003332:	602c      	str	r4, [r5, #0]
 8003334:	f7ff fef4 	bl	8003120 <rt_dispatch.part.0>
 8003338:	4620      	mov	r0, r4
 800333a:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, r10, r11, pc}
 800333e:	6863      	ldr	r3, [r4, #4]
 8003340:	b1b3      	cbz	r3, 8003370 <rt_tsk_delete+0x88>
 8003342:	4620      	mov	r0, r4
 8003344:	f7ff f81a 	bl	800237c <rt_get_first>
 8003348:	2100      	movs	r1, #0
 800334a:	4606      	mov	r6, r0
 800334c:	f7ff f942 	bl	80025d4 <rt_ret_val>
 8003350:	4630      	mov	r0, r6
 8003352:	f7ff f8b9 	bl	80024c8 <rt_rmv_dly>
 8003356:	7077      	strb	r7, [r6, #1]
 8003358:	4631      	mov	r1, r6
 800335a:	4640      	mov	r0, r8
 800335c:	f7fe fff6 	bl	800234c <rt_put_prio>
 8003360:	68e3      	ldr	r3, [r4, #12]
 8003362:	6a32      	ldr	r2, [r6, #32]
 8003364:	8067      	strh	r7, [r4, #2]
 8003366:	60a6      	str	r6, [r4, #8]
 8003368:	60e2      	str	r2, [r4, #12]
 800336a:	6234      	str	r4, [r6, #32]
 800336c:	461c      	mov	r4, r3
 800336e:	e7d0      	b.n	8003312 <rt_tsk_delete+0x2a>
 8003370:	68e2      	ldr	r2, [r4, #12]
 8003372:	8063      	strh	r3, [r4, #2]
 8003374:	60a3      	str	r3, [r4, #8]
 8003376:	60e3      	str	r3, [r4, #12]
 8003378:	4614      	mov	r4, r2
 800337a:	e7ca      	b.n	8003312 <rt_tsk_delete+0x2a>
 800337c:	4b2d      	ldr	r3, [pc, #180]	; (8003434 <rt_tsk_delete+0x14c>)
 800337e:	881b      	ldrh	r3, [r3, #0]
 8003380:	4298      	cmp	r0, r3
 8003382:	d84d      	bhi.n	8003420 <rt_tsk_delete+0x138>
 8003384:	4b28      	ldr	r3, [pc, #160]	; (8003428 <rt_tsk_delete+0x140>)
 8003386:	1e47      	subs	r7, r0, #1
 8003388:	4699      	mov	r9, r3
 800338a:	f853 6027 	ldr.w	r6, [r3, r7, lsl #2]
 800338e:	2e00      	cmp	r6, #0
 8003390:	d046      	beq.n	8003420 <rt_tsk_delete+0x138>
 8003392:	4630      	mov	r0, r6
 8003394:	f7ff f86a 	bl	800246c <rt_rmv_list>
 8003398:	4630      	mov	r0, r6
 800339a:	f7ff f895 	bl	80024c8 <rt_rmv_dly>
 800339e:	f8df b098 	ldr.w	r11, [pc, #152]	; 8003438 <rt_tsk_delete+0x150>
 80033a2:	6a34      	ldr	r4, [r6, #32]
 80033a4:	f04f 0a01 	mov.w	r10, #1
 80033a8:	b9b4      	cbnz	r4, 80033d8 <rt_tsk_delete+0xf0>
 80033aa:	6b31      	ldr	r1, [r6, #48]	; 0x30
 80033ac:	481f      	ldr	r0, [pc, #124]	; (800342c <rt_tsk_delete+0x144>)
 80033ae:	f849 4027 	str.w	r4, [r9, r7, lsl #2]
 80033b2:	f7ff f9ed 	bl	8002790 <rt_free_box>
 80033b6:	4631      	mov	r1, r6
 80033b8:	6334      	str	r4, [r6, #48]	; 0x30
 80033ba:	481d      	ldr	r0, [pc, #116]	; (8003430 <rt_tsk_delete+0x148>)
 80033bc:	f7ff f9e8 	bl	8002790 <rt_free_box>
 80033c0:	481d      	ldr	r0, [pc, #116]	; (8003438 <rt_tsk_delete+0x150>)
 80033c2:	6829      	ldr	r1, [r5, #0]
 80033c4:	6843      	ldr	r3, [r0, #4]
 80033c6:	789a      	ldrb	r2, [r3, #2]
 80033c8:	788b      	ldrb	r3, [r1, #2]
 80033ca:	429a      	cmp	r2, r3
 80033cc:	d9b4      	bls.n	8003338 <rt_tsk_delete+0x50>
 80033ce:	2301      	movs	r3, #1
 80033d0:	704b      	strb	r3, [r1, #1]
 80033d2:	f7fe ffbb 	bl	800234c <rt_put_prio>
 80033d6:	e7ad      	b.n	8003334 <rt_tsk_delete+0x4c>
 80033d8:	6863      	ldr	r3, [r4, #4]
 80033da:	b1db      	cbz	r3, 8003414 <rt_tsk_delete+0x12c>
 80033dc:	4620      	mov	r0, r4
 80033de:	f7fe ffcd 	bl	800237c <rt_get_first>
 80033e2:	2100      	movs	r1, #0
 80033e4:	4680      	mov	r8, r0
 80033e6:	f7ff f8f5 	bl	80025d4 <rt_ret_val>
 80033ea:	4640      	mov	r0, r8
 80033ec:	f7ff f86c 	bl	80024c8 <rt_rmv_dly>
 80033f0:	f888 a001 	strb.w	r10, [r8, #1]
 80033f4:	4641      	mov	r1, r8
 80033f6:	4658      	mov	r0, r11
 80033f8:	f7fe ffa8 	bl	800234c <rt_put_prio>
 80033fc:	68e3      	ldr	r3, [r4, #12]
 80033fe:	f8d8 2020 	ldr.w	r2, [r8, #32]
 8003402:	f8a4 a002 	strh.w	r10, [r4, #2]
 8003406:	f8c4 8008 	str.w	r8, [r4, #8]
 800340a:	60e2      	str	r2, [r4, #12]
 800340c:	f8c8 4020 	str.w	r4, [r8, #32]
 8003410:	461c      	mov	r4, r3
 8003412:	e7c9      	b.n	80033a8 <rt_tsk_delete+0xc0>
 8003414:	68e2      	ldr	r2, [r4, #12]
 8003416:	8063      	strh	r3, [r4, #2]
 8003418:	60a3      	str	r3, [r4, #8]
 800341a:	60e3      	str	r3, [r4, #12]
 800341c:	4614      	mov	r4, r2
 800341e:	e7c3      	b.n	80033a8 <rt_tsk_delete+0xc0>
 8003420:	24ff      	movs	r4, #255	; 0xff
 8003422:	e789      	b.n	8003338 <rt_tsk_delete+0x50>
 8003424:	20002f2c 	.word	0x20002f2c
 8003428:	20002728 	.word	0x20002728
 800342c:	20002518 	.word	0x20002518
 8003430:	20002b10 	.word	0x20002b10
 8003434:	08007980 	.word	0x08007980
 8003438:	20002ee0 	.word	0x20002ee0

0800343c <rt_sys_init>:
 800343c:	b538      	push	{r3, r4, r5, lr}
 800343e:	4b2c      	ldr	r3, [pc, #176]	; (80034f0 <rt_sys_init+0xb4>)
 8003440:	492c      	ldr	r1, [pc, #176]	; (80034f4 <rt_sys_init+0xb8>)
 8003442:	881a      	ldrh	r2, [r3, #0]
 8003444:	2300      	movs	r3, #0
 8003446:	4618      	mov	r0, r3
 8003448:	4293      	cmp	r3, r2
 800344a:	d34d      	bcc.n	80034e8 <rt_sys_init+0xac>
 800344c:	4b2a      	ldr	r3, [pc, #168]	; (80034f8 <rt_sys_init+0xbc>)
 800344e:	482b      	ldr	r0, [pc, #172]	; (80034fc <rt_sys_init+0xc0>)
 8003450:	8819      	ldrh	r1, [r3, #0]
 8003452:	4c2b      	ldr	r4, [pc, #172]	; (8003500 <rt_sys_init+0xc4>)
 8003454:	2240      	movs	r2, #64	; 0x40
 8003456:	f7ff f969 	bl	800272c <_init_box>
 800345a:	4b2a      	ldr	r3, [pc, #168]	; (8003504 <rt_sys_init+0xc8>)
 800345c:	482a      	ldr	r0, [pc, #168]	; (8003508 <rt_sys_init+0xcc>)
 800345e:	881a      	ldrh	r2, [r3, #0]
 8003460:	4b2a      	ldr	r3, [pc, #168]	; (800350c <rt_sys_init+0xd0>)
 8003462:	f042 4200 	orr.w	r2, r2, #2147483648	; 0x80000000
 8003466:	6819      	ldr	r1, [r3, #0]
 8003468:	f7ff f960 	bl	800272c <_init_box>
 800346c:	4b28      	ldr	r3, [pc, #160]	; (8003510 <rt_sys_init+0xd4>)
 800346e:	8819      	ldrh	r1, [r3, #0]
 8003470:	4b28      	ldr	r3, [pc, #160]	; (8003514 <rt_sys_init+0xd8>)
 8003472:	2208      	movs	r2, #8
 8003474:	6818      	ldr	r0, [r3, #0]
 8003476:	f7ff f959 	bl	800272c <_init_box>
 800347a:	23ff      	movs	r3, #255	; 0xff
 800347c:	2500      	movs	r5, #0
 800347e:	70e3      	strb	r3, [r4, #3]
 8003480:	4821      	ldr	r0, [pc, #132]	; (8003508 <rt_sys_init+0xcc>)
 8003482:	62a5      	str	r5, [r4, #40]	; 0x28
 8003484:	2301      	movs	r3, #1
 8003486:	7063      	strb	r3, [r4, #1]
 8003488:	7025      	strb	r5, [r4, #0]
 800348a:	70a5      	strb	r5, [r4, #2]
 800348c:	f884 5024 	strb.w	r5, [r4, #36]	; 0x24
 8003490:	6065      	str	r5, [r4, #4]
 8003492:	60a5      	str	r5, [r4, #8]
 8003494:	60e5      	str	r5, [r4, #12]
 8003496:	6125      	str	r5, [r4, #16]
 8003498:	6225      	str	r5, [r4, #32]
 800349a:	82a5      	strh	r5, [r4, #20]
 800349c:	82e5      	strh	r5, [r4, #22]
 800349e:	8325      	strh	r5, [r4, #24]
 80034a0:	8365      	strh	r5, [r4, #26]
 80034a2:	f884 5025 	strb.w	r5, [r4, #37]	; 0x25
 80034a6:	f7ff f966 	bl	8002776 <rt_alloc_box>
 80034aa:	491b      	ldr	r1, [pc, #108]	; (8003518 <rt_sys_init+0xdc>)
 80034ac:	6320      	str	r0, [r4, #48]	; 0x30
 80034ae:	4620      	mov	r0, r4
 80034b0:	f7ff f844 	bl	800253c <rt_init_stack>
 80034b4:	4b19      	ldr	r3, [pc, #100]	; (800351c <rt_sys_init+0xe0>)
 80034b6:	2204      	movs	r2, #4
 80034b8:	701a      	strb	r2, [r3, #0]
 80034ba:	605d      	str	r5, [r3, #4]
 80034bc:	4b18      	ldr	r3, [pc, #96]	; (8003520 <rt_sys_init+0xe4>)
 80034be:	701a      	strb	r2, [r3, #0]
 80034c0:	60dd      	str	r5, [r3, #12]
 80034c2:	611d      	str	r5, [r3, #16]
 80034c4:	829d      	strh	r5, [r3, #20]
 80034c6:	4b17      	ldr	r3, [pc, #92]	; (8003524 <rt_sys_init+0xe8>)
 80034c8:	4620      	mov	r0, r4
 80034ca:	601c      	str	r4, [r3, #0]
 80034cc:	2302      	movs	r3, #2
 80034ce:	7063      	strb	r3, [r4, #1]
 80034d0:	f7ff fe16 	bl	8003100 <rt_switch_req>
 80034d4:	4a14      	ldr	r2, [pc, #80]	; (8003528 <rt_sys_init+0xec>)
 80034d6:	4b15      	ldr	r3, [pc, #84]	; (800352c <rt_sys_init+0xf0>)
 80034d8:	7812      	ldrb	r2, [r2, #0]
 80034da:	701d      	strb	r5, [r3, #0]
 80034dc:	705d      	strb	r5, [r3, #1]
 80034de:	70da      	strb	r2, [r3, #3]
 80034e0:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80034e4:	f7ff ba9c 	b.w	8002a20 <rt_init_robin>
 80034e8:	f841 0023 	str.w	r0, [r1, r3, lsl #2]
 80034ec:	3301      	adds	r3, #1
 80034ee:	e7ab      	b.n	8003448 <rt_sys_init+0xc>
 80034f0:	08007980 	.word	0x08007980
 80034f4:	20002728 	.word	0x20002728
 80034f8:	0800794c 	.word	0x0800794c
 80034fc:	20002b10 	.word	0x20002b10
 8003500:	20002f34 	.word	0x20002f34
 8003504:	0800799c 	.word	0x0800799c
 8003508:	20002518 	.word	0x20002518
 800350c:	08007948 	.word	0x08007948
 8003510:	0800794e 	.word	0x0800794e
 8003514:	20000ea8 	.word	0x20000ea8
 8003518:	080022ad 	.word	0x080022ad
 800351c:	20002ee0 	.word	0x20002ee0
 8003520:	20002ef8 	.word	0x20002ef8
 8003524:	20002f2c 	.word	0x20002f2c
 8003528:	0800797d 	.word	0x0800797d
 800352c:	20002764 	.word	0x20002764

08003530 <rt_sys_start>:
 8003530:	b508      	push	{r3, lr}
 8003532:	4b1e      	ldr	r3, [pc, #120]	; (80035ac <rt_sys_start+0x7c>)
 8003534:	681a      	ldr	r2, [r3, #0]
 8003536:	f442 027f 	orr.w	r2, r2, #16711680	; 0xff0000
 800353a:	601a      	str	r2, [r3, #0]
 800353c:	681b      	ldr	r3, [r3, #0]
 800353e:	021b      	lsls	r3, r3, #8
 8003540:	f003 437f 	and.w	r3, r3, #4278190080	; 0xff000000
 8003544:	43db      	mvns	r3, r3
 8003546:	fab3 f383 	clz	r3, r3
 800354a:	4a19      	ldr	r2, [pc, #100]	; (80035b0 <rt_sys_start+0x80>)
 800354c:	4819      	ldr	r0, [pc, #100]	; (80035b4 <rt_sys_start+0x84>)
 800354e:	6812      	ldr	r2, [r2, #0]
 8003550:	6801      	ldr	r1, [r0, #0]
 8003552:	b2db      	uxtb	r3, r3
 8003554:	f1c3 0308 	rsb	r3, r3, #8
 8003558:	f3c2 2202 	ubfx	r2, r2, #8, #3
 800355c:	4293      	cmp	r3, r2
 800355e:	bf98      	it	ls
 8003560:	1c53      	addls	r3, r2, #1
 8003562:	f06f 7280 	mvn.w	r2, #16777216	; 0x1000000
 8003566:	fa02 f303 	lsl.w	r3, r2, r3
 800356a:	f003 437f 	and.w	r3, r3, #4278190080	; 0xff000000
 800356e:	f021 427f 	bic.w	r2, r1, #4278190080	; 0xff000000
 8003572:	4313      	orrs	r3, r2
 8003574:	6003      	str	r3, [r0, #0]
 8003576:	f7ff f88f 	bl	8002698 <os_tick_init>
 800357a:	4b0f      	ldr	r3, [pc, #60]	; (80035b8 <rt_sys_start+0x88>)
 800357c:	2800      	cmp	r0, #0
 800357e:	6018      	str	r0, [r3, #0]
 8003580:	db12      	blt.n	80035a8 <rt_sys_start+0x78>
 8003582:	f100 4060 	add.w	r0, r0, #3758096384	; 0xe0000000
 8003586:	f500 4064 	add.w	r0, r0, #58368	; 0xe400
 800358a:	22ff      	movs	r2, #255	; 0xff
 800358c:	7002      	strb	r2, [r0, #0]
 800358e:	681a      	ldr	r2, [r3, #0]
 8003590:	0953      	lsrs	r3, r2, #5
 8003592:	009b      	lsls	r3, r3, #2
 8003594:	f103 4360 	add.w	r3, r3, #3758096384	; 0xe0000000
 8003598:	f503 4361 	add.w	r3, r3, #57600	; 0xe100
 800359c:	f002 021f 	and.w	r2, r2, #31
 80035a0:	2101      	movs	r1, #1
 80035a2:	fa01 f202 	lsl.w	r2, r1, r2
 80035a6:	601a      	str	r2, [r3, #0]
 80035a8:	bd08      	pop	{r3, pc}
 80035aa:	bf00      	nop
 80035ac:	e000ed20 	.word	0xe000ed20
 80035b0:	e000ed0c 	.word	0xe000ed0c
 80035b4:	e000ed1c 	.word	0xe000ed1c
 80035b8:	20002f10 	.word	0x20002f10

080035bc <rt_mut_init>:
 80035bc:	2303      	movs	r3, #3
 80035be:	7003      	strb	r3, [r0, #0]
 80035c0:	2300      	movs	r3, #0
 80035c2:	8043      	strh	r3, [r0, #2]
 80035c4:	6043      	str	r3, [r0, #4]
 80035c6:	6083      	str	r3, [r0, #8]
 80035c8:	60c3      	str	r3, [r0, #12]
 80035ca:	4770      	bx	lr

080035cc <rt_mut_release>:
 80035cc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80035d0:	8843      	ldrh	r3, [r0, #2]
 80035d2:	4605      	mov	r5, r0
 80035d4:	2b00      	cmp	r3, #0
 80035d6:	d063      	beq.n	80036a0 <rt_mut_release+0xd4>
 80035d8:	4f32      	ldr	r7, [pc, #200]	; (80036a4 <rt_mut_release+0xd8>)
 80035da:	6881      	ldr	r1, [r0, #8]
 80035dc:	683a      	ldr	r2, [r7, #0]
 80035de:	4291      	cmp	r1, r2
 80035e0:	d15e      	bne.n	80036a0 <rt_mut_release+0xd4>
 80035e2:	3b01      	subs	r3, #1
 80035e4:	b29b      	uxth	r3, r3
 80035e6:	8043      	strh	r3, [r0, #2]
 80035e8:	b11b      	cbz	r3, 80035f2 <rt_mut_release+0x26>
 80035ea:	2400      	movs	r4, #0
 80035ec:	4620      	mov	r0, r4
 80035ee:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80035f2:	6a0b      	ldr	r3, [r1, #32]
 80035f4:	4298      	cmp	r0, r3
 80035f6:	d129      	bne.n	800364c <rt_mut_release+0x80>
 80035f8:	68c3      	ldr	r3, [r0, #12]
 80035fa:	620b      	str	r3, [r1, #32]
 80035fc:	f891 3024 	ldrb.w	r3, [r1, #36]	; 0x24
 8003600:	6a0c      	ldr	r4, [r1, #32]
 8003602:	bb5c      	cbnz	r4, 800365c <rt_mut_release+0x90>
 8003604:	708b      	strb	r3, [r1, #2]
 8003606:	686a      	ldr	r2, [r5, #4]
 8003608:	f8df 809c 	ldr.w	r8, [pc, #156]	; 80036a8 <rt_mut_release+0xdc>
 800360c:	2a00      	cmp	r2, #0
 800360e:	d03b      	beq.n	8003688 <rt_mut_release+0xbc>
 8003610:	4628      	mov	r0, r5
 8003612:	f7fe feb3 	bl	800237c <rt_get_first>
 8003616:	4621      	mov	r1, r4
 8003618:	4606      	mov	r6, r0
 800361a:	f7fe ffdb 	bl	80025d4 <rt_ret_val>
 800361e:	4630      	mov	r0, r6
 8003620:	f7fe ff52 	bl	80024c8 <rt_rmv_dly>
 8003624:	6a33      	ldr	r3, [r6, #32]
 8003626:	60eb      	str	r3, [r5, #12]
 8003628:	f04f 0901 	mov.w	r9, #1
 800362c:	6839      	ldr	r1, [r7, #0]
 800362e:	f8d8 3004 	ldr.w	r3, [r8, #4]
 8003632:	f8a5 9002 	strh.w	r9, [r5, #2]
 8003636:	60ae      	str	r6, [r5, #8]
 8003638:	6235      	str	r5, [r6, #32]
 800363a:	788a      	ldrb	r2, [r1, #2]
 800363c:	789b      	ldrb	r3, [r3, #2]
 800363e:	429a      	cmp	r2, r3
 8003640:	d314      	bcc.n	800366c <rt_mut_release+0xa0>
 8003642:	4630      	mov	r0, r6
 8003644:	f7ff fd76 	bl	8003134 <rt_dispatch>
 8003648:	e7d0      	b.n	80035ec <rt_mut_release+0x20>
 800364a:	4613      	mov	r3, r2
 800364c:	2b00      	cmp	r3, #0
 800364e:	d0d5      	beq.n	80035fc <rt_mut_release+0x30>
 8003650:	68da      	ldr	r2, [r3, #12]
 8003652:	4295      	cmp	r5, r2
 8003654:	d1f9      	bne.n	800364a <rt_mut_release+0x7e>
 8003656:	68ea      	ldr	r2, [r5, #12]
 8003658:	60da      	str	r2, [r3, #12]
 800365a:	e7cf      	b.n	80035fc <rt_mut_release+0x30>
 800365c:	6862      	ldr	r2, [r4, #4]
 800365e:	b11a      	cbz	r2, 8003668 <rt_mut_release+0x9c>
 8003660:	7892      	ldrb	r2, [r2, #2]
 8003662:	4293      	cmp	r3, r2
 8003664:	bf38      	it	cc
 8003666:	4613      	movcc	r3, r2
 8003668:	68e4      	ldr	r4, [r4, #12]
 800366a:	e7ca      	b.n	8003602 <rt_mut_release+0x36>
 800366c:	4640      	mov	r0, r8
 800366e:	f7fe fe6d 	bl	800234c <rt_put_prio>
 8003672:	4631      	mov	r1, r6
 8003674:	4640      	mov	r0, r8
 8003676:	f7fe fe69 	bl	800234c <rt_put_prio>
 800367a:	683b      	ldr	r3, [r7, #0]
 800367c:	f883 9001 	strb.w	r9, [r3, #1]
 8003680:	f886 9001 	strb.w	r9, [r6, #1]
 8003684:	4620      	mov	r0, r4
 8003686:	e7dd      	b.n	8003644 <rt_mut_release+0x78>
 8003688:	f8d8 2004 	ldr.w	r2, [r8, #4]
 800368c:	7892      	ldrb	r2, [r2, #2]
 800368e:	429a      	cmp	r2, r3
 8003690:	d9ab      	bls.n	80035ea <rt_mut_release+0x1e>
 8003692:	4640      	mov	r0, r8
 8003694:	f7fe fe5a 	bl	800234c <rt_put_prio>
 8003698:	683b      	ldr	r3, [r7, #0]
 800369a:	2201      	movs	r2, #1
 800369c:	705a      	strb	r2, [r3, #1]
 800369e:	e7f1      	b.n	8003684 <rt_mut_release+0xb8>
 80036a0:	24ff      	movs	r4, #255	; 0xff
 80036a2:	e7a3      	b.n	80035ec <rt_mut_release+0x20>
 80036a4:	20002f2c 	.word	0x20002f2c
 80036a8:	20002ee0 	.word	0x20002ee0

080036ac <rt_mut_wait>:
 80036ac:	8843      	ldrh	r3, [r0, #2]
 80036ae:	b570      	push	{r4, r5, r6, lr}
 80036b0:	4604      	mov	r4, r0
 80036b2:	460e      	mov	r6, r1
 80036b4:	4d13      	ldr	r5, [pc, #76]	; (8003704 <rt_mut_wait+0x58>)
 80036b6:	b943      	cbnz	r3, 80036ca <rt_mut_wait+0x1e>
 80036b8:	682a      	ldr	r2, [r5, #0]
 80036ba:	6082      	str	r2, [r0, #8]
 80036bc:	6a11      	ldr	r1, [r2, #32]
 80036be:	60c1      	str	r1, [r0, #12]
 80036c0:	6210      	str	r0, [r2, #32]
 80036c2:	3301      	adds	r3, #1
 80036c4:	8063      	strh	r3, [r4, #2]
 80036c6:	2000      	movs	r0, #0
 80036c8:	bd70      	pop	{r4, r5, r6, pc}
 80036ca:	6880      	ldr	r0, [r0, #8]
 80036cc:	682a      	ldr	r2, [r5, #0]
 80036ce:	4290      	cmp	r0, r2
 80036d0:	d0f7      	beq.n	80036c2 <rt_mut_wait+0x16>
 80036d2:	b181      	cbz	r1, 80036f6 <rt_mut_wait+0x4a>
 80036d4:	7893      	ldrb	r3, [r2, #2]
 80036d6:	7882      	ldrb	r2, [r0, #2]
 80036d8:	429a      	cmp	r2, r3
 80036da:	d202      	bcs.n	80036e2 <rt_mut_wait+0x36>
 80036dc:	7083      	strb	r3, [r0, #2]
 80036de:	f7fe fedb 	bl	8002498 <rt_resort_prio>
 80036e2:	6862      	ldr	r2, [r4, #4]
 80036e4:	b14a      	cbz	r2, 80036fa <rt_mut_wait+0x4e>
 80036e6:	6829      	ldr	r1, [r5, #0]
 80036e8:	4620      	mov	r0, r4
 80036ea:	f7fe fe2f 	bl	800234c <rt_put_prio>
 80036ee:	2109      	movs	r1, #9
 80036f0:	4630      	mov	r0, r6
 80036f2:	f7ff fd43 	bl	800317c <rt_block>
 80036f6:	2001      	movs	r0, #1
 80036f8:	bd70      	pop	{r4, r5, r6, pc}
 80036fa:	682b      	ldr	r3, [r5, #0]
 80036fc:	6063      	str	r3, [r4, #4]
 80036fe:	605a      	str	r2, [r3, #4]
 8003700:	609c      	str	r4, [r3, #8]
 8003702:	e7f4      	b.n	80036ee <rt_mut_wait+0x42>
 8003704:	20002f2c 	.word	0x20002f2c

08003708 <rt_dly_wait>:
 8003708:	2103      	movs	r1, #3
 800370a:	f7ff bd37 	b.w	800317c <rt_block>
	...

08003710 <rt_sem_psh>:
 8003710:	6842      	ldr	r2, [r0, #4]
 8003712:	b510      	push	{r4, lr}
 8003714:	b17a      	cbz	r2, 8003736 <rt_sem_psh+0x26>
 8003716:	f7fe fe31 	bl	800237c <rt_get_first>
 800371a:	4604      	mov	r4, r0
 800371c:	f7fe fed4 	bl	80024c8 <rt_rmv_dly>
 8003720:	2101      	movs	r1, #1
 8003722:	7061      	strb	r1, [r4, #1]
 8003724:	4620      	mov	r0, r4
 8003726:	f7fe ff55 	bl	80025d4 <rt_ret_val>
 800372a:	4621      	mov	r1, r4
 800372c:	4804      	ldr	r0, [pc, #16]	; (8003740 <rt_sem_psh+0x30>)
 800372e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8003732:	f7fe be0b 	b.w	800234c <rt_put_prio>
 8003736:	8842      	ldrh	r2, [r0, #2]
 8003738:	3201      	adds	r2, #1
 800373a:	8042      	strh	r2, [r0, #2]
 800373c:	bd10      	pop	{r4, pc}
 800373e:	bf00      	nop
 8003740:	20002ee0 	.word	0x20002ee0

08003744 <timer_irq_handler>:
 8003744:	b570      	push	{r4, r5, r6, lr}
 8003746:	4c13      	ldr	r4, [pc, #76]	; (8003794 <timer_irq_handler+0x50>)
 8003748:	6823      	ldr	r3, [r4, #0]
 800374a:	691a      	ldr	r2, [r3, #16]
 800374c:	0795      	lsls	r5, r2, #30
 800374e:	d507      	bpl.n	8003760 <timer_irq_handler+0x1c>
 8003750:	68da      	ldr	r2, [r3, #12]
 8003752:	0790      	lsls	r0, r2, #30
 8003754:	d504      	bpl.n	8003760 <timer_irq_handler+0x1c>
 8003756:	f06f 0202 	mvn.w	r2, #2
 800375a:	611a      	str	r2, [r3, #16]
 800375c:	f7fe fc4e 	bl	8001ffc <us_ticker_irq_handler>
 8003760:	6823      	ldr	r3, [r4, #0]
 8003762:	691a      	ldr	r2, [r3, #16]
 8003764:	0751      	lsls	r1, r2, #29
 8003766:	d513      	bpl.n	8003790 <timer_irq_handler+0x4c>
 8003768:	68da      	ldr	r2, [r3, #12]
 800376a:	0752      	lsls	r2, r2, #29
 800376c:	d510      	bpl.n	8003790 <timer_irq_handler+0x4c>
 800376e:	f06f 0204 	mvn.w	r2, #4
 8003772:	4e09      	ldr	r6, [pc, #36]	; (8003798 <timer_irq_handler+0x54>)
 8003774:	611a      	str	r2, [r3, #16]
 8003776:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 8003778:	6833      	ldr	r3, [r6, #0]
 800377a:	1aeb      	subs	r3, r5, r3
 800377c:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 8003780:	d306      	bcc.n	8003790 <timer_irq_handler+0x4c>
 8003782:	f001 fe9f 	bl	80054c4 <HAL_IncTick>
 8003786:	6823      	ldr	r3, [r4, #0]
 8003788:	f505 727a 	add.w	r2, r5, #1000	; 0x3e8
 800378c:	639a      	str	r2, [r3, #56]	; 0x38
 800378e:	6035      	str	r5, [r6, #0]
 8003790:	bd70      	pop	{r4, r5, r6, pc}
 8003792:	bf00      	nop
 8003794:	20002f78 	.word	0x20002f78
 8003798:	20001f1c 	.word	0x20001f1c

0800379c <HAL_InitTick>:
 800379c:	b530      	push	{r4, r5, lr}
 800379e:	b089      	sub	sp, #36	; 0x24
 80037a0:	a901      	add	r1, sp, #4
 80037a2:	a803      	add	r0, sp, #12
 80037a4:	f001 fe56 	bl	8005454 <HAL_RCC_GetClockConfig>
 80037a8:	f001 fe24 	bl	80053f4 <HAL_RCC_GetPCLK1Freq>
 80037ac:	2300      	movs	r3, #0
 80037ae:	9302      	str	r3, [sp, #8]
 80037b0:	4b24      	ldr	r3, [pc, #144]	; (8003844 <HAL_InitTick+0xa8>)
 80037b2:	9001      	str	r0, [sp, #4]
 80037b4:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80037b6:	4c24      	ldr	r4, [pc, #144]	; (8003848 <HAL_InitTick+0xac>)
 80037b8:	f042 0208 	orr.w	r2, r2, #8
 80037bc:	641a      	str	r2, [r3, #64]	; 0x40
 80037be:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80037c0:	f002 0208 	and.w	r2, r2, #8
 80037c4:	9202      	str	r2, [sp, #8]
 80037c6:	9a02      	ldr	r2, [sp, #8]
 80037c8:	6a1a      	ldr	r2, [r3, #32]
 80037ca:	f042 0208 	orr.w	r2, r2, #8
 80037ce:	621a      	str	r2, [r3, #32]
 80037d0:	6a1a      	ldr	r2, [r3, #32]
 80037d2:	f022 0208 	bic.w	r2, r2, #8
 80037d6:	621a      	str	r2, [r3, #32]
 80037d8:	9a06      	ldr	r2, [sp, #24]
 80037da:	f5a3 330b 	sub.w	r3, r3, #142336	; 0x22c00
 80037de:	6023      	str	r3, [r4, #0]
 80037e0:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 80037e4:	60e3      	str	r3, [r4, #12]
 80037e6:	4b19      	ldr	r3, [pc, #100]	; (800384c <HAL_InitTick+0xb0>)
 80037e8:	bb4a      	cbnz	r2, 800383e <HAL_InitTick+0xa2>
 80037ea:	fbb0 f0f3 	udiv	r0, r0, r3
 80037ee:	3801      	subs	r0, #1
 80037f0:	2500      	movs	r5, #0
 80037f2:	6060      	str	r0, [r4, #4]
 80037f4:	4814      	ldr	r0, [pc, #80]	; (8003848 <HAL_InitTick+0xac>)
 80037f6:	6125      	str	r5, [r4, #16]
 80037f8:	60a5      	str	r5, [r4, #8]
 80037fa:	6165      	str	r5, [r4, #20]
 80037fc:	f001 f93c 	bl	8004a78 <HAL_TIM_OC_Init>
 8003800:	4913      	ldr	r1, [pc, #76]	; (8003850 <HAL_InitTick+0xb4>)
 8003802:	2032      	movs	r0, #50	; 0x32
 8003804:	f001 f856 	bl	80048b4 <__NVIC_SetVector>
 8003808:	4b12      	ldr	r3, [pc, #72]	; (8003854 <HAL_InitTick+0xb8>)
 800380a:	480f      	ldr	r0, [pc, #60]	; (8003848 <HAL_InitTick+0xac>)
 800380c:	f44f 2280 	mov.w	r2, #262144	; 0x40000
 8003810:	605a      	str	r2, [r3, #4]
 8003812:	4629      	mov	r1, r5
 8003814:	f001 fa14 	bl	8004c40 <HAL_TIM_OC_Start>
 8003818:	2104      	movs	r1, #4
 800381a:	480b      	ldr	r0, [pc, #44]	; (8003848 <HAL_InitTick+0xac>)
 800381c:	f001 fa10 	bl	8004c40 <HAL_TIM_OC_Start>
 8003820:	6823      	ldr	r3, [r4, #0]
 8003822:	4a0d      	ldr	r2, [pc, #52]	; (8003858 <HAL_InitTick+0xbc>)
 8003824:	6a59      	ldr	r1, [r3, #36]	; 0x24
 8003826:	6011      	str	r1, [r2, #0]
 8003828:	6812      	ldr	r2, [r2, #0]
 800382a:	f502 727a 	add.w	r2, r2, #1000	; 0x3e8
 800382e:	639a      	str	r2, [r3, #56]	; 0x38
 8003830:	68da      	ldr	r2, [r3, #12]
 8003832:	4628      	mov	r0, r5
 8003834:	f042 0204 	orr.w	r2, r2, #4
 8003838:	60da      	str	r2, [r3, #12]
 800383a:	b009      	add	sp, #36	; 0x24
 800383c:	bd30      	pop	{r4, r5, pc}
 800383e:	0040      	lsls	r0, r0, #1
 8003840:	e7d3      	b.n	80037ea <HAL_InitTick+0x4e>
 8003842:	bf00      	nop
 8003844:	40023800 	.word	0x40023800
 8003848:	20002f78 	.word	0x20002f78
 800384c:	000f4240 	.word	0x000f4240
 8003850:	08003745 	.word	0x08003745
 8003854:	e000e100 	.word	0xe000e100
 8003858:	20001f1c 	.word	0x20001f1c

0800385c <HAL_SuspendTick>:
 800385c:	4b03      	ldr	r3, [pc, #12]	; (800386c <HAL_SuspendTick+0x10>)
 800385e:	4a04      	ldr	r2, [pc, #16]	; (8003870 <HAL_SuspendTick+0x14>)
 8003860:	6013      	str	r3, [r2, #0]
 8003862:	68da      	ldr	r2, [r3, #12]
 8003864:	f022 0204 	bic.w	r2, r2, #4
 8003868:	60da      	str	r2, [r3, #12]
 800386a:	4770      	bx	lr
 800386c:	40000c00 	.word	0x40000c00
 8003870:	20002f78 	.word	0x20002f78

08003874 <HAL_ResumeTick>:
 8003874:	4b03      	ldr	r3, [pc, #12]	; (8003884 <HAL_ResumeTick+0x10>)
 8003876:	4a04      	ldr	r2, [pc, #16]	; (8003888 <HAL_ResumeTick+0x14>)
 8003878:	6013      	str	r3, [r2, #0]
 800387a:	68da      	ldr	r2, [r3, #12]
 800387c:	f042 0204 	orr.w	r2, r2, #4
 8003880:	60da      	str	r2, [r3, #12]
 8003882:	4770      	bx	lr
 8003884:	40000c00 	.word	0x40000c00
 8003888:	20002f78 	.word	0x20002f78

0800388c <handle_interrupt_in>:
 800388c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800388e:	264c      	movs	r6, #76	; 0x4c
 8003890:	4b13      	ldr	r3, [pc, #76]	; (80038e0 <handle_interrupt_in+0x54>)
 8003892:	4346      	muls	r6, r0
 8003894:	1d34      	adds	r4, r6, #4
 8003896:	460f      	mov	r7, r1
 8003898:	441c      	add	r4, r3
 800389a:	2500      	movs	r5, #0
 800389c:	441e      	add	r6, r3
 800389e:	42bd      	cmp	r5, r7
 80038a0:	d100      	bne.n	80038a4 <handle_interrupt_in+0x18>
 80038a2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80038a4:	2101      	movs	r1, #1
 80038a6:	6833      	ldr	r3, [r6, #0]
 80038a8:	fa01 f205 	lsl.w	r2, r1, r5
 80038ac:	421a      	tst	r2, r3
 80038ae:	d013      	beq.n	80038d8 <handle_interrupt_in+0x4c>
 80038b0:	4a0c      	ldr	r2, [pc, #48]	; (80038e4 <handle_interrupt_in+0x58>)
 80038b2:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80038b4:	6950      	ldr	r0, [r2, #20]
 80038b6:	fa01 f303 	lsl.w	r3, r1, r3
 80038ba:	4203      	tst	r3, r0
 80038bc:	d00c      	beq.n	80038d8 <handle_interrupt_in+0x4c>
 80038be:	f8d4 e018 	ldr.w	lr, [r4, #24]
 80038c2:	6153      	str	r3, [r2, #20]
 80038c4:	6820      	ldr	r0, [r4, #0]
 80038c6:	b138      	cbz	r0, 80038d8 <handle_interrupt_in+0x4c>
 80038c8:	f8de 2010 	ldr.w	r2, [lr, #16]
 80038cc:	4213      	tst	r3, r2
 80038ce:	4b06      	ldr	r3, [pc, #24]	; (80038e8 <handle_interrupt_in+0x5c>)
 80038d0:	bf08      	it	eq
 80038d2:	2102      	moveq	r1, #2
 80038d4:	681b      	ldr	r3, [r3, #0]
 80038d6:	4798      	blx	r3
 80038d8:	3501      	adds	r5, #1
 80038da:	3404      	adds	r4, #4
 80038dc:	e7df      	b.n	800389e <handle_interrupt_in+0x12>
 80038de:	bf00      	nop
 80038e0:	20001f20 	.word	0x20001f20
 80038e4:	40013c00 	.word	0x40013c00
 80038e8:	20002134 	.word	0x20002134

080038ec <gpio_irq0>:
 80038ec:	2101      	movs	r1, #1
 80038ee:	2000      	movs	r0, #0
 80038f0:	f7ff bfcc 	b.w	800388c <handle_interrupt_in>

080038f4 <gpio_irq1>:
 80038f4:	2101      	movs	r1, #1
 80038f6:	4608      	mov	r0, r1
 80038f8:	f7ff bfc8 	b.w	800388c <handle_interrupt_in>

080038fc <gpio_irq2>:
 80038fc:	2101      	movs	r1, #1
 80038fe:	2002      	movs	r0, #2
 8003900:	f7ff bfc4 	b.w	800388c <handle_interrupt_in>

08003904 <gpio_irq3>:
 8003904:	2101      	movs	r1, #1
 8003906:	2003      	movs	r0, #3
 8003908:	f7ff bfc0 	b.w	800388c <handle_interrupt_in>

0800390c <gpio_irq4>:
 800390c:	2101      	movs	r1, #1
 800390e:	2004      	movs	r0, #4
 8003910:	f7ff bfbc 	b.w	800388c <handle_interrupt_in>

08003914 <gpio_irq5>:
 8003914:	2105      	movs	r1, #5
 8003916:	4608      	mov	r0, r1
 8003918:	f7ff bfb8 	b.w	800388c <handle_interrupt_in>

0800391c <gpio_irq6>:
 800391c:	2106      	movs	r1, #6
 800391e:	4608      	mov	r0, r1
 8003920:	f7ff bfb4 	b.w	800388c <handle_interrupt_in>

08003924 <gpio_irq_set>:
 8003924:	2901      	cmp	r1, #1
 8003926:	b510      	push	{r4, lr}
 8003928:	d110      	bne.n	800394c <gpio_irq_set+0x28>
 800392a:	4c14      	ldr	r4, [pc, #80]	; (800397c <gpio_irq_set+0x58>)
 800392c:	8983      	ldrh	r3, [r0, #12]
 800392e:	b132      	cbz	r2, 800393e <gpio_irq_set+0x1a>
 8003930:	68a2      	ldr	r2, [r4, #8]
 8003932:	f003 030f 	and.w	r3, r3, #15
 8003936:	4099      	lsls	r1, r3
 8003938:	4311      	orrs	r1, r2
 800393a:	60a1      	str	r1, [r4, #8]
 800393c:	bd10      	pop	{r4, pc}
 800393e:	68a2      	ldr	r2, [r4, #8]
 8003940:	f003 030f 	and.w	r3, r3, #15
 8003944:	4099      	lsls	r1, r3
 8003946:	ea22 0101 	bic.w	r1, r2, r1
 800394a:	e7f6      	b.n	800393a <gpio_irq_set+0x16>
 800394c:	2902      	cmp	r1, #2
 800394e:	d10a      	bne.n	8003966 <gpio_irq_set+0x42>
 8003950:	490a      	ldr	r1, [pc, #40]	; (800397c <gpio_irq_set+0x58>)
 8003952:	8983      	ldrh	r3, [r0, #12]
 8003954:	b142      	cbz	r2, 8003968 <gpio_irq_set+0x44>
 8003956:	68c8      	ldr	r0, [r1, #12]
 8003958:	f003 030f 	and.w	r3, r3, #15
 800395c:	2201      	movs	r2, #1
 800395e:	fa02 f303 	lsl.w	r3, r2, r3
 8003962:	4303      	orrs	r3, r0
 8003964:	60cb      	str	r3, [r1, #12]
 8003966:	bd10      	pop	{r4, pc}
 8003968:	68ca      	ldr	r2, [r1, #12]
 800396a:	f003 030f 	and.w	r3, r3, #15
 800396e:	2001      	movs	r0, #1
 8003970:	fa00 f303 	lsl.w	r3, r0, r3
 8003974:	ea22 0303 	bic.w	r3, r2, r3
 8003978:	e7f4      	b.n	8003964 <gpio_irq_set+0x40>
 800397a:	bf00      	nop
 800397c:	40013c00 	.word	0x40013c00

08003980 <gpio_irq_enable>:
 8003980:	f9b0 300c 	ldrsh.w	r3, [r0, #12]
 8003984:	b29a      	uxth	r2, r3
 8003986:	f002 010f 	and.w	r1, r2, #15
 800398a:	b570      	push	{r4, r5, r6, lr}
 800398c:	f001 040c 	and.w	r4, r1, #12
 8003990:	f104 4480 	add.w	r4, r4, #1073741824	; 0x40000000
 8003994:	f504 349c 	add.w	r4, r4, #79872	; 0x13800
 8003998:	f002 0203 	and.w	r2, r2, #3
 800399c:	68a5      	ldr	r5, [r4, #8]
 800399e:	0092      	lsls	r2, r2, #2
 80039a0:	260f      	movs	r6, #15
 80039a2:	4096      	lsls	r6, r2
 80039a4:	f3c3 1303 	ubfx	r3, r3, #4, #4
 80039a8:	4093      	lsls	r3, r2
 80039aa:	ea25 0506 	bic.w	r5, r5, r6
 80039ae:	4a09      	ldr	r2, [pc, #36]	; (80039d4 <gpio_irq_enable+0x54>)
 80039b0:	432b      	orrs	r3, r5
 80039b2:	60a3      	str	r3, [r4, #8]
 80039b4:	6814      	ldr	r4, [r2, #0]
 80039b6:	2301      	movs	r3, #1
 80039b8:	fa03 f101 	lsl.w	r1, r3, r1
 80039bc:	4321      	orrs	r1, r4
 80039be:	6011      	str	r1, [r2, #0]
 80039c0:	f990 2000 	ldrsb.w	r2, [r0]
 80039c4:	0951      	lsrs	r1, r2, #5
 80039c6:	f002 021f 	and.w	r2, r2, #31
 80039ca:	4093      	lsls	r3, r2
 80039cc:	4a02      	ldr	r2, [pc, #8]	; (80039d8 <gpio_irq_enable+0x58>)
 80039ce:	f842 3021 	str.w	r3, [r2, r1, lsl #2]
 80039d2:	bd70      	pop	{r4, r5, r6, pc}
 80039d4:	40013c00 	.word	0x40013c00
 80039d8:	e000e100 	.word	0xe000e100

080039dc <gpio_irq_init>:
 80039dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, lr}
 80039e0:	469b      	mov	r11, r3
 80039e2:	1c4b      	adds	r3, r1, #1
 80039e4:	b085      	sub	sp, #20
 80039e6:	4607      	mov	r7, r0
 80039e8:	460c      	mov	r4, r1
 80039ea:	4692      	mov	r10, r2
 80039ec:	d064      	beq.n	8003ab8 <gpio_irq_init+0xdc>
 80039ee:	2300      	movs	r3, #0
 80039f0:	9303      	str	r3, [sp, #12]
 80039f2:	4b32      	ldr	r3, [pc, #200]	; (8003abc <gpio_irq_init+0xe0>)
 80039f4:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 80039f6:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 80039fa:	645a      	str	r2, [r3, #68]	; 0x44
 80039fc:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80039fe:	4a30      	ldr	r2, [pc, #192]	; (8003ac0 <gpio_irq_init+0xe4>)
 8003a00:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8003a04:	9303      	str	r3, [sp, #12]
 8003a06:	9b03      	ldr	r3, [sp, #12]
 8003a08:	f001 080f 	and.w	r8, r1, #15
 8003a0c:	230c      	movs	r3, #12
 8003a0e:	fb03 2308 	mla	r3, r3, r8, r2
 8003a12:	f3c1 1003 	ubfx	r0, r1, #4, #4
 8003a16:	685d      	ldr	r5, [r3, #4]
 8003a18:	2d06      	cmp	r5, #6
 8003a1a:	d845      	bhi.n	8003aa8 <gpio_irq_init+0xcc>
 8003a1c:	e8df f005 	tbb	[pc, r5]
 8003a20:	3c3a3804 	.word	0x3c3a3804
 8003a24:	403e      	.short	0x403e
 8003a26:	42          	.byte	0x42
 8003a27:	00          	.byte	0x00
 8003a28:	4e26      	ldr	r6, [pc, #152]	; (8003ac4 <gpio_irq_init+0xe8>)
 8003a2a:	9201      	str	r2, [sp, #4]
 8003a2c:	f000 f8b4 	bl	8003b98 <Set_GPIO_Clock>
 8003a30:	210c      	movs	r1, #12
 8003a32:	9a01      	ldr	r2, [sp, #4]
 8003a34:	81bc      	strh	r4, [r7, #12]
 8003a36:	fb01 f108 	mul.w	r1, r1, r8
 8003a3a:	1853      	adds	r3, r2, r1
 8003a3c:	f852 e001 	ldr.w	lr, [r2, r1]
 8003a40:	4921      	ldr	r1, [pc, #132]	; (8003ac8 <gpio_irq_init+0xec>)
 8003a42:	f993 c008 	ldrsb.w	r12, [r3, #8]
 8003a46:	f887 c000 	strb.w	r12, [r7]
 8003a4a:	224c      	movs	r2, #76	; 0x4c
 8003a4c:	436a      	muls	r2, r5
 8003a4e:	2401      	movs	r4, #1
 8003a50:	588b      	ldr	r3, [r1, r2]
 8003a52:	607d      	str	r5, [r7, #4]
 8003a54:	fa04 f40e 	lsl.w	r4, r4, lr
 8003a58:	431c      	orrs	r4, r3
 8003a5a:	f04f 0900 	mov.w	r9, #0
 8003a5e:	f8c7 9008 	str.w	r9, [r7, #8]
 8003a62:	508c      	str	r4, [r1, r2]
 8003a64:	2213      	movs	r2, #19
 8003a66:	fb02 e505 	mla	r5, r2, r5, lr
 8003a6a:	eb01 0285 	add.w	r2, r1, r5, lsl #2
 8003a6e:	4631      	mov	r1, r6
 8003a70:	61d0      	str	r0, [r2, #28]
 8003a72:	f8c2 b004 	str.w	r11, [r2, #4]
 8003a76:	f8c2 8034 	str.w	r8, [r2, #52]	; 0x34
 8003a7a:	4a14      	ldr	r2, [pc, #80]	; (8003acc <gpio_irq_init+0xf0>)
 8003a7c:	4660      	mov	r0, r12
 8003a7e:	f8c2 a000 	str.w	r10, [r2]
 8003a82:	f000 ff17 	bl	80048b4 <__NVIC_SetVector>
 8003a86:	4638      	mov	r0, r7
 8003a88:	f7ff ff7a 	bl	8003980 <gpio_irq_enable>
 8003a8c:	4648      	mov	r0, r9
 8003a8e:	e010      	b.n	8003ab2 <gpio_irq_init+0xd6>
 8003a90:	4e0f      	ldr	r6, [pc, #60]	; (8003ad0 <gpio_irq_init+0xf4>)
 8003a92:	e7ca      	b.n	8003a2a <gpio_irq_init+0x4e>
 8003a94:	4e0f      	ldr	r6, [pc, #60]	; (8003ad4 <gpio_irq_init+0xf8>)
 8003a96:	e7c8      	b.n	8003a2a <gpio_irq_init+0x4e>
 8003a98:	4e0f      	ldr	r6, [pc, #60]	; (8003ad8 <gpio_irq_init+0xfc>)
 8003a9a:	e7c6      	b.n	8003a2a <gpio_irq_init+0x4e>
 8003a9c:	4e0f      	ldr	r6, [pc, #60]	; (8003adc <gpio_irq_init+0x100>)
 8003a9e:	e7c4      	b.n	8003a2a <gpio_irq_init+0x4e>
 8003aa0:	4e0f      	ldr	r6, [pc, #60]	; (8003ae0 <gpio_irq_init+0x104>)
 8003aa2:	e7c2      	b.n	8003a2a <gpio_irq_init+0x4e>
 8003aa4:	4e0f      	ldr	r6, [pc, #60]	; (8003ae4 <gpio_irq_init+0x108>)
 8003aa6:	e7c0      	b.n	8003a2a <gpio_irq_init+0x4e>
 8003aa8:	480f      	ldr	r0, [pc, #60]	; (8003ae8 <gpio_irq_init+0x10c>)
 8003aaa:	f7fe fbcb 	bl	8002244 <error>
 8003aae:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8003ab2:	b005      	add	sp, #20
 8003ab4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, pc}
 8003ab8:	4608      	mov	r0, r1
 8003aba:	e7fa      	b.n	8003ab2 <gpio_irq_init+0xd6>
 8003abc:	40023800 	.word	0x40023800
 8003ac0:	08007ad0 	.word	0x08007ad0
 8003ac4:	080038ed 	.word	0x080038ed
 8003ac8:	20001f20 	.word	0x20001f20
 8003acc:	20002134 	.word	0x20002134
 8003ad0:	080038f5 	.word	0x080038f5
 8003ad4:	080038fd 	.word	0x080038fd
 8003ad8:	08003905 	.word	0x08003905
 8003adc:	0800390d 	.word	0x0800390d
 8003ae0:	08003915 	.word	0x08003915
 8003ae4:	0800391d 	.word	0x0800391d
 8003ae8:	080079bc 	.word	0x080079bc

08003aec <gpio_irq_disable>:
 8003aec:	b510      	push	{r4, lr}
 8003aee:	8983      	ldrh	r3, [r0, #12]
 8003af0:	4c12      	ldr	r4, [pc, #72]	; (8003b3c <gpio_irq_disable+0x50>)
 8003af2:	2201      	movs	r2, #1
 8003af4:	6821      	ldr	r1, [r4, #0]
 8003af6:	f003 030f 	and.w	r3, r3, #15
 8003afa:	fa02 f303 	lsl.w	r3, r2, r3
 8003afe:	ea21 0303 	bic.w	r3, r1, r3
 8003b02:	6023      	str	r3, [r4, #0]
 8003b04:	f990 3000 	ldrsb.w	r3, [r0]
 8003b08:	4c0d      	ldr	r4, [pc, #52]	; (8003b40 <gpio_irq_disable+0x54>)
 8003b0a:	0959      	lsrs	r1, r3, #5
 8003b0c:	3120      	adds	r1, #32
 8003b0e:	f003 031f 	and.w	r3, r3, #31
 8003b12:	fa02 f303 	lsl.w	r3, r2, r3
 8003b16:	f844 3021 	str.w	r3, [r4, r1, lsl #2]
 8003b1a:	f3bf 8f4f 	dsb	sy
 8003b1e:	f3bf 8f6f 	isb	sy
 8003b22:	f990 3000 	ldrsb.w	r3, [r0]
 8003b26:	0959      	lsrs	r1, r3, #5
 8003b28:	f003 031f 	and.w	r3, r3, #31
 8003b2c:	409a      	lsls	r2, r3
 8003b2e:	f101 0360 	add.w	r3, r1, #96	; 0x60
 8003b32:	f844 2023 	str.w	r2, [r4, r3, lsl #2]
 8003b36:	2300      	movs	r3, #0
 8003b38:	6083      	str	r3, [r0, #8]
 8003b3a:	bd10      	pop	{r4, pc}
 8003b3c:	40013c00 	.word	0x40013c00
 8003b40:	e000e100 	.word	0xe000e100

08003b44 <gpio_irq_free>:
 8003b44:	8983      	ldrh	r3, [r0, #12]
 8003b46:	f003 020f 	and.w	r2, r3, #15
 8003b4a:	230c      	movs	r3, #12
 8003b4c:	4353      	muls	r3, r2
 8003b4e:	4a10      	ldr	r2, [pc, #64]	; (8003b90 <gpio_irq_free+0x4c>)
 8003b50:	b570      	push	{r4, r5, r6, lr}
 8003b52:	6844      	ldr	r4, [r0, #4]
 8003b54:	58d6      	ldr	r6, [r2, r3]
 8003b56:	f7ff ffc9 	bl	8003aec <gpio_irq_disable>
 8003b5a:	214c      	movs	r1, #76	; 0x4c
 8003b5c:	4a0d      	ldr	r2, [pc, #52]	; (8003b94 <gpio_irq_free+0x50>)
 8003b5e:	4361      	muls	r1, r4
 8003b60:	2001      	movs	r0, #1
 8003b62:	fa00 f506 	lsl.w	r5, r0, r6
 8003b66:	5850      	ldr	r0, [r2, r1]
 8003b68:	2313      	movs	r3, #19
 8003b6a:	fb03 6304 	mla	r3, r3, r4, r6
 8003b6e:	ea20 0005 	bic.w	r0, r0, r5
 8003b72:	5050      	str	r0, [r2, r1]
 8003b74:	eb02 0083 	add.w	r0, r2, r3, lsl #2
 8003b78:	2100      	movs	r1, #0
 8003b7a:	6041      	str	r1, [r0, #4]
 8003b7c:	1d98      	adds	r0, r3, #6
 8003b7e:	330c      	adds	r3, #12
 8003b80:	eb02 0080 	add.w	r0, r2, r0, lsl #2
 8003b84:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8003b88:	6041      	str	r1, [r0, #4]
 8003b8a:	6059      	str	r1, [r3, #4]
 8003b8c:	bd70      	pop	{r4, r5, r6, pc}
 8003b8e:	bf00      	nop
 8003b90:	08007ad0 	.word	0x08007ad0
 8003b94:	20001f20 	.word	0x20001f20

08003b98 <Set_GPIO_Clock>:
 8003b98:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8003b9a:	2300      	movs	r3, #0
 8003b9c:	2807      	cmp	r0, #7
 8003b9e:	d855      	bhi.n	8003c4c <Set_GPIO_Clock+0xb4>
 8003ba0:	e8df f000 	tbb	[pc, r0]
 8003ba4:	2d201304 	.word	0x2d201304
 8003ba8:	4754543a 	.word	0x4754543a
 8003bac:	9300      	str	r3, [sp, #0]
 8003bae:	4b2a      	ldr	r3, [pc, #168]	; (8003c58 <Set_GPIO_Clock+0xc0>)
 8003bb0:	482a      	ldr	r0, [pc, #168]	; (8003c5c <Set_GPIO_Clock+0xc4>)
 8003bb2:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8003bb4:	f042 0201 	orr.w	r2, r2, #1
 8003bb8:	631a      	str	r2, [r3, #48]	; 0x30
 8003bba:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003bbc:	f003 0301 	and.w	r3, r3, #1
 8003bc0:	9300      	str	r3, [sp, #0]
 8003bc2:	9b00      	ldr	r3, [sp, #0]
 8003bc4:	b007      	add	sp, #28
 8003bc6:	f85d fb04 	ldr.w	pc, [sp], #4
 8003bca:	9301      	str	r3, [sp, #4]
 8003bcc:	4b22      	ldr	r3, [pc, #136]	; (8003c58 <Set_GPIO_Clock+0xc0>)
 8003bce:	4824      	ldr	r0, [pc, #144]	; (8003c60 <Set_GPIO_Clock+0xc8>)
 8003bd0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8003bd2:	f042 0202 	orr.w	r2, r2, #2
 8003bd6:	631a      	str	r2, [r3, #48]	; 0x30
 8003bd8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003bda:	f003 0302 	and.w	r3, r3, #2
 8003bde:	9301      	str	r3, [sp, #4]
 8003be0:	9b01      	ldr	r3, [sp, #4]
 8003be2:	e7ef      	b.n	8003bc4 <Set_GPIO_Clock+0x2c>
 8003be4:	9302      	str	r3, [sp, #8]
 8003be6:	4b1c      	ldr	r3, [pc, #112]	; (8003c58 <Set_GPIO_Clock+0xc0>)
 8003be8:	481e      	ldr	r0, [pc, #120]	; (8003c64 <Set_GPIO_Clock+0xcc>)
 8003bea:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8003bec:	f042 0204 	orr.w	r2, r2, #4
 8003bf0:	631a      	str	r2, [r3, #48]	; 0x30
 8003bf2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003bf4:	f003 0304 	and.w	r3, r3, #4
 8003bf8:	9302      	str	r3, [sp, #8]
 8003bfa:	9b02      	ldr	r3, [sp, #8]
 8003bfc:	e7e2      	b.n	8003bc4 <Set_GPIO_Clock+0x2c>
 8003bfe:	9303      	str	r3, [sp, #12]
 8003c00:	4b15      	ldr	r3, [pc, #84]	; (8003c58 <Set_GPIO_Clock+0xc0>)
 8003c02:	4819      	ldr	r0, [pc, #100]	; (8003c68 <Set_GPIO_Clock+0xd0>)
 8003c04:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8003c06:	f042 0208 	orr.w	r2, r2, #8
 8003c0a:	631a      	str	r2, [r3, #48]	; 0x30
 8003c0c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003c0e:	f003 0308 	and.w	r3, r3, #8
 8003c12:	9303      	str	r3, [sp, #12]
 8003c14:	9b03      	ldr	r3, [sp, #12]
 8003c16:	e7d5      	b.n	8003bc4 <Set_GPIO_Clock+0x2c>
 8003c18:	9304      	str	r3, [sp, #16]
 8003c1a:	4b0f      	ldr	r3, [pc, #60]	; (8003c58 <Set_GPIO_Clock+0xc0>)
 8003c1c:	4813      	ldr	r0, [pc, #76]	; (8003c6c <Set_GPIO_Clock+0xd4>)
 8003c1e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8003c20:	f042 0210 	orr.w	r2, r2, #16
 8003c24:	631a      	str	r2, [r3, #48]	; 0x30
 8003c26:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003c28:	f003 0310 	and.w	r3, r3, #16
 8003c2c:	9304      	str	r3, [sp, #16]
 8003c2e:	9b04      	ldr	r3, [sp, #16]
 8003c30:	e7c8      	b.n	8003bc4 <Set_GPIO_Clock+0x2c>
 8003c32:	9305      	str	r3, [sp, #20]
 8003c34:	4b08      	ldr	r3, [pc, #32]	; (8003c58 <Set_GPIO_Clock+0xc0>)
 8003c36:	480e      	ldr	r0, [pc, #56]	; (8003c70 <Set_GPIO_Clock+0xd8>)
 8003c38:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8003c3a:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 8003c3e:	631a      	str	r2, [r3, #48]	; 0x30
 8003c40:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003c42:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8003c46:	9305      	str	r3, [sp, #20]
 8003c48:	9b05      	ldr	r3, [sp, #20]
 8003c4a:	e7bb      	b.n	8003bc4 <Set_GPIO_Clock+0x2c>
 8003c4c:	4809      	ldr	r0, [pc, #36]	; (8003c74 <Set_GPIO_Clock+0xdc>)
 8003c4e:	f7fe faf9 	bl	8002244 <error>
 8003c52:	2000      	movs	r0, #0
 8003c54:	e7b6      	b.n	8003bc4 <Set_GPIO_Clock+0x2c>
 8003c56:	bf00      	nop
 8003c58:	40023800 	.word	0x40023800
 8003c5c:	40020000 	.word	0x40020000
 8003c60:	40020400 	.word	0x40020400
 8003c64:	40020800 	.word	0x40020800
 8003c68:	40020c00 	.word	0x40020c00
 8003c6c:	40021000 	.word	0x40021000
 8003c70:	40021c00 	.word	0x40021c00
 8003c74:	080079e3 	.word	0x080079e3

08003c78 <gpio_set>:
 8003c78:	b510      	push	{r4, lr}
 8003c7a:	2100      	movs	r1, #0
 8003c7c:	4604      	mov	r4, r0
 8003c7e:	f004 040f 	and.w	r4, r4, #15
 8003c82:	f000 fa89 	bl	8004198 <pin_function>
 8003c86:	2001      	movs	r0, #1
 8003c88:	40a0      	lsls	r0, r4
 8003c8a:	bd10      	pop	{r4, pc}

08003c8c <gpio_init>:
 8003c8c:	b570      	push	{r4, r5, r6, lr}
 8003c8e:	4604      	mov	r4, r0
 8003c90:	1c4b      	adds	r3, r1, #1
 8003c92:	460e      	mov	r6, r1
 8003c94:	8221      	strh	r1, [r4, #16]
 8003c96:	d016      	beq.n	8003cc6 <gpio_init+0x3a>
 8003c98:	f3c1 1003 	ubfx	r0, r1, #4, #4
 8003c9c:	f7ff ff7c 	bl	8003b98 <Set_GPIO_Clock>
 8003ca0:	4605      	mov	r5, r0
 8003ca2:	4630      	mov	r0, r6
 8003ca4:	f7ff ffe8 	bl	8003c78 <gpio_set>
 8003ca8:	8a23      	ldrh	r3, [r4, #16]
 8003caa:	4a07      	ldr	r2, [pc, #28]	; (8003cc8 <gpio_init+0x3c>)
 8003cac:	6165      	str	r5, [r4, #20]
 8003cae:	f003 030f 	and.w	r3, r3, #15
 8003cb2:	6020      	str	r0, [r4, #0]
 8003cb4:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8003cb8:	61a3      	str	r3, [r4, #24]
 8003cba:	f105 0310 	add.w	r3, r5, #16
 8003cbe:	3518      	adds	r5, #24
 8003cc0:	6063      	str	r3, [r4, #4]
 8003cc2:	60a5      	str	r5, [r4, #8]
 8003cc4:	60e5      	str	r5, [r4, #12]
 8003cc6:	bd70      	pop	{r4, r5, r6, pc}
 8003cc8:	08007a30 	.word	0x08007a30

08003ccc <gpio_mode>:
 8003ccc:	f9b0 0010 	ldrsh.w	r0, [r0, #16]
 8003cd0:	f000 bae6 	b.w	80042a0 <pin_mode>

08003cd4 <gpio_dir>:
 8003cd4:	b510      	push	{r4, lr}
 8003cd6:	6983      	ldr	r3, [r0, #24]
 8003cd8:	6944      	ldr	r4, [r0, #20]
 8003cda:	b971      	cbnz	r1, 8003cfa <gpio_dir+0x26>
 8003cdc:	6821      	ldr	r1, [r4, #0]
 8003cde:	fa93 f2a3 	rbit	r2, r3
 8003ce2:	fab2 f282 	clz	r2, r2
 8003ce6:	2003      	movs	r0, #3
 8003ce8:	0052      	lsls	r2, r2, #1
 8003cea:	fa00 f202 	lsl.w	r2, r0, r2
 8003cee:	ea21 0202 	bic.w	r2, r1, r2
 8003cf2:	fa93 f3a3 	rbit	r3, r3
 8003cf6:	6022      	str	r2, [r4, #0]
 8003cf8:	bd10      	pop	{r4, pc}
 8003cfa:	6822      	ldr	r2, [r4, #0]
 8003cfc:	fa93 f1a3 	rbit	r1, r3
 8003d00:	fab1 f181 	clz	r1, r1
 8003d04:	fa93 f3a3 	rbit	r3, r3
 8003d08:	2003      	movs	r0, #3
 8003d0a:	0049      	lsls	r1, r1, #1
 8003d0c:	fa00 f101 	lsl.w	r1, r0, r1
 8003d10:	fab3 f383 	clz	r3, r3
 8003d14:	ea22 0201 	bic.w	r2, r2, r1
 8003d18:	005b      	lsls	r3, r3, #1
 8003d1a:	2101      	movs	r1, #1
 8003d1c:	fa01 f303 	lsl.w	r3, r1, r3
 8003d20:	4313      	orrs	r3, r2
 8003d22:	6023      	str	r3, [r4, #0]
 8003d24:	bd10      	pop	{r4, pc}

08003d26 <hal_sleep>:
 8003d26:	b508      	push	{r3, lr}
 8003d28:	f7ff fd98 	bl	800385c <HAL_SuspendTick>
 8003d2c:	2101      	movs	r1, #1
 8003d2e:	2000      	movs	r0, #0
 8003d30:	f001 f8f0 	bl	8004f14 <HAL_PWR_EnterSLEEPMode>
 8003d34:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8003d38:	f7ff bd9c 	b.w	8003874 <HAL_ResumeTick>

08003d3c <us_ticker_init>:
 8003d3c:	4b05      	ldr	r3, [pc, #20]	; (8003d54 <us_ticker_init+0x18>)
 8003d3e:	6818      	ldr	r0, [r3, #0]
 8003d40:	b930      	cbnz	r0, 8003d50 <us_ticker_init+0x14>
 8003d42:	2201      	movs	r2, #1
 8003d44:	601a      	str	r2, [r3, #0]
 8003d46:	4b04      	ldr	r3, [pc, #16]	; (8003d58 <us_ticker_init+0x1c>)
 8003d48:	4a04      	ldr	r2, [pc, #16]	; (8003d5c <us_ticker_init+0x20>)
 8003d4a:	601a      	str	r2, [r3, #0]
 8003d4c:	f7ff bd26 	b.w	800379c <HAL_InitTick>
 8003d50:	4770      	bx	lr
 8003d52:	bf00      	nop
 8003d54:	20002138 	.word	0x20002138
 8003d58:	20002f78 	.word	0x20002f78
 8003d5c:	40000c00 	.word	0x40000c00

08003d60 <us_ticker_read>:
 8003d60:	b508      	push	{r3, lr}
 8003d62:	4b04      	ldr	r3, [pc, #16]	; (8003d74 <us_ticker_read+0x14>)
 8003d64:	681b      	ldr	r3, [r3, #0]
 8003d66:	b90b      	cbnz	r3, 8003d6c <us_ticker_read+0xc>
 8003d68:	f7ff ffe8 	bl	8003d3c <us_ticker_init>
 8003d6c:	4b02      	ldr	r3, [pc, #8]	; (8003d78 <us_ticker_read+0x18>)
 8003d6e:	6a58      	ldr	r0, [r3, #36]	; 0x24
 8003d70:	bd08      	pop	{r3, pc}
 8003d72:	bf00      	nop
 8003d74:	20002138 	.word	0x20002138
 8003d78:	40000c00 	.word	0x40000c00

08003d7c <us_ticker_set_interrupt>:
 8003d7c:	4b04      	ldr	r3, [pc, #16]	; (8003d90 <us_ticker_set_interrupt+0x14>)
 8003d7e:	4a05      	ldr	r2, [pc, #20]	; (8003d94 <us_ticker_set_interrupt+0x18>)
 8003d80:	6013      	str	r3, [r2, #0]
 8003d82:	6358      	str	r0, [r3, #52]	; 0x34
 8003d84:	68da      	ldr	r2, [r3, #12]
 8003d86:	f042 0202 	orr.w	r2, r2, #2
 8003d8a:	60da      	str	r2, [r3, #12]
 8003d8c:	4770      	bx	lr
 8003d8e:	bf00      	nop
 8003d90:	40000c00 	.word	0x40000c00
 8003d94:	20002f78 	.word	0x20002f78

08003d98 <us_ticker_disable_interrupt>:
 8003d98:	4b03      	ldr	r3, [pc, #12]	; (8003da8 <us_ticker_disable_interrupt+0x10>)
 8003d9a:	4a04      	ldr	r2, [pc, #16]	; (8003dac <us_ticker_disable_interrupt+0x14>)
 8003d9c:	6013      	str	r3, [r2, #0]
 8003d9e:	68da      	ldr	r2, [r3, #12]
 8003da0:	f022 0202 	bic.w	r2, r2, #2
 8003da4:	60da      	str	r2, [r3, #12]
 8003da6:	4770      	bx	lr
 8003da8:	40000c00 	.word	0x40000c00
 8003dac:	20002f78 	.word	0x20002f78

08003db0 <us_ticker_clear_interrupt>:
 8003db0:	4a03      	ldr	r2, [pc, #12]	; (8003dc0 <us_ticker_clear_interrupt+0x10>)
 8003db2:	4b04      	ldr	r3, [pc, #16]	; (8003dc4 <us_ticker_clear_interrupt+0x14>)
 8003db4:	6013      	str	r3, [r2, #0]
 8003db6:	f06f 0202 	mvn.w	r2, #2
 8003dba:	611a      	str	r2, [r3, #16]
 8003dbc:	4770      	bx	lr
 8003dbe:	bf00      	nop
 8003dc0:	20002f78 	.word	0x20002f78
 8003dc4:	40000c00 	.word	0x40000c00

08003dc8 <pwmout_write>:
 8003dc8:	b530      	push	{r4, r5, lr}
 8003dca:	ee07 1a10 	vmov	s14, r1
 8003dce:	4b28      	ldr	r3, [pc, #160]	; (8003e70 <pwmout_write+0xa8>)
 8003dd0:	6802      	ldr	r2, [r0, #0]
 8003dd2:	601a      	str	r2, [r3, #0]
 8003dd4:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8003dd8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003ddc:	b089      	sub	sp, #36	; 0x24
 8003dde:	4605      	mov	r5, r0
 8003de0:	d428      	bmi.n	8003e34 <pwmout_write+0x6c>
 8003de2:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 8003de6:	eeb4 7a67 	vcmp.f32	s14, s15
 8003dea:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003dee:	bfc8      	it	gt
 8003df0:	eeb0 7a67 	vmovgt.f32	s14, s15
 8003df4:	edd5 7a03 	vldr	s15, [r5, #12]
 8003df8:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8003dfc:	2260      	movs	r2, #96	; 0x60
 8003dfe:	ee67 7a87 	vmul.f32	s15, s15, s14
 8003e02:	9201      	str	r2, [sp, #4]
 8003e04:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8003e08:	68aa      	ldr	r2, [r5, #8]
 8003e0a:	edc5 7a04 	vstr	s15, [r5, #16]
 8003e0e:	ee17 3a90 	vmov	r3, s15
 8003e12:	fbb3 f3f2 	udiv	r3, r3, r2
 8003e16:	9302      	str	r3, [sp, #8]
 8003e18:	2300      	movs	r3, #0
 8003e1a:	9303      	str	r3, [sp, #12]
 8003e1c:	9305      	str	r3, [sp, #20]
 8003e1e:	9306      	str	r3, [sp, #24]
 8003e20:	9304      	str	r3, [sp, #16]
 8003e22:	9307      	str	r3, [sp, #28]
 8003e24:	7d2b      	ldrb	r3, [r5, #20]
 8003e26:	3b01      	subs	r3, #1
 8003e28:	2b03      	cmp	r3, #3
 8003e2a:	d816      	bhi.n	8003e5a <pwmout_write+0x92>
 8003e2c:	e8df f003 	tbb	[pc, r3]
 8003e30:	1917051b 	.word	0x1917051b
 8003e34:	ed9f 7a0f 	vldr	s14, [pc, #60]	; 8003e74 <pwmout_write+0xac>
 8003e38:	e7dc      	b.n	8003df4 <pwmout_write+0x2c>
 8003e3a:	2404      	movs	r4, #4
 8003e3c:	4622      	mov	r2, r4
 8003e3e:	a901      	add	r1, sp, #4
 8003e40:	480b      	ldr	r0, [pc, #44]	; (8003e70 <pwmout_write+0xa8>)
 8003e42:	f000 fe79 	bl	8004b38 <HAL_TIM_PWM_ConfigChannel>
 8003e46:	b110      	cbz	r0, 8003e4e <pwmout_write+0x86>
 8003e48:	480b      	ldr	r0, [pc, #44]	; (8003e78 <pwmout_write+0xb0>)
 8003e4a:	f7fe f9fb 	bl	8002244 <error>
 8003e4e:	7d6b      	ldrb	r3, [r5, #21]
 8003e50:	4807      	ldr	r0, [pc, #28]	; (8003e70 <pwmout_write+0xa8>)
 8003e52:	4621      	mov	r1, r4
 8003e54:	b14b      	cbz	r3, 8003e6a <pwmout_write+0xa2>
 8003e56:	f000 ff01 	bl	8004c5c <HAL_TIMEx_PWMN_Start>
 8003e5a:	b009      	add	sp, #36	; 0x24
 8003e5c:	bd30      	pop	{r4, r5, pc}
 8003e5e:	2408      	movs	r4, #8
 8003e60:	e7ec      	b.n	8003e3c <pwmout_write+0x74>
 8003e62:	240c      	movs	r4, #12
 8003e64:	e7ea      	b.n	8003e3c <pwmout_write+0x74>
 8003e66:	2400      	movs	r4, #0
 8003e68:	e7e8      	b.n	8003e3c <pwmout_write+0x74>
 8003e6a:	f000 fed3 	bl	8004c14 <HAL_TIM_PWM_Start>
 8003e6e:	e7f4      	b.n	8003e5a <pwmout_write+0x92>
 8003e70:	2000213c 	.word	0x2000213c
 8003e74:	00000000 	.word	0x00000000
 8003e78:	08007a19 	.word	0x08007a19

08003e7c <pwmout_read>:
 8003e7c:	68c3      	ldr	r3, [r0, #12]
 8003e7e:	b1ab      	cbz	r3, 8003eac <pwmout_read+0x30>
 8003e80:	ee07 3a90 	vmov	s15, r3
 8003e84:	edd0 6a04 	vldr	s13, [r0, #16]
 8003e88:	eeb8 7a67 	vcvt.f32.u32	s14, s15
 8003e8c:	eef8 6a66 	vcvt.f32.u32	s13, s13
 8003e90:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8003e94:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8003e98:	eef4 7a47 	vcmp.f32	s15, s14
 8003e9c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003ea0:	bfc8      	it	gt
 8003ea2:	eef0 7a47 	vmovgt.f32	s15, s14
 8003ea6:	ee17 0a90 	vmov	r0, s15
 8003eaa:	4770      	bx	lr
 8003eac:	eddf 7a01 	vldr	s15, [pc, #4]	; 8003eb4 <pwmout_read+0x38>
 8003eb0:	e7f9      	b.n	8003ea6 <pwmout_read+0x2a>
 8003eb2:	bf00      	nop
 8003eb4:	00000000 	.word	0x00000000

08003eb8 <pwmout_period_us>:
 8003eb8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, lr}
 8003ebc:	4c4a      	ldr	r4, [pc, #296]	; (8003fe8 <pwmout_period_us+0x130>)
 8003ebe:	6802      	ldr	r2, [r0, #0]
 8003ec0:	6022      	str	r2, [r4, #0]
 8003ec2:	b086      	sub	sp, #24
 8003ec4:	2300      	movs	r3, #0
 8003ec6:	460e      	mov	r6, r1
 8003ec8:	9300      	str	r3, [sp, #0]
 8003eca:	4605      	mov	r5, r0
 8003ecc:	f7ff ffd6 	bl	8003e7c <pwmout_read>
 8003ed0:	6a11      	ldr	r1, [r2, #32]
 8003ed2:	f241 1311 	movw	r3, #4369	; 0x1111
 8003ed6:	4219      	tst	r1, r3
 8003ed8:	4607      	mov	r7, r0
 8003eda:	d108      	bne.n	8003eee <pwmout_period_us+0x36>
 8003edc:	6a11      	ldr	r1, [r2, #32]
 8003ede:	f240 4344 	movw	r3, #1092	; 0x444
 8003ee2:	4219      	tst	r1, r3
 8003ee4:	bf02      	ittt	eq
 8003ee6:	6813      	ldreq	r3, [r2, #0]
 8003ee8:	f023 0301 	biceq.w	r3, r3, #1
 8003eec:	6013      	streq	r3, [r2, #0]
 8003eee:	4669      	mov	r1, sp
 8003ef0:	a801      	add	r0, sp, #4
 8003ef2:	f001 faaf 	bl	8005454 <HAL_RCC_GetClockConfig>
 8003ef6:	483d      	ldr	r0, [pc, #244]	; (8003fec <pwmout_period_us+0x134>)
 8003ef8:	6829      	ldr	r1, [r5, #0]
 8003efa:	2300      	movs	r3, #0
 8003efc:	4680      	mov	r8, r0
 8003efe:	fa5f f983 	uxtb.w	r9, r3
 8003f02:	3301      	adds	r3, #1
 8003f04:	f850 2039 	ldr.w	r2, [r0, r9, lsl #3]
 8003f08:	428a      	cmp	r2, r1
 8003f0a:	d1f8      	bne.n	8003efe <pwmout_period_us+0x46>
 8003f0c:	b911      	cbnz	r1, 8003f14 <pwmout_period_us+0x5c>
 8003f0e:	4838      	ldr	r0, [pc, #224]	; (8003ff0 <pwmout_period_us+0x138>)
 8003f10:	f7fe f998 	bl	8002244 <error>
 8003f14:	eb08 08c9 	add.w	r8, r8, r9, lsl #3
 8003f18:	f898 3004 	ldrb.w	r3, [r8, #4]
 8003f1c:	bb53      	cbnz	r3, 8003f74 <pwmout_period_us+0xbc>
 8003f1e:	f001 fa69 	bl	80053f4 <HAL_RCC_GetPCLK1Freq>
 8003f22:	9000      	str	r0, [sp, #0]
 8003f24:	9804      	ldr	r0, [sp, #16]
 8003f26:	9900      	ldr	r1, [sp, #0]
 8003f28:	2301      	movs	r3, #1
 8003f2a:	60ab      	str	r3, [r5, #8]
 8003f2c:	4b31      	ldr	r3, [pc, #196]	; (8003ff4 <pwmout_period_us+0x13c>)
 8003f2e:	bb30      	cbnz	r0, 8003f7e <pwmout_period_us+0xc6>
 8003f30:	fbb1 f3f3 	udiv	r3, r1, r3
 8003f34:	3b01      	subs	r3, #1
 8003f36:	6063      	str	r3, [r4, #4]
 8003f38:	f106 3cff 	add.w	r12, r6, #4294967295	; 0xffffffff
 8003f3c:	4b2d      	ldr	r3, [pc, #180]	; (8003ff4 <pwmout_period_us+0x13c>)
 8003f3e:	6862      	ldr	r2, [r4, #4]
 8003f40:	fbb1 fef3 	udiv	lr, r1, r3
 8003f44:	ea4f 0841 	mov.w	r8, r1, lsl #1
 8003f48:	2100      	movs	r1, #0
 8003f4a:	fbb8 f8f3 	udiv	r8, r8, r3
 8003f4e:	f8c4 c00c 	str.w	r12, [r4, #12]
 8003f52:	4663      	mov	r3, r12
 8003f54:	468a      	mov	r10, r1
 8003f56:	f64f 79fe 	movw	r9, #65534	; 0xfffe
 8003f5a:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8003f5e:	d212      	bcs.n	8003f86 <pwmout_period_us+0xce>
 8003f60:	f5b2 3f80 	cmp.w	r2, #65536	; 0x10000
 8003f64:	d20f      	bcs.n	8003f86 <pwmout_period_us+0xce>
 8003f66:	f1ba 0f00 	cmp.w	r10, #0
 8003f6a:	d000      	beq.n	8003f6e <pwmout_period_us+0xb6>
 8003f6c:	6062      	str	r2, [r4, #4]
 8003f6e:	b1f1      	cbz	r1, 8003fae <pwmout_period_us+0xf6>
 8003f70:	60e3      	str	r3, [r4, #12]
 8003f72:	e01c      	b.n	8003fae <pwmout_period_us+0xf6>
 8003f74:	f001 fa56 	bl	8005424 <HAL_RCC_GetPCLK2Freq>
 8003f78:	9000      	str	r0, [sp, #0]
 8003f7a:	9805      	ldr	r0, [sp, #20]
 8003f7c:	e7d3      	b.n	8003f26 <pwmout_period_us+0x6e>
 8003f7e:	004a      	lsls	r2, r1, #1
 8003f80:	fbb2 f3f3 	udiv	r3, r2, r3
 8003f84:	e7d6      	b.n	8003f34 <pwmout_period_us+0x7c>
 8003f86:	68ab      	ldr	r3, [r5, #8]
 8003f88:	005b      	lsls	r3, r3, #1
 8003f8a:	60ab      	str	r3, [r5, #8]
 8003f8c:	bb30      	cbnz	r0, 8003fdc <pwmout_period_us+0x124>
 8003f8e:	fb0e f203 	mul.w	r2, lr, r3
 8003f92:	fbbc f3f3 	udiv	r3, r12, r3
 8003f96:	454b      	cmp	r3, r9
 8003f98:	f102 32ff 	add.w	r2, r2, #4294967295	; 0xffffffff
 8003f9c:	d821      	bhi.n	8003fe2 <pwmout_period_us+0x12a>
 8003f9e:	f5b2 3f80 	cmp.w	r2, #65536	; 0x10000
 8003fa2:	d31e      	bcc.n	8003fe2 <pwmout_period_us+0x12a>
 8003fa4:	4814      	ldr	r0, [pc, #80]	; (8003ff8 <pwmout_period_us+0x140>)
 8003fa6:	6062      	str	r2, [r4, #4]
 8003fa8:	60e3      	str	r3, [r4, #12]
 8003faa:	f7fe f94b 	bl	8002244 <error>
 8003fae:	2300      	movs	r3, #0
 8003fb0:	480d      	ldr	r0, [pc, #52]	; (8003fe8 <pwmout_period_us+0x130>)
 8003fb2:	6123      	str	r3, [r4, #16]
 8003fb4:	60a3      	str	r3, [r4, #8]
 8003fb6:	f000 fd79 	bl	8004aac <HAL_TIM_PWM_Init>
 8003fba:	b110      	cbz	r0, 8003fc2 <pwmout_period_us+0x10a>
 8003fbc:	480e      	ldr	r0, [pc, #56]	; (8003ff8 <pwmout_period_us+0x140>)
 8003fbe:	f7fe f941 	bl	8002244 <error>
 8003fc2:	60ee      	str	r6, [r5, #12]
 8003fc4:	4639      	mov	r1, r7
 8003fc6:	4628      	mov	r0, r5
 8003fc8:	f7ff fefe 	bl	8003dc8 <pwmout_write>
 8003fcc:	6822      	ldr	r2, [r4, #0]
 8003fce:	6813      	ldr	r3, [r2, #0]
 8003fd0:	f043 0301 	orr.w	r3, r3, #1
 8003fd4:	6013      	str	r3, [r2, #0]
 8003fd6:	b006      	add	sp, #24
 8003fd8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 8003fdc:	fb08 f203 	mul.w	r2, r8, r3
 8003fe0:	e7d7      	b.n	8003f92 <pwmout_period_us+0xda>
 8003fe2:	2101      	movs	r1, #1
 8003fe4:	468a      	mov	r10, r1
 8003fe6:	e7b8      	b.n	8003f5a <pwmout_period_us+0xa2>
 8003fe8:	2000213c 	.word	0x2000213c
 8003fec:	08007a70 	.word	0x08007a70
 8003ff0:	08007a04 	.word	0x08007a04
 8003ff4:	000f4240 	.word	0x000f4240
 8003ff8:	08007a19 	.word	0x08007a19

08003ffc <pwmout_init>:
 8003ffc:	b530      	push	{r4, r5, lr}
 8003ffe:	460d      	mov	r5, r1
 8004000:	4604      	mov	r4, r0
 8004002:	b089      	sub	sp, #36	; 0x24
 8004004:	494c      	ldr	r1, [pc, #304]	; (8004138 <pwmout_init+0x13c>)
 8004006:	4628      	mov	r0, r5
 8004008:	f7fe f8aa 	bl	8002160 <pinmap_peripheral>
 800400c:	494a      	ldr	r1, [pc, #296]	; (8004138 <pwmout_init+0x13c>)
 800400e:	6020      	str	r0, [r4, #0]
 8004010:	4628      	mov	r0, r5
 8004012:	f7fe f8c1 	bl	8002198 <pinmap_function>
 8004016:	f3c0 3304 	ubfx	r3, r0, #12, #5
 800401a:	4a48      	ldr	r2, [pc, #288]	; (800413c <pwmout_init+0x140>)
 800401c:	7523      	strb	r3, [r4, #20]
 800401e:	6823      	ldr	r3, [r4, #0]
 8004020:	f3c0 4040 	ubfx	r0, r0, #17, #1
 8004024:	4293      	cmp	r3, r2
 8004026:	7560      	strb	r0, [r4, #21]
 8004028:	f04f 0200 	mov.w	r2, #0
 800402c:	d11a      	bne.n	8004064 <pwmout_init+0x68>
 800402e:	9200      	str	r2, [sp, #0]
 8004030:	4a43      	ldr	r2, [pc, #268]	; (8004140 <pwmout_init+0x144>)
 8004032:	6c51      	ldr	r1, [r2, #68]	; 0x44
 8004034:	f041 0101 	orr.w	r1, r1, #1
 8004038:	6451      	str	r1, [r2, #68]	; 0x44
 800403a:	6c52      	ldr	r2, [r2, #68]	; 0x44
 800403c:	f002 0201 	and.w	r2, r2, #1
 8004040:	9200      	str	r2, [sp, #0]
 8004042:	9a00      	ldr	r2, [sp, #0]
 8004044:	4a3f      	ldr	r2, [pc, #252]	; (8004144 <pwmout_init+0x148>)
 8004046:	4293      	cmp	r3, r2
 8004048:	d129      	bne.n	800409e <pwmout_init+0xa2>
 800404a:	2300      	movs	r3, #0
 800404c:	9305      	str	r3, [sp, #20]
 800404e:	4b3c      	ldr	r3, [pc, #240]	; (8004140 <pwmout_init+0x144>)
 8004050:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8004052:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 8004056:	645a      	str	r2, [r3, #68]	; 0x44
 8004058:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800405a:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 800405e:	9305      	str	r3, [sp, #20]
 8004060:	9b05      	ldr	r3, [sp, #20]
 8004062:	e058      	b.n	8004116 <pwmout_init+0x11a>
 8004064:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8004068:	d10b      	bne.n	8004082 <pwmout_init+0x86>
 800406a:	9201      	str	r2, [sp, #4]
 800406c:	4a34      	ldr	r2, [pc, #208]	; (8004140 <pwmout_init+0x144>)
 800406e:	6c11      	ldr	r1, [r2, #64]	; 0x40
 8004070:	f041 0101 	orr.w	r1, r1, #1
 8004074:	6411      	str	r1, [r2, #64]	; 0x40
 8004076:	6c12      	ldr	r2, [r2, #64]	; 0x40
 8004078:	f002 0201 	and.w	r2, r2, #1
 800407c:	9201      	str	r2, [sp, #4]
 800407e:	9a01      	ldr	r2, [sp, #4]
 8004080:	e7e0      	b.n	8004044 <pwmout_init+0x48>
 8004082:	4931      	ldr	r1, [pc, #196]	; (8004148 <pwmout_init+0x14c>)
 8004084:	428b      	cmp	r3, r1
 8004086:	d11a      	bne.n	80040be <pwmout_init+0xc2>
 8004088:	9202      	str	r2, [sp, #8]
 800408a:	4a2d      	ldr	r2, [pc, #180]	; (8004140 <pwmout_init+0x144>)
 800408c:	6c11      	ldr	r1, [r2, #64]	; 0x40
 800408e:	f041 0102 	orr.w	r1, r1, #2
 8004092:	6411      	str	r1, [r2, #64]	; 0x40
 8004094:	6c12      	ldr	r2, [r2, #64]	; 0x40
 8004096:	f002 0202 	and.w	r2, r2, #2
 800409a:	9202      	str	r2, [sp, #8]
 800409c:	9a02      	ldr	r2, [sp, #8]
 800409e:	4a2b      	ldr	r2, [pc, #172]	; (800414c <pwmout_init+0x150>)
 80040a0:	4293      	cmp	r3, r2
 80040a2:	d11a      	bne.n	80040da <pwmout_init+0xde>
 80040a4:	2300      	movs	r3, #0
 80040a6:	9306      	str	r3, [sp, #24]
 80040a8:	4b25      	ldr	r3, [pc, #148]	; (8004140 <pwmout_init+0x144>)
 80040aa:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 80040ac:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 80040b0:	645a      	str	r2, [r3, #68]	; 0x44
 80040b2:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80040b4:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80040b8:	9306      	str	r3, [sp, #24]
 80040ba:	9b06      	ldr	r3, [sp, #24]
 80040bc:	e02b      	b.n	8004116 <pwmout_init+0x11a>
 80040be:	4924      	ldr	r1, [pc, #144]	; (8004150 <pwmout_init+0x154>)
 80040c0:	428b      	cmp	r3, r1
 80040c2:	d11a      	bne.n	80040fa <pwmout_init+0xfe>
 80040c4:	9203      	str	r2, [sp, #12]
 80040c6:	4a1e      	ldr	r2, [pc, #120]	; (8004140 <pwmout_init+0x144>)
 80040c8:	6c11      	ldr	r1, [r2, #64]	; 0x40
 80040ca:	f041 0104 	orr.w	r1, r1, #4
 80040ce:	6411      	str	r1, [r2, #64]	; 0x40
 80040d0:	6c12      	ldr	r2, [r2, #64]	; 0x40
 80040d2:	f002 0204 	and.w	r2, r2, #4
 80040d6:	9203      	str	r2, [sp, #12]
 80040d8:	9a03      	ldr	r2, [sp, #12]
 80040da:	4a1e      	ldr	r2, [pc, #120]	; (8004154 <pwmout_init+0x158>)
 80040dc:	4293      	cmp	r3, r2
 80040de:	d11a      	bne.n	8004116 <pwmout_init+0x11a>
 80040e0:	2300      	movs	r3, #0
 80040e2:	9307      	str	r3, [sp, #28]
 80040e4:	4b16      	ldr	r3, [pc, #88]	; (8004140 <pwmout_init+0x144>)
 80040e6:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 80040e8:	f442 2280 	orr.w	r2, r2, #262144	; 0x40000
 80040ec:	645a      	str	r2, [r3, #68]	; 0x44
 80040ee:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80040f0:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 80040f4:	9307      	str	r3, [sp, #28]
 80040f6:	9b07      	ldr	r3, [sp, #28]
 80040f8:	e00d      	b.n	8004116 <pwmout_init+0x11a>
 80040fa:	4917      	ldr	r1, [pc, #92]	; (8004158 <pwmout_init+0x15c>)
 80040fc:	428b      	cmp	r3, r1
 80040fe:	d1a1      	bne.n	8004044 <pwmout_init+0x48>
 8004100:	4b0f      	ldr	r3, [pc, #60]	; (8004140 <pwmout_init+0x144>)
 8004102:	9204      	str	r2, [sp, #16]
 8004104:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8004106:	f042 0208 	orr.w	r2, r2, #8
 800410a:	641a      	str	r2, [r3, #64]	; 0x40
 800410c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800410e:	f003 0308 	and.w	r3, r3, #8
 8004112:	9304      	str	r3, [sp, #16]
 8004114:	9b04      	ldr	r3, [sp, #16]
 8004116:	4908      	ldr	r1, [pc, #32]	; (8004138 <pwmout_init+0x13c>)
 8004118:	4628      	mov	r0, r5
 800411a:	f7fd ffe5 	bl	80020e8 <pinmap_pinout>
 800411e:	2300      	movs	r3, #0
 8004120:	60e3      	str	r3, [r4, #12]
 8004122:	6123      	str	r3, [r4, #16]
 8004124:	2301      	movs	r3, #1
 8004126:	80a5      	strh	r5, [r4, #4]
 8004128:	60a3      	str	r3, [r4, #8]
 800412a:	f644 6120 	movw	r1, #20000	; 0x4e20
 800412e:	4620      	mov	r0, r4
 8004130:	f7ff fec2 	bl	8003eb8 <pwmout_period_us>
 8004134:	b009      	add	sp, #36	; 0x24
 8004136:	bd30      	pop	{r4, r5, pc}
 8004138:	08007b90 	.word	0x08007b90
 800413c:	40010000 	.word	0x40010000
 8004140:	40023800 	.word	0x40023800
 8004144:	40014000 	.word	0x40014000
 8004148:	40000400 	.word	0x40000400
 800414c:	40014400 	.word	0x40014400
 8004150:	40000800 	.word	0x40000800
 8004154:	40014800 	.word	0x40014800
 8004158:	40000c00 	.word	0x40000c00

0800415c <LL_GPIO_SetPinPull>:
 800415c:	b530      	push	{r4, r5, lr}
 800415e:	68c3      	ldr	r3, [r0, #12]
 8004160:	fa91 f4a1 	rbit	r4, r1
 8004164:	fab4 f484 	clz	r4, r4
 8004168:	fa91 f1a1 	rbit	r1, r1
 800416c:	2503      	movs	r5, #3
 800416e:	fab1 f181 	clz	r1, r1
 8004172:	0064      	lsls	r4, r4, #1
 8004174:	fa05 f404 	lsl.w	r4, r5, r4
 8004178:	0049      	lsls	r1, r1, #1
 800417a:	ea23 0304 	bic.w	r3, r3, r4
 800417e:	fa02 f101 	lsl.w	r1, r2, r1
 8004182:	4319      	orrs	r1, r3
 8004184:	60c1      	str	r1, [r0, #12]
 8004186:	bd30      	pop	{r4, r5, pc}

08004188 <stm_pin_PullConfig>:
 8004188:	2a01      	cmp	r2, #1
 800418a:	d002      	beq.n	8004192 <stm_pin_PullConfig+0xa>
 800418c:	2a02      	cmp	r2, #2
 800418e:	bf18      	it	ne
 8004190:	2200      	movne	r2, #0
 8004192:	f7ff bfe3 	b.w	800415c <LL_GPIO_SetPinPull>
	...

08004198 <pin_function>:
 8004198:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800419c:	4b3f      	ldr	r3, [pc, #252]	; (800429c <pin_function+0x104>)
 800419e:	f000 080f 	and.w	r8, r0, #15
 80041a2:	f3c0 1003 	ubfx	r0, r0, #4, #4
 80041a6:	f853 4028 	ldr.w	r4, [r3, r8, lsl #2]
 80041aa:	460e      	mov	r6, r1
 80041ac:	f001 0507 	and.w	r5, r1, #7
 80041b0:	f7ff fcf2 	bl	8003b98 <Set_GPIO_Clock>
 80041b4:	6883      	ldr	r3, [r0, #8]
 80041b6:	fa94 f1a4 	rbit	r1, r4
 80041ba:	fab1 f181 	clz	r1, r1
 80041be:	fa94 f2a4 	rbit	r2, r4
 80041c2:	2703      	movs	r7, #3
 80041c4:	0049      	lsls	r1, r1, #1
 80041c6:	fa07 f101 	lsl.w	r1, r7, r1
 80041ca:	fab2 f282 	clz	r2, r2
 80041ce:	ea23 0301 	bic.w	r3, r3, r1
 80041d2:	0052      	lsls	r2, r2, #1
 80041d4:	2102      	movs	r1, #2
 80041d6:	fa01 f202 	lsl.w	r2, r1, r2
 80041da:	4313      	orrs	r3, r2
 80041dc:	428d      	cmp	r5, r1
 80041de:	6083      	str	r3, [r0, #8]
 80041e0:	d028      	beq.n	8004234 <pin_function+0x9c>
 80041e2:	42bd      	cmp	r5, r7
 80041e4:	d041      	beq.n	800426a <pin_function+0xd2>
 80041e6:	2d01      	cmp	r5, #1
 80041e8:	d03f      	beq.n	800426a <pin_function+0xd2>
 80041ea:	2300      	movs	r3, #0
 80041ec:	6802      	ldr	r2, [r0, #0]
 80041ee:	fa94 f7a4 	rbit	r7, r4
 80041f2:	fab7 f787 	clz	r7, r7
 80041f6:	fa94 f1a4 	rbit	r1, r4
 80041fa:	f04f 0e03 	mov.w	lr, #3
 80041fe:	fab1 f181 	clz	r1, r1
 8004202:	007f      	lsls	r7, r7, #1
 8004204:	fa0e f707 	lsl.w	r7, lr, r7
 8004208:	0049      	lsls	r1, r1, #1
 800420a:	ea22 0207 	bic.w	r2, r2, r7
 800420e:	408b      	lsls	r3, r1
 8004210:	3d01      	subs	r5, #1
 8004212:	4313      	orrs	r3, r2
 8004214:	2d01      	cmp	r5, #1
 8004216:	6003      	str	r3, [r0, #0]
 8004218:	d805      	bhi.n	8004226 <pin_function+0x8e>
 800421a:	6843      	ldr	r3, [r0, #4]
 800421c:	0732      	lsls	r2, r6, #28
 800421e:	bf4c      	ite	mi
 8004220:	4323      	orrmi	r3, r4
 8004222:	43a3      	bicpl	r3, r4
 8004224:	6043      	str	r3, [r0, #4]
 8004226:	f3c6 1201 	ubfx	r2, r6, #4, #2
 800422a:	4621      	mov	r1, r4
 800422c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8004230:	f7ff bfaa 	b.w	8004188 <stm_pin_PullConfig>
 8004234:	f1b8 0f07 	cmp.w	r8, #7
 8004238:	f3c6 2703 	ubfx	r7, r6, #8, #4
 800423c:	d917      	bls.n	800426e <pin_function+0xd6>
 800423e:	6a42      	ldr	r2, [r0, #36]	; 0x24
 8004240:	0a23      	lsrs	r3, r4, #8
 8004242:	fa93 f1a3 	rbit	r1, r3
 8004246:	fab1 f181 	clz	r1, r1
 800424a:	fa93 f3a3 	rbit	r3, r3
 800424e:	f04f 0e0f 	mov.w	lr, #15
 8004252:	fab3 f383 	clz	r3, r3
 8004256:	0089      	lsls	r1, r1, #2
 8004258:	fa0e f101 	lsl.w	r1, lr, r1
 800425c:	009b      	lsls	r3, r3, #2
 800425e:	ea22 0201 	bic.w	r2, r2, r1
 8004262:	fa07 f303 	lsl.w	r3, r7, r3
 8004266:	4313      	orrs	r3, r2
 8004268:	6243      	str	r3, [r0, #36]	; 0x24
 800426a:	462b      	mov	r3, r5
 800426c:	e7be      	b.n	80041ec <pin_function+0x54>
 800426e:	6a02      	ldr	r2, [r0, #32]
 8004270:	fa94 f3a4 	rbit	r3, r4
 8004274:	fab3 f383 	clz	r3, r3
 8004278:	fa94 f1a4 	rbit	r1, r4
 800427c:	f04f 0e0f 	mov.w	lr, #15
 8004280:	fab1 f181 	clz	r1, r1
 8004284:	009b      	lsls	r3, r3, #2
 8004286:	fa0e f303 	lsl.w	r3, lr, r3
 800428a:	0089      	lsls	r1, r1, #2
 800428c:	ea22 0203 	bic.w	r2, r2, r3
 8004290:	fa07 f301 	lsl.w	r3, r7, r1
 8004294:	4313      	orrs	r3, r2
 8004296:	6203      	str	r3, [r0, #32]
 8004298:	e7e7      	b.n	800426a <pin_function+0xd2>
 800429a:	bf00      	nop
 800429c:	08007a30 	.word	0x08007a30

080042a0 <pin_mode>:
 80042a0:	b538      	push	{r3, r4, r5, lr}
 80042a2:	f000 020f 	and.w	r2, r0, #15
 80042a6:	4b19      	ldr	r3, [pc, #100]	; (800430c <pin_mode+0x6c>)
 80042a8:	f3c0 1003 	ubfx	r0, r0, #4, #4
 80042ac:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 80042b0:	460d      	mov	r5, r1
 80042b2:	f7ff fc71 	bl	8003b98 <Set_GPIO_Clock>
 80042b6:	fb04 f204 	mul.w	r2, r4, r4
 80042ba:	6801      	ldr	r1, [r0, #0]
 80042bc:	eb02 0342 	add.w	r3, r2, r2, lsl #1
 80042c0:	400b      	ands	r3, r1
 80042c2:	fbb3 f3f2 	udiv	r3, r3, r2
 80042c6:	3b01      	subs	r3, #1
 80042c8:	2b01      	cmp	r3, #1
 80042ca:	d805      	bhi.n	80042d8 <pin_mode+0x38>
 80042cc:	1eeb      	subs	r3, r5, #3
 80042ce:	2b02      	cmp	r3, #2
 80042d0:	6843      	ldr	r3, [r0, #4]
 80042d2:	d809      	bhi.n	80042e8 <pin_mode+0x48>
 80042d4:	4323      	orrs	r3, r4
 80042d6:	6043      	str	r3, [r0, #4]
 80042d8:	2d03      	cmp	r5, #3
 80042da:	d108      	bne.n	80042ee <pin_mode+0x4e>
 80042dc:	2201      	movs	r2, #1
 80042de:	4621      	mov	r1, r4
 80042e0:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80042e4:	f7ff bf50 	b.w	8004188 <stm_pin_PullConfig>
 80042e8:	ea23 0304 	bic.w	r3, r3, r4
 80042ec:	6043      	str	r3, [r0, #4]
 80042ee:	2d01      	cmp	r5, #1
 80042f0:	d0f4      	beq.n	80042dc <pin_mode+0x3c>
 80042f2:	2d05      	cmp	r5, #5
 80042f4:	d001      	beq.n	80042fa <pin_mode+0x5a>
 80042f6:	2d02      	cmp	r5, #2
 80042f8:	d101      	bne.n	80042fe <pin_mode+0x5e>
 80042fa:	2202      	movs	r2, #2
 80042fc:	e7ef      	b.n	80042de <pin_mode+0x3e>
 80042fe:	4621      	mov	r1, r4
 8004300:	2200      	movs	r2, #0
 8004302:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8004306:	f7ff bf29 	b.w	800415c <LL_GPIO_SetPinPull>
 800430a:	bf00      	nop
 800430c:	08007a30 	.word	0x08007a30

08004310 <__NVIC_DisableIRQ>:
 8004310:	0943      	lsrs	r3, r0, #5
 8004312:	2201      	movs	r2, #1
 8004314:	f000 001f 	and.w	r0, r0, #31
 8004318:	fa02 f000 	lsl.w	r0, r2, r0
 800431c:	3320      	adds	r3, #32
 800431e:	4a04      	ldr	r2, [pc, #16]	; (8004330 <__NVIC_DisableIRQ+0x20>)
 8004320:	f842 0023 	str.w	r0, [r2, r3, lsl #2]
 8004324:	f3bf 8f4f 	dsb	sy
 8004328:	f3bf 8f6f 	isb	sy
 800432c:	4770      	bx	lr
 800432e:	bf00      	nop
 8004330:	e000e100 	.word	0xe000e100

08004334 <init_uart>:
 8004334:	6842      	ldr	r2, [r0, #4]
 8004336:	4916      	ldr	r1, [pc, #88]	; (8004390 <init_uart+0x5c>)
 8004338:	0192      	lsls	r2, r2, #6
 800433a:	b510      	push	{r4, lr}
 800433c:	188b      	adds	r3, r1, r2
 800433e:	6804      	ldr	r4, [r0, #0]
 8004340:	508c      	str	r4, [r1, r2]
 8004342:	6882      	ldr	r2, [r0, #8]
 8004344:	605a      	str	r2, [r3, #4]
 8004346:	68c2      	ldr	r2, [r0, #12]
 8004348:	609a      	str	r2, [r3, #8]
 800434a:	6902      	ldr	r2, [r0, #16]
 800434c:	60da      	str	r2, [r3, #12]
 800434e:	6942      	ldr	r2, [r0, #20]
 8004350:	611a      	str	r2, [r3, #16]
 8004352:	6a02      	ldr	r2, [r0, #32]
 8004354:	619a      	str	r2, [r3, #24]
 8004356:	2200      	movs	r2, #0
 8004358:	61da      	str	r2, [r3, #28]
 800435a:	84da      	strh	r2, [r3, #38]	; 0x26
 800435c:	849a      	strh	r2, [r3, #36]	; 0x24
 800435e:	85da      	strh	r2, [r3, #46]	; 0x2e
 8004360:	859a      	strh	r2, [r3, #44]	; 0x2c
 8004362:	f9b0 201a 	ldrsh.w	r2, [r0, #26]
 8004366:	3201      	adds	r2, #1
 8004368:	d10a      	bne.n	8004380 <init_uart+0x4c>
 800436a:	2208      	movs	r2, #8
 800436c:	615a      	str	r2, [r3, #20]
 800436e:	4618      	mov	r0, r3
 8004370:	f000 fda1 	bl	8004eb6 <HAL_UART_Init>
 8004374:	b158      	cbz	r0, 800438e <init_uart+0x5a>
 8004376:	4807      	ldr	r0, [pc, #28]	; (8004394 <init_uart+0x60>)
 8004378:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800437c:	f7fd bf62 	b.w	8002244 <error>
 8004380:	f9b0 2018 	ldrsh.w	r2, [r0, #24]
 8004384:	3201      	adds	r2, #1
 8004386:	bf0c      	ite	eq
 8004388:	2204      	moveq	r2, #4
 800438a:	220c      	movne	r2, #12
 800438c:	e7ee      	b.n	800436c <init_uart+0x38>
 800438e:	bd10      	pop	{r4, pc}
 8004390:	200021a0 	.word	0x200021a0
 8004394:	08007ab8 	.word	0x08007ab8

08004398 <uart_irq>:
 8004398:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800439a:	4e19      	ldr	r6, [pc, #100]	; (8004400 <uart_irq+0x68>)
 800439c:	4607      	mov	r7, r0
 800439e:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 80043a2:	2800      	cmp	r0, #0
 80043a4:	d02a      	beq.n	80043fc <uart_irq+0x64>
 80043a6:	4c17      	ldr	r4, [pc, #92]	; (8004404 <uart_irq+0x6c>)
 80043a8:	01bd      	lsls	r5, r7, #6
 80043aa:	5963      	ldr	r3, [r4, r5]
 80043ac:	681a      	ldr	r2, [r3, #0]
 80043ae:	0652      	lsls	r2, r2, #25
 80043b0:	d50a      	bpl.n	80043c8 <uart_irq+0x30>
 80043b2:	68db      	ldr	r3, [r3, #12]
 80043b4:	0659      	lsls	r1, r3, #25
 80043b6:	d507      	bpl.n	80043c8 <uart_irq+0x30>
 80043b8:	4b13      	ldr	r3, [pc, #76]	; (8004408 <uart_irq+0x70>)
 80043ba:	2101      	movs	r1, #1
 80043bc:	681b      	ldr	r3, [r3, #0]
 80043be:	4798      	blx	r3
 80043c0:	5963      	ldr	r3, [r4, r5]
 80043c2:	f06f 0240 	mvn.w	r2, #64	; 0x40
 80043c6:	601a      	str	r2, [r3, #0]
 80043c8:	5963      	ldr	r3, [r4, r5]
 80043ca:	681a      	ldr	r2, [r3, #0]
 80043cc:	0692      	lsls	r2, r2, #26
 80043ce:	d50c      	bpl.n	80043ea <uart_irq+0x52>
 80043d0:	68db      	ldr	r3, [r3, #12]
 80043d2:	0698      	lsls	r0, r3, #26
 80043d4:	d509      	bpl.n	80043ea <uart_irq+0x52>
 80043d6:	4b0c      	ldr	r3, [pc, #48]	; (8004408 <uart_irq+0x70>)
 80043d8:	f856 0027 	ldr.w	r0, [r6, r7, lsl #2]
 80043dc:	681b      	ldr	r3, [r3, #0]
 80043de:	2100      	movs	r1, #0
 80043e0:	4798      	blx	r3
 80043e2:	5963      	ldr	r3, [r4, r5]
 80043e4:	f06f 0220 	mvn.w	r2, #32
 80043e8:	601a      	str	r2, [r3, #0]
 80043ea:	5963      	ldr	r3, [r4, r5]
 80043ec:	681a      	ldr	r2, [r3, #0]
 80043ee:	0711      	lsls	r1, r2, #28
 80043f0:	d504      	bpl.n	80043fc <uart_irq+0x64>
 80043f2:	695a      	ldr	r2, [r3, #20]
 80043f4:	07d2      	lsls	r2, r2, #31
 80043f6:	bf44      	itt	mi
 80043f8:	685b      	ldrmi	r3, [r3, #4]
 80043fa:	9301      	strmi	r3, [sp, #4]
 80043fc:	b003      	add	sp, #12
 80043fe:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8004400:	2000217c 	.word	0x2000217c
 8004404:	200021a0 	.word	0x200021a0
 8004408:	20002178 	.word	0x20002178

0800440c <uart1_irq>:
 800440c:	2000      	movs	r0, #0
 800440e:	f7ff bfc3 	b.w	8004398 <uart_irq>

08004412 <uart2_irq>:
 8004412:	2001      	movs	r0, #1
 8004414:	f7ff bfc0 	b.w	8004398 <uart_irq>

08004418 <uart6_irq>:
 8004418:	2005      	movs	r0, #5
 800441a:	f7ff bfbd 	b.w	8004398 <uart_irq>
	...

08004420 <serial_init>:
 8004420:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004422:	460e      	mov	r6, r1
 8004424:	b085      	sub	sp, #20
 8004426:	4604      	mov	r4, r0
 8004428:	4945      	ldr	r1, [pc, #276]	; (8004540 <serial_init+0x120>)
 800442a:	4630      	mov	r0, r6
 800442c:	4615      	mov	r5, r2
 800442e:	f7fd fe97 	bl	8002160 <pinmap_peripheral>
 8004432:	4944      	ldr	r1, [pc, #272]	; (8004544 <serial_init+0x124>)
 8004434:	4607      	mov	r7, r0
 8004436:	4628      	mov	r0, r5
 8004438:	f7fd fe92 	bl	8002160 <pinmap_peripheral>
 800443c:	4601      	mov	r1, r0
 800443e:	4638      	mov	r0, r7
 8004440:	f7fd fe70 	bl	8002124 <pinmap_merge>
 8004444:	4b40      	ldr	r3, [pc, #256]	; (8004548 <serial_init+0x128>)
 8004446:	6020      	str	r0, [r4, #0]
 8004448:	4298      	cmp	r0, r3
 800444a:	d01e      	beq.n	800448a <serial_init+0x6a>
 800444c:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8004450:	4298      	cmp	r0, r3
 8004452:	d05e      	beq.n	8004512 <serial_init+0xf2>
 8004454:	f5a3 4350 	sub.w	r3, r3, #53248	; 0xd000
 8004458:	4298      	cmp	r0, r3
 800445a:	d12b      	bne.n	80044b4 <serial_init+0x94>
 800445c:	4b3b      	ldr	r3, [pc, #236]	; (800454c <serial_init+0x12c>)
 800445e:	6a1a      	ldr	r2, [r3, #32]
 8004460:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8004464:	621a      	str	r2, [r3, #32]
 8004466:	6a1a      	ldr	r2, [r3, #32]
 8004468:	f422 3200 	bic.w	r2, r2, #131072	; 0x20000
 800446c:	621a      	str	r2, [r3, #32]
 800446e:	2200      	movs	r2, #0
 8004470:	9202      	str	r2, [sp, #8]
 8004472:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8004474:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8004478:	641a      	str	r2, [r3, #64]	; 0x40
 800447a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800447c:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8004480:	9302      	str	r3, [sp, #8]
 8004482:	9b02      	ldr	r3, [sp, #8]
 8004484:	2301      	movs	r3, #1
 8004486:	6063      	str	r3, [r4, #4]
 8004488:	e014      	b.n	80044b4 <serial_init+0x94>
 800448a:	4b30      	ldr	r3, [pc, #192]	; (800454c <serial_init+0x12c>)
 800448c:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 800448e:	f042 0210 	orr.w	r2, r2, #16
 8004492:	625a      	str	r2, [r3, #36]	; 0x24
 8004494:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8004496:	2100      	movs	r1, #0
 8004498:	f022 0210 	bic.w	r2, r2, #16
 800449c:	625a      	str	r2, [r3, #36]	; 0x24
 800449e:	9101      	str	r1, [sp, #4]
 80044a0:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 80044a2:	f042 0210 	orr.w	r2, r2, #16
 80044a6:	645a      	str	r2, [r3, #68]	; 0x44
 80044a8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80044aa:	6061      	str	r1, [r4, #4]
 80044ac:	f003 0310 	and.w	r3, r3, #16
 80044b0:	9301      	str	r3, [sp, #4]
 80044b2:	9b01      	ldr	r3, [sp, #4]
 80044b4:	4922      	ldr	r1, [pc, #136]	; (8004540 <serial_init+0x120>)
 80044b6:	4630      	mov	r0, r6
 80044b8:	f7fd fe16 	bl	80020e8 <pinmap_pinout>
 80044bc:	4921      	ldr	r1, [pc, #132]	; (8004544 <serial_init+0x124>)
 80044be:	4628      	mov	r0, r5
 80044c0:	f7fd fe12 	bl	80020e8 <pinmap_pinout>
 80044c4:	1c72      	adds	r2, r6, #1
 80044c6:	d003      	beq.n	80044d0 <serial_init+0xb0>
 80044c8:	2101      	movs	r1, #1
 80044ca:	4630      	mov	r0, r6
 80044cc:	f7ff fee8 	bl	80042a0 <pin_mode>
 80044d0:	1c6b      	adds	r3, r5, #1
 80044d2:	d003      	beq.n	80044dc <serial_init+0xbc>
 80044d4:	2101      	movs	r1, #1
 80044d6:	4628      	mov	r0, r5
 80044d8:	f7ff fee2 	bl	80042a0 <pin_mode>
 80044dc:	f44f 5316 	mov.w	r3, #9600	; 0x2580
 80044e0:	60a3      	str	r3, [r4, #8]
 80044e2:	2300      	movs	r3, #0
 80044e4:	60e3      	str	r3, [r4, #12]
 80044e6:	6123      	str	r3, [r4, #16]
 80044e8:	6163      	str	r3, [r4, #20]
 80044ea:	6223      	str	r3, [r4, #32]
 80044ec:	8326      	strh	r6, [r4, #24]
 80044ee:	8365      	strh	r5, [r4, #26]
 80044f0:	4620      	mov	r0, r4
 80044f2:	f7ff ff1f 	bl	8004334 <init_uart>
 80044f6:	6822      	ldr	r2, [r4, #0]
 80044f8:	4b15      	ldr	r3, [pc, #84]	; (8004550 <serial_init+0x130>)
 80044fa:	429a      	cmp	r2, r3
 80044fc:	d107      	bne.n	800450e <serial_init+0xee>
 80044fe:	4b15      	ldr	r3, [pc, #84]	; (8004554 <serial_init+0x134>)
 8004500:	4815      	ldr	r0, [pc, #84]	; (8004558 <serial_init+0x138>)
 8004502:	2201      	movs	r2, #1
 8004504:	601a      	str	r2, [r3, #0]
 8004506:	4621      	mov	r1, r4
 8004508:	224c      	movs	r2, #76	; 0x4c
 800450a:	f002 fb21 	bl	8006b50 <memcpy>
 800450e:	b005      	add	sp, #20
 8004510:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8004512:	4b0e      	ldr	r3, [pc, #56]	; (800454c <serial_init+0x12c>)
 8004514:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8004516:	f042 0220 	orr.w	r2, r2, #32
 800451a:	625a      	str	r2, [r3, #36]	; 0x24
 800451c:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 800451e:	f022 0220 	bic.w	r2, r2, #32
 8004522:	625a      	str	r2, [r3, #36]	; 0x24
 8004524:	2200      	movs	r2, #0
 8004526:	9203      	str	r2, [sp, #12]
 8004528:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 800452a:	f042 0220 	orr.w	r2, r2, #32
 800452e:	645a      	str	r2, [r3, #68]	; 0x44
 8004530:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8004532:	f003 0320 	and.w	r3, r3, #32
 8004536:	9303      	str	r3, [sp, #12]
 8004538:	9b03      	ldr	r3, [sp, #12]
 800453a:	2305      	movs	r3, #5
 800453c:	e7a3      	b.n	8004486 <serial_init+0x66>
 800453e:	bf00      	nop
 8004540:	08007d34 	.word	0x08007d34
 8004544:	08007ce0 	.word	0x08007ce0
 8004548:	40011000 	.word	0x40011000
 800454c:	40023800 	.word	0x40023800
 8004550:	40004400 	.word	0x40004400
 8004554:	2000219c 	.word	0x2000219c
 8004558:	20002fb4 	.word	0x20002fb4

0800455c <serial_baud>:
 800455c:	6081      	str	r1, [r0, #8]
 800455e:	f7ff bee9 	b.w	8004334 <init_uart>
	...

08004564 <serial_irq_handler>:
 8004564:	4b03      	ldr	r3, [pc, #12]	; (8004574 <serial_irq_handler+0x10>)
 8004566:	6019      	str	r1, [r3, #0]
 8004568:	6841      	ldr	r1, [r0, #4]
 800456a:	4b03      	ldr	r3, [pc, #12]	; (8004578 <serial_irq_handler+0x14>)
 800456c:	f843 2021 	str.w	r2, [r3, r1, lsl #2]
 8004570:	4770      	bx	lr
 8004572:	bf00      	nop
 8004574:	20002178 	.word	0x20002178
 8004578:	2000217c 	.word	0x2000217c

0800457c <serial_irq_set>:
 800457c:	b538      	push	{r3, r4, r5, lr}
 800457e:	6843      	ldr	r3, [r0, #4]
 8004580:	2b01      	cmp	r3, #1
 8004582:	460d      	mov	r5, r1
 8004584:	d01a      	beq.n	80045bc <serial_irq_set+0x40>
 8004586:	2b05      	cmp	r3, #5
 8004588:	d01b      	beq.n	80045c2 <serial_irq_set+0x46>
 800458a:	b9eb      	cbnz	r3, 80045c8 <serial_irq_set+0x4c>
 800458c:	491c      	ldr	r1, [pc, #112]	; (8004600 <serial_irq_set+0x84>)
 800458e:	2425      	movs	r4, #37	; 0x25
 8004590:	481c      	ldr	r0, [pc, #112]	; (8004604 <serial_irq_set+0x88>)
 8004592:	019b      	lsls	r3, r3, #6
 8004594:	b1f2      	cbz	r2, 80045d4 <serial_irq_set+0x58>
 8004596:	58c2      	ldr	r2, [r0, r3]
 8004598:	68d3      	ldr	r3, [r2, #12]
 800459a:	b9c5      	cbnz	r5, 80045ce <serial_irq_set+0x52>
 800459c:	f043 0320 	orr.w	r3, r3, #32
 80045a0:	60d3      	str	r3, [r2, #12]
 80045a2:	4620      	mov	r0, r4
 80045a4:	f000 f986 	bl	80048b4 <__NVIC_SetVector>
 80045a8:	0962      	lsrs	r2, r4, #5
 80045aa:	2301      	movs	r3, #1
 80045ac:	f004 0407 	and.w	r4, r4, #7
 80045b0:	fa03 f404 	lsl.w	r4, r3, r4
 80045b4:	4b14      	ldr	r3, [pc, #80]	; (8004608 <serial_irq_set+0x8c>)
 80045b6:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 80045ba:	bd38      	pop	{r3, r4, r5, pc}
 80045bc:	4913      	ldr	r1, [pc, #76]	; (800460c <serial_irq_set+0x90>)
 80045be:	2426      	movs	r4, #38	; 0x26
 80045c0:	e7e6      	b.n	8004590 <serial_irq_set+0x14>
 80045c2:	4913      	ldr	r1, [pc, #76]	; (8004610 <serial_irq_set+0x94>)
 80045c4:	2447      	movs	r4, #71	; 0x47
 80045c6:	e7e3      	b.n	8004590 <serial_irq_set+0x14>
 80045c8:	2100      	movs	r1, #0
 80045ca:	460c      	mov	r4, r1
 80045cc:	e7e0      	b.n	8004590 <serial_irq_set+0x14>
 80045ce:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80045d2:	e7e5      	b.n	80045a0 <serial_irq_set+0x24>
 80045d4:	58c3      	ldr	r3, [r0, r3]
 80045d6:	68da      	ldr	r2, [r3, #12]
 80045d8:	b935      	cbnz	r5, 80045e8 <serial_irq_set+0x6c>
 80045da:	f022 0220 	bic.w	r2, r2, #32
 80045de:	60da      	str	r2, [r3, #12]
 80045e0:	68db      	ldr	r3, [r3, #12]
 80045e2:	061a      	lsls	r2, r3, #24
 80045e4:	d506      	bpl.n	80045f4 <serial_irq_set+0x78>
 80045e6:	bd38      	pop	{r3, r4, r5, pc}
 80045e8:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 80045ec:	60da      	str	r2, [r3, #12]
 80045ee:	68db      	ldr	r3, [r3, #12]
 80045f0:	069b      	lsls	r3, r3, #26
 80045f2:	d404      	bmi.n	80045fe <serial_irq_set+0x82>
 80045f4:	4620      	mov	r0, r4
 80045f6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80045fa:	f7ff be89 	b.w	8004310 <__NVIC_DisableIRQ>
 80045fe:	bd38      	pop	{r3, r4, r5, pc}
 8004600:	0800440d 	.word	0x0800440d
 8004604:	200021a0 	.word	0x200021a0
 8004608:	e000e100 	.word	0xe000e100
 800460c:	08004413 	.word	0x08004413
 8004610:	08004419 	.word	0x08004419

08004614 <serial_readable>:
 8004614:	6843      	ldr	r3, [r0, #4]
 8004616:	4a03      	ldr	r2, [pc, #12]	; (8004624 <serial_readable+0x10>)
 8004618:	019b      	lsls	r3, r3, #6
 800461a:	58d3      	ldr	r3, [r2, r3]
 800461c:	6818      	ldr	r0, [r3, #0]
 800461e:	f3c0 1040 	ubfx	r0, r0, #5, #1
 8004622:	4770      	bx	lr
 8004624:	200021a0 	.word	0x200021a0

08004628 <serial_getc>:
 8004628:	6841      	ldr	r1, [r0, #4]
 800462a:	b510      	push	{r4, lr}
 800462c:	4604      	mov	r4, r0
 800462e:	4620      	mov	r0, r4
 8004630:	f7ff fff0 	bl	8004614 <serial_readable>
 8004634:	2800      	cmp	r0, #0
 8004636:	d0fa      	beq.n	800462e <serial_getc+0x6>
 8004638:	0189      	lsls	r1, r1, #6
 800463a:	4b03      	ldr	r3, [pc, #12]	; (8004648 <serial_getc+0x20>)
 800463c:	585b      	ldr	r3, [r3, r1]
 800463e:	6858      	ldr	r0, [r3, #4]
 8004640:	f3c0 0008 	ubfx	r0, r0, #0, #9
 8004644:	bd10      	pop	{r4, pc}
 8004646:	bf00      	nop
 8004648:	200021a0 	.word	0x200021a0

0800464c <serial_writable>:
 800464c:	6843      	ldr	r3, [r0, #4]
 800464e:	4a03      	ldr	r2, [pc, #12]	; (800465c <serial_writable+0x10>)
 8004650:	019b      	lsls	r3, r3, #6
 8004652:	58d3      	ldr	r3, [r2, r3]
 8004654:	6818      	ldr	r0, [r3, #0]
 8004656:	f3c0 10c0 	ubfx	r0, r0, #7, #1
 800465a:	4770      	bx	lr
 800465c:	200021a0 	.word	0x200021a0

08004660 <serial_putc>:
 8004660:	b538      	push	{r3, r4, r5, lr}
 8004662:	6844      	ldr	r4, [r0, #4]
 8004664:	4605      	mov	r5, r0
 8004666:	4628      	mov	r0, r5
 8004668:	f7ff fff0 	bl	800464c <serial_writable>
 800466c:	2800      	cmp	r0, #0
 800466e:	d0fa      	beq.n	8004666 <serial_putc+0x6>
 8004670:	01a4      	lsls	r4, r4, #6
 8004672:	4b03      	ldr	r3, [pc, #12]	; (8004680 <serial_putc+0x20>)
 8004674:	591b      	ldr	r3, [r3, r4]
 8004676:	f3c1 0108 	ubfx	r1, r1, #0, #9
 800467a:	6059      	str	r1, [r3, #4]
 800467c:	bd38      	pop	{r3, r4, r5, pc}
 800467e:	bf00      	nop
 8004680:	200021a0 	.word	0x200021a0

08004684 <mbed_sdk_init>:
 8004684:	b508      	push	{r3, lr}
 8004686:	f000 f819 	bl	80046bc <SystemCoreClockUpdate>
 800468a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800468e:	f000 bf01 	b.w	8005494 <HAL_Init>

08004692 <SetSysClock_PLL_HSE.part.0>:
 8004692:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8004694:	230f      	movs	r3, #15
 8004696:	9301      	str	r3, [sp, #4]
 8004698:	2302      	movs	r3, #2
 800469a:	9302      	str	r3, [sp, #8]
 800469c:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 80046a0:	2300      	movs	r3, #0
 80046a2:	2103      	movs	r1, #3
 80046a4:	a801      	add	r0, sp, #4
 80046a6:	9303      	str	r3, [sp, #12]
 80046a8:	9204      	str	r2, [sp, #16]
 80046aa:	9305      	str	r3, [sp, #20]
 80046ac:	f000 fdec 	bl	8005288 <HAL_RCC_ClockConfig>
 80046b0:	fab0 f080 	clz	r0, r0
 80046b4:	0940      	lsrs	r0, r0, #5
 80046b6:	b007      	add	sp, #28
 80046b8:	f85d fb04 	ldr.w	pc, [sp], #4

080046bc <SystemCoreClockUpdate>:
 80046bc:	4a17      	ldr	r2, [pc, #92]	; (800471c <SystemCoreClockUpdate+0x60>)
 80046be:	4918      	ldr	r1, [pc, #96]	; (8004720 <SystemCoreClockUpdate+0x64>)
 80046c0:	6893      	ldr	r3, [r2, #8]
 80046c2:	f003 030c 	and.w	r3, r3, #12
 80046c6:	2b04      	cmp	r3, #4
 80046c8:	b510      	push	{r4, lr}
 80046ca:	d00d      	beq.n	80046e8 <SystemCoreClockUpdate+0x2c>
 80046cc:	2b08      	cmp	r3, #8
 80046ce:	d00d      	beq.n	80046ec <SystemCoreClockUpdate+0x30>
 80046d0:	4b14      	ldr	r3, [pc, #80]	; (8004724 <SystemCoreClockUpdate+0x68>)
 80046d2:	600b      	str	r3, [r1, #0]
 80046d4:	4b11      	ldr	r3, [pc, #68]	; (800471c <SystemCoreClockUpdate+0x60>)
 80046d6:	4a14      	ldr	r2, [pc, #80]	; (8004728 <SystemCoreClockUpdate+0x6c>)
 80046d8:	689b      	ldr	r3, [r3, #8]
 80046da:	f3c3 1303 	ubfx	r3, r3, #4, #4
 80046de:	5cd2      	ldrb	r2, [r2, r3]
 80046e0:	680b      	ldr	r3, [r1, #0]
 80046e2:	40d3      	lsrs	r3, r2
 80046e4:	600b      	str	r3, [r1, #0]
 80046e6:	bd10      	pop	{r4, pc}
 80046e8:	4b10      	ldr	r3, [pc, #64]	; (800472c <SystemCoreClockUpdate+0x70>)
 80046ea:	e7f2      	b.n	80046d2 <SystemCoreClockUpdate+0x16>
 80046ec:	6854      	ldr	r4, [r2, #4]
 80046ee:	6850      	ldr	r0, [r2, #4]
 80046f0:	6852      	ldr	r2, [r2, #4]
 80046f2:	0263      	lsls	r3, r4, #9
 80046f4:	f3c2 1288 	ubfx	r2, r2, #6, #9
 80046f8:	f000 003f 	and.w	r0, r0, #63	; 0x3f
 80046fc:	bf4c      	ite	mi
 80046fe:	4b0b      	ldrmi	r3, [pc, #44]	; (800472c <SystemCoreClockUpdate+0x70>)
 8004700:	4b08      	ldrpl	r3, [pc, #32]	; (8004724 <SystemCoreClockUpdate+0x68>)
 8004702:	fbb3 f3f0 	udiv	r3, r3, r0
 8004706:	4353      	muls	r3, r2
 8004708:	4a04      	ldr	r2, [pc, #16]	; (800471c <SystemCoreClockUpdate+0x60>)
 800470a:	6852      	ldr	r2, [r2, #4]
 800470c:	f3c2 4201 	ubfx	r2, r2, #16, #2
 8004710:	3201      	adds	r2, #1
 8004712:	0052      	lsls	r2, r2, #1
 8004714:	fbb3 f3f2 	udiv	r3, r3, r2
 8004718:	e7db      	b.n	80046d2 <SystemCoreClockUpdate+0x16>
 800471a:	bf00      	nop
 800471c:	40023800 	.word	0x40023800
 8004720:	200001bc 	.word	0x200001bc
 8004724:	00f42400 	.word	0x00f42400
 8004728:	08007d88 	.word	0x08007d88
 800472c:	007a1200 	.word	0x007a1200

08004730 <SetSysClock_PLL_HSE>:
 8004730:	b500      	push	{lr}
 8004732:	b08f      	sub	sp, #60	; 0x3c
 8004734:	4b1b      	ldr	r3, [pc, #108]	; (80047a4 <SetSysClock_PLL_HSE+0x74>)
 8004736:	2100      	movs	r1, #0
 8004738:	9100      	str	r1, [sp, #0]
 800473a:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800473c:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8004740:	641a      	str	r2, [r3, #64]	; 0x40
 8004742:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004744:	4a18      	ldr	r2, [pc, #96]	; (80047a8 <SetSysClock_PLL_HSE+0x78>)
 8004746:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800474a:	9300      	str	r3, [sp, #0]
 800474c:	9b00      	ldr	r3, [sp, #0]
 800474e:	9101      	str	r1, [sp, #4]
 8004750:	6813      	ldr	r3, [r2, #0]
 8004752:	f423 4340 	bic.w	r3, r3, #49152	; 0xc000
 8004756:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 800475a:	6013      	str	r3, [r2, #0]
 800475c:	6813      	ldr	r3, [r2, #0]
 800475e:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 8004762:	9301      	str	r3, [sp, #4]
 8004764:	9b01      	ldr	r3, [sp, #4]
 8004766:	2301      	movs	r3, #1
 8004768:	9302      	str	r3, [sp, #8]
 800476a:	b9b0      	cbnz	r0, 800479a <SetSysClock_PLL_HSE+0x6a>
 800476c:	9303      	str	r3, [sp, #12]
 800476e:	2302      	movs	r3, #2
 8004770:	9308      	str	r3, [sp, #32]
 8004772:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
 8004776:	9309      	str	r3, [sp, #36]	; 0x24
 8004778:	2304      	movs	r3, #4
 800477a:	930a      	str	r3, [sp, #40]	; 0x28
 800477c:	930c      	str	r3, [sp, #48]	; 0x30
 800477e:	2308      	movs	r3, #8
 8004780:	22c0      	movs	r2, #192	; 0xc0
 8004782:	eb0d 0003 	add.w	r0, sp, r3
 8004786:	920b      	str	r2, [sp, #44]	; 0x2c
 8004788:	930d      	str	r3, [sp, #52]	; 0x34
 800478a:	f000 fbd3 	bl	8004f34 <HAL_RCC_OscConfig>
 800478e:	b930      	cbnz	r0, 800479e <SetSysClock_PLL_HSE+0x6e>
 8004790:	f7ff ff7f 	bl	8004692 <SetSysClock_PLL_HSE.part.0>
 8004794:	b00f      	add	sp, #60	; 0x3c
 8004796:	f85d fb04 	ldr.w	pc, [sp], #4
 800479a:	2305      	movs	r3, #5
 800479c:	e7e6      	b.n	800476c <SetSysClock_PLL_HSE+0x3c>
 800479e:	2000      	movs	r0, #0
 80047a0:	e7f8      	b.n	8004794 <SetSysClock_PLL_HSE+0x64>
 80047a2:	bf00      	nop
 80047a4:	40023800 	.word	0x40023800
 80047a8:	40007000 	.word	0x40007000

080047ac <SetSysClock_PLL_HSI>:
 80047ac:	b510      	push	{r4, lr}
 80047ae:	b08e      	sub	sp, #56	; 0x38
 80047b0:	2400      	movs	r4, #0
 80047b2:	4b1a      	ldr	r3, [pc, #104]	; (800481c <SetSysClock_PLL_HSI+0x70>)
 80047b4:	9400      	str	r4, [sp, #0]
 80047b6:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80047b8:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 80047bc:	641a      	str	r2, [r3, #64]	; 0x40
 80047be:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80047c0:	4a17      	ldr	r2, [pc, #92]	; (8004820 <SetSysClock_PLL_HSI+0x74>)
 80047c2:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80047c6:	9300      	str	r3, [sp, #0]
 80047c8:	9b00      	ldr	r3, [sp, #0]
 80047ca:	9401      	str	r4, [sp, #4]
 80047cc:	6813      	ldr	r3, [r2, #0]
 80047ce:	f423 4340 	bic.w	r3, r3, #49152	; 0xc000
 80047d2:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 80047d6:	6013      	str	r3, [r2, #0]
 80047d8:	6813      	ldr	r3, [r2, #0]
 80047da:	9403      	str	r4, [sp, #12]
 80047dc:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 80047e0:	9301      	str	r3, [sp, #4]
 80047e2:	9b01      	ldr	r3, [sp, #4]
 80047e4:	9409      	str	r4, [sp, #36]	; 0x24
 80047e6:	2303      	movs	r3, #3
 80047e8:	9302      	str	r3, [sp, #8]
 80047ea:	2301      	movs	r3, #1
 80047ec:	9305      	str	r3, [sp, #20]
 80047ee:	2310      	movs	r3, #16
 80047f0:	9306      	str	r3, [sp, #24]
 80047f2:	2302      	movs	r3, #2
 80047f4:	22c0      	movs	r2, #192	; 0xc0
 80047f6:	9308      	str	r3, [sp, #32]
 80047f8:	2308      	movs	r3, #8
 80047fa:	920b      	str	r2, [sp, #44]	; 0x2c
 80047fc:	eb0d 0003 	add.w	r0, sp, r3
 8004800:	2204      	movs	r2, #4
 8004802:	930a      	str	r3, [sp, #40]	; 0x28
 8004804:	920c      	str	r2, [sp, #48]	; 0x30
 8004806:	930d      	str	r3, [sp, #52]	; 0x34
 8004808:	f000 fb94 	bl	8004f34 <HAL_RCC_OscConfig>
 800480c:	b918      	cbnz	r0, 8004816 <SetSysClock_PLL_HSI+0x6a>
 800480e:	f7ff ff40 	bl	8004692 <SetSysClock_PLL_HSE.part.0>
 8004812:	b00e      	add	sp, #56	; 0x38
 8004814:	bd10      	pop	{r4, pc}
 8004816:	4620      	mov	r0, r4
 8004818:	e7fb      	b.n	8004812 <SetSysClock_PLL_HSI+0x66>
 800481a:	bf00      	nop
 800481c:	40023800 	.word	0x40023800
 8004820:	40007000 	.word	0x40007000

08004824 <SetSysClock>:
 8004824:	b508      	push	{r3, lr}
 8004826:	2001      	movs	r0, #1
 8004828:	f7ff ff82 	bl	8004730 <SetSysClock_PLL_HSE>
 800482c:	b930      	cbnz	r0, 800483c <SetSysClock+0x18>
 800482e:	f7ff ff7f 	bl	8004730 <SetSysClock_PLL_HSE>
 8004832:	b918      	cbnz	r0, 800483c <SetSysClock+0x18>
 8004834:	f7ff ffba 	bl	80047ac <SetSysClock_PLL_HSI>
 8004838:	b900      	cbnz	r0, 800483c <SetSysClock+0x18>
 800483a:	e7fe      	b.n	800483a <SetSysClock+0x16>
 800483c:	bd08      	pop	{r3, pc}
	...

08004840 <SystemInit>:
 8004840:	4a17      	ldr	r2, [pc, #92]	; (80048a0 <SystemInit+0x60>)
 8004842:	f8d2 3088 	ldr.w	r3, [r2, #136]	; 0x88
 8004846:	b510      	push	{r4, lr}
 8004848:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 800484c:	4c15      	ldr	r4, [pc, #84]	; (80048a4 <SystemInit+0x64>)
 800484e:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
 8004852:	6823      	ldr	r3, [r4, #0]
 8004854:	2100      	movs	r1, #0
 8004856:	f043 0301 	orr.w	r3, r3, #1
 800485a:	6023      	str	r3, [r4, #0]
 800485c:	60a1      	str	r1, [r4, #8]
 800485e:	6823      	ldr	r3, [r4, #0]
 8004860:	f023 7384 	bic.w	r3, r3, #17301504	; 0x1080000
 8004864:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8004868:	6023      	str	r3, [r4, #0]
 800486a:	4b0f      	ldr	r3, [pc, #60]	; (80048a8 <SystemInit+0x68>)
 800486c:	6063      	str	r3, [r4, #4]
 800486e:	6823      	ldr	r3, [r4, #0]
 8004870:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8004874:	6023      	str	r3, [r4, #0]
 8004876:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
 800487a:	60e1      	str	r1, [r4, #12]
 800487c:	6093      	str	r3, [r2, #8]
 800487e:	4b0b      	ldr	r3, [pc, #44]	; (80048ac <SystemInit+0x6c>)
 8004880:	4a0b      	ldr	r2, [pc, #44]	; (80048b0 <SystemInit+0x70>)
 8004882:	601a      	str	r2, [r3, #0]
 8004884:	f000 fe06 	bl	8005494 <HAL_Init>
 8004888:	f7ff ffcc 	bl	8004824 <SetSysClock>
 800488c:	6a23      	ldr	r3, [r4, #32]
 800488e:	f043 0308 	orr.w	r3, r3, #8
 8004892:	6223      	str	r3, [r4, #32]
 8004894:	6a23      	ldr	r3, [r4, #32]
 8004896:	f023 0308 	bic.w	r3, r3, #8
 800489a:	6223      	str	r3, [r4, #32]
 800489c:	bd10      	pop	{r4, pc}
 800489e:	bf00      	nop
 80048a0:	e000ed00 	.word	0xe000ed00
 80048a4:	40023800 	.word	0x40023800
 80048a8:	24003010 	.word	0x24003010
 80048ac:	200001bc 	.word	0x200001bc
 80048b0:	00f42400 	.word	0x00f42400

080048b4 <__NVIC_SetVector>:
 80048b4:	b530      	push	{r4, r5, lr}
 80048b6:	4c0c      	ldr	r4, [pc, #48]	; (80048e8 <__NVIC_SetVector+0x34>)
 80048b8:	68a2      	ldr	r2, [r4, #8]
 80048ba:	68a4      	ldr	r4, [r4, #8]
 80048bc:	f1b4 6f00 	cmp.w	r4, #134217728	; 0x8000000
 80048c0:	4613      	mov	r3, r2
 80048c2:	d10c      	bne.n	80048de <__NVIC_SetVector+0x2a>
 80048c4:	1f13      	subs	r3, r2, #4
 80048c6:	4c09      	ldr	r4, [pc, #36]	; (80048ec <__NVIC_SetVector+0x38>)
 80048c8:	4a09      	ldr	r2, [pc, #36]	; (80048f0 <__NVIC_SetVector+0x3c>)
 80048ca:	f853 5f04 	ldr.w	r5, [r3, #4]!
 80048ce:	f842 5f04 	str.w	r5, [r2, #4]!
 80048d2:	42a2      	cmp	r2, r4
 80048d4:	d1f9      	bne.n	80048ca <__NVIC_SetVector+0x16>
 80048d6:	4a04      	ldr	r2, [pc, #16]	; (80048e8 <__NVIC_SetVector+0x34>)
 80048d8:	f04f 5300 	mov.w	r3, #536870912	; 0x20000000
 80048dc:	6093      	str	r3, [r2, #8]
 80048de:	3010      	adds	r0, #16
 80048e0:	f843 1020 	str.w	r1, [r3, r0, lsl #2]
 80048e4:	bd30      	pop	{r4, r5, pc}
 80048e6:	bf00      	nop
 80048e8:	e000ed00 	.word	0xe000ed00
 80048ec:	20000194 	.word	0x20000194
 80048f0:	1ffffffc 	.word	0x1ffffffc

080048f4 <TIM_OC1_SetConfig>:
 80048f4:	6a03      	ldr	r3, [r0, #32]
 80048f6:	f023 0301 	bic.w	r3, r3, #1
 80048fa:	6203      	str	r3, [r0, #32]
 80048fc:	6a03      	ldr	r3, [r0, #32]
 80048fe:	b570      	push	{r4, r5, r6, lr}
 8004900:	6844      	ldr	r4, [r0, #4]
 8004902:	6982      	ldr	r2, [r0, #24]
 8004904:	680d      	ldr	r5, [r1, #0]
 8004906:	f022 0273 	bic.w	r2, r2, #115	; 0x73
 800490a:	432a      	orrs	r2, r5
 800490c:	688d      	ldr	r5, [r1, #8]
 800490e:	f023 0302 	bic.w	r3, r3, #2
 8004912:	432b      	orrs	r3, r5
 8004914:	4d0a      	ldr	r5, [pc, #40]	; (8004940 <TIM_OC1_SetConfig+0x4c>)
 8004916:	42a8      	cmp	r0, r5
 8004918:	d10b      	bne.n	8004932 <TIM_OC1_SetConfig+0x3e>
 800491a:	68cd      	ldr	r5, [r1, #12]
 800491c:	698e      	ldr	r6, [r1, #24]
 800491e:	f023 0308 	bic.w	r3, r3, #8
 8004922:	432b      	orrs	r3, r5
 8004924:	694d      	ldr	r5, [r1, #20]
 8004926:	f424 7440 	bic.w	r4, r4, #768	; 0x300
 800492a:	4335      	orrs	r5, r6
 800492c:	f023 0304 	bic.w	r3, r3, #4
 8004930:	432c      	orrs	r4, r5
 8004932:	6044      	str	r4, [r0, #4]
 8004934:	6182      	str	r2, [r0, #24]
 8004936:	684a      	ldr	r2, [r1, #4]
 8004938:	6342      	str	r2, [r0, #52]	; 0x34
 800493a:	6203      	str	r3, [r0, #32]
 800493c:	bd70      	pop	{r4, r5, r6, pc}
 800493e:	bf00      	nop
 8004940:	40010000 	.word	0x40010000

08004944 <TIM_OC3_SetConfig>:
 8004944:	6a03      	ldr	r3, [r0, #32]
 8004946:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 800494a:	6203      	str	r3, [r0, #32]
 800494c:	6a03      	ldr	r3, [r0, #32]
 800494e:	b570      	push	{r4, r5, r6, lr}
 8004950:	6844      	ldr	r4, [r0, #4]
 8004952:	69c2      	ldr	r2, [r0, #28]
 8004954:	680d      	ldr	r5, [r1, #0]
 8004956:	f022 0273 	bic.w	r2, r2, #115	; 0x73
 800495a:	432a      	orrs	r2, r5
 800495c:	688d      	ldr	r5, [r1, #8]
 800495e:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 8004962:	ea43 2305 	orr.w	r3, r3, r5, lsl #8
 8004966:	4d0b      	ldr	r5, [pc, #44]	; (8004994 <TIM_OC3_SetConfig+0x50>)
 8004968:	42a8      	cmp	r0, r5
 800496a:	d10d      	bne.n	8004988 <TIM_OC3_SetConfig+0x44>
 800496c:	68cd      	ldr	r5, [r1, #12]
 800496e:	698e      	ldr	r6, [r1, #24]
 8004970:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8004974:	ea43 2305 	orr.w	r3, r3, r5, lsl #8
 8004978:	694d      	ldr	r5, [r1, #20]
 800497a:	f424 5440 	bic.w	r4, r4, #12288	; 0x3000
 800497e:	4335      	orrs	r5, r6
 8004980:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 8004984:	ea44 1405 	orr.w	r4, r4, r5, lsl #4
 8004988:	6044      	str	r4, [r0, #4]
 800498a:	61c2      	str	r2, [r0, #28]
 800498c:	684a      	ldr	r2, [r1, #4]
 800498e:	63c2      	str	r2, [r0, #60]	; 0x3c
 8004990:	6203      	str	r3, [r0, #32]
 8004992:	bd70      	pop	{r4, r5, r6, pc}
 8004994:	40010000 	.word	0x40010000

08004998 <TIM_OC4_SetConfig>:
 8004998:	6a03      	ldr	r3, [r0, #32]
 800499a:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 800499e:	6203      	str	r3, [r0, #32]
 80049a0:	6a03      	ldr	r3, [r0, #32]
 80049a2:	b530      	push	{r4, r5, lr}
 80049a4:	6844      	ldr	r4, [r0, #4]
 80049a6:	69c2      	ldr	r2, [r0, #28]
 80049a8:	680d      	ldr	r5, [r1, #0]
 80049aa:	f422 42e6 	bic.w	r2, r2, #29440	; 0x7300
 80049ae:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
 80049b2:	688d      	ldr	r5, [r1, #8]
 80049b4:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 80049b8:	ea43 3305 	orr.w	r3, r3, r5, lsl #12
 80049bc:	4d06      	ldr	r5, [pc, #24]	; (80049d8 <TIM_OC4_SetConfig+0x40>)
 80049be:	42a8      	cmp	r0, r5
 80049c0:	bf02      	ittt	eq
 80049c2:	694d      	ldreq	r5, [r1, #20]
 80049c4:	f424 4480 	biceq.w	r4, r4, #16384	; 0x4000
 80049c8:	ea44 1485 	orreq.w	r4, r4, r5, lsl #6
 80049cc:	6044      	str	r4, [r0, #4]
 80049ce:	61c2      	str	r2, [r0, #28]
 80049d0:	684a      	ldr	r2, [r1, #4]
 80049d2:	6402      	str	r2, [r0, #64]	; 0x40
 80049d4:	6203      	str	r3, [r0, #32]
 80049d6:	bd30      	pop	{r4, r5, pc}
 80049d8:	40010000 	.word	0x40010000

080049dc <HAL_TIM_OC_MspInit>:
 80049dc:	4770      	bx	lr

080049de <HAL_TIM_PWM_MspInit>:
 80049de:	4770      	bx	lr

080049e0 <TIM_Base_SetConfig>:
 80049e0:	4a22      	ldr	r2, [pc, #136]	; (8004a6c <TIM_Base_SetConfig+0x8c>)
 80049e2:	6803      	ldr	r3, [r0, #0]
 80049e4:	4290      	cmp	r0, r2
 80049e6:	d00e      	beq.n	8004a06 <TIM_Base_SetConfig+0x26>
 80049e8:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 80049ec:	d00b      	beq.n	8004a06 <TIM_Base_SetConfig+0x26>
 80049ee:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 80049f2:	4290      	cmp	r0, r2
 80049f4:	d007      	beq.n	8004a06 <TIM_Base_SetConfig+0x26>
 80049f6:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80049fa:	4290      	cmp	r0, r2
 80049fc:	d003      	beq.n	8004a06 <TIM_Base_SetConfig+0x26>
 80049fe:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8004a02:	4290      	cmp	r0, r2
 8004a04:	d119      	bne.n	8004a3a <TIM_Base_SetConfig+0x5a>
 8004a06:	684a      	ldr	r2, [r1, #4]
 8004a08:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8004a0c:	4313      	orrs	r3, r2
 8004a0e:	4a17      	ldr	r2, [pc, #92]	; (8004a6c <TIM_Base_SetConfig+0x8c>)
 8004a10:	4290      	cmp	r0, r2
 8004a12:	d104      	bne.n	8004a1e <TIM_Base_SetConfig+0x3e>
 8004a14:	68ca      	ldr	r2, [r1, #12]
 8004a16:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8004a1a:	4313      	orrs	r3, r2
 8004a1c:	e018      	b.n	8004a50 <TIM_Base_SetConfig+0x70>
 8004a1e:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 8004a22:	d0f7      	beq.n	8004a14 <TIM_Base_SetConfig+0x34>
 8004a24:	4a12      	ldr	r2, [pc, #72]	; (8004a70 <TIM_Base_SetConfig+0x90>)
 8004a26:	4290      	cmp	r0, r2
 8004a28:	d0f4      	beq.n	8004a14 <TIM_Base_SetConfig+0x34>
 8004a2a:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8004a2e:	4290      	cmp	r0, r2
 8004a30:	d0f0      	beq.n	8004a14 <TIM_Base_SetConfig+0x34>
 8004a32:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8004a36:	4290      	cmp	r0, r2
 8004a38:	d0ec      	beq.n	8004a14 <TIM_Base_SetConfig+0x34>
 8004a3a:	4a0e      	ldr	r2, [pc, #56]	; (8004a74 <TIM_Base_SetConfig+0x94>)
 8004a3c:	4290      	cmp	r0, r2
 8004a3e:	d0e9      	beq.n	8004a14 <TIM_Base_SetConfig+0x34>
 8004a40:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8004a44:	4290      	cmp	r0, r2
 8004a46:	d0e5      	beq.n	8004a14 <TIM_Base_SetConfig+0x34>
 8004a48:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8004a4c:	4290      	cmp	r0, r2
 8004a4e:	d0e1      	beq.n	8004a14 <TIM_Base_SetConfig+0x34>
 8004a50:	6003      	str	r3, [r0, #0]
 8004a52:	688b      	ldr	r3, [r1, #8]
 8004a54:	62c3      	str	r3, [r0, #44]	; 0x2c
 8004a56:	680b      	ldr	r3, [r1, #0]
 8004a58:	6283      	str	r3, [r0, #40]	; 0x28
 8004a5a:	4b04      	ldr	r3, [pc, #16]	; (8004a6c <TIM_Base_SetConfig+0x8c>)
 8004a5c:	4298      	cmp	r0, r3
 8004a5e:	bf04      	itt	eq
 8004a60:	690b      	ldreq	r3, [r1, #16]
 8004a62:	6303      	streq	r3, [r0, #48]	; 0x30
 8004a64:	2301      	movs	r3, #1
 8004a66:	6143      	str	r3, [r0, #20]
 8004a68:	4770      	bx	lr
 8004a6a:	bf00      	nop
 8004a6c:	40010000 	.word	0x40010000
 8004a70:	40000400 	.word	0x40000400
 8004a74:	40014000 	.word	0x40014000

08004a78 <HAL_TIM_OC_Init>:
 8004a78:	b510      	push	{r4, lr}
 8004a7a:	4604      	mov	r4, r0
 8004a7c:	b1a0      	cbz	r0, 8004aa8 <HAL_TIM_OC_Init+0x30>
 8004a7e:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 8004a82:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8004a86:	b91b      	cbnz	r3, 8004a90 <HAL_TIM_OC_Init+0x18>
 8004a88:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38
 8004a8c:	f7ff ffa6 	bl	80049dc <HAL_TIM_OC_MspInit>
 8004a90:	2302      	movs	r3, #2
 8004a92:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
 8004a96:	6820      	ldr	r0, [r4, #0]
 8004a98:	1d21      	adds	r1, r4, #4
 8004a9a:	f7ff ffa1 	bl	80049e0 <TIM_Base_SetConfig>
 8004a9e:	2301      	movs	r3, #1
 8004aa0:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
 8004aa4:	2000      	movs	r0, #0
 8004aa6:	bd10      	pop	{r4, pc}
 8004aa8:	2001      	movs	r0, #1
 8004aaa:	bd10      	pop	{r4, pc}

08004aac <HAL_TIM_PWM_Init>:
 8004aac:	b510      	push	{r4, lr}
 8004aae:	4604      	mov	r4, r0
 8004ab0:	b1a0      	cbz	r0, 8004adc <HAL_TIM_PWM_Init+0x30>
 8004ab2:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 8004ab6:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8004aba:	b91b      	cbnz	r3, 8004ac4 <HAL_TIM_PWM_Init+0x18>
 8004abc:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38
 8004ac0:	f7ff ff8d 	bl	80049de <HAL_TIM_PWM_MspInit>
 8004ac4:	2302      	movs	r3, #2
 8004ac6:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
 8004aca:	6820      	ldr	r0, [r4, #0]
 8004acc:	1d21      	adds	r1, r4, #4
 8004ace:	f7ff ff87 	bl	80049e0 <TIM_Base_SetConfig>
 8004ad2:	2301      	movs	r3, #1
 8004ad4:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
 8004ad8:	2000      	movs	r0, #0
 8004ada:	bd10      	pop	{r4, pc}
 8004adc:	2001      	movs	r0, #1
 8004ade:	bd10      	pop	{r4, pc}

08004ae0 <TIM_OC2_SetConfig>:
 8004ae0:	6a03      	ldr	r3, [r0, #32]
 8004ae2:	f023 0310 	bic.w	r3, r3, #16
 8004ae6:	6203      	str	r3, [r0, #32]
 8004ae8:	6a03      	ldr	r3, [r0, #32]
 8004aea:	b570      	push	{r4, r5, r6, lr}
 8004aec:	6844      	ldr	r4, [r0, #4]
 8004aee:	6982      	ldr	r2, [r0, #24]
 8004af0:	680d      	ldr	r5, [r1, #0]
 8004af2:	f422 42e6 	bic.w	r2, r2, #29440	; 0x7300
 8004af6:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
 8004afa:	688d      	ldr	r5, [r1, #8]
 8004afc:	f023 0320 	bic.w	r3, r3, #32
 8004b00:	ea43 1305 	orr.w	r3, r3, r5, lsl #4
 8004b04:	4d0b      	ldr	r5, [pc, #44]	; (8004b34 <TIM_OC2_SetConfig+0x54>)
 8004b06:	42a8      	cmp	r0, r5
 8004b08:	d10d      	bne.n	8004b26 <TIM_OC2_SetConfig+0x46>
 8004b0a:	68cd      	ldr	r5, [r1, #12]
 8004b0c:	698e      	ldr	r6, [r1, #24]
 8004b0e:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8004b12:	ea43 1305 	orr.w	r3, r3, r5, lsl #4
 8004b16:	694d      	ldr	r5, [r1, #20]
 8004b18:	f424 6440 	bic.w	r4, r4, #3072	; 0xc00
 8004b1c:	4335      	orrs	r5, r6
 8004b1e:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8004b22:	ea44 0485 	orr.w	r4, r4, r5, lsl #2
 8004b26:	6044      	str	r4, [r0, #4]
 8004b28:	6182      	str	r2, [r0, #24]
 8004b2a:	684a      	ldr	r2, [r1, #4]
 8004b2c:	6382      	str	r2, [r0, #56]	; 0x38
 8004b2e:	6203      	str	r3, [r0, #32]
 8004b30:	bd70      	pop	{r4, r5, r6, pc}
 8004b32:	bf00      	nop
 8004b34:	40010000 	.word	0x40010000

08004b38 <HAL_TIM_PWM_ConfigChannel>:
 8004b38:	b538      	push	{r3, r4, r5, lr}
 8004b3a:	f890 3038 	ldrb.w	r3, [r0, #56]	; 0x38
 8004b3e:	2b01      	cmp	r3, #1
 8004b40:	4604      	mov	r4, r0
 8004b42:	f04f 0002 	mov.w	r0, #2
 8004b46:	d025      	beq.n	8004b94 <HAL_TIM_PWM_ConfigChannel+0x5c>
 8004b48:	2301      	movs	r3, #1
 8004b4a:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
 8004b4e:	f884 0039 	strb.w	r0, [r4, #57]	; 0x39
 8004b52:	2a0c      	cmp	r2, #12
 8004b54:	d818      	bhi.n	8004b88 <HAL_TIM_PWM_ConfigChannel+0x50>
 8004b56:	e8df f002 	tbb	[pc, r2]
 8004b5a:	1707      	.short	0x1707
 8004b5c:	171e1717 	.word	0x171e1717
 8004b60:	172f1717 	.word	0x172f1717
 8004b64:	1717      	.short	0x1717
 8004b66:	40          	.byte	0x40
 8004b67:	00          	.byte	0x00
 8004b68:	6820      	ldr	r0, [r4, #0]
 8004b6a:	f7ff fec3 	bl	80048f4 <TIM_OC1_SetConfig>
 8004b6e:	6823      	ldr	r3, [r4, #0]
 8004b70:	6909      	ldr	r1, [r1, #16]
 8004b72:	699a      	ldr	r2, [r3, #24]
 8004b74:	f042 0208 	orr.w	r2, r2, #8
 8004b78:	619a      	str	r2, [r3, #24]
 8004b7a:	699a      	ldr	r2, [r3, #24]
 8004b7c:	f022 0204 	bic.w	r2, r2, #4
 8004b80:	619a      	str	r2, [r3, #24]
 8004b82:	699a      	ldr	r2, [r3, #24]
 8004b84:	430a      	orrs	r2, r1
 8004b86:	619a      	str	r2, [r3, #24]
 8004b88:	2301      	movs	r3, #1
 8004b8a:	2000      	movs	r0, #0
 8004b8c:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
 8004b90:	f884 0038 	strb.w	r0, [r4, #56]	; 0x38
 8004b94:	bd38      	pop	{r3, r4, r5, pc}
 8004b96:	6820      	ldr	r0, [r4, #0]
 8004b98:	f7ff ffa2 	bl	8004ae0 <TIM_OC2_SetConfig>
 8004b9c:	6823      	ldr	r3, [r4, #0]
 8004b9e:	6909      	ldr	r1, [r1, #16]
 8004ba0:	699a      	ldr	r2, [r3, #24]
 8004ba2:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8004ba6:	619a      	str	r2, [r3, #24]
 8004ba8:	699a      	ldr	r2, [r3, #24]
 8004baa:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8004bae:	619a      	str	r2, [r3, #24]
 8004bb0:	699a      	ldr	r2, [r3, #24]
 8004bb2:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8004bb6:	e7e6      	b.n	8004b86 <HAL_TIM_PWM_ConfigChannel+0x4e>
 8004bb8:	6820      	ldr	r0, [r4, #0]
 8004bba:	f7ff fec3 	bl	8004944 <TIM_OC3_SetConfig>
 8004bbe:	6823      	ldr	r3, [r4, #0]
 8004bc0:	6909      	ldr	r1, [r1, #16]
 8004bc2:	69da      	ldr	r2, [r3, #28]
 8004bc4:	f042 0208 	orr.w	r2, r2, #8
 8004bc8:	61da      	str	r2, [r3, #28]
 8004bca:	69da      	ldr	r2, [r3, #28]
 8004bcc:	f022 0204 	bic.w	r2, r2, #4
 8004bd0:	61da      	str	r2, [r3, #28]
 8004bd2:	69da      	ldr	r2, [r3, #28]
 8004bd4:	430a      	orrs	r2, r1
 8004bd6:	61da      	str	r2, [r3, #28]
 8004bd8:	e7d6      	b.n	8004b88 <HAL_TIM_PWM_ConfigChannel+0x50>
 8004bda:	6820      	ldr	r0, [r4, #0]
 8004bdc:	f7ff fedc 	bl	8004998 <TIM_OC4_SetConfig>
 8004be0:	6823      	ldr	r3, [r4, #0]
 8004be2:	6909      	ldr	r1, [r1, #16]
 8004be4:	69da      	ldr	r2, [r3, #28]
 8004be6:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8004bea:	61da      	str	r2, [r3, #28]
 8004bec:	69da      	ldr	r2, [r3, #28]
 8004bee:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8004bf2:	61da      	str	r2, [r3, #28]
 8004bf4:	69da      	ldr	r2, [r3, #28]
 8004bf6:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8004bfa:	e7ec      	b.n	8004bd6 <HAL_TIM_PWM_ConfigChannel+0x9e>

08004bfc <TIM_CCxChannelCmd>:
 8004bfc:	6a03      	ldr	r3, [r0, #32]
 8004bfe:	b510      	push	{r4, lr}
 8004c00:	2401      	movs	r4, #1
 8004c02:	408c      	lsls	r4, r1
 8004c04:	ea23 0304 	bic.w	r3, r3, r4
 8004c08:	6203      	str	r3, [r0, #32]
 8004c0a:	6a03      	ldr	r3, [r0, #32]
 8004c0c:	408a      	lsls	r2, r1
 8004c0e:	431a      	orrs	r2, r3
 8004c10:	6202      	str	r2, [r0, #32]
 8004c12:	bd10      	pop	{r4, pc}

08004c14 <HAL_TIM_PWM_Start>:
 8004c14:	b510      	push	{r4, lr}
 8004c16:	4604      	mov	r4, r0
 8004c18:	2201      	movs	r2, #1
 8004c1a:	6800      	ldr	r0, [r0, #0]
 8004c1c:	f7ff ffee 	bl	8004bfc <TIM_CCxChannelCmd>
 8004c20:	6823      	ldr	r3, [r4, #0]
 8004c22:	4a06      	ldr	r2, [pc, #24]	; (8004c3c <HAL_TIM_PWM_Start+0x28>)
 8004c24:	4293      	cmp	r3, r2
 8004c26:	bf02      	ittt	eq
 8004c28:	6c5a      	ldreq	r2, [r3, #68]	; 0x44
 8004c2a:	f442 4200 	orreq.w	r2, r2, #32768	; 0x8000
 8004c2e:	645a      	streq	r2, [r3, #68]	; 0x44
 8004c30:	681a      	ldr	r2, [r3, #0]
 8004c32:	f042 0201 	orr.w	r2, r2, #1
 8004c36:	601a      	str	r2, [r3, #0]
 8004c38:	2000      	movs	r0, #0
 8004c3a:	bd10      	pop	{r4, pc}
 8004c3c:	40010000 	.word	0x40010000

08004c40 <HAL_TIM_OC_Start>:
 8004c40:	f7ff bfe8 	b.w	8004c14 <HAL_TIM_PWM_Start>

08004c44 <TIM_CCxNChannelCmd>:
 8004c44:	6a03      	ldr	r3, [r0, #32]
 8004c46:	b510      	push	{r4, lr}
 8004c48:	2404      	movs	r4, #4
 8004c4a:	408c      	lsls	r4, r1
 8004c4c:	ea23 0304 	bic.w	r3, r3, r4
 8004c50:	6203      	str	r3, [r0, #32]
 8004c52:	6a03      	ldr	r3, [r0, #32]
 8004c54:	408a      	lsls	r2, r1
 8004c56:	431a      	orrs	r2, r3
 8004c58:	6202      	str	r2, [r0, #32]
 8004c5a:	bd10      	pop	{r4, pc}

08004c5c <HAL_TIMEx_PWMN_Start>:
 8004c5c:	b510      	push	{r4, lr}
 8004c5e:	4604      	mov	r4, r0
 8004c60:	2204      	movs	r2, #4
 8004c62:	6800      	ldr	r0, [r0, #0]
 8004c64:	f7ff ffee 	bl	8004c44 <TIM_CCxNChannelCmd>
 8004c68:	6823      	ldr	r3, [r4, #0]
 8004c6a:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8004c6c:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8004c70:	645a      	str	r2, [r3, #68]	; 0x44
 8004c72:	681a      	ldr	r2, [r3, #0]
 8004c74:	f042 0201 	orr.w	r2, r2, #1
 8004c78:	601a      	str	r2, [r3, #0]
 8004c7a:	2000      	movs	r0, #0
 8004c7c:	bd10      	pop	{r4, pc}
	...

08004c80 <UART_SetConfig>:
 8004c80:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, lr}
 8004c84:	6806      	ldr	r6, [r0, #0]
 8004c86:	68c2      	ldr	r2, [r0, #12]
 8004c88:	6933      	ldr	r3, [r6, #16]
 8004c8a:	69c1      	ldr	r1, [r0, #28]
 8004c8c:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
 8004c90:	4313      	orrs	r3, r2
 8004c92:	6133      	str	r3, [r6, #16]
 8004c94:	4604      	mov	r4, r0
 8004c96:	6883      	ldr	r3, [r0, #8]
 8004c98:	6900      	ldr	r0, [r0, #16]
 8004c9a:	68f2      	ldr	r2, [r6, #12]
 8004c9c:	4303      	orrs	r3, r0
 8004c9e:	6960      	ldr	r0, [r4, #20]
 8004ca0:	f422 4216 	bic.w	r2, r2, #38400	; 0x9600
 8004ca4:	4303      	orrs	r3, r0
 8004ca6:	f022 020c 	bic.w	r2, r2, #12
 8004caa:	430b      	orrs	r3, r1
 8004cac:	4313      	orrs	r3, r2
 8004cae:	60f3      	str	r3, [r6, #12]
 8004cb0:	6973      	ldr	r3, [r6, #20]
 8004cb2:	69a2      	ldr	r2, [r4, #24]
 8004cb4:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8004cb8:	4313      	orrs	r3, r2
 8004cba:	f5b1 4f00 	cmp.w	r1, #32768	; 0x8000
 8004cbe:	6173      	str	r3, [r6, #20]
 8004cc0:	4b7a      	ldr	r3, [pc, #488]	; (8004eac <UART_SetConfig+0x22c>)
 8004cc2:	d17c      	bne.n	8004dbe <UART_SetConfig+0x13e>
 8004cc4:	429e      	cmp	r6, r3
 8004cc6:	d003      	beq.n	8004cd0 <UART_SetConfig+0x50>
 8004cc8:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8004ccc:	429e      	cmp	r6, r3
 8004cce:	d144      	bne.n	8004d5a <UART_SetConfig+0xda>
 8004cd0:	f000 fba8 	bl	8005424 <HAL_RCC_GetPCLK2Freq>
 8004cd4:	2519      	movs	r5, #25
 8004cd6:	fb05 f300 	mul.w	r3, r5, r0
 8004cda:	6860      	ldr	r0, [r4, #4]
 8004cdc:	f04f 0964 	mov.w	r9, #100	; 0x64
 8004ce0:	0040      	lsls	r0, r0, #1
 8004ce2:	fbb3 f3f0 	udiv	r3, r3, r0
 8004ce6:	fbb3 f3f9 	udiv	r3, r3, r9
 8004cea:	ea4f 1803 	mov.w	r8, r3, lsl #4
 8004cee:	f000 fb99 	bl	8005424 <HAL_RCC_GetPCLK2Freq>
 8004cf2:	6863      	ldr	r3, [r4, #4]
 8004cf4:	4368      	muls	r0, r5
 8004cf6:	005b      	lsls	r3, r3, #1
 8004cf8:	fbb0 f7f3 	udiv	r7, r0, r3
 8004cfc:	f000 fb92 	bl	8005424 <HAL_RCC_GetPCLK2Freq>
 8004d00:	6863      	ldr	r3, [r4, #4]
 8004d02:	4368      	muls	r0, r5
 8004d04:	005b      	lsls	r3, r3, #1
 8004d06:	fbb0 f3f3 	udiv	r3, r0, r3
 8004d0a:	fbb3 f3f9 	udiv	r3, r3, r9
 8004d0e:	fb09 7313 	mls	r3, r9, r3, r7
 8004d12:	00db      	lsls	r3, r3, #3
 8004d14:	3332      	adds	r3, #50	; 0x32
 8004d16:	fbb3 f3f9 	udiv	r3, r3, r9
 8004d1a:	005b      	lsls	r3, r3, #1
 8004d1c:	f403 77f8 	and.w	r7, r3, #496	; 0x1f0
 8004d20:	f000 fb80 	bl	8005424 <HAL_RCC_GetPCLK2Freq>
 8004d24:	6862      	ldr	r2, [r4, #4]
 8004d26:	4368      	muls	r0, r5
 8004d28:	0052      	lsls	r2, r2, #1
 8004d2a:	fbb0 faf2 	udiv	r10, r0, r2
 8004d2e:	f000 fb79 	bl	8005424 <HAL_RCC_GetPCLK2Freq>
 8004d32:	6863      	ldr	r3, [r4, #4]
 8004d34:	4368      	muls	r0, r5
 8004d36:	005b      	lsls	r3, r3, #1
 8004d38:	fbb0 f3f3 	udiv	r3, r0, r3
 8004d3c:	fbb3 f3f9 	udiv	r3, r3, r9
 8004d40:	fb09 a313 	mls	r3, r9, r3, r10
 8004d44:	00db      	lsls	r3, r3, #3
 8004d46:	3332      	adds	r3, #50	; 0x32
 8004d48:	fbb3 f3f9 	udiv	r3, r3, r9
 8004d4c:	f003 0307 	and.w	r3, r3, #7
 8004d50:	4443      	add	r3, r8
 8004d52:	443b      	add	r3, r7
 8004d54:	60b3      	str	r3, [r6, #8]
 8004d56:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 8004d5a:	f000 fb4b 	bl	80053f4 <HAL_RCC_GetPCLK1Freq>
 8004d5e:	2519      	movs	r5, #25
 8004d60:	fb05 f300 	mul.w	r3, r5, r0
 8004d64:	6860      	ldr	r0, [r4, #4]
 8004d66:	f04f 0964 	mov.w	r9, #100	; 0x64
 8004d6a:	0040      	lsls	r0, r0, #1
 8004d6c:	fbb3 f3f0 	udiv	r3, r3, r0
 8004d70:	fbb3 f3f9 	udiv	r3, r3, r9
 8004d74:	ea4f 1803 	mov.w	r8, r3, lsl #4
 8004d78:	f000 fb3c 	bl	80053f4 <HAL_RCC_GetPCLK1Freq>
 8004d7c:	6863      	ldr	r3, [r4, #4]
 8004d7e:	4368      	muls	r0, r5
 8004d80:	005b      	lsls	r3, r3, #1
 8004d82:	fbb0 f7f3 	udiv	r7, r0, r3
 8004d86:	f000 fb35 	bl	80053f4 <HAL_RCC_GetPCLK1Freq>
 8004d8a:	6863      	ldr	r3, [r4, #4]
 8004d8c:	4368      	muls	r0, r5
 8004d8e:	005b      	lsls	r3, r3, #1
 8004d90:	fbb0 f3f3 	udiv	r3, r0, r3
 8004d94:	fbb3 f3f9 	udiv	r3, r3, r9
 8004d98:	fb09 7313 	mls	r3, r9, r3, r7
 8004d9c:	00db      	lsls	r3, r3, #3
 8004d9e:	3332      	adds	r3, #50	; 0x32
 8004da0:	fbb3 f3f9 	udiv	r3, r3, r9
 8004da4:	005b      	lsls	r3, r3, #1
 8004da6:	f403 77f8 	and.w	r7, r3, #496	; 0x1f0
 8004daa:	f000 fb23 	bl	80053f4 <HAL_RCC_GetPCLK1Freq>
 8004dae:	6862      	ldr	r2, [r4, #4]
 8004db0:	4368      	muls	r0, r5
 8004db2:	0052      	lsls	r2, r2, #1
 8004db4:	fbb0 faf2 	udiv	r10, r0, r2
 8004db8:	f000 fb1c 	bl	80053f4 <HAL_RCC_GetPCLK1Freq>
 8004dbc:	e7b9      	b.n	8004d32 <UART_SetConfig+0xb2>
 8004dbe:	429e      	cmp	r6, r3
 8004dc0:	d002      	beq.n	8004dc8 <UART_SetConfig+0x148>
 8004dc2:	4b3b      	ldr	r3, [pc, #236]	; (8004eb0 <UART_SetConfig+0x230>)
 8004dc4:	429e      	cmp	r6, r3
 8004dc6:	d140      	bne.n	8004e4a <UART_SetConfig+0x1ca>
 8004dc8:	f000 fb2c 	bl	8005424 <HAL_RCC_GetPCLK2Freq>
 8004dcc:	6867      	ldr	r7, [r4, #4]
 8004dce:	2519      	movs	r5, #25
 8004dd0:	f04f 0964 	mov.w	r9, #100	; 0x64
 8004dd4:	fb05 f300 	mul.w	r3, r5, r0
 8004dd8:	00bf      	lsls	r7, r7, #2
 8004dda:	fbb3 f3f7 	udiv	r3, r3, r7
 8004dde:	fbb3 f3f9 	udiv	r3, r3, r9
 8004de2:	011f      	lsls	r7, r3, #4
 8004de4:	f000 fb1e 	bl	8005424 <HAL_RCC_GetPCLK2Freq>
 8004de8:	6863      	ldr	r3, [r4, #4]
 8004dea:	4368      	muls	r0, r5
 8004dec:	009b      	lsls	r3, r3, #2
 8004dee:	fbb0 f8f3 	udiv	r8, r0, r3
 8004df2:	f000 fb17 	bl	8005424 <HAL_RCC_GetPCLK2Freq>
 8004df6:	6863      	ldr	r3, [r4, #4]
 8004df8:	4368      	muls	r0, r5
 8004dfa:	009b      	lsls	r3, r3, #2
 8004dfc:	fbb0 f3f3 	udiv	r3, r0, r3
 8004e00:	fbb3 f3f9 	udiv	r3, r3, r9
 8004e04:	fb09 8313 	mls	r3, r9, r3, r8
 8004e08:	011b      	lsls	r3, r3, #4
 8004e0a:	3332      	adds	r3, #50	; 0x32
 8004e0c:	fbb3 f3f9 	udiv	r3, r3, r9
 8004e10:	f003 08f0 	and.w	r8, r3, #240	; 0xf0
 8004e14:	f000 fb06 	bl	8005424 <HAL_RCC_GetPCLK2Freq>
 8004e18:	6862      	ldr	r2, [r4, #4]
 8004e1a:	4368      	muls	r0, r5
 8004e1c:	0092      	lsls	r2, r2, #2
 8004e1e:	fbb0 faf2 	udiv	r10, r0, r2
 8004e22:	f000 faff 	bl	8005424 <HAL_RCC_GetPCLK2Freq>
 8004e26:	6863      	ldr	r3, [r4, #4]
 8004e28:	4368      	muls	r0, r5
 8004e2a:	009b      	lsls	r3, r3, #2
 8004e2c:	fbb0 f3f3 	udiv	r3, r0, r3
 8004e30:	fbb3 f3f9 	udiv	r3, r3, r9
 8004e34:	fb09 a313 	mls	r3, r9, r3, r10
 8004e38:	011b      	lsls	r3, r3, #4
 8004e3a:	3332      	adds	r3, #50	; 0x32
 8004e3c:	fbb3 f3f9 	udiv	r3, r3, r9
 8004e40:	f003 030f 	and.w	r3, r3, #15
 8004e44:	ea43 0308 	orr.w	r3, r3, r8
 8004e48:	e783      	b.n	8004d52 <UART_SetConfig+0xd2>
 8004e4a:	f000 fad3 	bl	80053f4 <HAL_RCC_GetPCLK1Freq>
 8004e4e:	6867      	ldr	r7, [r4, #4]
 8004e50:	2519      	movs	r5, #25
 8004e52:	f04f 0964 	mov.w	r9, #100	; 0x64
 8004e56:	fb05 f300 	mul.w	r3, r5, r0
 8004e5a:	00bf      	lsls	r7, r7, #2
 8004e5c:	fbb3 f3f7 	udiv	r3, r3, r7
 8004e60:	fbb3 f3f9 	udiv	r3, r3, r9
 8004e64:	011f      	lsls	r7, r3, #4
 8004e66:	f000 fac5 	bl	80053f4 <HAL_RCC_GetPCLK1Freq>
 8004e6a:	6863      	ldr	r3, [r4, #4]
 8004e6c:	4368      	muls	r0, r5
 8004e6e:	009b      	lsls	r3, r3, #2
 8004e70:	fbb0 f8f3 	udiv	r8, r0, r3
 8004e74:	f000 fabe 	bl	80053f4 <HAL_RCC_GetPCLK1Freq>
 8004e78:	6863      	ldr	r3, [r4, #4]
 8004e7a:	4368      	muls	r0, r5
 8004e7c:	009b      	lsls	r3, r3, #2
 8004e7e:	fbb0 f3f3 	udiv	r3, r0, r3
 8004e82:	fbb3 f3f9 	udiv	r3, r3, r9
 8004e86:	fb09 8313 	mls	r3, r9, r3, r8
 8004e8a:	011b      	lsls	r3, r3, #4
 8004e8c:	3332      	adds	r3, #50	; 0x32
 8004e8e:	fbb3 f3f9 	udiv	r3, r3, r9
 8004e92:	f003 08f0 	and.w	r8, r3, #240	; 0xf0
 8004e96:	f000 faad 	bl	80053f4 <HAL_RCC_GetPCLK1Freq>
 8004e9a:	6862      	ldr	r2, [r4, #4]
 8004e9c:	4368      	muls	r0, r5
 8004e9e:	0092      	lsls	r2, r2, #2
 8004ea0:	fbb0 faf2 	udiv	r10, r0, r2
 8004ea4:	f000 faa6 	bl	80053f4 <HAL_RCC_GetPCLK1Freq>
 8004ea8:	e7bd      	b.n	8004e26 <UART_SetConfig+0x1a6>
 8004eaa:	bf00      	nop
 8004eac:	40011000 	.word	0x40011000
 8004eb0:	40011400 	.word	0x40011400

08004eb4 <HAL_UART_MspInit>:
 8004eb4:	4770      	bx	lr

08004eb6 <HAL_UART_Init>:
 8004eb6:	b510      	push	{r4, lr}
 8004eb8:	4604      	mov	r4, r0
 8004eba:	b340      	cbz	r0, 8004f0e <HAL_UART_Init+0x58>
 8004ebc:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 8004ec0:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8004ec4:	b91b      	cbnz	r3, 8004ece <HAL_UART_Init+0x18>
 8004ec6:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38
 8004eca:	f7ff fff3 	bl	8004eb4 <HAL_UART_MspInit>
 8004ece:	6822      	ldr	r2, [r4, #0]
 8004ed0:	2324      	movs	r3, #36	; 0x24
 8004ed2:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
 8004ed6:	68d3      	ldr	r3, [r2, #12]
 8004ed8:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8004edc:	60d3      	str	r3, [r2, #12]
 8004ede:	4620      	mov	r0, r4
 8004ee0:	f7ff fece 	bl	8004c80 <UART_SetConfig>
 8004ee4:	6823      	ldr	r3, [r4, #0]
 8004ee6:	691a      	ldr	r2, [r3, #16]
 8004ee8:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 8004eec:	611a      	str	r2, [r3, #16]
 8004eee:	695a      	ldr	r2, [r3, #20]
 8004ef0:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 8004ef4:	615a      	str	r2, [r3, #20]
 8004ef6:	68da      	ldr	r2, [r3, #12]
 8004ef8:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 8004efc:	60da      	str	r2, [r3, #12]
 8004efe:	2000      	movs	r0, #0
 8004f00:	2320      	movs	r3, #32
 8004f02:	63e0      	str	r0, [r4, #60]	; 0x3c
 8004f04:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
 8004f08:	f884 303a 	strb.w	r3, [r4, #58]	; 0x3a
 8004f0c:	bd10      	pop	{r4, pc}
 8004f0e:	2001      	movs	r0, #1
 8004f10:	bd10      	pop	{r4, pc}
	...

08004f14 <HAL_PWR_EnterSLEEPMode>:
 8004f14:	4a06      	ldr	r2, [pc, #24]	; (8004f30 <HAL_PWR_EnterSLEEPMode+0x1c>)
 8004f16:	6913      	ldr	r3, [r2, #16]
 8004f18:	2901      	cmp	r1, #1
 8004f1a:	f023 0304 	bic.w	r3, r3, #4
 8004f1e:	6113      	str	r3, [r2, #16]
 8004f20:	d101      	bne.n	8004f26 <HAL_PWR_EnterSLEEPMode+0x12>
 8004f22:	bf30      	wfi
 8004f24:	4770      	bx	lr
 8004f26:	bf40      	sev
 8004f28:	bf20      	wfe
 8004f2a:	bf20      	wfe
 8004f2c:	4770      	bx	lr
 8004f2e:	bf00      	nop
 8004f30:	e000ed00 	.word	0xe000ed00

08004f34 <HAL_RCC_OscConfig>:
 8004f34:	6803      	ldr	r3, [r0, #0]
 8004f36:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8004f38:	07dd      	lsls	r5, r3, #31
 8004f3a:	4604      	mov	r4, r0
 8004f3c:	d438      	bmi.n	8004fb0 <HAL_RCC_OscConfig+0x7c>
 8004f3e:	6823      	ldr	r3, [r4, #0]
 8004f40:	0798      	lsls	r0, r3, #30
 8004f42:	d471      	bmi.n	8005028 <HAL_RCC_OscConfig+0xf4>
 8004f44:	6823      	ldr	r3, [r4, #0]
 8004f46:	071e      	lsls	r6, r3, #28
 8004f48:	f100 80bd 	bmi.w	80050c6 <HAL_RCC_OscConfig+0x192>
 8004f4c:	6823      	ldr	r3, [r4, #0]
 8004f4e:	075d      	lsls	r5, r3, #29
 8004f50:	d528      	bpl.n	8004fa4 <HAL_RCC_OscConfig+0x70>
 8004f52:	2300      	movs	r3, #0
 8004f54:	9301      	str	r3, [sp, #4]
 8004f56:	4ba8      	ldr	r3, [pc, #672]	; (80051f8 <HAL_RCC_OscConfig+0x2c4>)
 8004f58:	4da8      	ldr	r5, [pc, #672]	; (80051fc <HAL_RCC_OscConfig+0x2c8>)
 8004f5a:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8004f5c:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8004f60:	641a      	str	r2, [r3, #64]	; 0x40
 8004f62:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004f64:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8004f68:	9301      	str	r3, [sp, #4]
 8004f6a:	9b01      	ldr	r3, [sp, #4]
 8004f6c:	682b      	ldr	r3, [r5, #0]
 8004f6e:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8004f72:	602b      	str	r3, [r5, #0]
 8004f74:	f000 faae 	bl	80054d4 <HAL_GetTick>
 8004f78:	4606      	mov	r6, r0
 8004f7a:	682b      	ldr	r3, [r5, #0]
 8004f7c:	05da      	lsls	r2, r3, #23
 8004f7e:	f140 80c4 	bpl.w	800510a <HAL_RCC_OscConfig+0x1d6>
 8004f82:	4b9f      	ldr	r3, [pc, #636]	; (8005200 <HAL_RCC_OscConfig+0x2cc>)
 8004f84:	7a22      	ldrb	r2, [r4, #8]
 8004f86:	701a      	strb	r2, [r3, #0]
 8004f88:	68a3      	ldr	r3, [r4, #8]
 8004f8a:	2b00      	cmp	r3, #0
 8004f8c:	f000 80cb 	beq.w	8005126 <HAL_RCC_OscConfig+0x1f2>
 8004f90:	f000 faa0 	bl	80054d4 <HAL_GetTick>
 8004f94:	4d98      	ldr	r5, [pc, #608]	; (80051f8 <HAL_RCC_OscConfig+0x2c4>)
 8004f96:	4606      	mov	r6, r0
 8004f98:	f241 3788 	movw	r7, #5000	; 0x1388
 8004f9c:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8004f9e:	079b      	lsls	r3, r3, #30
 8004fa0:	f140 80ba 	bpl.w	8005118 <HAL_RCC_OscConfig+0x1e4>
 8004fa4:	69a2      	ldr	r2, [r4, #24]
 8004fa6:	2a00      	cmp	r2, #0
 8004fa8:	f040 80cd 	bne.w	8005146 <HAL_RCC_OscConfig+0x212>
 8004fac:	2000      	movs	r0, #0
 8004fae:	e015      	b.n	8004fdc <HAL_RCC_OscConfig+0xa8>
 8004fb0:	4b91      	ldr	r3, [pc, #580]	; (80051f8 <HAL_RCC_OscConfig+0x2c4>)
 8004fb2:	689a      	ldr	r2, [r3, #8]
 8004fb4:	f002 020c 	and.w	r2, r2, #12
 8004fb8:	2a04      	cmp	r2, #4
 8004fba:	d007      	beq.n	8004fcc <HAL_RCC_OscConfig+0x98>
 8004fbc:	689a      	ldr	r2, [r3, #8]
 8004fbe:	f002 020c 	and.w	r2, r2, #12
 8004fc2:	2a08      	cmp	r2, #8
 8004fc4:	d10c      	bne.n	8004fe0 <HAL_RCC_OscConfig+0xac>
 8004fc6:	685b      	ldr	r3, [r3, #4]
 8004fc8:	0259      	lsls	r1, r3, #9
 8004fca:	d509      	bpl.n	8004fe0 <HAL_RCC_OscConfig+0xac>
 8004fcc:	4b8a      	ldr	r3, [pc, #552]	; (80051f8 <HAL_RCC_OscConfig+0x2c4>)
 8004fce:	681b      	ldr	r3, [r3, #0]
 8004fd0:	039a      	lsls	r2, r3, #14
 8004fd2:	d5b4      	bpl.n	8004f3e <HAL_RCC_OscConfig+0xa>
 8004fd4:	6863      	ldr	r3, [r4, #4]
 8004fd6:	2b00      	cmp	r3, #0
 8004fd8:	d1b1      	bne.n	8004f3e <HAL_RCC_OscConfig+0xa>
 8004fda:	2001      	movs	r0, #1
 8004fdc:	b003      	add	sp, #12
 8004fde:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8004fe0:	4b88      	ldr	r3, [pc, #544]	; (8005204 <HAL_RCC_OscConfig+0x2d0>)
 8004fe2:	7922      	ldrb	r2, [r4, #4]
 8004fe4:	701a      	strb	r2, [r3, #0]
 8004fe6:	6863      	ldr	r3, [r4, #4]
 8004fe8:	b17b      	cbz	r3, 800500a <HAL_RCC_OscConfig+0xd6>
 8004fea:	f000 fa73 	bl	80054d4 <HAL_GetTick>
 8004fee:	4d82      	ldr	r5, [pc, #520]	; (80051f8 <HAL_RCC_OscConfig+0x2c4>)
 8004ff0:	4606      	mov	r6, r0
 8004ff2:	f241 3788 	movw	r7, #5000	; 0x1388
 8004ff6:	682b      	ldr	r3, [r5, #0]
 8004ff8:	039b      	lsls	r3, r3, #14
 8004ffa:	d4a0      	bmi.n	8004f3e <HAL_RCC_OscConfig+0xa>
 8004ffc:	f000 fa6a 	bl	80054d4 <HAL_GetTick>
 8005000:	1b80      	subs	r0, r0, r6
 8005002:	42b8      	cmp	r0, r7
 8005004:	d9f7      	bls.n	8004ff6 <HAL_RCC_OscConfig+0xc2>
 8005006:	2003      	movs	r0, #3
 8005008:	e7e8      	b.n	8004fdc <HAL_RCC_OscConfig+0xa8>
 800500a:	f000 fa63 	bl	80054d4 <HAL_GetTick>
 800500e:	4d7a      	ldr	r5, [pc, #488]	; (80051f8 <HAL_RCC_OscConfig+0x2c4>)
 8005010:	4606      	mov	r6, r0
 8005012:	f241 3788 	movw	r7, #5000	; 0x1388
 8005016:	682b      	ldr	r3, [r5, #0]
 8005018:	0398      	lsls	r0, r3, #14
 800501a:	d590      	bpl.n	8004f3e <HAL_RCC_OscConfig+0xa>
 800501c:	f000 fa5a 	bl	80054d4 <HAL_GetTick>
 8005020:	1b80      	subs	r0, r0, r6
 8005022:	42b8      	cmp	r0, r7
 8005024:	d9f7      	bls.n	8005016 <HAL_RCC_OscConfig+0xe2>
 8005026:	e7ee      	b.n	8005006 <HAL_RCC_OscConfig+0xd2>
 8005028:	4b73      	ldr	r3, [pc, #460]	; (80051f8 <HAL_RCC_OscConfig+0x2c4>)
 800502a:	689a      	ldr	r2, [r3, #8]
 800502c:	f012 0f0c 	tst.w	r2, #12
 8005030:	d007      	beq.n	8005042 <HAL_RCC_OscConfig+0x10e>
 8005032:	689a      	ldr	r2, [r3, #8]
 8005034:	f002 020c 	and.w	r2, r2, #12
 8005038:	2a08      	cmp	r2, #8
 800503a:	d116      	bne.n	800506a <HAL_RCC_OscConfig+0x136>
 800503c:	685b      	ldr	r3, [r3, #4]
 800503e:	0259      	lsls	r1, r3, #9
 8005040:	d413      	bmi.n	800506a <HAL_RCC_OscConfig+0x136>
 8005042:	4b6d      	ldr	r3, [pc, #436]	; (80051f8 <HAL_RCC_OscConfig+0x2c4>)
 8005044:	681a      	ldr	r2, [r3, #0]
 8005046:	0792      	lsls	r2, r2, #30
 8005048:	d502      	bpl.n	8005050 <HAL_RCC_OscConfig+0x11c>
 800504a:	68e2      	ldr	r2, [r4, #12]
 800504c:	2a01      	cmp	r2, #1
 800504e:	d1c4      	bne.n	8004fda <HAL_RCC_OscConfig+0xa6>
 8005050:	6818      	ldr	r0, [r3, #0]
 8005052:	22f8      	movs	r2, #248	; 0xf8
 8005054:	fa92 f2a2 	rbit	r2, r2
 8005058:	fab2 f182 	clz	r1, r2
 800505c:	6922      	ldr	r2, [r4, #16]
 800505e:	408a      	lsls	r2, r1
 8005060:	f020 01f8 	bic.w	r1, r0, #248	; 0xf8
 8005064:	430a      	orrs	r2, r1
 8005066:	601a      	str	r2, [r3, #0]
 8005068:	e76c      	b.n	8004f44 <HAL_RCC_OscConfig+0x10>
 800506a:	68e2      	ldr	r2, [r4, #12]
 800506c:	4b66      	ldr	r3, [pc, #408]	; (8005208 <HAL_RCC_OscConfig+0x2d4>)
 800506e:	b1da      	cbz	r2, 80050a8 <HAL_RCC_OscConfig+0x174>
 8005070:	2201      	movs	r2, #1
 8005072:	601a      	str	r2, [r3, #0]
 8005074:	f000 fa2e 	bl	80054d4 <HAL_GetTick>
 8005078:	4d5f      	ldr	r5, [pc, #380]	; (80051f8 <HAL_RCC_OscConfig+0x2c4>)
 800507a:	4606      	mov	r6, r0
 800507c:	682b      	ldr	r3, [r5, #0]
 800507e:	079b      	lsls	r3, r3, #30
 8005080:	d50c      	bpl.n	800509c <HAL_RCC_OscConfig+0x168>
 8005082:	6829      	ldr	r1, [r5, #0]
 8005084:	23f8      	movs	r3, #248	; 0xf8
 8005086:	fa93 f3a3 	rbit	r3, r3
 800508a:	fab3 f283 	clz	r2, r3
 800508e:	6923      	ldr	r3, [r4, #16]
 8005090:	4093      	lsls	r3, r2
 8005092:	f021 02f8 	bic.w	r2, r1, #248	; 0xf8
 8005096:	4313      	orrs	r3, r2
 8005098:	602b      	str	r3, [r5, #0]
 800509a:	e753      	b.n	8004f44 <HAL_RCC_OscConfig+0x10>
 800509c:	f000 fa1a 	bl	80054d4 <HAL_GetTick>
 80050a0:	1b80      	subs	r0, r0, r6
 80050a2:	2802      	cmp	r0, #2
 80050a4:	d9ea      	bls.n	800507c <HAL_RCC_OscConfig+0x148>
 80050a6:	e7ae      	b.n	8005006 <HAL_RCC_OscConfig+0xd2>
 80050a8:	601a      	str	r2, [r3, #0]
 80050aa:	f000 fa13 	bl	80054d4 <HAL_GetTick>
 80050ae:	4d52      	ldr	r5, [pc, #328]	; (80051f8 <HAL_RCC_OscConfig+0x2c4>)
 80050b0:	4606      	mov	r6, r0
 80050b2:	682b      	ldr	r3, [r5, #0]
 80050b4:	079f      	lsls	r7, r3, #30
 80050b6:	f57f af45 	bpl.w	8004f44 <HAL_RCC_OscConfig+0x10>
 80050ba:	f000 fa0b 	bl	80054d4 <HAL_GetTick>
 80050be:	1b80      	subs	r0, r0, r6
 80050c0:	2802      	cmp	r0, #2
 80050c2:	d9f6      	bls.n	80050b2 <HAL_RCC_OscConfig+0x17e>
 80050c4:	e79f      	b.n	8005006 <HAL_RCC_OscConfig+0xd2>
 80050c6:	6962      	ldr	r2, [r4, #20]
 80050c8:	4b50      	ldr	r3, [pc, #320]	; (800520c <HAL_RCC_OscConfig+0x2d8>)
 80050ca:	b17a      	cbz	r2, 80050ec <HAL_RCC_OscConfig+0x1b8>
 80050cc:	2201      	movs	r2, #1
 80050ce:	601a      	str	r2, [r3, #0]
 80050d0:	f000 fa00 	bl	80054d4 <HAL_GetTick>
 80050d4:	4d48      	ldr	r5, [pc, #288]	; (80051f8 <HAL_RCC_OscConfig+0x2c4>)
 80050d6:	4606      	mov	r6, r0
 80050d8:	6f6b      	ldr	r3, [r5, #116]	; 0x74
 80050da:	0798      	lsls	r0, r3, #30
 80050dc:	f53f af36 	bmi.w	8004f4c <HAL_RCC_OscConfig+0x18>
 80050e0:	f000 f9f8 	bl	80054d4 <HAL_GetTick>
 80050e4:	1b80      	subs	r0, r0, r6
 80050e6:	2802      	cmp	r0, #2
 80050e8:	d9f6      	bls.n	80050d8 <HAL_RCC_OscConfig+0x1a4>
 80050ea:	e78c      	b.n	8005006 <HAL_RCC_OscConfig+0xd2>
 80050ec:	601a      	str	r2, [r3, #0]
 80050ee:	f000 f9f1 	bl	80054d4 <HAL_GetTick>
 80050f2:	4d41      	ldr	r5, [pc, #260]	; (80051f8 <HAL_RCC_OscConfig+0x2c4>)
 80050f4:	4606      	mov	r6, r0
 80050f6:	6f6b      	ldr	r3, [r5, #116]	; 0x74
 80050f8:	0799      	lsls	r1, r3, #30
 80050fa:	f57f af27 	bpl.w	8004f4c <HAL_RCC_OscConfig+0x18>
 80050fe:	f000 f9e9 	bl	80054d4 <HAL_GetTick>
 8005102:	1b80      	subs	r0, r0, r6
 8005104:	2802      	cmp	r0, #2
 8005106:	d9f6      	bls.n	80050f6 <HAL_RCC_OscConfig+0x1c2>
 8005108:	e77d      	b.n	8005006 <HAL_RCC_OscConfig+0xd2>
 800510a:	f000 f9e3 	bl	80054d4 <HAL_GetTick>
 800510e:	1b80      	subs	r0, r0, r6
 8005110:	2802      	cmp	r0, #2
 8005112:	f67f af32 	bls.w	8004f7a <HAL_RCC_OscConfig+0x46>
 8005116:	e776      	b.n	8005006 <HAL_RCC_OscConfig+0xd2>
 8005118:	f000 f9dc 	bl	80054d4 <HAL_GetTick>
 800511c:	1b80      	subs	r0, r0, r6
 800511e:	42b8      	cmp	r0, r7
 8005120:	f67f af3c 	bls.w	8004f9c <HAL_RCC_OscConfig+0x68>
 8005124:	e76f      	b.n	8005006 <HAL_RCC_OscConfig+0xd2>
 8005126:	f000 f9d5 	bl	80054d4 <HAL_GetTick>
 800512a:	4d33      	ldr	r5, [pc, #204]	; (80051f8 <HAL_RCC_OscConfig+0x2c4>)
 800512c:	4606      	mov	r6, r0
 800512e:	f241 3788 	movw	r7, #5000	; 0x1388
 8005132:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8005134:	0798      	lsls	r0, r3, #30
 8005136:	f57f af35 	bpl.w	8004fa4 <HAL_RCC_OscConfig+0x70>
 800513a:	f000 f9cb 	bl	80054d4 <HAL_GetTick>
 800513e:	1b80      	subs	r0, r0, r6
 8005140:	42b8      	cmp	r0, r7
 8005142:	d9f6      	bls.n	8005132 <HAL_RCC_OscConfig+0x1fe>
 8005144:	e75f      	b.n	8005006 <HAL_RCC_OscConfig+0xd2>
 8005146:	4d2c      	ldr	r5, [pc, #176]	; (80051f8 <HAL_RCC_OscConfig+0x2c4>)
 8005148:	68ab      	ldr	r3, [r5, #8]
 800514a:	f003 030c 	and.w	r3, r3, #12
 800514e:	2b08      	cmp	r3, #8
 8005150:	f43f af43 	beq.w	8004fda <HAL_RCC_OscConfig+0xa6>
 8005154:	4e2e      	ldr	r6, [pc, #184]	; (8005210 <HAL_RCC_OscConfig+0x2dc>)
 8005156:	2300      	movs	r3, #0
 8005158:	2a02      	cmp	r2, #2
 800515a:	6033      	str	r3, [r6, #0]
 800515c:	d13e      	bne.n	80051dc <HAL_RCC_OscConfig+0x2a8>
 800515e:	f000 f9b9 	bl	80054d4 <HAL_GetTick>
 8005162:	4607      	mov	r7, r0
 8005164:	682b      	ldr	r3, [r5, #0]
 8005166:	0199      	lsls	r1, r3, #6
 8005168:	d432      	bmi.n	80051d0 <HAL_RCC_OscConfig+0x29c>
 800516a:	f647 77c0 	movw	r7, #32704	; 0x7fc0
 800516e:	fa97 f7a7 	rbit	r7, r7
 8005172:	f44f 3240 	mov.w	r2, #196608	; 0x30000
 8005176:	fab7 f787 	clz	r7, r7
 800517a:	fa92 f2a2 	rbit	r2, r2
 800517e:	f04f 6170 	mov.w	r1, #251658240	; 0xf000000
 8005182:	fab2 f082 	clz	r0, r2
 8005186:	fa91 f1a1 	rbit	r1, r1
 800518a:	6a22      	ldr	r2, [r4, #32]
 800518c:	69e3      	ldr	r3, [r4, #28]
 800518e:	4313      	orrs	r3, r2
 8005190:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8005192:	fa02 f707 	lsl.w	r7, r2, r7
 8005196:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8005198:	0852      	lsrs	r2, r2, #1
 800519a:	3a01      	subs	r2, #1
 800519c:	4082      	lsls	r2, r0
 800519e:	433b      	orrs	r3, r7
 80051a0:	4313      	orrs	r3, r2
 80051a2:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 80051a4:	4c14      	ldr	r4, [pc, #80]	; (80051f8 <HAL_RCC_OscConfig+0x2c4>)
 80051a6:	fab1 f181 	clz	r1, r1
 80051aa:	fa02 f101 	lsl.w	r1, r2, r1
 80051ae:	430b      	orrs	r3, r1
 80051b0:	606b      	str	r3, [r5, #4]
 80051b2:	2301      	movs	r3, #1
 80051b4:	6033      	str	r3, [r6, #0]
 80051b6:	f000 f98d 	bl	80054d4 <HAL_GetTick>
 80051ba:	4605      	mov	r5, r0
 80051bc:	6823      	ldr	r3, [r4, #0]
 80051be:	019a      	lsls	r2, r3, #6
 80051c0:	f53f aef4 	bmi.w	8004fac <HAL_RCC_OscConfig+0x78>
 80051c4:	f000 f986 	bl	80054d4 <HAL_GetTick>
 80051c8:	1b40      	subs	r0, r0, r5
 80051ca:	2802      	cmp	r0, #2
 80051cc:	d9f6      	bls.n	80051bc <HAL_RCC_OscConfig+0x288>
 80051ce:	e71a      	b.n	8005006 <HAL_RCC_OscConfig+0xd2>
 80051d0:	f000 f980 	bl	80054d4 <HAL_GetTick>
 80051d4:	1bc0      	subs	r0, r0, r7
 80051d6:	2802      	cmp	r0, #2
 80051d8:	d9c4      	bls.n	8005164 <HAL_RCC_OscConfig+0x230>
 80051da:	e714      	b.n	8005006 <HAL_RCC_OscConfig+0xd2>
 80051dc:	f000 f97a 	bl	80054d4 <HAL_GetTick>
 80051e0:	4604      	mov	r4, r0
 80051e2:	682b      	ldr	r3, [r5, #0]
 80051e4:	019b      	lsls	r3, r3, #6
 80051e6:	f57f aee1 	bpl.w	8004fac <HAL_RCC_OscConfig+0x78>
 80051ea:	f000 f973 	bl	80054d4 <HAL_GetTick>
 80051ee:	1b00      	subs	r0, r0, r4
 80051f0:	2802      	cmp	r0, #2
 80051f2:	d9f6      	bls.n	80051e2 <HAL_RCC_OscConfig+0x2ae>
 80051f4:	e707      	b.n	8005006 <HAL_RCC_OscConfig+0xd2>
 80051f6:	bf00      	nop
 80051f8:	40023800 	.word	0x40023800
 80051fc:	40007000 	.word	0x40007000
 8005200:	40023870 	.word	0x40023870
 8005204:	40023802 	.word	0x40023802
 8005208:	42470000 	.word	0x42470000
 800520c:	42470e80 	.word	0x42470e80
 8005210:	42470060 	.word	0x42470060

08005214 <HAL_RCC_GetSysClockFreq>:
 8005214:	4a19      	ldr	r2, [pc, #100]	; (800527c <HAL_RCC_GetSysClockFreq+0x68>)
 8005216:	6893      	ldr	r3, [r2, #8]
 8005218:	f003 030c 	and.w	r3, r3, #12
 800521c:	2b04      	cmp	r3, #4
 800521e:	b510      	push	{r4, lr}
 8005220:	d003      	beq.n	800522a <HAL_RCC_GetSysClockFreq+0x16>
 8005222:	2b08      	cmp	r3, #8
 8005224:	d003      	beq.n	800522e <HAL_RCC_GetSysClockFreq+0x1a>
 8005226:	4816      	ldr	r0, [pc, #88]	; (8005280 <HAL_RCC_GetSysClockFreq+0x6c>)
 8005228:	bd10      	pop	{r4, pc}
 800522a:	4816      	ldr	r0, [pc, #88]	; (8005284 <HAL_RCC_GetSysClockFreq+0x70>)
 800522c:	bd10      	pop	{r4, pc}
 800522e:	6851      	ldr	r1, [r2, #4]
 8005230:	6853      	ldr	r3, [r2, #4]
 8005232:	f001 013f 	and.w	r1, r1, #63	; 0x3f
 8005236:	f413 0f80 	tst.w	r3, #4194304	; 0x400000
 800523a:	f647 74c0 	movw	r4, #32704	; 0x7fc0
 800523e:	6853      	ldr	r3, [r2, #4]
 8005240:	fa94 f0a4 	rbit	r0, r4
 8005244:	fab0 f080 	clz	r0, r0
 8005248:	ea03 0304 	and.w	r3, r3, r4
 800524c:	fa23 f300 	lsr.w	r3, r3, r0
 8005250:	bf14      	ite	ne
 8005252:	480c      	ldrne	r0, [pc, #48]	; (8005284 <HAL_RCC_GetSysClockFreq+0x70>)
 8005254:	480a      	ldreq	r0, [pc, #40]	; (8005280 <HAL_RCC_GetSysClockFreq+0x6c>)
 8005256:	fbb0 f0f1 	udiv	r0, r0, r1
 800525a:	4358      	muls	r0, r3
 800525c:	4b07      	ldr	r3, [pc, #28]	; (800527c <HAL_RCC_GetSysClockFreq+0x68>)
 800525e:	f44f 3240 	mov.w	r2, #196608	; 0x30000
 8005262:	685b      	ldr	r3, [r3, #4]
 8005264:	fa92 f2a2 	rbit	r2, r2
 8005268:	fab2 f282 	clz	r2, r2
 800526c:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 8005270:	40d3      	lsrs	r3, r2
 8005272:	3301      	adds	r3, #1
 8005274:	005b      	lsls	r3, r3, #1
 8005276:	fbb0 f0f3 	udiv	r0, r0, r3
 800527a:	bd10      	pop	{r4, pc}
 800527c:	40023800 	.word	0x40023800
 8005280:	00f42400 	.word	0x00f42400
 8005284:	007a1200 	.word	0x007a1200

08005288 <HAL_RCC_ClockConfig>:
 8005288:	4b56      	ldr	r3, [pc, #344]	; (80053e4 <HAL_RCC_ClockConfig+0x15c>)
 800528a:	681a      	ldr	r2, [r3, #0]
 800528c:	f002 020f 	and.w	r2, r2, #15
 8005290:	428a      	cmp	r2, r1
 8005292:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8005296:	4605      	mov	r5, r0
 8005298:	460e      	mov	r6, r1
 800529a:	d330      	bcc.n	80052fe <HAL_RCC_ClockConfig+0x76>
 800529c:	682a      	ldr	r2, [r5, #0]
 800529e:	0794      	lsls	r4, r2, #30
 80052a0:	d437      	bmi.n	8005312 <HAL_RCC_ClockConfig+0x8a>
 80052a2:	07d0      	lsls	r0, r2, #31
 80052a4:	d43d      	bmi.n	8005322 <HAL_RCC_ClockConfig+0x9a>
 80052a6:	4b4f      	ldr	r3, [pc, #316]	; (80053e4 <HAL_RCC_ClockConfig+0x15c>)
 80052a8:	681a      	ldr	r2, [r3, #0]
 80052aa:	f002 020f 	and.w	r2, r2, #15
 80052ae:	4296      	cmp	r6, r2
 80052b0:	f0c0 8088 	bcc.w	80053c4 <HAL_RCC_ClockConfig+0x13c>
 80052b4:	682a      	ldr	r2, [r5, #0]
 80052b6:	0751      	lsls	r1, r2, #29
 80052b8:	f100 808c 	bmi.w	80053d4 <HAL_RCC_ClockConfig+0x14c>
 80052bc:	0713      	lsls	r3, r2, #28
 80052be:	d507      	bpl.n	80052d0 <HAL_RCC_ClockConfig+0x48>
 80052c0:	4a49      	ldr	r2, [pc, #292]	; (80053e8 <HAL_RCC_ClockConfig+0x160>)
 80052c2:	6929      	ldr	r1, [r5, #16]
 80052c4:	6893      	ldr	r3, [r2, #8]
 80052c6:	f423 4360 	bic.w	r3, r3, #57344	; 0xe000
 80052ca:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 80052ce:	6093      	str	r3, [r2, #8]
 80052d0:	f7ff ffa0 	bl	8005214 <HAL_RCC_GetSysClockFreq>
 80052d4:	4b44      	ldr	r3, [pc, #272]	; (80053e8 <HAL_RCC_ClockConfig+0x160>)
 80052d6:	22f0      	movs	r2, #240	; 0xf0
 80052d8:	689b      	ldr	r3, [r3, #8]
 80052da:	fa92 f2a2 	rbit	r2, r2
 80052de:	fab2 f282 	clz	r2, r2
 80052e2:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 80052e6:	40d3      	lsrs	r3, r2
 80052e8:	4a40      	ldr	r2, [pc, #256]	; (80053ec <HAL_RCC_ClockConfig+0x164>)
 80052ea:	5cd3      	ldrb	r3, [r2, r3]
 80052ec:	40d8      	lsrs	r0, r3
 80052ee:	4b40      	ldr	r3, [pc, #256]	; (80053f0 <HAL_RCC_ClockConfig+0x168>)
 80052f0:	6018      	str	r0, [r3, #0]
 80052f2:	200f      	movs	r0, #15
 80052f4:	f7fe fa52 	bl	800379c <HAL_InitTick>
 80052f8:	2000      	movs	r0, #0
 80052fa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80052fe:	b2ca      	uxtb	r2, r1
 8005300:	701a      	strb	r2, [r3, #0]
 8005302:	681b      	ldr	r3, [r3, #0]
 8005304:	f003 030f 	and.w	r3, r3, #15
 8005308:	4299      	cmp	r1, r3
 800530a:	d0c7      	beq.n	800529c <HAL_RCC_ClockConfig+0x14>
 800530c:	2001      	movs	r0, #1
 800530e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8005312:	4935      	ldr	r1, [pc, #212]	; (80053e8 <HAL_RCC_ClockConfig+0x160>)
 8005314:	68a8      	ldr	r0, [r5, #8]
 8005316:	688b      	ldr	r3, [r1, #8]
 8005318:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 800531c:	4303      	orrs	r3, r0
 800531e:	608b      	str	r3, [r1, #8]
 8005320:	e7bf      	b.n	80052a2 <HAL_RCC_ClockConfig+0x1a>
 8005322:	686a      	ldr	r2, [r5, #4]
 8005324:	4b30      	ldr	r3, [pc, #192]	; (80053e8 <HAL_RCC_ClockConfig+0x160>)
 8005326:	2a01      	cmp	r2, #1
 8005328:	d11e      	bne.n	8005368 <HAL_RCC_ClockConfig+0xe0>
 800532a:	681b      	ldr	r3, [r3, #0]
 800532c:	f413 3f00 	tst.w	r3, #131072	; 0x20000
 8005330:	d0ec      	beq.n	800530c <HAL_RCC_ClockConfig+0x84>
 8005332:	4c2d      	ldr	r4, [pc, #180]	; (80053e8 <HAL_RCC_ClockConfig+0x160>)
 8005334:	68a3      	ldr	r3, [r4, #8]
 8005336:	f023 0303 	bic.w	r3, r3, #3
 800533a:	4313      	orrs	r3, r2
 800533c:	60a3      	str	r3, [r4, #8]
 800533e:	f000 f8c9 	bl	80054d4 <HAL_GetTick>
 8005342:	686b      	ldr	r3, [r5, #4]
 8005344:	2b01      	cmp	r3, #1
 8005346:	4607      	mov	r7, r0
 8005348:	f241 3888 	movw	r8, #5000	; 0x1388
 800534c:	d116      	bne.n	800537c <HAL_RCC_ClockConfig+0xf4>
 800534e:	68a3      	ldr	r3, [r4, #8]
 8005350:	f003 030c 	and.w	r3, r3, #12
 8005354:	2b04      	cmp	r3, #4
 8005356:	d0a6      	beq.n	80052a6 <HAL_RCC_ClockConfig+0x1e>
 8005358:	f000 f8bc 	bl	80054d4 <HAL_GetTick>
 800535c:	1bc0      	subs	r0, r0, r7
 800535e:	4540      	cmp	r0, r8
 8005360:	d9f5      	bls.n	800534e <HAL_RCC_ClockConfig+0xc6>
 8005362:	2003      	movs	r0, #3
 8005364:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8005368:	1e91      	subs	r1, r2, #2
 800536a:	2901      	cmp	r1, #1
 800536c:	681b      	ldr	r3, [r3, #0]
 800536e:	d802      	bhi.n	8005376 <HAL_RCC_ClockConfig+0xee>
 8005370:	f013 7f00 	tst.w	r3, #33554432	; 0x2000000
 8005374:	e7dc      	b.n	8005330 <HAL_RCC_ClockConfig+0xa8>
 8005376:	f013 0f02 	tst.w	r3, #2
 800537a:	e7d9      	b.n	8005330 <HAL_RCC_ClockConfig+0xa8>
 800537c:	2b02      	cmp	r3, #2
 800537e:	d10a      	bne.n	8005396 <HAL_RCC_ClockConfig+0x10e>
 8005380:	68a3      	ldr	r3, [r4, #8]
 8005382:	f003 030c 	and.w	r3, r3, #12
 8005386:	2b08      	cmp	r3, #8
 8005388:	d08d      	beq.n	80052a6 <HAL_RCC_ClockConfig+0x1e>
 800538a:	f000 f8a3 	bl	80054d4 <HAL_GetTick>
 800538e:	1bc0      	subs	r0, r0, r7
 8005390:	4540      	cmp	r0, r8
 8005392:	d9f5      	bls.n	8005380 <HAL_RCC_ClockConfig+0xf8>
 8005394:	e7e5      	b.n	8005362 <HAL_RCC_ClockConfig+0xda>
 8005396:	2b03      	cmp	r3, #3
 8005398:	d10f      	bne.n	80053ba <HAL_RCC_ClockConfig+0x132>
 800539a:	68a3      	ldr	r3, [r4, #8]
 800539c:	f003 030c 	and.w	r3, r3, #12
 80053a0:	2b0c      	cmp	r3, #12
 80053a2:	d080      	beq.n	80052a6 <HAL_RCC_ClockConfig+0x1e>
 80053a4:	f000 f896 	bl	80054d4 <HAL_GetTick>
 80053a8:	1bc0      	subs	r0, r0, r7
 80053aa:	4540      	cmp	r0, r8
 80053ac:	d9f5      	bls.n	800539a <HAL_RCC_ClockConfig+0x112>
 80053ae:	e7d8      	b.n	8005362 <HAL_RCC_ClockConfig+0xda>
 80053b0:	f000 f890 	bl	80054d4 <HAL_GetTick>
 80053b4:	1bc0      	subs	r0, r0, r7
 80053b6:	4540      	cmp	r0, r8
 80053b8:	d8d3      	bhi.n	8005362 <HAL_RCC_ClockConfig+0xda>
 80053ba:	68a3      	ldr	r3, [r4, #8]
 80053bc:	f013 0f0c 	tst.w	r3, #12
 80053c0:	d1f6      	bne.n	80053b0 <HAL_RCC_ClockConfig+0x128>
 80053c2:	e770      	b.n	80052a6 <HAL_RCC_ClockConfig+0x1e>
 80053c4:	b2f2      	uxtb	r2, r6
 80053c6:	701a      	strb	r2, [r3, #0]
 80053c8:	681b      	ldr	r3, [r3, #0]
 80053ca:	f003 030f 	and.w	r3, r3, #15
 80053ce:	429e      	cmp	r6, r3
 80053d0:	d19c      	bne.n	800530c <HAL_RCC_ClockConfig+0x84>
 80053d2:	e76f      	b.n	80052b4 <HAL_RCC_ClockConfig+0x2c>
 80053d4:	4904      	ldr	r1, [pc, #16]	; (80053e8 <HAL_RCC_ClockConfig+0x160>)
 80053d6:	68e8      	ldr	r0, [r5, #12]
 80053d8:	688b      	ldr	r3, [r1, #8]
 80053da:	f423 53e0 	bic.w	r3, r3, #7168	; 0x1c00
 80053de:	4303      	orrs	r3, r0
 80053e0:	608b      	str	r3, [r1, #8]
 80053e2:	e76b      	b.n	80052bc <HAL_RCC_ClockConfig+0x34>
 80053e4:	40023c00 	.word	0x40023c00
 80053e8:	40023800 	.word	0x40023800
 80053ec:	08007d98 	.word	0x08007d98
 80053f0:	200001bc 	.word	0x200001bc

080053f4 <HAL_RCC_GetPCLK1Freq>:
 80053f4:	4b08      	ldr	r3, [pc, #32]	; (8005418 <HAL_RCC_GetPCLK1Freq+0x24>)
 80053f6:	f44f 52e0 	mov.w	r2, #7168	; 0x1c00
 80053fa:	689b      	ldr	r3, [r3, #8]
 80053fc:	fa92 f2a2 	rbit	r2, r2
 8005400:	fab2 f282 	clz	r2, r2
 8005404:	f403 53e0 	and.w	r3, r3, #7168	; 0x1c00
 8005408:	40d3      	lsrs	r3, r2
 800540a:	4a04      	ldr	r2, [pc, #16]	; (800541c <HAL_RCC_GetPCLK1Freq+0x28>)
 800540c:	5cd3      	ldrb	r3, [r2, r3]
 800540e:	4a04      	ldr	r2, [pc, #16]	; (8005420 <HAL_RCC_GetPCLK1Freq+0x2c>)
 8005410:	6810      	ldr	r0, [r2, #0]
 8005412:	40d8      	lsrs	r0, r3
 8005414:	4770      	bx	lr
 8005416:	bf00      	nop
 8005418:	40023800 	.word	0x40023800
 800541c:	08007d98 	.word	0x08007d98
 8005420:	200001bc 	.word	0x200001bc

08005424 <HAL_RCC_GetPCLK2Freq>:
 8005424:	4b08      	ldr	r3, [pc, #32]	; (8005448 <HAL_RCC_GetPCLK2Freq+0x24>)
 8005426:	f44f 4260 	mov.w	r2, #57344	; 0xe000
 800542a:	689b      	ldr	r3, [r3, #8]
 800542c:	fa92 f2a2 	rbit	r2, r2
 8005430:	fab2 f282 	clz	r2, r2
 8005434:	f403 4360 	and.w	r3, r3, #57344	; 0xe000
 8005438:	40d3      	lsrs	r3, r2
 800543a:	4a04      	ldr	r2, [pc, #16]	; (800544c <HAL_RCC_GetPCLK2Freq+0x28>)
 800543c:	5cd3      	ldrb	r3, [r2, r3]
 800543e:	4a04      	ldr	r2, [pc, #16]	; (8005450 <HAL_RCC_GetPCLK2Freq+0x2c>)
 8005440:	6810      	ldr	r0, [r2, #0]
 8005442:	40d8      	lsrs	r0, r3
 8005444:	4770      	bx	lr
 8005446:	bf00      	nop
 8005448:	40023800 	.word	0x40023800
 800544c:	08007d98 	.word	0x08007d98
 8005450:	200001bc 	.word	0x200001bc

08005454 <HAL_RCC_GetClockConfig>:
 8005454:	230f      	movs	r3, #15
 8005456:	6003      	str	r3, [r0, #0]
 8005458:	4b0b      	ldr	r3, [pc, #44]	; (8005488 <HAL_RCC_GetClockConfig+0x34>)
 800545a:	689a      	ldr	r2, [r3, #8]
 800545c:	f002 0203 	and.w	r2, r2, #3
 8005460:	6042      	str	r2, [r0, #4]
 8005462:	689a      	ldr	r2, [r3, #8]
 8005464:	f002 02f0 	and.w	r2, r2, #240	; 0xf0
 8005468:	6082      	str	r2, [r0, #8]
 800546a:	689a      	ldr	r2, [r3, #8]
 800546c:	f402 52e0 	and.w	r2, r2, #7168	; 0x1c00
 8005470:	60c2      	str	r2, [r0, #12]
 8005472:	689b      	ldr	r3, [r3, #8]
 8005474:	08db      	lsrs	r3, r3, #3
 8005476:	f403 53e0 	and.w	r3, r3, #7168	; 0x1c00
 800547a:	6103      	str	r3, [r0, #16]
 800547c:	4b03      	ldr	r3, [pc, #12]	; (800548c <HAL_RCC_GetClockConfig+0x38>)
 800547e:	681b      	ldr	r3, [r3, #0]
 8005480:	f003 030f 	and.w	r3, r3, #15
 8005484:	600b      	str	r3, [r1, #0]
 8005486:	4770      	bx	lr
 8005488:	40023800 	.word	0x40023800
 800548c:	40023c00 	.word	0x40023c00

08005490 <HAL_MspInit>:
 8005490:	4770      	bx	lr
	...

08005494 <HAL_Init>:
 8005494:	b508      	push	{r3, lr}
 8005496:	4b0a      	ldr	r3, [pc, #40]	; (80054c0 <HAL_Init+0x2c>)
 8005498:	681a      	ldr	r2, [r3, #0]
 800549a:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800549e:	601a      	str	r2, [r3, #0]
 80054a0:	681a      	ldr	r2, [r3, #0]
 80054a2:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 80054a6:	601a      	str	r2, [r3, #0]
 80054a8:	681a      	ldr	r2, [r3, #0]
 80054aa:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 80054ae:	601a      	str	r2, [r3, #0]
 80054b0:	200f      	movs	r0, #15
 80054b2:	f7fe f973 	bl	800379c <HAL_InitTick>
 80054b6:	f7ff ffeb 	bl	8005490 <HAL_MspInit>
 80054ba:	2000      	movs	r0, #0
 80054bc:	bd08      	pop	{r3, pc}
 80054be:	bf00      	nop
 80054c0:	40023c00 	.word	0x40023c00

080054c4 <HAL_IncTick>:
 80054c4:	4a02      	ldr	r2, [pc, #8]	; (80054d0 <HAL_IncTick+0xc>)
 80054c6:	6813      	ldr	r3, [r2, #0]
 80054c8:	3301      	adds	r3, #1
 80054ca:	6013      	str	r3, [r2, #0]
 80054cc:	4770      	bx	lr
 80054ce:	bf00      	nop
 80054d0:	20003000 	.word	0x20003000

080054d4 <HAL_GetTick>:
 80054d4:	4b01      	ldr	r3, [pc, #4]	; (80054dc <HAL_GetTick+0x8>)
 80054d6:	6818      	ldr	r0, [r3, #0]
 80054d8:	4770      	bx	lr
 80054da:	bf00      	nop
 80054dc:	20003000 	.word	0x20003000

080054e0 <mbed::Ticker::handler()>:
 80054e0:	6943      	ldr	r3, [r0, #20]
 80054e2:	6841      	ldr	r1, [r0, #4]
 80054e4:	b510      	push	{r4, lr}
 80054e6:	4604      	mov	r4, r0
 80054e8:	4419      	add	r1, r3
 80054ea:	f000 fa73 	bl	80059d4 <mbed::TimerEvent::insert(unsigned long)>
 80054ee:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80054f0:	f104 0018 	add.w	r0, r4, #24
 80054f4:	681b      	ldr	r3, [r3, #0]
 80054f6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80054fa:	4718      	bx	r3

080054fc <mbed::Ticker::setup(unsigned long)>:
 80054fc:	b538      	push	{r3, r4, r5, lr}
 80054fe:	4604      	mov	r4, r0
 8005500:	460d      	mov	r5, r1
 8005502:	f7fc fe75 	bl	80021f0 <core_util_critical_section_enter>
 8005506:	4620      	mov	r0, r4
 8005508:	f000 fa6a 	bl	80059e0 <mbed::TimerEvent::remove()>
 800550c:	6165      	str	r5, [r4, #20]
 800550e:	6920      	ldr	r0, [r4, #16]
 8005510:	f7fc fde7 	bl	80020e2 <ticker_read>
 8005514:	1829      	adds	r1, r5, r0
 8005516:	4620      	mov	r0, r4
 8005518:	f000 fa5c 	bl	80059d4 <mbed::TimerEvent::insert(unsigned long)>
 800551c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8005520:	f7fc be7c 	b.w	800221c <core_util_critical_section_exit>

08005524 <mbed::Ticker::detach()>:
 8005524:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8005526:	4606      	mov	r6, r0
 8005528:	f106 0418 	add.w	r4, r6, #24
 800552c:	f7fc fe60 	bl	80021f0 <core_util_critical_section_enter>
 8005530:	466d      	mov	r5, sp
 8005532:	4630      	mov	r0, r6
 8005534:	f000 fa54 	bl	80059e0 <mbed::TimerEvent::remove()>
 8005538:	2300      	movs	r3, #0
 800553a:	42ac      	cmp	r4, r5
 800553c:	9303      	str	r3, [sp, #12]
 800553e:	d00b      	beq.n	8005558 <mbed::Ticker::detach()+0x34>
 8005540:	4620      	mov	r0, r4
 8005542:	f7fa ffed 	bl	8000520 <mbed::Callback<void ()>::~Callback()>
 8005546:	b13c      	cbz	r4, 8005558 <mbed::Ticker::detach()+0x34>
 8005548:	9b03      	ldr	r3, [sp, #12]
 800554a:	b11b      	cbz	r3, 8005554 <mbed::Ticker::detach()+0x30>
 800554c:	685b      	ldr	r3, [r3, #4]
 800554e:	4669      	mov	r1, sp
 8005550:	4620      	mov	r0, r4
 8005552:	4798      	blx	r3
 8005554:	9b03      	ldr	r3, [sp, #12]
 8005556:	6273      	str	r3, [r6, #36]	; 0x24
 8005558:	4628      	mov	r0, r5
 800555a:	f7fa ffe1 	bl	8000520 <mbed::Callback<void ()>::~Callback()>
 800555e:	f7fc fe5d 	bl	800221c <core_util_critical_section_exit>
 8005562:	b004      	add	sp, #16
 8005564:	bd70      	pop	{r4, r5, r6, pc}

08005566 <mbed::Timer::start()>:
 8005566:	b510      	push	{r4, lr}
 8005568:	4604      	mov	r4, r0
 800556a:	f7fc fe41 	bl	80021f0 <core_util_critical_section_enter>
 800556e:	6823      	ldr	r3, [r4, #0]
 8005570:	b92b      	cbnz	r3, 800557e <mbed::Timer::start()+0x18>
 8005572:	68e0      	ldr	r0, [r4, #12]
 8005574:	f7fc fdb5 	bl	80020e2 <ticker_read>
 8005578:	2301      	movs	r3, #1
 800557a:	6060      	str	r0, [r4, #4]
 800557c:	6023      	str	r3, [r4, #0]
 800557e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8005582:	f7fc be4b 	b.w	800221c <core_util_critical_section_exit>

08005586 <mbed::Timer::slicetime()>:
 8005586:	b538      	push	{r3, r4, r5, lr}
 8005588:	4605      	mov	r5, r0
 800558a:	f7fc fe31 	bl	80021f0 <core_util_critical_section_enter>
 800558e:	682c      	ldr	r4, [r5, #0]
 8005590:	b124      	cbz	r4, 800559c <mbed::Timer::slicetime()+0x16>
 8005592:	68e8      	ldr	r0, [r5, #12]
 8005594:	f7fc fda5 	bl	80020e2 <ticker_read>
 8005598:	686c      	ldr	r4, [r5, #4]
 800559a:	1b04      	subs	r4, r0, r4
 800559c:	f7fc fe3e 	bl	800221c <core_util_critical_section_exit>
 80055a0:	4620      	mov	r0, r4
 80055a2:	bd38      	pop	{r3, r4, r5, pc}

080055a4 <mbed::Timer::read_us()>:
 80055a4:	b538      	push	{r3, r4, r5, lr}
 80055a6:	4605      	mov	r5, r0
 80055a8:	f7fc fe22 	bl	80021f0 <core_util_critical_section_enter>
 80055ac:	4628      	mov	r0, r5
 80055ae:	68ac      	ldr	r4, [r5, #8]
 80055b0:	f7ff ffe9 	bl	8005586 <mbed::Timer::slicetime()>
 80055b4:	4404      	add	r4, r0
 80055b6:	f7fc fe31 	bl	800221c <core_util_critical_section_exit>
 80055ba:	4620      	mov	r0, r4
 80055bc:	bd38      	pop	{r3, r4, r5, pc}

080055be <mbed::Timer::read_ms()>:
 80055be:	b508      	push	{r3, lr}
 80055c0:	f7ff fff0 	bl	80055a4 <mbed::Timer::read_us()>
 80055c4:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 80055c8:	fb90 f0f3 	sdiv	r0, r0, r3
 80055cc:	bd08      	pop	{r3, pc}

080055ce <mbed::Timer::reset()>:
 80055ce:	b510      	push	{r4, lr}
 80055d0:	4604      	mov	r4, r0
 80055d2:	f7fc fe0d 	bl	80021f0 <core_util_critical_section_enter>
 80055d6:	68e0      	ldr	r0, [r4, #12]
 80055d8:	f7fc fd83 	bl	80020e2 <ticker_read>
 80055dc:	2300      	movs	r3, #0
 80055de:	6060      	str	r0, [r4, #4]
 80055e0:	60a3      	str	r3, [r4, #8]
 80055e2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80055e6:	f7fc be19 	b.w	800221c <core_util_critical_section_exit>

080055ea <mbed::Timer::Timer()>:
 80055ea:	2300      	movs	r3, #0
 80055ec:	b510      	push	{r4, lr}
 80055ee:	6003      	str	r3, [r0, #0]
 80055f0:	6043      	str	r3, [r0, #4]
 80055f2:	6083      	str	r3, [r0, #8]
 80055f4:	4604      	mov	r4, r0
 80055f6:	f7fc fcfd 	bl	8001ff4 <get_us_ticker_data>
 80055fa:	60e0      	str	r0, [r4, #12]
 80055fc:	4620      	mov	r0, r4
 80055fe:	f7ff ffe6 	bl	80055ce <mbed::Timer::reset()>
 8005602:	4620      	mov	r0, r4
 8005604:	bd10      	pop	{r4, pc}

08005606 <mbed::RawSerial::lock()>:
 8005606:	4770      	bx	lr

08005608 <mbed::RawSerial::RawSerial(PinName, PinName, int)>:
 8005608:	b510      	push	{r4, lr}
 800560a:	4604      	mov	r4, r0
 800560c:	f000 f92c 	bl	8005868 <mbed::SerialBase::SerialBase(PinName, PinName, int)>
 8005610:	4b01      	ldr	r3, [pc, #4]	; (8005618 <mbed::RawSerial::RawSerial(PinName, PinName, int)+0x10>)
 8005612:	6023      	str	r3, [r4, #0]
 8005614:	4620      	mov	r0, r4
 8005616:	bd10      	pop	{r4, pc}
 8005618:	08007dc4 	.word	0x08007dc4

0800561c <mbed::RawSerial::~RawSerial()>:
 800561c:	b510      	push	{r4, lr}
 800561e:	4b03      	ldr	r3, [pc, #12]	; (800562c <mbed::RawSerial::~RawSerial()+0x10>)
 8005620:	6003      	str	r3, [r0, #0]
 8005622:	4604      	mov	r4, r0
 8005624:	f7fc fb28 	bl	8001c78 <mbed::SerialBase::~SerialBase()>
 8005628:	4620      	mov	r0, r4
 800562a:	bd10      	pop	{r4, pc}
 800562c:	08007dc4 	.word	0x08007dc4

08005630 <mbed::RawSerial::~RawSerial()>:
 8005630:	b510      	push	{r4, lr}
 8005632:	4604      	mov	r4, r0
 8005634:	f7ff fff2 	bl	800561c <mbed::RawSerial::~RawSerial()>
 8005638:	4620      	mov	r0, r4
 800563a:	f000 fb5f 	bl	8005cfc <operator delete(void*)>
 800563e:	4620      	mov	r0, r4
 8005640:	bd10      	pop	{r4, pc}

08005642 <mbed::donothing()>:
 8005642:	4770      	bx	lr

08005644 <mbed::InterruptIn::read()>:
 8005644:	6883      	ldr	r3, [r0, #8]
 8005646:	681a      	ldr	r2, [r3, #0]
 8005648:	6843      	ldr	r3, [r0, #4]
 800564a:	421a      	tst	r2, r3
 800564c:	bf14      	ite	ne
 800564e:	2001      	movne	r0, #1
 8005650:	2000      	moveq	r0, #0
 8005652:	4770      	bx	lr

08005654 <mbed::InterruptIn::~InterruptIn()>:
 8005654:	b510      	push	{r4, lr}
 8005656:	4b08      	ldr	r3, [pc, #32]	; (8005678 <mbed::InterruptIn::~InterruptIn()+0x24>)
 8005658:	4604      	mov	r4, r0
 800565a:	f840 3b20 	str.w	r3, [r0], #32
 800565e:	f7fe fa71 	bl	8003b44 <gpio_irq_free>
 8005662:	f104 0040 	add.w	r0, r4, #64	; 0x40
 8005666:	f7fa ff5b 	bl	8000520 <mbed::Callback<void ()>::~Callback()>
 800566a:	f104 0030 	add.w	r0, r4, #48	; 0x30
 800566e:	f7fa ff57 	bl	8000520 <mbed::Callback<void ()>::~Callback()>
 8005672:	4620      	mov	r0, r4
 8005674:	bd10      	pop	{r4, pc}
 8005676:	bf00      	nop
 8005678:	08007ddc 	.word	0x08007ddc

0800567c <mbed::InterruptIn::~InterruptIn()>:
 800567c:	b510      	push	{r4, lr}
 800567e:	4604      	mov	r4, r0
 8005680:	f7ff ffe8 	bl	8005654 <mbed::InterruptIn::~InterruptIn()>
 8005684:	4620      	mov	r0, r4
 8005686:	f000 fb39 	bl	8005cfc <operator delete(void*)>
 800568a:	4620      	mov	r0, r4
 800568c:	bd10      	pop	{r4, pc}

0800568e <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)>:
 800568e:	4288      	cmp	r0, r1
 8005690:	b538      	push	{r3, r4, r5, lr}
 8005692:	4604      	mov	r4, r0
 8005694:	460d      	mov	r5, r1
 8005696:	d00a      	beq.n	80056ae <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)+0x20>
 8005698:	f7fa ff42 	bl	8000520 <mbed::Callback<void ()>::~Callback()>
 800569c:	b13c      	cbz	r4, 80056ae <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)+0x20>
 800569e:	68eb      	ldr	r3, [r5, #12]
 80056a0:	b11b      	cbz	r3, 80056aa <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)+0x1c>
 80056a2:	685b      	ldr	r3, [r3, #4]
 80056a4:	4629      	mov	r1, r5
 80056a6:	4620      	mov	r0, r4
 80056a8:	4798      	blx	r3
 80056aa:	68eb      	ldr	r3, [r5, #12]
 80056ac:	60e3      	str	r3, [r4, #12]
 80056ae:	4620      	mov	r0, r4
 80056b0:	bd38      	pop	{r3, r4, r5, pc}
	...

080056b4 <mbed::InterruptIn::InterruptIn(PinName)>:
 80056b4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80056b8:	4605      	mov	r5, r0
 80056ba:	4b1f      	ldr	r3, [pc, #124]	; (8005738 <mbed::InterruptIn::InterruptIn(PinName)+0x84>)
 80056bc:	f845 3b04 	str.w	r3, [r5], #4
 80056c0:	4604      	mov	r4, r0
 80056c2:	b085      	sub	sp, #20
 80056c4:	460e      	mov	r6, r1
 80056c6:	f104 0720 	add.w	r7, r4, #32
 80056ca:	221c      	movs	r2, #28
 80056cc:	2100      	movs	r1, #0
 80056ce:	4628      	mov	r0, r5
 80056d0:	f001 fa63 	bl	8006b9a <memset>
 80056d4:	2210      	movs	r2, #16
 80056d6:	2100      	movs	r1, #0
 80056d8:	4638      	mov	r0, r7
 80056da:	f001 fa5e 	bl	8006b9a <memset>
 80056de:	2300      	movs	r3, #0
 80056e0:	63e3      	str	r3, [r4, #60]	; 0x3c
 80056e2:	64e3      	str	r3, [r4, #76]	; 0x4c
 80056e4:	4669      	mov	r1, sp
 80056e6:	f8df 9058 	ldr.w	r9, [pc, #88]	; 8005740 <mbed::InterruptIn::InterruptIn(PinName)+0x8c>
 80056ea:	f8df 8058 	ldr.w	r8, [pc, #88]	; 8005744 <mbed::InterruptIn::InterruptIn(PinName)+0x90>
 80056ee:	f8cd 9000 	str.w	r9, [sp]
 80056f2:	f104 0030 	add.w	r0, r4, #48	; 0x30
 80056f6:	f8cd 800c 	str.w	r8, [sp, #12]
 80056fa:	f7ff ffc8 	bl	800568e <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)>
 80056fe:	4668      	mov	r0, sp
 8005700:	f7fa ff0e 	bl	8000520 <mbed::Callback<void ()>::~Callback()>
 8005704:	4669      	mov	r1, sp
 8005706:	f104 0040 	add.w	r0, r4, #64	; 0x40
 800570a:	f8cd 9000 	str.w	r9, [sp]
 800570e:	f8cd 800c 	str.w	r8, [sp, #12]
 8005712:	f7ff ffbc 	bl	800568e <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)>
 8005716:	4668      	mov	r0, sp
 8005718:	f7fa ff02 	bl	8000520 <mbed::Callback<void ()>::~Callback()>
 800571c:	4623      	mov	r3, r4
 800571e:	4a07      	ldr	r2, [pc, #28]	; (800573c <mbed::InterruptIn::InterruptIn(PinName)+0x88>)
 8005720:	4631      	mov	r1, r6
 8005722:	4638      	mov	r0, r7
 8005724:	f7fe f95a 	bl	80039dc <gpio_irq_init>
 8005728:	4628      	mov	r0, r5
 800572a:	4631      	mov	r1, r6
 800572c:	f7fc fc4b 	bl	8001fc6 <gpio_init_in>
 8005730:	4620      	mov	r0, r4
 8005732:	b005      	add	sp, #20
 8005734:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8005738:	08007ddc 	.word	0x08007ddc
 800573c:	080057e7 	.word	0x080057e7
 8005740:	08005643 	.word	0x08005643
 8005744:	080075e0 	.word	0x080075e0

08005748 <mbed::InterruptIn::rise(mbed::Callback<void ()>)>:
 8005748:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800574a:	460e      	mov	r6, r1
 800574c:	4604      	mov	r4, r0
 800574e:	f7fc fd4f 	bl	80021f0 <core_util_critical_section_enter>
 8005752:	68f5      	ldr	r5, [r6, #12]
 8005754:	f104 0030 	add.w	r0, r4, #48	; 0x30
 8005758:	3420      	adds	r4, #32
 800575a:	b15d      	cbz	r5, 8005774 <mbed::InterruptIn::rise(mbed::Callback<void ()>)+0x2c>
 800575c:	4631      	mov	r1, r6
 800575e:	f7ff ff96 	bl	800568e <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)>
 8005762:	2201      	movs	r2, #1
 8005764:	2101      	movs	r1, #1
 8005766:	4620      	mov	r0, r4
 8005768:	f7fe f8dc 	bl	8003924 <gpio_irq_set>
 800576c:	f7fc fd56 	bl	800221c <core_util_critical_section_exit>
 8005770:	b004      	add	sp, #16
 8005772:	bd70      	pop	{r4, r5, r6, pc}
 8005774:	4b05      	ldr	r3, [pc, #20]	; (800578c <mbed::InterruptIn::rise(mbed::Callback<void ()>)+0x44>)
 8005776:	9300      	str	r3, [sp, #0]
 8005778:	4669      	mov	r1, sp
 800577a:	4b05      	ldr	r3, [pc, #20]	; (8005790 <mbed::InterruptIn::rise(mbed::Callback<void ()>)+0x48>)
 800577c:	9303      	str	r3, [sp, #12]
 800577e:	f7ff ff86 	bl	800568e <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)>
 8005782:	4668      	mov	r0, sp
 8005784:	f7fa fecc 	bl	8000520 <mbed::Callback<void ()>::~Callback()>
 8005788:	462a      	mov	r2, r5
 800578a:	e7eb      	b.n	8005764 <mbed::InterruptIn::rise(mbed::Callback<void ()>)+0x1c>
 800578c:	08005643 	.word	0x08005643
 8005790:	080075e0 	.word	0x080075e0

08005794 <mbed::InterruptIn::fall(mbed::Callback<void ()>)>:
 8005794:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8005796:	460e      	mov	r6, r1
 8005798:	4604      	mov	r4, r0
 800579a:	f7fc fd29 	bl	80021f0 <core_util_critical_section_enter>
 800579e:	68f5      	ldr	r5, [r6, #12]
 80057a0:	f104 0040 	add.w	r0, r4, #64	; 0x40
 80057a4:	3420      	adds	r4, #32
 80057a6:	b15d      	cbz	r5, 80057c0 <mbed::InterruptIn::fall(mbed::Callback<void ()>)+0x2c>
 80057a8:	4631      	mov	r1, r6
 80057aa:	f7ff ff70 	bl	800568e <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)>
 80057ae:	2201      	movs	r2, #1
 80057b0:	2102      	movs	r1, #2
 80057b2:	4620      	mov	r0, r4
 80057b4:	f7fe f8b6 	bl	8003924 <gpio_irq_set>
 80057b8:	f7fc fd30 	bl	800221c <core_util_critical_section_exit>
 80057bc:	b004      	add	sp, #16
 80057be:	bd70      	pop	{r4, r5, r6, pc}
 80057c0:	4b05      	ldr	r3, [pc, #20]	; (80057d8 <mbed::InterruptIn::fall(mbed::Callback<void ()>)+0x44>)
 80057c2:	9300      	str	r3, [sp, #0]
 80057c4:	4669      	mov	r1, sp
 80057c6:	4b05      	ldr	r3, [pc, #20]	; (80057dc <mbed::InterruptIn::fall(mbed::Callback<void ()>)+0x48>)
 80057c8:	9303      	str	r3, [sp, #12]
 80057ca:	f7ff ff60 	bl	800568e <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)>
 80057ce:	4668      	mov	r0, sp
 80057d0:	f7fa fea6 	bl	8000520 <mbed::Callback<void ()>::~Callback()>
 80057d4:	462a      	mov	r2, r5
 80057d6:	e7eb      	b.n	80057b0 <mbed::InterruptIn::fall(mbed::Callback<void ()>)+0x1c>
 80057d8:	08005643 	.word	0x08005643
 80057dc:	080075e0 	.word	0x080075e0

080057e0 <mbed::Callback<void ()>::call() const>:
 80057e0:	68c3      	ldr	r3, [r0, #12]
 80057e2:	681b      	ldr	r3, [r3, #0]
 80057e4:	4718      	bx	r3

080057e6 <mbed::InterruptIn::_irq_handler(unsigned long, gpio_irq_event)>:
 80057e6:	2901      	cmp	r1, #1
 80057e8:	b508      	push	{r3, lr}
 80057ea:	d002      	beq.n	80057f2 <mbed::InterruptIn::_irq_handler(unsigned long, gpio_irq_event)+0xc>
 80057ec:	2902      	cmp	r1, #2
 80057ee:	d004      	beq.n	80057fa <mbed::InterruptIn::_irq_handler(unsigned long, gpio_irq_event)+0x14>
 80057f0:	bd08      	pop	{r3, pc}
 80057f2:	3030      	adds	r0, #48	; 0x30
 80057f4:	f7ff fff4 	bl	80057e0 <mbed::Callback<void ()>::call() const>
 80057f8:	bd08      	pop	{r3, pc}
 80057fa:	3040      	adds	r0, #64	; 0x40
 80057fc:	e7fa      	b.n	80057f4 <mbed::InterruptIn::_irq_handler(unsigned long, gpio_irq_event)+0xe>

080057fe <mbed::donothing()>:
 80057fe:	4770      	bx	lr

08005800 <mbed::SerialBase::lock()>:
 8005800:	4770      	bx	lr

08005802 <mbed::SerialBase::unlock()>:
 8005802:	4770      	bx	lr

08005804 <mbed::SerialBase::_irq_handler(unsigned long, SerialIrq)>:
 8005804:	eb00 1201 	add.w	r2, r0, r1, lsl #4
 8005808:	f102 0098 	add.w	r0, r2, #152	; 0x98
 800580c:	f8d2 30a4 	ldr.w	r3, [r2, #164]	; 0xa4
 8005810:	681b      	ldr	r3, [r3, #0]
 8005812:	4718      	bx	r3

08005814 <CThunk<mbed::SerialBase>::trampoline(mbed::SerialBase*, void*, void (mbed::SerialBase::**)(void*))>:
 8005814:	b410      	push	{r4}
 8005816:	b180      	cbz	r0, 800583a <CThunk<mbed::SerialBase>::trampoline(mbed::SerialBase*, void*, void (mbed::SerialBase::**)(void*))+0x26>
 8005818:	6814      	ldr	r4, [r2, #0]
 800581a:	6853      	ldr	r3, [r2, #4]
 800581c:	b90c      	cbnz	r4, 8005822 <CThunk<mbed::SerialBase>::trampoline(mbed::SerialBase*, void*, void (mbed::SerialBase::**)(void*))+0xe>
 800581e:	07da      	lsls	r2, r3, #31
 8005820:	d50b      	bpl.n	800583a <CThunk<mbed::SerialBase>::trampoline(mbed::SerialBase*, void*, void (mbed::SerialBase::**)(void*))+0x26>
 8005822:	f013 0f01 	tst.w	r3, #1
 8005826:	ea4f 0363 	mov.w	r3, r3, asr #1
 800582a:	bf1c      	itt	ne
 800582c:	58c2      	ldrne	r2, [r0, r3]
 800582e:	5914      	ldrne	r4, [r2, r4]
 8005830:	4418      	add	r0, r3
 8005832:	4623      	mov	r3, r4
 8005834:	f85d 4b04 	ldr.w	r4, [sp], #4
 8005838:	4718      	bx	r3
 800583a:	f85d 4b04 	ldr.w	r4, [sp], #4
 800583e:	4770      	bx	lr

08005840 <mbed::SerialBase::baud(int)>:
 8005840:	b570      	push	{r4, r5, r6, lr}
 8005842:	4605      	mov	r5, r0
 8005844:	4604      	mov	r4, r0
 8005846:	f855 3b4c 	ldr.w	r3, [r5], #76
 800584a:	460e      	mov	r6, r1
 800584c:	681b      	ldr	r3, [r3, #0]
 800584e:	4798      	blx	r3
 8005850:	4628      	mov	r0, r5
 8005852:	4631      	mov	r1, r6
 8005854:	f7fe fe82 	bl	800455c <serial_baud>
 8005858:	6823      	ldr	r3, [r4, #0]
 800585a:	f8c4 60b8 	str.w	r6, [r4, #184]	; 0xb8
 800585e:	4620      	mov	r0, r4
 8005860:	685b      	ldr	r3, [r3, #4]
 8005862:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8005866:	4718      	bx	r3

08005868 <mbed::SerialBase::SerialBase(PinName, PinName, int)>:
 8005868:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800586c:	b087      	sub	sp, #28
 800586e:	2500      	movs	r5, #0
 8005870:	4691      	mov	r9, r2
 8005872:	9500      	str	r5, [sp, #0]
 8005874:	4602      	mov	r2, r0
 8005876:	9501      	str	r5, [sp, #4]
 8005878:	4604      	mov	r4, r0
 800587a:	4688      	mov	r8, r1
 800587c:	461f      	mov	r7, r3
 800587e:	e89d 0003 	ldmia.w	sp, {r0, r1}
 8005882:	4b27      	ldr	r3, [pc, #156]	; (8005920 <mbed::SerialBase::SerialBase(PinName, PinName, int)+0xb8>)
 8005884:	f842 3b08 	str.w	r3, [r2], #8
 8005888:	4b26      	ldr	r3, [pc, #152]	; (8005924 <mbed::SerialBase::SerialBase(PinName, PinName, int)+0xbc>)
 800588a:	e882 0003 	stmia.w	r2, {r0, r1}
 800588e:	6123      	str	r3, [r4, #16]
 8005890:	f248 0307 	movw	r3, #32775	; 0x8007
 8005894:	6163      	str	r3, [r4, #20]
 8005896:	4b24      	ldr	r3, [pc, #144]	; (8005928 <mbed::SerialBase::SerialBase(PinName, PinName, int)+0xc0>)
 8005898:	61e5      	str	r5, [r4, #28]
 800589a:	61a4      	str	r4, [r4, #24]
 800589c:	6222      	str	r2, [r4, #32]
 800589e:	6263      	str	r3, [r4, #36]	; 0x24
 80058a0:	f3bf 8f6f 	isb	sy
 80058a4:	f3bf 8f4f 	dsb	sy
 80058a8:	f104 064c 	add.w	r6, r4, #76	; 0x4c
 80058ac:	224c      	movs	r2, #76	; 0x4c
 80058ae:	6365      	str	r5, [r4, #52]	; 0x34
 80058b0:	6465      	str	r5, [r4, #68]	; 0x44
 80058b2:	f884 5048 	strb.w	r5, [r4, #72]	; 0x48
 80058b6:	f884 5049 	strb.w	r5, [r4, #73]	; 0x49
 80058ba:	4630      	mov	r0, r6
 80058bc:	f001 f96d 	bl	8006b9a <memset>
 80058c0:	a902      	add	r1, sp, #8
 80058c2:	f8c4 50a4 	str.w	r5, [r4, #164]	; 0xa4
 80058c6:	f8c4 50b4 	str.w	r5, [r4, #180]	; 0xb4
 80058ca:	f8c4 70b8 	str.w	r7, [r4, #184]	; 0xb8
 80058ce:	4d17      	ldr	r5, [pc, #92]	; (800592c <mbed::SerialBase::SerialBase(PinName, PinName, int)+0xc4>)
 80058d0:	4f17      	ldr	r7, [pc, #92]	; (8005930 <mbed::SerialBase::SerialBase(PinName, PinName, int)+0xc8>)
 80058d2:	9702      	str	r7, [sp, #8]
 80058d4:	f104 0098 	add.w	r0, r4, #152	; 0x98
 80058d8:	9505      	str	r5, [sp, #20]
 80058da:	f7ff fed8 	bl	800568e <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)>
 80058de:	a802      	add	r0, sp, #8
 80058e0:	f7fa fe1e 	bl	8000520 <mbed::Callback<void ()>::~Callback()>
 80058e4:	a902      	add	r1, sp, #8
 80058e6:	f104 00a8 	add.w	r0, r4, #168	; 0xa8
 80058ea:	9702      	str	r7, [sp, #8]
 80058ec:	9505      	str	r5, [sp, #20]
 80058ee:	f7ff fece 	bl	800568e <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)>
 80058f2:	a802      	add	r0, sp, #8
 80058f4:	f7fa fe14 	bl	8000520 <mbed::Callback<void ()>::~Callback()>
 80058f8:	464a      	mov	r2, r9
 80058fa:	4641      	mov	r1, r8
 80058fc:	4630      	mov	r0, r6
 80058fe:	f7fe fd8f 	bl	8004420 <serial_init>
 8005902:	f8d4 10b8 	ldr.w	r1, [r4, #184]	; 0xb8
 8005906:	4630      	mov	r0, r6
 8005908:	f7fe fe28 	bl	800455c <serial_baud>
 800590c:	4630      	mov	r0, r6
 800590e:	4622      	mov	r2, r4
 8005910:	4908      	ldr	r1, [pc, #32]	; (8005934 <mbed::SerialBase::SerialBase(PinName, PinName, int)+0xcc>)
 8005912:	f7fe fe27 	bl	8004564 <serial_irq_handler>
 8005916:	4620      	mov	r0, r4
 8005918:	b007      	add	sp, #28
 800591a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800591e:	bf00      	nop
 8005920:	08007dec 	.word	0x08007dec
 8005924:	e890a001 	.word	0xe890a001
 8005928:	08005815 	.word	0x08005815
 800592c:	080075e0 	.word	0x080075e0
 8005930:	080057ff 	.word	0x080057ff
 8005934:	08005805 	.word	0x08005805

08005938 <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)>:
 8005938:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 800593c:	4605      	mov	r5, r0
 800593e:	4688      	mov	r8, r1
 8005940:	f855 3b4c 	ldr.w	r3, [r5], #76
 8005944:	681b      	ldr	r3, [r3, #0]
 8005946:	4604      	mov	r4, r0
 8005948:	4616      	mov	r6, r2
 800594a:	4798      	blx	r3
 800594c:	f7fc fc50 	bl	80021f0 <core_util_critical_section_enter>
 8005950:	f8d8 700c 	ldr.w	r7, [r8, #12]
 8005954:	0130      	lsls	r0, r6, #4
 8005956:	b197      	cbz	r7, 800597e <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)+0x46>
 8005958:	3098      	adds	r0, #152	; 0x98
 800595a:	4641      	mov	r1, r8
 800595c:	4420      	add	r0, r4
 800595e:	f7ff fe96 	bl	800568e <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)>
 8005962:	2201      	movs	r2, #1
 8005964:	4631      	mov	r1, r6
 8005966:	4628      	mov	r0, r5
 8005968:	f7fe fe08 	bl	800457c <serial_irq_set>
 800596c:	f7fc fc56 	bl	800221c <core_util_critical_section_exit>
 8005970:	6823      	ldr	r3, [r4, #0]
 8005972:	4620      	mov	r0, r4
 8005974:	685b      	ldr	r3, [r3, #4]
 8005976:	4798      	blx	r3
 8005978:	b004      	add	sp, #16
 800597a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800597e:	4b07      	ldr	r3, [pc, #28]	; (800599c <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)+0x64>)
 8005980:	9300      	str	r3, [sp, #0]
 8005982:	3098      	adds	r0, #152	; 0x98
 8005984:	4b06      	ldr	r3, [pc, #24]	; (80059a0 <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)+0x68>)
 8005986:	9303      	str	r3, [sp, #12]
 8005988:	4669      	mov	r1, sp
 800598a:	4420      	add	r0, r4
 800598c:	f7ff fe7f 	bl	800568e <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)>
 8005990:	4668      	mov	r0, sp
 8005992:	f7fa fdc5 	bl	8000520 <mbed::Callback<void ()>::~Callback()>
 8005996:	463a      	mov	r2, r7
 8005998:	e7e4      	b.n	8005964 <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)+0x2c>
 800599a:	bf00      	nop
 800599c:	080057ff 	.word	0x080057ff
 80059a0:	080075e0 	.word	0x080075e0

080059a4 <mbed::TimerEvent::irq(unsigned long)>:
 80059a4:	6803      	ldr	r3, [r0, #0]
 80059a6:	689b      	ldr	r3, [r3, #8]
 80059a8:	4718      	bx	r3
	...

080059ac <mbed::TimerEvent::TimerEvent()>:
 80059ac:	4b07      	ldr	r3, [pc, #28]	; (80059cc <mbed::TimerEvent::TimerEvent()+0x20>)
 80059ae:	b510      	push	{r4, lr}
 80059b0:	6003      	str	r3, [r0, #0]
 80059b2:	2300      	movs	r3, #0
 80059b4:	6043      	str	r3, [r0, #4]
 80059b6:	6083      	str	r3, [r0, #8]
 80059b8:	60c3      	str	r3, [r0, #12]
 80059ba:	4604      	mov	r4, r0
 80059bc:	f7fc fb1a 	bl	8001ff4 <get_us_ticker_data>
 80059c0:	4903      	ldr	r1, [pc, #12]	; (80059d0 <mbed::TimerEvent::TimerEvent()+0x24>)
 80059c2:	6120      	str	r0, [r4, #16]
 80059c4:	f7fc fb20 	bl	8002008 <ticker_set_handler>
 80059c8:	4620      	mov	r0, r4
 80059ca:	bd10      	pop	{r4, pc}
 80059cc:	08007e04 	.word	0x08007e04
 80059d0:	080059a5 	.word	0x080059a5

080059d4 <mbed::TimerEvent::insert(unsigned long)>:
 80059d4:	4603      	mov	r3, r0
 80059d6:	460a      	mov	r2, r1
 80059d8:	1d01      	adds	r1, r0, #4
 80059da:	6900      	ldr	r0, [r0, #16]
 80059dc:	f7fc bb40 	b.w	8002060 <ticker_insert_event>

080059e0 <mbed::TimerEvent::remove()>:
 80059e0:	1d01      	adds	r1, r0, #4
 80059e2:	6900      	ldr	r0, [r0, #16]
 80059e4:	f7fc bb5d 	b.w	80020a2 <ticker_remove_event>

080059e8 <mbed::TimerEvent::~TimerEvent()>:
 80059e8:	b510      	push	{r4, lr}
 80059ea:	4b03      	ldr	r3, [pc, #12]	; (80059f8 <mbed::TimerEvent::~TimerEvent()+0x10>)
 80059ec:	6003      	str	r3, [r0, #0]
 80059ee:	4604      	mov	r4, r0
 80059f0:	f7ff fff6 	bl	80059e0 <mbed::TimerEvent::remove()>
 80059f4:	4620      	mov	r0, r4
 80059f6:	bd10      	pop	{r4, pc}
 80059f8:	08007e04 	.word	0x08007e04

080059fc <mbed::CircularBuffer<mbed::Transaction<mbed::SPI>, 2ul, unsigned long>::~CircularBuffer()>:
 80059fc:	b538      	push	{r3, r4, r5, lr}
 80059fe:	4604      	mov	r4, r0
 8005a00:	b148      	cbz	r0, 8005a16 <mbed::CircularBuffer<mbed::Transaction<mbed::SPI>, 2ul, unsigned long>::~CircularBuffer()+0x1a>
 8005a02:	3058      	adds	r0, #88	; 0x58
 8005a04:	42a0      	cmp	r0, r4
 8005a06:	d006      	beq.n	8005a16 <mbed::CircularBuffer<mbed::Transaction<mbed::SPI>, 2ul, unsigned long>::~CircularBuffer()+0x1a>
 8005a08:	f1a0 052c 	sub.w	r5, r0, #44	; 0x2c
 8005a0c:	3814      	subs	r0, #20
 8005a0e:	f7fc f92a 	bl	8001c66 <mbed::Callback<void (int)>::~Callback()>
 8005a12:	4628      	mov	r0, r5
 8005a14:	e7f6      	b.n	8005a04 <mbed::CircularBuffer<mbed::Transaction<mbed::SPI>, 2ul, unsigned long>::~CircularBuffer()+0x8>
 8005a16:	4620      	mov	r0, r4
 8005a18:	bd38      	pop	{r3, r4, r5, pc}
	...

08005a1c <_GLOBAL__sub_I__ZN4mbed3SPI19_transaction_bufferE>:
 8005a1c:	b570      	push	{r4, r5, r6, lr}
 8005a1e:	4c0e      	ldr	r4, [pc, #56]	; (8005a58 <_GLOBAL__sub_I__ZN4mbed3SPI19_transaction_bufferE+0x3c>)
 8005a20:	4620      	mov	r0, r4
 8005a22:	2500      	movs	r5, #0
 8005a24:	2628      	movs	r6, #40	; 0x28
 8005a26:	4632      	mov	r2, r6
 8005a28:	4629      	mov	r1, r5
 8005a2a:	f840 5b04 	str.w	r5, [r0], #4
 8005a2e:	f001 f8b4 	bl	8006b9a <memset>
 8005a32:	4632      	mov	r2, r6
 8005a34:	4629      	mov	r1, r5
 8005a36:	f104 0030 	add.w	r0, r4, #48	; 0x30
 8005a3a:	62e5      	str	r5, [r4, #44]	; 0x2c
 8005a3c:	f001 f8ad 	bl	8006b9a <memset>
 8005a40:	65a5      	str	r5, [r4, #88]	; 0x58
 8005a42:	4620      	mov	r0, r4
 8005a44:	65e5      	str	r5, [r4, #92]	; 0x5c
 8005a46:	4a05      	ldr	r2, [pc, #20]	; (8005a5c <_GLOBAL__sub_I__ZN4mbed3SPI19_transaction_bufferE+0x40>)
 8005a48:	f884 5060 	strb.w	r5, [r4, #96]	; 0x60
 8005a4c:	4904      	ldr	r1, [pc, #16]	; (8005a60 <_GLOBAL__sub_I__ZN4mbed3SPI19_transaction_bufferE+0x44>)
 8005a4e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8005a52:	f000 b935 	b.w	8005cc0 <__aeabi_atexit>
 8005a56:	bf00      	nop
 8005a58:	200023a0 	.word	0x200023a0
 8005a5c:	20000198 	.word	0x20000198
 8005a60:	080059fd 	.word	0x080059fd

08005a64 <__wrap__malloc_r>:
 8005a64:	f001 b8f0 	b.w	8006c48 <_malloc_r>

08005a68 <__wrap__realloc_r>:
 8005a68:	f001 b94c 	b.w	8006d04 <_realloc_r>

08005a6c <__wrap__free_r>:
 8005a6c:	f001 b89e 	b.w	8006bac <_free_r>

08005a70 <wait_us>:
 8005a70:	b570      	push	{r4, r5, r6, lr}
 8005a72:	4605      	mov	r5, r0
 8005a74:	f7fe f974 	bl	8003d60 <us_ticker_read>
 8005a78:	f44f 747a 	mov.w	r4, #1000	; 0x3e8
 8005a7c:	fb95 f4f4 	sdiv	r4, r5, r4
 8005a80:	2c00      	cmp	r4, #0
 8005a82:	4606      	mov	r6, r0
 8005a84:	dd02      	ble.n	8005a8c <wait_us+0x1c>
 8005a86:	f7fc fbad 	bl	80021e4 <core_util_are_interrupts_enabled>
 8005a8a:	b928      	cbnz	r0, 8005a98 <wait_us+0x28>
 8005a8c:	f7fe f968 	bl	8003d60 <us_ticker_read>
 8005a90:	1b80      	subs	r0, r0, r6
 8005a92:	42a8      	cmp	r0, r5
 8005a94:	d3fa      	bcc.n	8005a8c <wait_us+0x1c>
 8005a96:	bd70      	pop	{r4, r5, r6, pc}
 8005a98:	4620      	mov	r0, r4
 8005a9a:	f000 f939 	bl	8005d10 <rtos::Thread::wait(unsigned long)>
 8005a9e:	e7f5      	b.n	8005a8c <wait_us+0x1c>

08005aa0 <wait>:
 8005aa0:	ee07 0a10 	vmov	s14, r0
 8005aa4:	eddf 7a04 	vldr	s15, [pc, #16]	; 8005ab8 <wait+0x18>
 8005aa8:	ee67 7a27 	vmul.f32	s15, s14, s15
 8005aac:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005ab0:	ee17 0a90 	vmov	r0, s15
 8005ab4:	f7ff bfdc 	b.w	8005a70 <wait_us>
 8005ab8:	49742400 	.word	0x49742400

08005abc <wait_ms>:
 8005abc:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8005ac0:	4358      	muls	r0, r3
 8005ac2:	f7ff bfd5 	b.w	8005a70 <wait_us>
	...

08005ac8 <init_serial()>:
 8005ac8:	b508      	push	{r3, lr}
 8005aca:	4b08      	ldr	r3, [pc, #32]	; (8005aec <init_serial()+0x24>)
 8005acc:	681b      	ldr	r3, [r3, #0]
 8005ace:	b95b      	cbnz	r3, 8005ae8 <init_serial()+0x20>
 8005ad0:	2102      	movs	r1, #2
 8005ad2:	4807      	ldr	r0, [pc, #28]	; (8005af0 <init_serial()+0x28>)
 8005ad4:	2203      	movs	r2, #3
 8005ad6:	f7fe fca3 	bl	8004420 <serial_init>
 8005ada:	f44f 5116 	mov.w	r1, #9600	; 0x2580
 8005ade:	4804      	ldr	r0, [pc, #16]	; (8005af0 <init_serial()+0x28>)
 8005ae0:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8005ae4:	f7fe bd3a 	b.w	800455c <serial_baud>
 8005ae8:	bd08      	pop	{r3, pc}
 8005aea:	bf00      	nop
 8005aec:	2000219c 	.word	0x2000219c
 8005af0:	20002fb4 	.word	0x20002fb4

08005af4 <_close>:
 8005af4:	2802      	cmp	r0, #2
 8005af6:	b510      	push	{r4, lr}
 8005af8:	4604      	mov	r4, r0
 8005afa:	dc01      	bgt.n	8005b00 <_close+0xc>
 8005afc:	2000      	movs	r0, #0
 8005afe:	bd10      	pop	{r4, pc}
 8005b00:	f000 fe0a 	bl	8006718 <__errno>
 8005b04:	2309      	movs	r3, #9
 8005b06:	6003      	str	r3, [r0, #0]
 8005b08:	3c03      	subs	r4, #3
 8005b0a:	4b09      	ldr	r3, [pc, #36]	; (8005b30 <_close+0x3c>)
 8005b0c:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 8005b10:	2200      	movs	r2, #0
 8005b12:	f843 2024 	str.w	r2, [r3, r4, lsl #2]
 8005b16:	b140      	cbz	r0, 8005b2a <_close+0x36>
 8005b18:	6803      	ldr	r3, [r0, #0]
 8005b1a:	691b      	ldr	r3, [r3, #16]
 8005b1c:	4798      	blx	r3
 8005b1e:	1e04      	subs	r4, r0, #0
 8005b20:	daec      	bge.n	8005afc <_close+0x8>
 8005b22:	f000 fdf9 	bl	8006718 <__errno>
 8005b26:	4264      	negs	r4, r4
 8005b28:	6004      	str	r4, [r0, #0]
 8005b2a:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8005b2e:	bd10      	pop	{r4, pc}
 8005b30:	20002404 	.word	0x20002404

08005b34 <_write>:
 8005b34:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8005b36:	4605      	mov	r5, r0
 8005b38:	460e      	mov	r6, r1
 8005b3a:	4614      	mov	r4, r2
 8005b3c:	f000 fdec 	bl	8006718 <__errno>
 8005b40:	2309      	movs	r3, #9
 8005b42:	2d02      	cmp	r5, #2
 8005b44:	6003      	str	r3, [r0, #0]
 8005b46:	dc0f      	bgt.n	8005b68 <_write+0x34>
 8005b48:	4b12      	ldr	r3, [pc, #72]	; (8005b94 <_write+0x60>)
 8005b4a:	681b      	ldr	r3, [r3, #0]
 8005b4c:	b90b      	cbnz	r3, 8005b52 <_write+0x1e>
 8005b4e:	f7ff ffbb 	bl	8005ac8 <init_serial()>
 8005b52:	4635      	mov	r5, r6
 8005b54:	1937      	adds	r7, r6, r4
 8005b56:	4e10      	ldr	r6, [pc, #64]	; (8005b98 <_write+0x64>)
 8005b58:	42bd      	cmp	r5, r7
 8005b5a:	d015      	beq.n	8005b88 <_write+0x54>
 8005b5c:	f815 1b01 	ldrb.w	r1, [r5], #1
 8005b60:	4630      	mov	r0, r6
 8005b62:	f7fe fd7d 	bl	8004660 <serial_putc>
 8005b66:	e7f7      	b.n	8005b58 <_write+0x24>
 8005b68:	3d03      	subs	r5, #3
 8005b6a:	4b0c      	ldr	r3, [pc, #48]	; (8005b9c <_write+0x68>)
 8005b6c:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 8005b70:	b160      	cbz	r0, 8005b8c <_write+0x58>
 8005b72:	6803      	ldr	r3, [r0, #0]
 8005b74:	4622      	mov	r2, r4
 8005b76:	68db      	ldr	r3, [r3, #12]
 8005b78:	4631      	mov	r1, r6
 8005b7a:	4798      	blx	r3
 8005b7c:	1e04      	subs	r4, r0, #0
 8005b7e:	da03      	bge.n	8005b88 <_write+0x54>
 8005b80:	f000 fdca 	bl	8006718 <__errno>
 8005b84:	4263      	negs	r3, r4
 8005b86:	6003      	str	r3, [r0, #0]
 8005b88:	4620      	mov	r0, r4
 8005b8a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8005b8c:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
 8005b90:	e7fa      	b.n	8005b88 <_write+0x54>
 8005b92:	bf00      	nop
 8005b94:	2000219c 	.word	0x2000219c
 8005b98:	20002fb4 	.word	0x20002fb4
 8005b9c:	20002404 	.word	0x20002404

08005ba0 <_read>:
 8005ba0:	b570      	push	{r4, r5, r6, lr}
 8005ba2:	4604      	mov	r4, r0
 8005ba4:	460d      	mov	r5, r1
 8005ba6:	4616      	mov	r6, r2
 8005ba8:	f000 fdb6 	bl	8006718 <__errno>
 8005bac:	2309      	movs	r3, #9
 8005bae:	2c02      	cmp	r4, #2
 8005bb0:	6003      	str	r3, [r0, #0]
 8005bb2:	dc0b      	bgt.n	8005bcc <_read+0x2c>
 8005bb4:	4b0f      	ldr	r3, [pc, #60]	; (8005bf4 <_read+0x54>)
 8005bb6:	681b      	ldr	r3, [r3, #0]
 8005bb8:	b90b      	cbnz	r3, 8005bbe <_read+0x1e>
 8005bba:	f7ff ff85 	bl	8005ac8 <init_serial()>
 8005bbe:	480e      	ldr	r0, [pc, #56]	; (8005bf8 <_read+0x58>)
 8005bc0:	f7fe fd32 	bl	8004628 <serial_getc>
 8005bc4:	2401      	movs	r4, #1
 8005bc6:	7028      	strb	r0, [r5, #0]
 8005bc8:	4620      	mov	r0, r4
 8005bca:	bd70      	pop	{r4, r5, r6, pc}
 8005bcc:	3c03      	subs	r4, #3
 8005bce:	4b0b      	ldr	r3, [pc, #44]	; (8005bfc <_read+0x5c>)
 8005bd0:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 8005bd4:	b158      	cbz	r0, 8005bee <_read+0x4e>
 8005bd6:	6803      	ldr	r3, [r0, #0]
 8005bd8:	4632      	mov	r2, r6
 8005bda:	689b      	ldr	r3, [r3, #8]
 8005bdc:	4629      	mov	r1, r5
 8005bde:	4798      	blx	r3
 8005be0:	1e04      	subs	r4, r0, #0
 8005be2:	daf1      	bge.n	8005bc8 <_read+0x28>
 8005be4:	f000 fd98 	bl	8006718 <__errno>
 8005be8:	4263      	negs	r3, r4
 8005bea:	6003      	str	r3, [r0, #0]
 8005bec:	e7ec      	b.n	8005bc8 <_read+0x28>
 8005bee:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
 8005bf2:	e7e9      	b.n	8005bc8 <_read+0x28>
 8005bf4:	2000219c 	.word	0x2000219c
 8005bf8:	20002fb4 	.word	0x20002fb4
 8005bfc:	20002404 	.word	0x20002404

08005c00 <_lseek>:
 8005c00:	b570      	push	{r4, r5, r6, lr}
 8005c02:	4604      	mov	r4, r0
 8005c04:	460d      	mov	r5, r1
 8005c06:	4616      	mov	r6, r2
 8005c08:	f000 fd86 	bl	8006718 <__errno>
 8005c0c:	2309      	movs	r3, #9
 8005c0e:	2c02      	cmp	r4, #2
 8005c10:	6003      	str	r3, [r0, #0]
 8005c12:	dd0b      	ble.n	8005c2c <_lseek+0x2c>
 8005c14:	3c03      	subs	r4, #3
 8005c16:	4b08      	ldr	r3, [pc, #32]	; (8005c38 <_lseek+0x38>)
 8005c18:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 8005c1c:	b140      	cbz	r0, 8005c30 <_lseek+0x30>
 8005c1e:	6803      	ldr	r3, [r0, #0]
 8005c20:	4632      	mov	r2, r6
 8005c22:	4629      	mov	r1, r5
 8005c24:	69db      	ldr	r3, [r3, #28]
 8005c26:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8005c2a:	4718      	bx	r3
 8005c2c:	2000      	movs	r0, #0
 8005c2e:	bd70      	pop	{r4, r5, r6, pc}
 8005c30:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8005c34:	bd70      	pop	{r4, r5, r6, pc}
 8005c36:	bf00      	nop
 8005c38:	20002404 	.word	0x20002404

08005c3c <software_init_hook>:
 8005c3c:	b508      	push	{r3, lr}
 8005c3e:	f7fe fd21 	bl	8004684 <mbed_sdk_init>
 8005c42:	f7fc fb67 	bl	8002314 <software_init_hook_rtos>
 8005c46:	bd08      	pop	{r3, pc}

08005c48 <mbed_main>:
 8005c48:	4770      	bx	lr

08005c4a <__wrap_main>:
 8005c4a:	b508      	push	{r3, lr}
 8005c4c:	f7ff fffc 	bl	8005c48 <mbed_main>
 8005c50:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8005c54:	f7fb ba5a 	b.w	800110c <main>

08005c58 <_sbrk>:
 8005c58:	4a0c      	ldr	r2, [pc, #48]	; (8005c8c <_sbrk+0x34>)
 8005c5a:	6813      	ldr	r3, [r2, #0]
 8005c5c:	b510      	push	{r4, lr}
 8005c5e:	4418      	add	r0, r3
 8005c60:	f3ef 8108 	mrs	r1, MSP
 8005c64:	4288      	cmp	r0, r1
 8005c66:	d305      	bcc.n	8005c74 <_sbrk+0x1c>
 8005c68:	4b09      	ldr	r3, [pc, #36]	; (8005c90 <_sbrk+0x38>)
 8005c6a:	220c      	movs	r2, #12
 8005c6c:	601a      	str	r2, [r3, #0]
 8005c6e:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8005c72:	bd10      	pop	{r4, pc}
 8005c74:	4907      	ldr	r1, [pc, #28]	; (8005c94 <_sbrk+0x3c>)
 8005c76:	680c      	ldr	r4, [r1, #0]
 8005c78:	b124      	cbz	r4, 8005c84 <_sbrk+0x2c>
 8005c7a:	4907      	ldr	r1, [pc, #28]	; (8005c98 <_sbrk+0x40>)
 8005c7c:	6809      	ldr	r1, [r1, #0]
 8005c7e:	4421      	add	r1, r4
 8005c80:	4288      	cmp	r0, r1
 8005c82:	d2f1      	bcs.n	8005c68 <_sbrk+0x10>
 8005c84:	6010      	str	r0, [r2, #0]
 8005c86:	4618      	mov	r0, r3
 8005c88:	bd10      	pop	{r4, pc}
 8005c8a:	bf00      	nop
 8005c8c:	200001c0 	.word	0x200001c0
 8005c90:	20003004 	.word	0x20003004
 8005c94:	20002504 	.word	0x20002504
 8005c98:	20002508 	.word	0x20002508

08005c9c <_exit>:
 8005c9c:	4c07      	ldr	r4, [pc, #28]	; (8005cbc <_exit+0x20>)
 8005c9e:	b508      	push	{r3, lr}
 8005ca0:	6823      	ldr	r3, [r4, #0]
 8005ca2:	4605      	mov	r5, r0
 8005ca4:	6898      	ldr	r0, [r3, #8]
 8005ca6:	f000 fdef 	bl	8006888 <fflush>
 8005caa:	6823      	ldr	r3, [r4, #0]
 8005cac:	68d8      	ldr	r0, [r3, #12]
 8005cae:	f000 fdeb 	bl	8006888 <fflush>
 8005cb2:	b10d      	cbz	r5, 8005cb8 <_exit+0x1c>
 8005cb4:	f7fc fa80 	bl	80021b8 <mbed_die>
 8005cb8:	e7fe      	b.n	8005cb8 <_exit+0x1c>
 8005cba:	bf00      	nop
 8005cbc:	200001c4 	.word	0x200001c4

08005cc0 <__aeabi_atexit>:
 8005cc0:	2001      	movs	r0, #1
 8005cc2:	4770      	bx	lr

08005cc4 <__wrap_exit>:
 8005cc4:	b508      	push	{r3, lr}
 8005cc6:	f7ff ffe9 	bl	8005c9c <_exit>

08005cca <__malloc_lock>:
 8005cca:	b508      	push	{r3, lr}
 8005ccc:	f7fc fb30 	bl	8002330 <__rtos_malloc_lock>
 8005cd0:	bd08      	pop	{r3, pc}

08005cd2 <__malloc_unlock>:
 8005cd2:	b508      	push	{r3, lr}
 8005cd4:	f7fc fb34 	bl	8002340 <__rtos_malloc_unlock>
 8005cd8:	bd08      	pop	{r3, pc}
	...

08005cdc <operator new[](unsigned int)>:
 8005cdc:	b510      	push	{r4, lr}
 8005cde:	f000 fed3 	bl	8006a88 <malloc>
 8005ce2:	4604      	mov	r4, r0
 8005ce4:	b910      	cbnz	r0, 8005cec <operator new[](unsigned int)+0x10>
 8005ce6:	4802      	ldr	r0, [pc, #8]	; (8005cf0 <operator new[](unsigned int)+0x14>)
 8005ce8:	f7fc faac 	bl	8002244 <error>
 8005cec:	4620      	mov	r0, r4
 8005cee:	bd10      	pop	{r4, pc}
 8005cf0:	08007e10 	.word	0x08007e10

08005cf4 <operator delete[](void*)>:
 8005cf4:	b108      	cbz	r0, 8005cfa <operator delete[](void*)+0x6>
 8005cf6:	f000 becf 	b.w	8006a98 <free>
 8005cfa:	4770      	bx	lr

08005cfc <operator delete(void*)>:
 8005cfc:	f7ff bffa 	b.w	8005cf4 <operator delete[](void*)>

08005d00 <thread_terminate_hook>:
 8005d00:	4b02      	ldr	r3, [pc, #8]	; (8005d0c <thread_terminate_hook+0xc>)
 8005d02:	681b      	ldr	r3, [r3, #0]
 8005d04:	b103      	cbz	r3, 8005d08 <thread_terminate_hook+0x8>
 8005d06:	4718      	bx	r3
 8005d08:	4770      	bx	lr
 8005d0a:	bf00      	nop
 8005d0c:	2000250c 	.word	0x2000250c

08005d10 <rtos::Thread::wait(unsigned long)>:
 8005d10:	f7fc bfe4 	b.w	8002cdc <osDelay>

08005d14 <rt_set_PSP>:
 8005d14:	f380 8809 	msr	PSP, r0
 8005d18:	4770      	bx	lr

08005d1a <rt_get_PSP>:
 8005d1a:	f3ef 8009 	mrs	r0, PSP
 8005d1e:	4770      	bx	lr

08005d20 <os_set_env>:
 8005d20:	4668      	mov	r0, sp
 8005d22:	f380 8809 	msr	PSP, r0
 8005d26:	485a      	ldr	r0, [pc, #360]	; (8005e90 <OS_Tick_Handler+0x10>)
 8005d28:	7800      	ldrb	r0, [r0, #0]
 8005d2a:	07c0      	lsls	r0, r0, #31
 8005d2c:	bf14      	ite	ne
 8005d2e:	2002      	movne	r0, #2
 8005d30:	2003      	moveq	r0, #3
 8005d32:	f380 8814 	msr	CONTROL, r0
 8005d36:	4770      	bx	lr

08005d38 <_alloc_box>:
 8005d38:	f8df c158 	ldr.w	r12, [pc, #344]	; 8005e94 <OS_Tick_Handler+0x14>
 8005d3c:	f3ef 8305 	mrs	r3, IPSR
 8005d40:	061b      	lsls	r3, r3, #24
 8005d42:	bf18      	it	ne
 8005d44:	4760      	bxne	r12
 8005d46:	f3ef 8314 	mrs	r3, CONTROL
 8005d4a:	07db      	lsls	r3, r3, #31
 8005d4c:	bf08      	it	eq
 8005d4e:	4760      	bxeq	r12
 8005d50:	df00      	svc	0
 8005d52:	4770      	bx	lr

08005d54 <_free_box>:
 8005d54:	f8df c140 	ldr.w	r12, [pc, #320]	; 8005e98 <OS_Tick_Handler+0x18>
 8005d58:	f3ef 8305 	mrs	r3, IPSR
 8005d5c:	061b      	lsls	r3, r3, #24
 8005d5e:	bf18      	it	ne
 8005d60:	4760      	bxne	r12
 8005d62:	f3ef 8314 	mrs	r3, CONTROL
 8005d66:	07db      	lsls	r3, r3, #31
 8005d68:	bf08      	it	eq
 8005d6a:	4760      	bxeq	r12
 8005d6c:	df00      	svc	0
 8005d6e:	4770      	bx	lr

08005d70 <SVC_Handler>:
 8005d70:	f3ef 8009 	mrs	r0, PSP
 8005d74:	6981      	ldr	r1, [r0, #24]
 8005d76:	f811 1c02 	ldrb.w	r1, [r1, #-2]
 8005d7a:	bbe1      	cbnz	r1, 8005df6 <SVC_User>
 8005d7c:	e890 100f 	ldmia.w	r0, {r0, r1, r2, r3, r12}
 8005d80:	b510      	push	{r4, lr}
 8005d82:	47e0      	blx	r12
 8005d84:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8005d88:	f3ef 8c09 	mrs	r12, PSP
 8005d8c:	e88c 0007 	stmia.w	r12, {r0, r1, r2}
 8005d90:	4b42      	ldr	r3, [pc, #264]	; (8005e9c <OS_Tick_Handler+0x1c>)
 8005d92:	e893 0006 	ldmia.w	r3, {r1, r2}
 8005d96:	4291      	cmp	r1, r2
 8005d98:	bf08      	it	eq
 8005d9a:	4770      	bxeq	lr
 8005d9c:	b941      	cbnz	r1, 8005db0 <SVC_ContextSave>
 8005d9e:	f01e 0f10 	tst.w	lr, #16
 8005da2:	d116      	bne.n	8005dd2 <SVC_ContextRestore>
 8005da4:	493e      	ldr	r1, [pc, #248]	; (8005ea0 <OS_Tick_Handler+0x20>)
 8005da6:	6808      	ldr	r0, [r1, #0]
 8005da8:	f020 0001 	bic.w	r0, r0, #1
 8005dac:	6008      	str	r0, [r1, #0]
 8005dae:	e010      	b.n	8005dd2 <SVC_ContextRestore>

08005db0 <SVC_ContextSave>:
 8005db0:	f01e 0f10 	tst.w	lr, #16
 8005db4:	bf06      	itte	eq
 8005db6:	ed2c 8a10 	vstmdbeq	r12!, {s16-s31}
 8005dba:	2001      	moveq	r0, #1
 8005dbc:	2000      	movne	r0, #0
 8005dbe:	f881 0025 	strb.w	r0, [r1, #37]	; 0x25
 8005dc2:	e92c 0ff0 	stmdb	r12!, {r4, r5, r6, r7, r8, r9, r10, r11}
 8005dc6:	f8c1 c02c 	str.w	r12, [r1, #44]	; 0x2c
 8005dca:	b40c      	push	{r2, r3}
 8005dcc:	f7fc fc9c 	bl	8002708 <rt_stk_check>
 8005dd0:	bc0c      	pop	{r2, r3}

08005dd2 <SVC_ContextRestore>:
 8005dd2:	601a      	str	r2, [r3, #0]
 8005dd4:	f8d2 c02c 	ldr.w	r12, [r2, #44]	; 0x2c
 8005dd8:	e8bc 0ff0 	ldmia.w	r12!, {r4, r5, r6, r7, r8, r9, r10, r11}
 8005ddc:	f892 0025 	ldrb.w	r0, [r2, #37]	; 0x25
 8005de0:	2800      	cmp	r0, #0
 8005de2:	bf0e      	itee	eq
 8005de4:	f06f 0e02 	mvneq.w	lr, #2
 8005de8:	f06f 0e12 	mvnne.w	lr, #18
 8005dec:	ecbc 8a10 	vldmiane	r12!, {s16-s31}
 8005df0:	f38c 8809 	msr	PSP, r12

08005df4 <SVC_Exit>:
 8005df4:	4770      	bx	lr

08005df6 <SVC_User>:
 8005df6:	b510      	push	{r4, lr}
 8005df8:	4a2a      	ldr	r2, [pc, #168]	; (8005ea4 <OS_Tick_Handler+0x24>)
 8005dfa:	6812      	ldr	r2, [r2, #0]
 8005dfc:	4291      	cmp	r1, r2
 8005dfe:	d809      	bhi.n	8005e14 <SVC_Done>
 8005e00:	4c29      	ldr	r4, [pc, #164]	; (8005ea8 <OS_Tick_Handler+0x28>)
 8005e02:	f854 4021 	ldr.w	r4, [r4, r1, lsl #2]
 8005e06:	e890 100f 	ldmia.w	r0, {r0, r1, r2, r3, r12}
 8005e0a:	47a0      	blx	r4
 8005e0c:	f3ef 8c09 	mrs	r12, PSP
 8005e10:	e88c 000f 	stmia.w	r12, {r0, r1, r2, r3}

08005e14 <SVC_Done>:
 8005e14:	bd10      	pop	{r4, pc}

08005e16 <PendSV_Handler>:
 8005e16:	b510      	push	{r4, lr}
 8005e18:	f7fc fc02 	bl	8002620 <rt_pop_req>

08005e1c <Sys_Switch>:
 8005e1c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8005e20:	4b1e      	ldr	r3, [pc, #120]	; (8005e9c <OS_Tick_Handler+0x1c>)
 8005e22:	e893 0006 	ldmia.w	r3, {r1, r2}
 8005e26:	4291      	cmp	r1, r2
 8005e28:	bf08      	it	eq
 8005e2a:	4770      	bxeq	lr
 8005e2c:	f3ef 8c09 	mrs	r12, PSP
 8005e30:	f01e 0f10 	tst.w	lr, #16
 8005e34:	bf06      	itte	eq
 8005e36:	ed2c 8a10 	vstmdbeq	r12!, {s16-s31}
 8005e3a:	2001      	moveq	r0, #1
 8005e3c:	2000      	movne	r0, #0
 8005e3e:	f881 0025 	strb.w	r0, [r1, #37]	; 0x25
 8005e42:	e92c 0ff0 	stmdb	r12!, {r4, r5, r6, r7, r8, r9, r10, r11}
 8005e46:	f8c1 c02c 	str.w	r12, [r1, #44]	; 0x2c
 8005e4a:	b40c      	push	{r2, r3}
 8005e4c:	f7fc fc5c 	bl	8002708 <rt_stk_check>
 8005e50:	bc0c      	pop	{r2, r3}
 8005e52:	601a      	str	r2, [r3, #0]
 8005e54:	f8d2 c02c 	ldr.w	r12, [r2, #44]	; 0x2c
 8005e58:	e8bc 0ff0 	ldmia.w	r12!, {r4, r5, r6, r7, r8, r9, r10, r11}
 8005e5c:	f892 0025 	ldrb.w	r0, [r2, #37]	; 0x25
 8005e60:	2800      	cmp	r0, #0
 8005e62:	bf0e      	itee	eq
 8005e64:	f06f 0e02 	mvneq.w	lr, #2
 8005e68:	f06f 0e12 	mvnne.w	lr, #18
 8005e6c:	ecbc 8a10 	vldmiane	r12!, {s16-s31}
 8005e70:	f38c 8809 	msr	PSP, r12

08005e74 <Sys_Exit>:
 8005e74:	4770      	bx	lr

08005e76 <SysTick_Handler>:
 8005e76:	b510      	push	{r4, lr}
 8005e78:	f7fc fc28 	bl	80026cc <rt_systick>
 8005e7c:	f7ff bfce 	b.w	8005e1c <Sys_Switch>

08005e80 <OS_Tick_Handler>:
 8005e80:	b510      	push	{r4, lr}
 8005e82:	f7fc fc21 	bl	80026c8 <os_tick_irqack>
 8005e86:	f7fc fc21 	bl	80026cc <rt_systick>
 8005e8a:	f7ff bfc7 	b.w	8005e1c <Sys_Switch>
 8005e8e:	0000      	.short	0x0000
 8005e90:	0800797e 	.word	0x0800797e
 8005e94:	08002777 	.word	0x08002777
 8005e98:	08002791 	.word	0x08002791
 8005e9c:	20002f2c 	.word	0x20002f2c
 8005ea0:	e000ef34 	.word	0xe000ef34
 8005ea4:	00000000 	.word	0x00000000
 8005ea8:	fffffffc 	.word	0xfffffffc

08005eac <Reset_Handler>:
 8005eac:	f8df d020 	ldr.w	sp, [pc, #32]	; 8005ed0 <LoopCopyDataInit+0x14>
 8005eb0:	2100      	movs	r1, #0
 8005eb2:	e003      	b.n	8005ebc <LoopCopyDataInit>

08005eb4 <CopyDataInit>:
 8005eb4:	4b07      	ldr	r3, [pc, #28]	; (8005ed4 <LoopCopyDataInit+0x18>)
 8005eb6:	585b      	ldr	r3, [r3, r1]
 8005eb8:	5043      	str	r3, [r0, r1]
 8005eba:	3104      	adds	r1, #4

08005ebc <LoopCopyDataInit>:
 8005ebc:	4806      	ldr	r0, [pc, #24]	; (8005ed8 <LoopCopyDataInit+0x1c>)
 8005ebe:	4b07      	ldr	r3, [pc, #28]	; (8005edc <LoopCopyDataInit+0x20>)
 8005ec0:	1842      	adds	r2, r0, r1
 8005ec2:	429a      	cmp	r2, r3
 8005ec4:	d3f6      	bcc.n	8005eb4 <CopyDataInit>
 8005ec6:	f7fe fcbb 	bl	8004840 <SystemInit>
 8005eca:	f7fb fe3d 	bl	8001b48 <_start>
 8005ece:	4770      	bx	lr
 8005ed0:	20020000 	.word	0x20020000
 8005ed4:	08007ed4 	.word	0x08007ed4
 8005ed8:	20000198 	.word	0x20000198
 8005edc:	2000023c 	.word	0x2000023c

08005ee0 <ADC_IRQHandler>:
 8005ee0:	e7fe      	b.n	8005ee0 <ADC_IRQHandler>
	...

08005ee4 <__aeabi_drsub>:
 8005ee4:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 8005ee8:	e002      	b.n	8005ef0 <__adddf3>
 8005eea:	bf00      	nop

08005eec <__aeabi_dsub>:
 8005eec:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

08005ef0 <__adddf3>:
 8005ef0:	b530      	push	{r4, r5, lr}
 8005ef2:	ea4f 0441 	mov.w	r4, r1, lsl #1
 8005ef6:	ea4f 0543 	mov.w	r5, r3, lsl #1
 8005efa:	ea94 0f05 	teq	r4, r5
 8005efe:	bf08      	it	eq
 8005f00:	ea90 0f02 	teqeq	r0, r2
 8005f04:	bf1f      	itttt	ne
 8005f06:	ea54 0c00 	orrsne.w	r12, r4, r0
 8005f0a:	ea55 0c02 	orrsne.w	r12, r5, r2
 8005f0e:	ea7f 5c64 	mvnsne.w	r12, r4, asr #21
 8005f12:	ea7f 5c65 	mvnsne.w	r12, r5, asr #21
 8005f16:	f000 80e2 	beq.w	80060de <__adddf3+0x1ee>
 8005f1a:	ea4f 5454 	mov.w	r4, r4, lsr #21
 8005f1e:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 8005f22:	bfb8      	it	lt
 8005f24:	426d      	neglt	r5, r5
 8005f26:	dd0c      	ble.n	8005f42 <__adddf3+0x52>
 8005f28:	442c      	add	r4, r5
 8005f2a:	ea80 0202 	eor.w	r2, r0, r2
 8005f2e:	ea81 0303 	eor.w	r3, r1, r3
 8005f32:	ea82 0000 	eor.w	r0, r2, r0
 8005f36:	ea83 0101 	eor.w	r1, r3, r1
 8005f3a:	ea80 0202 	eor.w	r2, r0, r2
 8005f3e:	ea81 0303 	eor.w	r3, r1, r3
 8005f42:	2d36      	cmp	r5, #54	; 0x36
 8005f44:	bf88      	it	hi
 8005f46:	bd30      	pophi	{r4, r5, pc}
 8005f48:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8005f4c:	ea4f 3101 	mov.w	r1, r1, lsl #12
 8005f50:	f44f 1c80 	mov.w	r12, #1048576	; 0x100000
 8005f54:	ea4c 3111 	orr.w	r1, r12, r1, lsr #12
 8005f58:	d002      	beq.n	8005f60 <__adddf3+0x70>
 8005f5a:	4240      	negs	r0, r0
 8005f5c:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8005f60:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8005f64:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8005f68:	ea4c 3313 	orr.w	r3, r12, r3, lsr #12
 8005f6c:	d002      	beq.n	8005f74 <__adddf3+0x84>
 8005f6e:	4252      	negs	r2, r2
 8005f70:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8005f74:	ea94 0f05 	teq	r4, r5
 8005f78:	f000 80a7 	beq.w	80060ca <__adddf3+0x1da>
 8005f7c:	f1a4 0401 	sub.w	r4, r4, #1
 8005f80:	f1d5 0e20 	rsbs	lr, r5, #32
 8005f84:	db0d      	blt.n	8005fa2 <__adddf3+0xb2>
 8005f86:	fa02 fc0e 	lsl.w	r12, r2, lr
 8005f8a:	fa22 f205 	lsr.w	r2, r2, r5
 8005f8e:	1880      	adds	r0, r0, r2
 8005f90:	f141 0100 	adc.w	r1, r1, #0
 8005f94:	fa03 f20e 	lsl.w	r2, r3, lr
 8005f98:	1880      	adds	r0, r0, r2
 8005f9a:	fa43 f305 	asr.w	r3, r3, r5
 8005f9e:	4159      	adcs	r1, r3
 8005fa0:	e00e      	b.n	8005fc0 <__adddf3+0xd0>
 8005fa2:	f1a5 0520 	sub.w	r5, r5, #32
 8005fa6:	f10e 0e20 	add.w	lr, lr, #32
 8005faa:	2a01      	cmp	r2, #1
 8005fac:	fa03 fc0e 	lsl.w	r12, r3, lr
 8005fb0:	bf28      	it	cs
 8005fb2:	f04c 0c02 	orrcs.w	r12, r12, #2
 8005fb6:	fa43 f305 	asr.w	r3, r3, r5
 8005fba:	18c0      	adds	r0, r0, r3
 8005fbc:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 8005fc0:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8005fc4:	d507      	bpl.n	8005fd6 <__adddf3+0xe6>
 8005fc6:	f04f 0e00 	mov.w	lr, #0
 8005fca:	f1dc 0c00 	rsbs	r12, r12, #0
 8005fce:	eb7e 0000 	sbcs.w	r0, lr, r0
 8005fd2:	eb6e 0101 	sbc.w	r1, lr, r1
 8005fd6:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 8005fda:	d31b      	bcc.n	8006014 <__adddf3+0x124>
 8005fdc:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 8005fe0:	d30c      	bcc.n	8005ffc <__adddf3+0x10c>
 8005fe2:	0849      	lsrs	r1, r1, #1
 8005fe4:	ea5f 0030 	movs.w	r0, r0, rrx
 8005fe8:	ea4f 0c3c 	mov.w	r12, r12, rrx
 8005fec:	f104 0401 	add.w	r4, r4, #1
 8005ff0:	ea4f 5244 	mov.w	r2, r4, lsl #21
 8005ff4:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 8005ff8:	f080 809a 	bcs.w	8006130 <__adddf3+0x240>
 8005ffc:	f1bc 4f00 	cmp.w	r12, #2147483648	; 0x80000000
 8006000:	bf08      	it	eq
 8006002:	ea5f 0c50 	movseq.w	r12, r0, lsr #1
 8006006:	f150 0000 	adcs.w	r0, r0, #0
 800600a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800600e:	ea41 0105 	orr.w	r1, r1, r5
 8006012:	bd30      	pop	{r4, r5, pc}
 8006014:	ea5f 0c4c 	movs.w	r12, r12, lsl #1
 8006018:	4140      	adcs	r0, r0
 800601a:	eb41 0101 	adc.w	r1, r1, r1
 800601e:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8006022:	f1a4 0401 	sub.w	r4, r4, #1
 8006026:	d1e9      	bne.n	8005ffc <__adddf3+0x10c>
 8006028:	f091 0f00 	teq	r1, #0
 800602c:	bf04      	itt	eq
 800602e:	4601      	moveq	r1, r0
 8006030:	2000      	moveq	r0, #0
 8006032:	fab1 f381 	clz	r3, r1
 8006036:	bf08      	it	eq
 8006038:	3320      	addeq	r3, #32
 800603a:	f1a3 030b 	sub.w	r3, r3, #11
 800603e:	f1b3 0220 	subs.w	r2, r3, #32
 8006042:	da0c      	bge.n	800605e <__adddf3+0x16e>
 8006044:	320c      	adds	r2, #12
 8006046:	dd08      	ble.n	800605a <__adddf3+0x16a>
 8006048:	f102 0c14 	add.w	r12, r2, #20
 800604c:	f1c2 020c 	rsb	r2, r2, #12
 8006050:	fa01 f00c 	lsl.w	r0, r1, r12
 8006054:	fa21 f102 	lsr.w	r1, r1, r2
 8006058:	e00c      	b.n	8006074 <__adddf3+0x184>
 800605a:	f102 0214 	add.w	r2, r2, #20
 800605e:	bfd8      	it	le
 8006060:	f1c2 0c20 	rsble	r12, r2, #32
 8006064:	fa01 f102 	lsl.w	r1, r1, r2
 8006068:	fa20 fc0c 	lsr.w	r12, r0, r12
 800606c:	bfdc      	itt	le
 800606e:	ea41 010c 	orrle.w	r1, r1, r12
 8006072:	4090      	lslle	r0, r2
 8006074:	1ae4      	subs	r4, r4, r3
 8006076:	bfa2      	ittt	ge
 8006078:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 800607c:	4329      	orrge	r1, r5
 800607e:	bd30      	popge	{r4, r5, pc}
 8006080:	ea6f 0404 	mvn.w	r4, r4
 8006084:	3c1f      	subs	r4, #31
 8006086:	da1c      	bge.n	80060c2 <__adddf3+0x1d2>
 8006088:	340c      	adds	r4, #12
 800608a:	dc0e      	bgt.n	80060aa <__adddf3+0x1ba>
 800608c:	f104 0414 	add.w	r4, r4, #20
 8006090:	f1c4 0220 	rsb	r2, r4, #32
 8006094:	fa20 f004 	lsr.w	r0, r0, r4
 8006098:	fa01 f302 	lsl.w	r3, r1, r2
 800609c:	ea40 0003 	orr.w	r0, r0, r3
 80060a0:	fa21 f304 	lsr.w	r3, r1, r4
 80060a4:	ea45 0103 	orr.w	r1, r5, r3
 80060a8:	bd30      	pop	{r4, r5, pc}
 80060aa:	f1c4 040c 	rsb	r4, r4, #12
 80060ae:	f1c4 0220 	rsb	r2, r4, #32
 80060b2:	fa20 f002 	lsr.w	r0, r0, r2
 80060b6:	fa01 f304 	lsl.w	r3, r1, r4
 80060ba:	ea40 0003 	orr.w	r0, r0, r3
 80060be:	4629      	mov	r1, r5
 80060c0:	bd30      	pop	{r4, r5, pc}
 80060c2:	fa21 f004 	lsr.w	r0, r1, r4
 80060c6:	4629      	mov	r1, r5
 80060c8:	bd30      	pop	{r4, r5, pc}
 80060ca:	f094 0f00 	teq	r4, #0
 80060ce:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 80060d2:	bf06      	itte	eq
 80060d4:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 80060d8:	3401      	addeq	r4, #1
 80060da:	3d01      	subne	r5, #1
 80060dc:	e74e      	b.n	8005f7c <__adddf3+0x8c>
 80060de:	ea7f 5c64 	mvns.w	r12, r4, asr #21
 80060e2:	bf18      	it	ne
 80060e4:	ea7f 5c65 	mvnsne.w	r12, r5, asr #21
 80060e8:	d029      	beq.n	800613e <__adddf3+0x24e>
 80060ea:	ea94 0f05 	teq	r4, r5
 80060ee:	bf08      	it	eq
 80060f0:	ea90 0f02 	teqeq	r0, r2
 80060f4:	d005      	beq.n	8006102 <__adddf3+0x212>
 80060f6:	ea54 0c00 	orrs.w	r12, r4, r0
 80060fa:	bf04      	itt	eq
 80060fc:	4619      	moveq	r1, r3
 80060fe:	4610      	moveq	r0, r2
 8006100:	bd30      	pop	{r4, r5, pc}
 8006102:	ea91 0f03 	teq	r1, r3
 8006106:	bf1e      	ittt	ne
 8006108:	2100      	movne	r1, #0
 800610a:	2000      	movne	r0, #0
 800610c:	bd30      	popne	{r4, r5, pc}
 800610e:	ea5f 5c54 	movs.w	r12, r4, lsr #21
 8006112:	d105      	bne.n	8006120 <__adddf3+0x230>
 8006114:	0040      	lsls	r0, r0, #1
 8006116:	4149      	adcs	r1, r1
 8006118:	bf28      	it	cs
 800611a:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 800611e:	bd30      	pop	{r4, r5, pc}
 8006120:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 8006124:	bf3c      	itt	cc
 8006126:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 800612a:	bd30      	popcc	{r4, r5, pc}
 800612c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8006130:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 8006134:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8006138:	f04f 0000 	mov.w	r0, #0
 800613c:	bd30      	pop	{r4, r5, pc}
 800613e:	ea7f 5c64 	mvns.w	r12, r4, asr #21
 8006142:	bf1a      	itte	ne
 8006144:	4619      	movne	r1, r3
 8006146:	4610      	movne	r0, r2
 8006148:	ea7f 5c65 	mvnseq.w	r12, r5, asr #21
 800614c:	bf1c      	itt	ne
 800614e:	460b      	movne	r3, r1
 8006150:	4602      	movne	r2, r0
 8006152:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8006156:	bf06      	itte	eq
 8006158:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 800615c:	ea91 0f03 	teqeq	r1, r3
 8006160:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8006164:	bd30      	pop	{r4, r5, pc}
 8006166:	bf00      	nop

08006168 <__aeabi_ui2d>:
 8006168:	f090 0f00 	teq	r0, #0
 800616c:	bf04      	itt	eq
 800616e:	2100      	moveq	r1, #0
 8006170:	4770      	bxeq	lr
 8006172:	b530      	push	{r4, r5, lr}
 8006174:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8006178:	f104 0432 	add.w	r4, r4, #50	; 0x32
 800617c:	f04f 0500 	mov.w	r5, #0
 8006180:	f04f 0100 	mov.w	r1, #0
 8006184:	e750      	b.n	8006028 <__adddf3+0x138>
 8006186:	bf00      	nop

08006188 <__aeabi_i2d>:
 8006188:	f090 0f00 	teq	r0, #0
 800618c:	bf04      	itt	eq
 800618e:	2100      	moveq	r1, #0
 8006190:	4770      	bxeq	lr
 8006192:	b530      	push	{r4, r5, lr}
 8006194:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8006198:	f104 0432 	add.w	r4, r4, #50	; 0x32
 800619c:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 80061a0:	bf48      	it	mi
 80061a2:	4240      	negmi	r0, r0
 80061a4:	f04f 0100 	mov.w	r1, #0
 80061a8:	e73e      	b.n	8006028 <__adddf3+0x138>
 80061aa:	bf00      	nop

080061ac <__aeabi_f2d>:
 80061ac:	0042      	lsls	r2, r0, #1
 80061ae:	ea4f 01e2 	mov.w	r1, r2, asr #3
 80061b2:	ea4f 0131 	mov.w	r1, r1, rrx
 80061b6:	ea4f 7002 	mov.w	r0, r2, lsl #28
 80061ba:	bf1f      	itttt	ne
 80061bc:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 80061c0:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 80061c4:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 80061c8:	4770      	bxne	lr
 80061ca:	f092 0f00 	teq	r2, #0
 80061ce:	bf14      	ite	ne
 80061d0:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 80061d4:	4770      	bxeq	lr
 80061d6:	b530      	push	{r4, r5, lr}
 80061d8:	f44f 7460 	mov.w	r4, #896	; 0x380
 80061dc:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80061e0:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 80061e4:	e720      	b.n	8006028 <__adddf3+0x138>
 80061e6:	bf00      	nop

080061e8 <__aeabi_ul2d>:
 80061e8:	ea50 0201 	orrs.w	r2, r0, r1
 80061ec:	bf08      	it	eq
 80061ee:	4770      	bxeq	lr
 80061f0:	b530      	push	{r4, r5, lr}
 80061f2:	f04f 0500 	mov.w	r5, #0
 80061f6:	e00a      	b.n	800620e <__aeabi_l2d+0x16>

080061f8 <__aeabi_l2d>:
 80061f8:	ea50 0201 	orrs.w	r2, r0, r1
 80061fc:	bf08      	it	eq
 80061fe:	4770      	bxeq	lr
 8006200:	b530      	push	{r4, r5, lr}
 8006202:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 8006206:	d502      	bpl.n	800620e <__aeabi_l2d+0x16>
 8006208:	4240      	negs	r0, r0
 800620a:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800620e:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8006212:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8006216:	ea5f 5c91 	movs.w	r12, r1, lsr #22
 800621a:	f43f aedc 	beq.w	8005fd6 <__adddf3+0xe6>
 800621e:	f04f 0203 	mov.w	r2, #3
 8006222:	ea5f 0cdc 	movs.w	r12, r12, lsr #3
 8006226:	bf18      	it	ne
 8006228:	3203      	addne	r2, #3
 800622a:	ea5f 0cdc 	movs.w	r12, r12, lsr #3
 800622e:	bf18      	it	ne
 8006230:	3203      	addne	r2, #3
 8006232:	eb02 02dc 	add.w	r2, r2, r12, lsr #3
 8006236:	f1c2 0320 	rsb	r3, r2, #32
 800623a:	fa00 fc03 	lsl.w	r12, r0, r3
 800623e:	fa20 f002 	lsr.w	r0, r0, r2
 8006242:	fa01 fe03 	lsl.w	lr, r1, r3
 8006246:	ea40 000e 	orr.w	r0, r0, lr
 800624a:	fa21 f102 	lsr.w	r1, r1, r2
 800624e:	4414      	add	r4, r2
 8006250:	e6c1      	b.n	8005fd6 <__adddf3+0xe6>
 8006252:	bf00      	nop

08006254 <__aeabi_dmul>:
 8006254:	b570      	push	{r4, r5, r6, lr}
 8006256:	f04f 0cff 	mov.w	r12, #255	; 0xff
 800625a:	f44c 6ce0 	orr.w	r12, r12, #1792	; 0x700
 800625e:	ea1c 5411 	ands.w	r4, r12, r1, lsr #20
 8006262:	bf1d      	ittte	ne
 8006264:	ea1c 5513 	andsne.w	r5, r12, r3, lsr #20
 8006268:	ea94 0f0c 	teqne	r4, r12
 800626c:	ea95 0f0c 	teqne	r5, r12
 8006270:	f000 f8de 	bleq	8006430 <__aeabi_dmul+0x1dc>
 8006274:	442c      	add	r4, r5
 8006276:	ea81 0603 	eor.w	r6, r1, r3
 800627a:	ea21 514c 	bic.w	r1, r1, r12, lsl #21
 800627e:	ea23 534c 	bic.w	r3, r3, r12, lsl #21
 8006282:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 8006286:	bf18      	it	ne
 8006288:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 800628c:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8006290:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8006294:	d038      	beq.n	8006308 <__aeabi_dmul+0xb4>
 8006296:	fba0 ce02 	umull	r12, lr, r0, r2
 800629a:	f04f 0500 	mov.w	r5, #0
 800629e:	fbe1 e502 	umlal	lr, r5, r1, r2
 80062a2:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 80062a6:	fbe0 e503 	umlal	lr, r5, r0, r3
 80062aa:	f04f 0600 	mov.w	r6, #0
 80062ae:	fbe1 5603 	umlal	r5, r6, r1, r3
 80062b2:	f09c 0f00 	teq	r12, #0
 80062b6:	bf18      	it	ne
 80062b8:	f04e 0e01 	orrne.w	lr, lr, #1
 80062bc:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 80062c0:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 80062c4:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 80062c8:	d204      	bcs.n	80062d4 <__aeabi_dmul+0x80>
 80062ca:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 80062ce:	416d      	adcs	r5, r5
 80062d0:	eb46 0606 	adc.w	r6, r6, r6
 80062d4:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 80062d8:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 80062dc:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 80062e0:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 80062e4:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 80062e8:	f1b4 0cfd 	subs.w	r12, r4, #253	; 0xfd
 80062ec:	bf88      	it	hi
 80062ee:	f5bc 6fe0 	cmphi.w	r12, #1792	; 0x700
 80062f2:	d81e      	bhi.n	8006332 <__aeabi_dmul+0xde>
 80062f4:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 80062f8:	bf08      	it	eq
 80062fa:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80062fe:	f150 0000 	adcs.w	r0, r0, #0
 8006302:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8006306:	bd70      	pop	{r4, r5, r6, pc}
 8006308:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 800630c:	ea46 0101 	orr.w	r1, r6, r1
 8006310:	ea40 0002 	orr.w	r0, r0, r2
 8006314:	ea81 0103 	eor.w	r1, r1, r3
 8006318:	ebb4 045c 	subs.w	r4, r4, r12, lsr #1
 800631c:	bfc2      	ittt	gt
 800631e:	ebd4 050c 	rsbsgt	r5, r4, r12
 8006322:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 8006326:	bd70      	popgt	{r4, r5, r6, pc}
 8006328:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 800632c:	f04f 0e00 	mov.w	lr, #0
 8006330:	3c01      	subs	r4, #1
 8006332:	f300 80ab 	bgt.w	800648c <__aeabi_dmul+0x238>
 8006336:	f114 0f36 	cmn.w	r4, #54	; 0x36
 800633a:	bfde      	ittt	le
 800633c:	2000      	movle	r0, #0
 800633e:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 8006342:	bd70      	pople	{r4, r5, r6, pc}
 8006344:	f1c4 0400 	rsb	r4, r4, #0
 8006348:	3c20      	subs	r4, #32
 800634a:	da35      	bge.n	80063b8 <__aeabi_dmul+0x164>
 800634c:	340c      	adds	r4, #12
 800634e:	dc1b      	bgt.n	8006388 <__aeabi_dmul+0x134>
 8006350:	f104 0414 	add.w	r4, r4, #20
 8006354:	f1c4 0520 	rsb	r5, r4, #32
 8006358:	fa00 f305 	lsl.w	r3, r0, r5
 800635c:	fa20 f004 	lsr.w	r0, r0, r4
 8006360:	fa01 f205 	lsl.w	r2, r1, r5
 8006364:	ea40 0002 	orr.w	r0, r0, r2
 8006368:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 800636c:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8006370:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8006374:	fa21 f604 	lsr.w	r6, r1, r4
 8006378:	eb42 0106 	adc.w	r1, r2, r6
 800637c:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8006380:	bf08      	it	eq
 8006382:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8006386:	bd70      	pop	{r4, r5, r6, pc}
 8006388:	f1c4 040c 	rsb	r4, r4, #12
 800638c:	f1c4 0520 	rsb	r5, r4, #32
 8006390:	fa00 f304 	lsl.w	r3, r0, r4
 8006394:	fa20 f005 	lsr.w	r0, r0, r5
 8006398:	fa01 f204 	lsl.w	r2, r1, r4
 800639c:	ea40 0002 	orr.w	r0, r0, r2
 80063a0:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80063a4:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 80063a8:	f141 0100 	adc.w	r1, r1, #0
 80063ac:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80063b0:	bf08      	it	eq
 80063b2:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80063b6:	bd70      	pop	{r4, r5, r6, pc}
 80063b8:	f1c4 0520 	rsb	r5, r4, #32
 80063bc:	fa00 f205 	lsl.w	r2, r0, r5
 80063c0:	ea4e 0e02 	orr.w	lr, lr, r2
 80063c4:	fa20 f304 	lsr.w	r3, r0, r4
 80063c8:	fa01 f205 	lsl.w	r2, r1, r5
 80063cc:	ea43 0302 	orr.w	r3, r3, r2
 80063d0:	fa21 f004 	lsr.w	r0, r1, r4
 80063d4:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80063d8:	fa21 f204 	lsr.w	r2, r1, r4
 80063dc:	ea20 0002 	bic.w	r0, r0, r2
 80063e0:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 80063e4:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80063e8:	bf08      	it	eq
 80063ea:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80063ee:	bd70      	pop	{r4, r5, r6, pc}
 80063f0:	f094 0f00 	teq	r4, #0
 80063f4:	d10f      	bne.n	8006416 <__aeabi_dmul+0x1c2>
 80063f6:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 80063fa:	0040      	lsls	r0, r0, #1
 80063fc:	eb41 0101 	adc.w	r1, r1, r1
 8006400:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8006404:	bf08      	it	eq
 8006406:	3c01      	subeq	r4, #1
 8006408:	d0f7      	beq.n	80063fa <__aeabi_dmul+0x1a6>
 800640a:	ea41 0106 	orr.w	r1, r1, r6
 800640e:	f095 0f00 	teq	r5, #0
 8006412:	bf18      	it	ne
 8006414:	4770      	bxne	lr
 8006416:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 800641a:	0052      	lsls	r2, r2, #1
 800641c:	eb43 0303 	adc.w	r3, r3, r3
 8006420:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 8006424:	bf08      	it	eq
 8006426:	3d01      	subeq	r5, #1
 8006428:	d0f7      	beq.n	800641a <__aeabi_dmul+0x1c6>
 800642a:	ea43 0306 	orr.w	r3, r3, r6
 800642e:	4770      	bx	lr
 8006430:	ea94 0f0c 	teq	r4, r12
 8006434:	ea0c 5513 	and.w	r5, r12, r3, lsr #20
 8006438:	bf18      	it	ne
 800643a:	ea95 0f0c 	teqne	r5, r12
 800643e:	d00c      	beq.n	800645a <__aeabi_dmul+0x206>
 8006440:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8006444:	bf18      	it	ne
 8006446:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800644a:	d1d1      	bne.n	80063f0 <__aeabi_dmul+0x19c>
 800644c:	ea81 0103 	eor.w	r1, r1, r3
 8006450:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8006454:	f04f 0000 	mov.w	r0, #0
 8006458:	bd70      	pop	{r4, r5, r6, pc}
 800645a:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 800645e:	bf06      	itte	eq
 8006460:	4610      	moveq	r0, r2
 8006462:	4619      	moveq	r1, r3
 8006464:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8006468:	d019      	beq.n	800649e <__aeabi_dmul+0x24a>
 800646a:	ea94 0f0c 	teq	r4, r12
 800646e:	d102      	bne.n	8006476 <__aeabi_dmul+0x222>
 8006470:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8006474:	d113      	bne.n	800649e <__aeabi_dmul+0x24a>
 8006476:	ea95 0f0c 	teq	r5, r12
 800647a:	d105      	bne.n	8006488 <__aeabi_dmul+0x234>
 800647c:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8006480:	bf1c      	itt	ne
 8006482:	4610      	movne	r0, r2
 8006484:	4619      	movne	r1, r3
 8006486:	d10a      	bne.n	800649e <__aeabi_dmul+0x24a>
 8006488:	ea81 0103 	eor.w	r1, r1, r3
 800648c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8006490:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8006494:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8006498:	f04f 0000 	mov.w	r0, #0
 800649c:	bd70      	pop	{r4, r5, r6, pc}
 800649e:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 80064a2:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 80064a6:	bd70      	pop	{r4, r5, r6, pc}

080064a8 <__aeabi_ddiv>:
 80064a8:	b570      	push	{r4, r5, r6, lr}
 80064aa:	f04f 0cff 	mov.w	r12, #255	; 0xff
 80064ae:	f44c 6ce0 	orr.w	r12, r12, #1792	; 0x700
 80064b2:	ea1c 5411 	ands.w	r4, r12, r1, lsr #20
 80064b6:	bf1d      	ittte	ne
 80064b8:	ea1c 5513 	andsne.w	r5, r12, r3, lsr #20
 80064bc:	ea94 0f0c 	teqne	r4, r12
 80064c0:	ea95 0f0c 	teqne	r5, r12
 80064c4:	f000 f8a7 	bleq	8006616 <__aeabi_ddiv+0x16e>
 80064c8:	eba4 0405 	sub.w	r4, r4, r5
 80064cc:	ea81 0e03 	eor.w	lr, r1, r3
 80064d0:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80064d4:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80064d8:	f000 8088 	beq.w	80065ec <__aeabi_ddiv+0x144>
 80064dc:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80064e0:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 80064e4:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 80064e8:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 80064ec:	ea4f 2202 	mov.w	r2, r2, lsl #8
 80064f0:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 80064f4:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 80064f8:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80064fc:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 8006500:	429d      	cmp	r5, r3
 8006502:	bf08      	it	eq
 8006504:	4296      	cmpeq	r6, r2
 8006506:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 800650a:	f504 7440 	add.w	r4, r4, #768	; 0x300
 800650e:	d202      	bcs.n	8006516 <__aeabi_ddiv+0x6e>
 8006510:	085b      	lsrs	r3, r3, #1
 8006512:	ea4f 0232 	mov.w	r2, r2, rrx
 8006516:	1ab6      	subs	r6, r6, r2
 8006518:	eb65 0503 	sbc.w	r5, r5, r3
 800651c:	085b      	lsrs	r3, r3, #1
 800651e:	ea4f 0232 	mov.w	r2, r2, rrx
 8006522:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 8006526:	f44f 2c00 	mov.w	r12, #524288	; 0x80000
 800652a:	ebb6 0e02 	subs.w	lr, r6, r2
 800652e:	eb75 0e03 	sbcs.w	lr, r5, r3
 8006532:	bf22      	ittt	cs
 8006534:	1ab6      	subcs	r6, r6, r2
 8006536:	4675      	movcs	r5, lr
 8006538:	ea40 000c 	orrcs.w	r0, r0, r12
 800653c:	085b      	lsrs	r3, r3, #1
 800653e:	ea4f 0232 	mov.w	r2, r2, rrx
 8006542:	ebb6 0e02 	subs.w	lr, r6, r2
 8006546:	eb75 0e03 	sbcs.w	lr, r5, r3
 800654a:	bf22      	ittt	cs
 800654c:	1ab6      	subcs	r6, r6, r2
 800654e:	4675      	movcs	r5, lr
 8006550:	ea40 005c 	orrcs.w	r0, r0, r12, lsr #1
 8006554:	085b      	lsrs	r3, r3, #1
 8006556:	ea4f 0232 	mov.w	r2, r2, rrx
 800655a:	ebb6 0e02 	subs.w	lr, r6, r2
 800655e:	eb75 0e03 	sbcs.w	lr, r5, r3
 8006562:	bf22      	ittt	cs
 8006564:	1ab6      	subcs	r6, r6, r2
 8006566:	4675      	movcs	r5, lr
 8006568:	ea40 009c 	orrcs.w	r0, r0, r12, lsr #2
 800656c:	085b      	lsrs	r3, r3, #1
 800656e:	ea4f 0232 	mov.w	r2, r2, rrx
 8006572:	ebb6 0e02 	subs.w	lr, r6, r2
 8006576:	eb75 0e03 	sbcs.w	lr, r5, r3
 800657a:	bf22      	ittt	cs
 800657c:	1ab6      	subcs	r6, r6, r2
 800657e:	4675      	movcs	r5, lr
 8006580:	ea40 00dc 	orrcs.w	r0, r0, r12, lsr #3
 8006584:	ea55 0e06 	orrs.w	lr, r5, r6
 8006588:	d018      	beq.n	80065bc <__aeabi_ddiv+0x114>
 800658a:	ea4f 1505 	mov.w	r5, r5, lsl #4
 800658e:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8006592:	ea4f 1606 	mov.w	r6, r6, lsl #4
 8006596:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800659a:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 800659e:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 80065a2:	ea5f 1c1c 	movs.w	r12, r12, lsr #4
 80065a6:	d1c0      	bne.n	800652a <__aeabi_ddiv+0x82>
 80065a8:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80065ac:	d10b      	bne.n	80065c6 <__aeabi_ddiv+0x11e>
 80065ae:	ea41 0100 	orr.w	r1, r1, r0
 80065b2:	f04f 0000 	mov.w	r0, #0
 80065b6:	f04f 4c00 	mov.w	r12, #2147483648	; 0x80000000
 80065ba:	e7b6      	b.n	800652a <__aeabi_ddiv+0x82>
 80065bc:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80065c0:	bf04      	itt	eq
 80065c2:	4301      	orreq	r1, r0
 80065c4:	2000      	moveq	r0, #0
 80065c6:	f1b4 0cfd 	subs.w	r12, r4, #253	; 0xfd
 80065ca:	bf88      	it	hi
 80065cc:	f5bc 6fe0 	cmphi.w	r12, #1792	; 0x700
 80065d0:	f63f aeaf 	bhi.w	8006332 <__aeabi_dmul+0xde>
 80065d4:	ebb5 0c03 	subs.w	r12, r5, r3
 80065d8:	bf04      	itt	eq
 80065da:	ebb6 0c02 	subseq.w	r12, r6, r2
 80065de:	ea5f 0c50 	movseq.w	r12, r0, lsr #1
 80065e2:	f150 0000 	adcs.w	r0, r0, #0
 80065e6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80065ea:	bd70      	pop	{r4, r5, r6, pc}
 80065ec:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 80065f0:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 80065f4:	eb14 045c 	adds.w	r4, r4, r12, lsr #1
 80065f8:	bfc2      	ittt	gt
 80065fa:	ebd4 050c 	rsbsgt	r5, r4, r12
 80065fe:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 8006602:	bd70      	popgt	{r4, r5, r6, pc}
 8006604:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8006608:	f04f 0e00 	mov.w	lr, #0
 800660c:	3c01      	subs	r4, #1
 800660e:	e690      	b.n	8006332 <__aeabi_dmul+0xde>
 8006610:	ea45 0e06 	orr.w	lr, r5, r6
 8006614:	e68d      	b.n	8006332 <__aeabi_dmul+0xde>
 8006616:	ea0c 5513 	and.w	r5, r12, r3, lsr #20
 800661a:	ea94 0f0c 	teq	r4, r12
 800661e:	bf08      	it	eq
 8006620:	ea95 0f0c 	teqeq	r5, r12
 8006624:	f43f af3b 	beq.w	800649e <__aeabi_dmul+0x24a>
 8006628:	ea94 0f0c 	teq	r4, r12
 800662c:	d10a      	bne.n	8006644 <__aeabi_ddiv+0x19c>
 800662e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8006632:	f47f af34 	bne.w	800649e <__aeabi_dmul+0x24a>
 8006636:	ea95 0f0c 	teq	r5, r12
 800663a:	f47f af25 	bne.w	8006488 <__aeabi_dmul+0x234>
 800663e:	4610      	mov	r0, r2
 8006640:	4619      	mov	r1, r3
 8006642:	e72c      	b.n	800649e <__aeabi_dmul+0x24a>
 8006644:	ea95 0f0c 	teq	r5, r12
 8006648:	d106      	bne.n	8006658 <__aeabi_ddiv+0x1b0>
 800664a:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 800664e:	f43f aefd 	beq.w	800644c <__aeabi_dmul+0x1f8>
 8006652:	4610      	mov	r0, r2
 8006654:	4619      	mov	r1, r3
 8006656:	e722      	b.n	800649e <__aeabi_dmul+0x24a>
 8006658:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 800665c:	bf18      	it	ne
 800665e:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8006662:	f47f aec5 	bne.w	80063f0 <__aeabi_dmul+0x19c>
 8006666:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 800666a:	f47f af0d 	bne.w	8006488 <__aeabi_dmul+0x234>
 800666e:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8006672:	f47f aeeb 	bne.w	800644c <__aeabi_dmul+0x1f8>
 8006676:	e712      	b.n	800649e <__aeabi_dmul+0x24a>

08006678 <__aeabi_d2f>:
 8006678:	ea4f 0241 	mov.w	r2, r1, lsl #1
 800667c:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
 8006680:	bf24      	itt	cs
 8006682:	f5b3 1c00 	subscs.w	r12, r3, #2097152	; 0x200000
 8006686:	f1dc 5cfe 	rsbscs	r12, r12, #532676608	; 0x1fc00000
 800668a:	d90d      	bls.n	80066a8 <__aeabi_d2f+0x30>
 800668c:	f001 4c00 	and.w	r12, r1, #2147483648	; 0x80000000
 8006690:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8006694:	ea4c 7050 	orr.w	r0, r12, r0, lsr #29
 8006698:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
 800669c:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 80066a0:	bf08      	it	eq
 80066a2:	f020 0001 	biceq.w	r0, r0, #1
 80066a6:	4770      	bx	lr
 80066a8:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
 80066ac:	d121      	bne.n	80066f2 <__aeabi_d2f+0x7a>
 80066ae:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
 80066b2:	bfbc      	itt	lt
 80066b4:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
 80066b8:	4770      	bxlt	lr
 80066ba:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80066be:	ea4f 5252 	mov.w	r2, r2, lsr #21
 80066c2:	f1c2 0218 	rsb	r2, r2, #24
 80066c6:	f1c2 0c20 	rsb	r12, r2, #32
 80066ca:	fa10 f30c 	lsls.w	r3, r0, r12
 80066ce:	fa20 f002 	lsr.w	r0, r0, r2
 80066d2:	bf18      	it	ne
 80066d4:	f040 0001 	orrne.w	r0, r0, #1
 80066d8:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 80066dc:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 80066e0:	fa03 fc0c 	lsl.w	r12, r3, r12
 80066e4:	ea40 000c 	orr.w	r0, r0, r12
 80066e8:	fa23 f302 	lsr.w	r3, r3, r2
 80066ec:	ea4f 0343 	mov.w	r3, r3, lsl #1
 80066f0:	e7cc      	b.n	800668c <__aeabi_d2f+0x14>
 80066f2:	ea7f 5362 	mvns.w	r3, r2, asr #21
 80066f6:	d107      	bne.n	8006708 <__aeabi_d2f+0x90>
 80066f8:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 80066fc:	bf1e      	ittt	ne
 80066fe:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
 8006702:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
 8006706:	4770      	bxne	lr
 8006708:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
 800670c:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8006710:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8006714:	4770      	bx	lr
 8006716:	bf00      	nop

08006718 <__errno>:
 8006718:	4b01      	ldr	r3, [pc, #4]	; (8006720 <__errno+0x8>)
 800671a:	6818      	ldr	r0, [r3, #0]
 800671c:	4770      	bx	lr
 800671e:	bf00      	nop
 8006720:	200001c4 	.word	0x200001c4

08006724 <__sflush_r>:
 8006724:	898a      	ldrh	r2, [r1, #12]
 8006726:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800672a:	4605      	mov	r5, r0
 800672c:	0710      	lsls	r0, r2, #28
 800672e:	460c      	mov	r4, r1
 8006730:	d45a      	bmi.n	80067e8 <__sflush_r+0xc4>
 8006732:	684b      	ldr	r3, [r1, #4]
 8006734:	2b00      	cmp	r3, #0
 8006736:	dc05      	bgt.n	8006744 <__sflush_r+0x20>
 8006738:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 800673a:	2b00      	cmp	r3, #0
 800673c:	dc02      	bgt.n	8006744 <__sflush_r+0x20>
 800673e:	2000      	movs	r0, #0
 8006740:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8006744:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8006746:	2e00      	cmp	r6, #0
 8006748:	d0f9      	beq.n	800673e <__sflush_r+0x1a>
 800674a:	2300      	movs	r3, #0
 800674c:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8006750:	682f      	ldr	r7, [r5, #0]
 8006752:	602b      	str	r3, [r5, #0]
 8006754:	d033      	beq.n	80067be <__sflush_r+0x9a>
 8006756:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8006758:	89a3      	ldrh	r3, [r4, #12]
 800675a:	075a      	lsls	r2, r3, #29
 800675c:	d505      	bpl.n	800676a <__sflush_r+0x46>
 800675e:	6863      	ldr	r3, [r4, #4]
 8006760:	1ac0      	subs	r0, r0, r3
 8006762:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8006764:	b10b      	cbz	r3, 800676a <__sflush_r+0x46>
 8006766:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8006768:	1ac0      	subs	r0, r0, r3
 800676a:	2300      	movs	r3, #0
 800676c:	4602      	mov	r2, r0
 800676e:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8006770:	6a21      	ldr	r1, [r4, #32]
 8006772:	4628      	mov	r0, r5
 8006774:	47b0      	blx	r6
 8006776:	1c43      	adds	r3, r0, #1
 8006778:	89a3      	ldrh	r3, [r4, #12]
 800677a:	d106      	bne.n	800678a <__sflush_r+0x66>
 800677c:	6829      	ldr	r1, [r5, #0]
 800677e:	291d      	cmp	r1, #29
 8006780:	d84b      	bhi.n	800681a <__sflush_r+0xf6>
 8006782:	4a2b      	ldr	r2, [pc, #172]	; (8006830 <__sflush_r+0x10c>)
 8006784:	40ca      	lsrs	r2, r1
 8006786:	07d6      	lsls	r6, r2, #31
 8006788:	d547      	bpl.n	800681a <__sflush_r+0xf6>
 800678a:	2200      	movs	r2, #0
 800678c:	6062      	str	r2, [r4, #4]
 800678e:	04d9      	lsls	r1, r3, #19
 8006790:	6922      	ldr	r2, [r4, #16]
 8006792:	6022      	str	r2, [r4, #0]
 8006794:	d504      	bpl.n	80067a0 <__sflush_r+0x7c>
 8006796:	1c42      	adds	r2, r0, #1
 8006798:	d101      	bne.n	800679e <__sflush_r+0x7a>
 800679a:	682b      	ldr	r3, [r5, #0]
 800679c:	b903      	cbnz	r3, 80067a0 <__sflush_r+0x7c>
 800679e:	6560      	str	r0, [r4, #84]	; 0x54
 80067a0:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80067a2:	602f      	str	r7, [r5, #0]
 80067a4:	2900      	cmp	r1, #0
 80067a6:	d0ca      	beq.n	800673e <__sflush_r+0x1a>
 80067a8:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80067ac:	4299      	cmp	r1, r3
 80067ae:	d002      	beq.n	80067b6 <__sflush_r+0x92>
 80067b0:	4628      	mov	r0, r5
 80067b2:	f7ff f95b 	bl	8005a6c <__wrap__free_r>
 80067b6:	2000      	movs	r0, #0
 80067b8:	6360      	str	r0, [r4, #52]	; 0x34
 80067ba:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80067be:	6a21      	ldr	r1, [r4, #32]
 80067c0:	2301      	movs	r3, #1
 80067c2:	4628      	mov	r0, r5
 80067c4:	47b0      	blx	r6
 80067c6:	1c41      	adds	r1, r0, #1
 80067c8:	d1c6      	bne.n	8006758 <__sflush_r+0x34>
 80067ca:	682b      	ldr	r3, [r5, #0]
 80067cc:	2b00      	cmp	r3, #0
 80067ce:	d0c3      	beq.n	8006758 <__sflush_r+0x34>
 80067d0:	2b1d      	cmp	r3, #29
 80067d2:	d001      	beq.n	80067d8 <__sflush_r+0xb4>
 80067d4:	2b16      	cmp	r3, #22
 80067d6:	d101      	bne.n	80067dc <__sflush_r+0xb8>
 80067d8:	602f      	str	r7, [r5, #0]
 80067da:	e7b0      	b.n	800673e <__sflush_r+0x1a>
 80067dc:	89a3      	ldrh	r3, [r4, #12]
 80067de:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80067e2:	81a3      	strh	r3, [r4, #12]
 80067e4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80067e8:	690f      	ldr	r7, [r1, #16]
 80067ea:	2f00      	cmp	r7, #0
 80067ec:	d0a7      	beq.n	800673e <__sflush_r+0x1a>
 80067ee:	0793      	lsls	r3, r2, #30
 80067f0:	680e      	ldr	r6, [r1, #0]
 80067f2:	bf08      	it	eq
 80067f4:	694b      	ldreq	r3, [r1, #20]
 80067f6:	600f      	str	r7, [r1, #0]
 80067f8:	bf18      	it	ne
 80067fa:	2300      	movne	r3, #0
 80067fc:	eba6 0807 	sub.w	r8, r6, r7
 8006800:	608b      	str	r3, [r1, #8]
 8006802:	f1b8 0f00 	cmp.w	r8, #0
 8006806:	dd9a      	ble.n	800673e <__sflush_r+0x1a>
 8006808:	4643      	mov	r3, r8
 800680a:	463a      	mov	r2, r7
 800680c:	6a21      	ldr	r1, [r4, #32]
 800680e:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8006810:	4628      	mov	r0, r5
 8006812:	47b0      	blx	r6
 8006814:	2800      	cmp	r0, #0
 8006816:	dc07      	bgt.n	8006828 <__sflush_r+0x104>
 8006818:	89a3      	ldrh	r3, [r4, #12]
 800681a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800681e:	81a3      	strh	r3, [r4, #12]
 8006820:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8006824:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8006828:	4407      	add	r7, r0
 800682a:	eba8 0800 	sub.w	r8, r8, r0
 800682e:	e7e8      	b.n	8006802 <__sflush_r+0xde>
 8006830:	20400001 	.word	0x20400001

08006834 <_fflush_r>:
 8006834:	b538      	push	{r3, r4, r5, lr}
 8006836:	690b      	ldr	r3, [r1, #16]
 8006838:	4605      	mov	r5, r0
 800683a:	460c      	mov	r4, r1
 800683c:	b1db      	cbz	r3, 8006876 <_fflush_r+0x42>
 800683e:	b118      	cbz	r0, 8006848 <_fflush_r+0x14>
 8006840:	6983      	ldr	r3, [r0, #24]
 8006842:	b90b      	cbnz	r3, 8006848 <_fflush_r+0x14>
 8006844:	f000 f872 	bl	800692c <__sinit>
 8006848:	4b0c      	ldr	r3, [pc, #48]	; (800687c <_fflush_r+0x48>)
 800684a:	429c      	cmp	r4, r3
 800684c:	d109      	bne.n	8006862 <_fflush_r+0x2e>
 800684e:	686c      	ldr	r4, [r5, #4]
 8006850:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8006854:	b17b      	cbz	r3, 8006876 <_fflush_r+0x42>
 8006856:	4621      	mov	r1, r4
 8006858:	4628      	mov	r0, r5
 800685a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800685e:	f7ff bf61 	b.w	8006724 <__sflush_r>
 8006862:	4b07      	ldr	r3, [pc, #28]	; (8006880 <_fflush_r+0x4c>)
 8006864:	429c      	cmp	r4, r3
 8006866:	d101      	bne.n	800686c <_fflush_r+0x38>
 8006868:	68ac      	ldr	r4, [r5, #8]
 800686a:	e7f1      	b.n	8006850 <_fflush_r+0x1c>
 800686c:	4b05      	ldr	r3, [pc, #20]	; (8006884 <_fflush_r+0x50>)
 800686e:	429c      	cmp	r4, r3
 8006870:	bf08      	it	eq
 8006872:	68ec      	ldreq	r4, [r5, #12]
 8006874:	e7ec      	b.n	8006850 <_fflush_r+0x1c>
 8006876:	2000      	movs	r0, #0
 8006878:	bd38      	pop	{r3, r4, r5, pc}
 800687a:	bf00      	nop
 800687c:	08007e50 	.word	0x08007e50
 8006880:	08007e70 	.word	0x08007e70
 8006884:	08007e30 	.word	0x08007e30

08006888 <fflush>:
 8006888:	4601      	mov	r1, r0
 800688a:	b920      	cbnz	r0, 8006896 <fflush+0xe>
 800688c:	4b04      	ldr	r3, [pc, #16]	; (80068a0 <fflush+0x18>)
 800688e:	4905      	ldr	r1, [pc, #20]	; (80068a4 <fflush+0x1c>)
 8006890:	6818      	ldr	r0, [r3, #0]
 8006892:	f000 b8b7 	b.w	8006a04 <_fwalk_reent>
 8006896:	4b04      	ldr	r3, [pc, #16]	; (80068a8 <fflush+0x20>)
 8006898:	6818      	ldr	r0, [r3, #0]
 800689a:	f7ff bfcb 	b.w	8006834 <_fflush_r>
 800689e:	bf00      	nop
 80068a0:	08007e90 	.word	0x08007e90
 80068a4:	08006835 	.word	0x08006835
 80068a8:	200001c4 	.word	0x200001c4

080068ac <_cleanup_r>:
 80068ac:	4901      	ldr	r1, [pc, #4]	; (80068b4 <_cleanup_r+0x8>)
 80068ae:	f000 b8a9 	b.w	8006a04 <_fwalk_reent>
 80068b2:	bf00      	nop
 80068b4:	08006835 	.word	0x08006835

080068b8 <std.isra.0>:
 80068b8:	2300      	movs	r3, #0
 80068ba:	b510      	push	{r4, lr}
 80068bc:	4604      	mov	r4, r0
 80068be:	6003      	str	r3, [r0, #0]
 80068c0:	6043      	str	r3, [r0, #4]
 80068c2:	6083      	str	r3, [r0, #8]
 80068c4:	8181      	strh	r1, [r0, #12]
 80068c6:	6643      	str	r3, [r0, #100]	; 0x64
 80068c8:	81c2      	strh	r2, [r0, #14]
 80068ca:	6103      	str	r3, [r0, #16]
 80068cc:	6143      	str	r3, [r0, #20]
 80068ce:	6183      	str	r3, [r0, #24]
 80068d0:	4619      	mov	r1, r3
 80068d2:	2208      	movs	r2, #8
 80068d4:	305c      	adds	r0, #92	; 0x5c
 80068d6:	f000 f960 	bl	8006b9a <memset>
 80068da:	4b05      	ldr	r3, [pc, #20]	; (80068f0 <std.isra.0+0x38>)
 80068dc:	6263      	str	r3, [r4, #36]	; 0x24
 80068de:	4b05      	ldr	r3, [pc, #20]	; (80068f4 <std.isra.0+0x3c>)
 80068e0:	62a3      	str	r3, [r4, #40]	; 0x28
 80068e2:	4b05      	ldr	r3, [pc, #20]	; (80068f8 <std.isra.0+0x40>)
 80068e4:	62e3      	str	r3, [r4, #44]	; 0x2c
 80068e6:	4b05      	ldr	r3, [pc, #20]	; (80068fc <std.isra.0+0x44>)
 80068e8:	6224      	str	r4, [r4, #32]
 80068ea:	6323      	str	r3, [r4, #48]	; 0x30
 80068ec:	bd10      	pop	{r4, pc}
 80068ee:	bf00      	nop
 80068f0:	080070ad 	.word	0x080070ad
 80068f4:	080070cf 	.word	0x080070cf
 80068f8:	08007107 	.word	0x08007107
 80068fc:	0800712b 	.word	0x0800712b

08006900 <__sfmoreglue>:
 8006900:	b570      	push	{r4, r5, r6, lr}
 8006902:	1e4a      	subs	r2, r1, #1
 8006904:	2568      	movs	r5, #104	; 0x68
 8006906:	4355      	muls	r5, r2
 8006908:	460e      	mov	r6, r1
 800690a:	f105 0174 	add.w	r1, r5, #116	; 0x74
 800690e:	f7ff f8a9 	bl	8005a64 <__wrap__malloc_r>
 8006912:	4604      	mov	r4, r0
 8006914:	b140      	cbz	r0, 8006928 <__sfmoreglue+0x28>
 8006916:	2100      	movs	r1, #0
 8006918:	e880 0042 	stmia.w	r0, {r1, r6}
 800691c:	300c      	adds	r0, #12
 800691e:	60a0      	str	r0, [r4, #8]
 8006920:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8006924:	f000 f939 	bl	8006b9a <memset>
 8006928:	4620      	mov	r0, r4
 800692a:	bd70      	pop	{r4, r5, r6, pc}

0800692c <__sinit>:
 800692c:	6983      	ldr	r3, [r0, #24]
 800692e:	b510      	push	{r4, lr}
 8006930:	4604      	mov	r4, r0
 8006932:	bb33      	cbnz	r3, 8006982 <__sinit+0x56>
 8006934:	6483      	str	r3, [r0, #72]	; 0x48
 8006936:	64c3      	str	r3, [r0, #76]	; 0x4c
 8006938:	6503      	str	r3, [r0, #80]	; 0x50
 800693a:	4b12      	ldr	r3, [pc, #72]	; (8006984 <__sinit+0x58>)
 800693c:	4a12      	ldr	r2, [pc, #72]	; (8006988 <__sinit+0x5c>)
 800693e:	681b      	ldr	r3, [r3, #0]
 8006940:	6282      	str	r2, [r0, #40]	; 0x28
 8006942:	4298      	cmp	r0, r3
 8006944:	bf04      	itt	eq
 8006946:	2301      	moveq	r3, #1
 8006948:	6183      	streq	r3, [r0, #24]
 800694a:	f000 f81f 	bl	800698c <__sfp>
 800694e:	6060      	str	r0, [r4, #4]
 8006950:	4620      	mov	r0, r4
 8006952:	f000 f81b 	bl	800698c <__sfp>
 8006956:	60a0      	str	r0, [r4, #8]
 8006958:	4620      	mov	r0, r4
 800695a:	f000 f817 	bl	800698c <__sfp>
 800695e:	2200      	movs	r2, #0
 8006960:	60e0      	str	r0, [r4, #12]
 8006962:	2104      	movs	r1, #4
 8006964:	6860      	ldr	r0, [r4, #4]
 8006966:	f7ff ffa7 	bl	80068b8 <std.isra.0>
 800696a:	2201      	movs	r2, #1
 800696c:	2109      	movs	r1, #9
 800696e:	68a0      	ldr	r0, [r4, #8]
 8006970:	f7ff ffa2 	bl	80068b8 <std.isra.0>
 8006974:	2202      	movs	r2, #2
 8006976:	2112      	movs	r1, #18
 8006978:	68e0      	ldr	r0, [r4, #12]
 800697a:	f7ff ff9d 	bl	80068b8 <std.isra.0>
 800697e:	2301      	movs	r3, #1
 8006980:	61a3      	str	r3, [r4, #24]
 8006982:	bd10      	pop	{r4, pc}
 8006984:	08007e90 	.word	0x08007e90
 8006988:	080068ad 	.word	0x080068ad

0800698c <__sfp>:
 800698c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800698e:	4b1c      	ldr	r3, [pc, #112]	; (8006a00 <__sfp+0x74>)
 8006990:	681e      	ldr	r6, [r3, #0]
 8006992:	69b3      	ldr	r3, [r6, #24]
 8006994:	4607      	mov	r7, r0
 8006996:	b913      	cbnz	r3, 800699e <__sfp+0x12>
 8006998:	4630      	mov	r0, r6
 800699a:	f7ff ffc7 	bl	800692c <__sinit>
 800699e:	3648      	adds	r6, #72	; 0x48
 80069a0:	68b4      	ldr	r4, [r6, #8]
 80069a2:	6873      	ldr	r3, [r6, #4]
 80069a4:	3b01      	subs	r3, #1
 80069a6:	d503      	bpl.n	80069b0 <__sfp+0x24>
 80069a8:	6833      	ldr	r3, [r6, #0]
 80069aa:	b133      	cbz	r3, 80069ba <__sfp+0x2e>
 80069ac:	6836      	ldr	r6, [r6, #0]
 80069ae:	e7f7      	b.n	80069a0 <__sfp+0x14>
 80069b0:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 80069b4:	b16d      	cbz	r5, 80069d2 <__sfp+0x46>
 80069b6:	3468      	adds	r4, #104	; 0x68
 80069b8:	e7f4      	b.n	80069a4 <__sfp+0x18>
 80069ba:	2104      	movs	r1, #4
 80069bc:	4638      	mov	r0, r7
 80069be:	f7ff ff9f 	bl	8006900 <__sfmoreglue>
 80069c2:	6030      	str	r0, [r6, #0]
 80069c4:	2800      	cmp	r0, #0
 80069c6:	d1f1      	bne.n	80069ac <__sfp+0x20>
 80069c8:	230c      	movs	r3, #12
 80069ca:	603b      	str	r3, [r7, #0]
 80069cc:	4604      	mov	r4, r0
 80069ce:	4620      	mov	r0, r4
 80069d0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80069d2:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80069d6:	81e3      	strh	r3, [r4, #14]
 80069d8:	2301      	movs	r3, #1
 80069da:	81a3      	strh	r3, [r4, #12]
 80069dc:	6665      	str	r5, [r4, #100]	; 0x64
 80069de:	6025      	str	r5, [r4, #0]
 80069e0:	60a5      	str	r5, [r4, #8]
 80069e2:	6065      	str	r5, [r4, #4]
 80069e4:	6125      	str	r5, [r4, #16]
 80069e6:	6165      	str	r5, [r4, #20]
 80069e8:	61a5      	str	r5, [r4, #24]
 80069ea:	2208      	movs	r2, #8
 80069ec:	4629      	mov	r1, r5
 80069ee:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 80069f2:	f000 f8d2 	bl	8006b9a <memset>
 80069f6:	6365      	str	r5, [r4, #52]	; 0x34
 80069f8:	63a5      	str	r5, [r4, #56]	; 0x38
 80069fa:	64a5      	str	r5, [r4, #72]	; 0x48
 80069fc:	64e5      	str	r5, [r4, #76]	; 0x4c
 80069fe:	e7e6      	b.n	80069ce <__sfp+0x42>
 8006a00:	08007e90 	.word	0x08007e90

08006a04 <_fwalk_reent>:
 8006a04:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8006a08:	4680      	mov	r8, r0
 8006a0a:	4689      	mov	r9, r1
 8006a0c:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8006a10:	2600      	movs	r6, #0
 8006a12:	b914      	cbnz	r4, 8006a1a <_fwalk_reent+0x16>
 8006a14:	4630      	mov	r0, r6
 8006a16:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8006a1a:	68a5      	ldr	r5, [r4, #8]
 8006a1c:	6867      	ldr	r7, [r4, #4]
 8006a1e:	3f01      	subs	r7, #1
 8006a20:	d501      	bpl.n	8006a26 <_fwalk_reent+0x22>
 8006a22:	6824      	ldr	r4, [r4, #0]
 8006a24:	e7f5      	b.n	8006a12 <_fwalk_reent+0xe>
 8006a26:	89ab      	ldrh	r3, [r5, #12]
 8006a28:	2b01      	cmp	r3, #1
 8006a2a:	d907      	bls.n	8006a3c <_fwalk_reent+0x38>
 8006a2c:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8006a30:	3301      	adds	r3, #1
 8006a32:	d003      	beq.n	8006a3c <_fwalk_reent+0x38>
 8006a34:	4629      	mov	r1, r5
 8006a36:	4640      	mov	r0, r8
 8006a38:	47c8      	blx	r9
 8006a3a:	4306      	orrs	r6, r0
 8006a3c:	3568      	adds	r5, #104	; 0x68
 8006a3e:	e7ee      	b.n	8006a1e <_fwalk_reent+0x1a>

08006a40 <__libc_init_array>:
 8006a40:	b570      	push	{r4, r5, r6, lr}
 8006a42:	4e0d      	ldr	r6, [pc, #52]	; (8006a78 <__libc_init_array+0x38>)
 8006a44:	4c0d      	ldr	r4, [pc, #52]	; (8006a7c <__libc_init_array+0x3c>)
 8006a46:	1ba4      	subs	r4, r4, r6
 8006a48:	10a4      	asrs	r4, r4, #2
 8006a4a:	2500      	movs	r5, #0
 8006a4c:	42a5      	cmp	r5, r4
 8006a4e:	d109      	bne.n	8006a64 <__libc_init_array+0x24>
 8006a50:	4e0b      	ldr	r6, [pc, #44]	; (8006a80 <__libc_init_array+0x40>)
 8006a52:	4c0c      	ldr	r4, [pc, #48]	; (8006a84 <__libc_init_array+0x44>)
 8006a54:	f000 fd36 	bl	80074c4 <_init>
 8006a58:	1ba4      	subs	r4, r4, r6
 8006a5a:	10a4      	asrs	r4, r4, #2
 8006a5c:	2500      	movs	r5, #0
 8006a5e:	42a5      	cmp	r5, r4
 8006a60:	d105      	bne.n	8006a6e <__libc_init_array+0x2e>
 8006a62:	bd70      	pop	{r4, r5, r6, pc}
 8006a64:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8006a68:	4798      	blx	r3
 8006a6a:	3501      	adds	r5, #1
 8006a6c:	e7ee      	b.n	8006a4c <__libc_init_array+0xc>
 8006a6e:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8006a72:	4798      	blx	r3
 8006a74:	3501      	adds	r5, #1
 8006a76:	e7f2      	b.n	8006a5e <__libc_init_array+0x1e>
 8006a78:	20000228 	.word	0x20000228
 8006a7c:	20000228 	.word	0x20000228
 8006a80:	20000228 	.word	0x20000228
 8006a84:	20000234 	.word	0x20000234

08006a88 <malloc>:
 8006a88:	4b02      	ldr	r3, [pc, #8]	; (8006a94 <malloc+0xc>)
 8006a8a:	4601      	mov	r1, r0
 8006a8c:	6818      	ldr	r0, [r3, #0]
 8006a8e:	f7fe bfe9 	b.w	8005a64 <__wrap__malloc_r>
 8006a92:	bf00      	nop
 8006a94:	200001c4 	.word	0x200001c4

08006a98 <free>:
 8006a98:	4b02      	ldr	r3, [pc, #8]	; (8006aa4 <free+0xc>)
 8006a9a:	4601      	mov	r1, r0
 8006a9c:	6818      	ldr	r0, [r3, #0]
 8006a9e:	f7fe bfe5 	b.w	8005a6c <__wrap__free_r>
 8006aa2:	bf00      	nop
 8006aa4:	200001c4 	.word	0x200001c4
	...

08006ab0 <memchr>:
 8006ab0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8006ab4:	2a10      	cmp	r2, #16
 8006ab6:	db2b      	blt.n	8006b10 <memchr+0x60>
 8006ab8:	f010 0f07 	tst.w	r0, #7
 8006abc:	d008      	beq.n	8006ad0 <memchr+0x20>
 8006abe:	f810 3b01 	ldrb.w	r3, [r0], #1
 8006ac2:	3a01      	subs	r2, #1
 8006ac4:	428b      	cmp	r3, r1
 8006ac6:	d02d      	beq.n	8006b24 <memchr+0x74>
 8006ac8:	f010 0f07 	tst.w	r0, #7
 8006acc:	b342      	cbz	r2, 8006b20 <memchr+0x70>
 8006ace:	d1f6      	bne.n	8006abe <memchr+0xe>
 8006ad0:	b4f0      	push	{r4, r5, r6, r7}
 8006ad2:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8006ad6:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 8006ada:	f022 0407 	bic.w	r4, r2, #7
 8006ade:	f07f 0700 	mvns.w	r7, #0
 8006ae2:	2300      	movs	r3, #0
 8006ae4:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8006ae8:	3c08      	subs	r4, #8
 8006aea:	ea85 0501 	eor.w	r5, r5, r1
 8006aee:	ea86 0601 	eor.w	r6, r6, r1
 8006af2:	fa85 f547 	uadd8	r5, r5, r7
 8006af6:	faa3 f587 	sel	r5, r3, r7
 8006afa:	fa86 f647 	uadd8	r6, r6, r7
 8006afe:	faa5 f687 	sel	r6, r5, r7
 8006b02:	b98e      	cbnz	r6, 8006b28 <memchr+0x78>
 8006b04:	d1ee      	bne.n	8006ae4 <memchr+0x34>
 8006b06:	bcf0      	pop	{r4, r5, r6, r7}
 8006b08:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8006b0c:	f002 0207 	and.w	r2, r2, #7
 8006b10:	b132      	cbz	r2, 8006b20 <memchr+0x70>
 8006b12:	f810 3b01 	ldrb.w	r3, [r0], #1
 8006b16:	3a01      	subs	r2, #1
 8006b18:	ea83 0301 	eor.w	r3, r3, r1
 8006b1c:	b113      	cbz	r3, 8006b24 <memchr+0x74>
 8006b1e:	d1f8      	bne.n	8006b12 <memchr+0x62>
 8006b20:	2000      	movs	r0, #0
 8006b22:	4770      	bx	lr
 8006b24:	3801      	subs	r0, #1
 8006b26:	4770      	bx	lr
 8006b28:	2d00      	cmp	r5, #0
 8006b2a:	bf06      	itte	eq
 8006b2c:	4635      	moveq	r5, r6
 8006b2e:	3803      	subeq	r0, #3
 8006b30:	3807      	subne	r0, #7
 8006b32:	f015 0f01 	tst.w	r5, #1
 8006b36:	d107      	bne.n	8006b48 <memchr+0x98>
 8006b38:	3001      	adds	r0, #1
 8006b3a:	f415 7f80 	tst.w	r5, #256	; 0x100
 8006b3e:	bf02      	ittt	eq
 8006b40:	3001      	addeq	r0, #1
 8006b42:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8006b46:	3001      	addeq	r0, #1
 8006b48:	bcf0      	pop	{r4, r5, r6, r7}
 8006b4a:	3801      	subs	r0, #1
 8006b4c:	4770      	bx	lr
 8006b4e:	bf00      	nop

08006b50 <memcpy>:
 8006b50:	b510      	push	{r4, lr}
 8006b52:	1e43      	subs	r3, r0, #1
 8006b54:	440a      	add	r2, r1
 8006b56:	4291      	cmp	r1, r2
 8006b58:	d100      	bne.n	8006b5c <memcpy+0xc>
 8006b5a:	bd10      	pop	{r4, pc}
 8006b5c:	f811 4b01 	ldrb.w	r4, [r1], #1
 8006b60:	f803 4f01 	strb.w	r4, [r3, #1]!
 8006b64:	e7f7      	b.n	8006b56 <memcpy+0x6>

08006b66 <memmove>:
 8006b66:	4288      	cmp	r0, r1
 8006b68:	b510      	push	{r4, lr}
 8006b6a:	eb01 0302 	add.w	r3, r1, r2
 8006b6e:	d803      	bhi.n	8006b78 <memmove+0x12>
 8006b70:	1e42      	subs	r2, r0, #1
 8006b72:	4299      	cmp	r1, r3
 8006b74:	d10c      	bne.n	8006b90 <memmove+0x2a>
 8006b76:	bd10      	pop	{r4, pc}
 8006b78:	4298      	cmp	r0, r3
 8006b7a:	d2f9      	bcs.n	8006b70 <memmove+0xa>
 8006b7c:	1881      	adds	r1, r0, r2
 8006b7e:	1ad2      	subs	r2, r2, r3
 8006b80:	42d3      	cmn	r3, r2
 8006b82:	d100      	bne.n	8006b86 <memmove+0x20>
 8006b84:	bd10      	pop	{r4, pc}
 8006b86:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 8006b8a:	f801 4d01 	strb.w	r4, [r1, #-1]!
 8006b8e:	e7f7      	b.n	8006b80 <memmove+0x1a>
 8006b90:	f811 4b01 	ldrb.w	r4, [r1], #1
 8006b94:	f802 4f01 	strb.w	r4, [r2, #1]!
 8006b98:	e7eb      	b.n	8006b72 <memmove+0xc>

08006b9a <memset>:
 8006b9a:	4402      	add	r2, r0
 8006b9c:	4603      	mov	r3, r0
 8006b9e:	4293      	cmp	r3, r2
 8006ba0:	d100      	bne.n	8006ba4 <memset+0xa>
 8006ba2:	4770      	bx	lr
 8006ba4:	f803 1b01 	strb.w	r1, [r3], #1
 8006ba8:	e7f9      	b.n	8006b9e <memset+0x4>
	...

08006bac <_free_r>:
 8006bac:	b538      	push	{r3, r4, r5, lr}
 8006bae:	4605      	mov	r5, r0
 8006bb0:	2900      	cmp	r1, #0
 8006bb2:	d045      	beq.n	8006c40 <_free_r+0x94>
 8006bb4:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8006bb8:	1f0c      	subs	r4, r1, #4
 8006bba:	2b00      	cmp	r3, #0
 8006bbc:	bfb8      	it	lt
 8006bbe:	18e4      	addlt	r4, r4, r3
 8006bc0:	f7ff f883 	bl	8005cca <__malloc_lock>
 8006bc4:	4a1f      	ldr	r2, [pc, #124]	; (8006c44 <_free_r+0x98>)
 8006bc6:	6813      	ldr	r3, [r2, #0]
 8006bc8:	4610      	mov	r0, r2
 8006bca:	b933      	cbnz	r3, 8006bda <_free_r+0x2e>
 8006bcc:	6063      	str	r3, [r4, #4]
 8006bce:	6014      	str	r4, [r2, #0]
 8006bd0:	4628      	mov	r0, r5
 8006bd2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8006bd6:	f7ff b87c 	b.w	8005cd2 <__malloc_unlock>
 8006bda:	42a3      	cmp	r3, r4
 8006bdc:	d90c      	bls.n	8006bf8 <_free_r+0x4c>
 8006bde:	6821      	ldr	r1, [r4, #0]
 8006be0:	1862      	adds	r2, r4, r1
 8006be2:	4293      	cmp	r3, r2
 8006be4:	bf04      	itt	eq
 8006be6:	681a      	ldreq	r2, [r3, #0]
 8006be8:	685b      	ldreq	r3, [r3, #4]
 8006bea:	6063      	str	r3, [r4, #4]
 8006bec:	bf04      	itt	eq
 8006bee:	1852      	addeq	r2, r2, r1
 8006bf0:	6022      	streq	r2, [r4, #0]
 8006bf2:	6004      	str	r4, [r0, #0]
 8006bf4:	e7ec      	b.n	8006bd0 <_free_r+0x24>
 8006bf6:	4613      	mov	r3, r2
 8006bf8:	685a      	ldr	r2, [r3, #4]
 8006bfa:	b10a      	cbz	r2, 8006c00 <_free_r+0x54>
 8006bfc:	42a2      	cmp	r2, r4
 8006bfe:	d9fa      	bls.n	8006bf6 <_free_r+0x4a>
 8006c00:	6819      	ldr	r1, [r3, #0]
 8006c02:	1858      	adds	r0, r3, r1
 8006c04:	42a0      	cmp	r0, r4
 8006c06:	d10b      	bne.n	8006c20 <_free_r+0x74>
 8006c08:	6820      	ldr	r0, [r4, #0]
 8006c0a:	4401      	add	r1, r0
 8006c0c:	1858      	adds	r0, r3, r1
 8006c0e:	4282      	cmp	r2, r0
 8006c10:	6019      	str	r1, [r3, #0]
 8006c12:	d1dd      	bne.n	8006bd0 <_free_r+0x24>
 8006c14:	6810      	ldr	r0, [r2, #0]
 8006c16:	6852      	ldr	r2, [r2, #4]
 8006c18:	605a      	str	r2, [r3, #4]
 8006c1a:	4401      	add	r1, r0
 8006c1c:	6019      	str	r1, [r3, #0]
 8006c1e:	e7d7      	b.n	8006bd0 <_free_r+0x24>
 8006c20:	d902      	bls.n	8006c28 <_free_r+0x7c>
 8006c22:	230c      	movs	r3, #12
 8006c24:	602b      	str	r3, [r5, #0]
 8006c26:	e7d3      	b.n	8006bd0 <_free_r+0x24>
 8006c28:	6820      	ldr	r0, [r4, #0]
 8006c2a:	1821      	adds	r1, r4, r0
 8006c2c:	428a      	cmp	r2, r1
 8006c2e:	bf04      	itt	eq
 8006c30:	6811      	ldreq	r1, [r2, #0]
 8006c32:	6852      	ldreq	r2, [r2, #4]
 8006c34:	6062      	str	r2, [r4, #4]
 8006c36:	bf04      	itt	eq
 8006c38:	1809      	addeq	r1, r1, r0
 8006c3a:	6021      	streq	r1, [r4, #0]
 8006c3c:	605c      	str	r4, [r3, #4]
 8006c3e:	e7c7      	b.n	8006bd0 <_free_r+0x24>
 8006c40:	bd38      	pop	{r3, r4, r5, pc}
 8006c42:	bf00      	nop
 8006c44:	20002510 	.word	0x20002510

08006c48 <_malloc_r>:
 8006c48:	b570      	push	{r4, r5, r6, lr}
 8006c4a:	1ccd      	adds	r5, r1, #3
 8006c4c:	f025 0503 	bic.w	r5, r5, #3
 8006c50:	3508      	adds	r5, #8
 8006c52:	2d0c      	cmp	r5, #12
 8006c54:	bf38      	it	cc
 8006c56:	250c      	movcc	r5, #12
 8006c58:	2d00      	cmp	r5, #0
 8006c5a:	4606      	mov	r6, r0
 8006c5c:	db01      	blt.n	8006c62 <_malloc_r+0x1a>
 8006c5e:	42a9      	cmp	r1, r5
 8006c60:	d903      	bls.n	8006c6a <_malloc_r+0x22>
 8006c62:	230c      	movs	r3, #12
 8006c64:	6033      	str	r3, [r6, #0]
 8006c66:	2000      	movs	r0, #0
 8006c68:	bd70      	pop	{r4, r5, r6, pc}
 8006c6a:	f7ff f82e 	bl	8005cca <__malloc_lock>
 8006c6e:	4a23      	ldr	r2, [pc, #140]	; (8006cfc <_malloc_r+0xb4>)
 8006c70:	6814      	ldr	r4, [r2, #0]
 8006c72:	4621      	mov	r1, r4
 8006c74:	b991      	cbnz	r1, 8006c9c <_malloc_r+0x54>
 8006c76:	4c22      	ldr	r4, [pc, #136]	; (8006d00 <_malloc_r+0xb8>)
 8006c78:	6823      	ldr	r3, [r4, #0]
 8006c7a:	b91b      	cbnz	r3, 8006c84 <_malloc_r+0x3c>
 8006c7c:	4630      	mov	r0, r6
 8006c7e:	f000 fa05 	bl	800708c <_sbrk_r>
 8006c82:	6020      	str	r0, [r4, #0]
 8006c84:	4629      	mov	r1, r5
 8006c86:	4630      	mov	r0, r6
 8006c88:	f000 fa00 	bl	800708c <_sbrk_r>
 8006c8c:	1c43      	adds	r3, r0, #1
 8006c8e:	d126      	bne.n	8006cde <_malloc_r+0x96>
 8006c90:	230c      	movs	r3, #12
 8006c92:	6033      	str	r3, [r6, #0]
 8006c94:	4630      	mov	r0, r6
 8006c96:	f7ff f81c 	bl	8005cd2 <__malloc_unlock>
 8006c9a:	e7e4      	b.n	8006c66 <_malloc_r+0x1e>
 8006c9c:	680b      	ldr	r3, [r1, #0]
 8006c9e:	1b5b      	subs	r3, r3, r5
 8006ca0:	d41a      	bmi.n	8006cd8 <_malloc_r+0x90>
 8006ca2:	2b0b      	cmp	r3, #11
 8006ca4:	d90f      	bls.n	8006cc6 <_malloc_r+0x7e>
 8006ca6:	600b      	str	r3, [r1, #0]
 8006ca8:	50cd      	str	r5, [r1, r3]
 8006caa:	18cc      	adds	r4, r1, r3
 8006cac:	4630      	mov	r0, r6
 8006cae:	f7ff f810 	bl	8005cd2 <__malloc_unlock>
 8006cb2:	f104 000b 	add.w	r0, r4, #11
 8006cb6:	1d23      	adds	r3, r4, #4
 8006cb8:	f020 0007 	bic.w	r0, r0, #7
 8006cbc:	1ac3      	subs	r3, r0, r3
 8006cbe:	d01b      	beq.n	8006cf8 <_malloc_r+0xb0>
 8006cc0:	425a      	negs	r2, r3
 8006cc2:	50e2      	str	r2, [r4, r3]
 8006cc4:	bd70      	pop	{r4, r5, r6, pc}
 8006cc6:	428c      	cmp	r4, r1
 8006cc8:	bf0d      	iteet	eq
 8006cca:	6863      	ldreq	r3, [r4, #4]
 8006ccc:	684b      	ldrne	r3, [r1, #4]
 8006cce:	6063      	strne	r3, [r4, #4]
 8006cd0:	6013      	streq	r3, [r2, #0]
 8006cd2:	bf18      	it	ne
 8006cd4:	460c      	movne	r4, r1
 8006cd6:	e7e9      	b.n	8006cac <_malloc_r+0x64>
 8006cd8:	460c      	mov	r4, r1
 8006cda:	6849      	ldr	r1, [r1, #4]
 8006cdc:	e7ca      	b.n	8006c74 <_malloc_r+0x2c>
 8006cde:	1cc4      	adds	r4, r0, #3
 8006ce0:	f024 0403 	bic.w	r4, r4, #3
 8006ce4:	42a0      	cmp	r0, r4
 8006ce6:	d005      	beq.n	8006cf4 <_malloc_r+0xac>
 8006ce8:	1a21      	subs	r1, r4, r0
 8006cea:	4630      	mov	r0, r6
 8006cec:	f000 f9ce 	bl	800708c <_sbrk_r>
 8006cf0:	3001      	adds	r0, #1
 8006cf2:	d0cd      	beq.n	8006c90 <_malloc_r+0x48>
 8006cf4:	6025      	str	r5, [r4, #0]
 8006cf6:	e7d9      	b.n	8006cac <_malloc_r+0x64>
 8006cf8:	bd70      	pop	{r4, r5, r6, pc}
 8006cfa:	bf00      	nop
 8006cfc:	20002510 	.word	0x20002510
 8006d00:	20002514 	.word	0x20002514

08006d04 <_realloc_r>:
 8006d04:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006d06:	4607      	mov	r7, r0
 8006d08:	4614      	mov	r4, r2
 8006d0a:	460e      	mov	r6, r1
 8006d0c:	b921      	cbnz	r1, 8006d18 <_realloc_r+0x14>
 8006d0e:	4611      	mov	r1, r2
 8006d10:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8006d14:	f7fe bea6 	b.w	8005a64 <__wrap__malloc_r>
 8006d18:	b922      	cbnz	r2, 8006d24 <_realloc_r+0x20>
 8006d1a:	f7fe fea7 	bl	8005a6c <__wrap__free_r>
 8006d1e:	4625      	mov	r5, r4
 8006d20:	4628      	mov	r0, r5
 8006d22:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8006d24:	f000 fa64 	bl	80071f0 <_malloc_usable_size_r>
 8006d28:	4284      	cmp	r4, r0
 8006d2a:	d90f      	bls.n	8006d4c <_realloc_r+0x48>
 8006d2c:	4621      	mov	r1, r4
 8006d2e:	4638      	mov	r0, r7
 8006d30:	f7fe fe98 	bl	8005a64 <__wrap__malloc_r>
 8006d34:	4605      	mov	r5, r0
 8006d36:	2800      	cmp	r0, #0
 8006d38:	d0f2      	beq.n	8006d20 <_realloc_r+0x1c>
 8006d3a:	4631      	mov	r1, r6
 8006d3c:	4622      	mov	r2, r4
 8006d3e:	f7ff ff07 	bl	8006b50 <memcpy>
 8006d42:	4631      	mov	r1, r6
 8006d44:	4638      	mov	r0, r7
 8006d46:	f7fe fe91 	bl	8005a6c <__wrap__free_r>
 8006d4a:	e7e9      	b.n	8006d20 <_realloc_r+0x1c>
 8006d4c:	4635      	mov	r5, r6
 8006d4e:	e7e7      	b.n	8006d20 <_realloc_r+0x1c>

08006d50 <_printf_common>:
 8006d50:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, lr}
 8006d54:	4691      	mov	r9, r2
 8006d56:	461f      	mov	r7, r3
 8006d58:	688a      	ldr	r2, [r1, #8]
 8006d5a:	690b      	ldr	r3, [r1, #16]
 8006d5c:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8006d60:	4293      	cmp	r3, r2
 8006d62:	bfb8      	it	lt
 8006d64:	4613      	movlt	r3, r2
 8006d66:	f8c9 3000 	str.w	r3, [r9]
 8006d6a:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8006d6e:	4606      	mov	r6, r0
 8006d70:	460c      	mov	r4, r1
 8006d72:	b112      	cbz	r2, 8006d7a <_printf_common+0x2a>
 8006d74:	3301      	adds	r3, #1
 8006d76:	f8c9 3000 	str.w	r3, [r9]
 8006d7a:	6823      	ldr	r3, [r4, #0]
 8006d7c:	0699      	lsls	r1, r3, #26
 8006d7e:	bf42      	ittt	mi
 8006d80:	f8d9 3000 	ldrmi.w	r3, [r9]
 8006d84:	3302      	addmi	r3, #2
 8006d86:	f8c9 3000 	strmi.w	r3, [r9]
 8006d8a:	6825      	ldr	r5, [r4, #0]
 8006d8c:	f015 0506 	ands.w	r5, r5, #6
 8006d90:	d107      	bne.n	8006da2 <_printf_common+0x52>
 8006d92:	f104 0a19 	add.w	r10, r4, #25
 8006d96:	68e3      	ldr	r3, [r4, #12]
 8006d98:	f8d9 2000 	ldr.w	r2, [r9]
 8006d9c:	1a9b      	subs	r3, r3, r2
 8006d9e:	429d      	cmp	r5, r3
 8006da0:	db29      	blt.n	8006df6 <_printf_common+0xa6>
 8006da2:	f894 3043 	ldrb.w	r3, [r4, #67]	; 0x43
 8006da6:	6822      	ldr	r2, [r4, #0]
 8006da8:	3300      	adds	r3, #0
 8006daa:	bf18      	it	ne
 8006dac:	2301      	movne	r3, #1
 8006dae:	0692      	lsls	r2, r2, #26
 8006db0:	d42e      	bmi.n	8006e10 <_printf_common+0xc0>
 8006db2:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8006db6:	4639      	mov	r1, r7
 8006db8:	4630      	mov	r0, r6
 8006dba:	47c0      	blx	r8
 8006dbc:	3001      	adds	r0, #1
 8006dbe:	d021      	beq.n	8006e04 <_printf_common+0xb4>
 8006dc0:	6823      	ldr	r3, [r4, #0]
 8006dc2:	68e5      	ldr	r5, [r4, #12]
 8006dc4:	f8d9 2000 	ldr.w	r2, [r9]
 8006dc8:	f003 0306 	and.w	r3, r3, #6
 8006dcc:	2b04      	cmp	r3, #4
 8006dce:	bf08      	it	eq
 8006dd0:	1aad      	subeq	r5, r5, r2
 8006dd2:	68a3      	ldr	r3, [r4, #8]
 8006dd4:	6922      	ldr	r2, [r4, #16]
 8006dd6:	bf0c      	ite	eq
 8006dd8:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8006ddc:	2500      	movne	r5, #0
 8006dde:	4293      	cmp	r3, r2
 8006de0:	bfc4      	itt	gt
 8006de2:	1a9b      	subgt	r3, r3, r2
 8006de4:	18ed      	addgt	r5, r5, r3
 8006de6:	f04f 0900 	mov.w	r9, #0
 8006dea:	341a      	adds	r4, #26
 8006dec:	454d      	cmp	r5, r9
 8006dee:	d11b      	bne.n	8006e28 <_printf_common+0xd8>
 8006df0:	2000      	movs	r0, #0
 8006df2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 8006df6:	2301      	movs	r3, #1
 8006df8:	4652      	mov	r2, r10
 8006dfa:	4639      	mov	r1, r7
 8006dfc:	4630      	mov	r0, r6
 8006dfe:	47c0      	blx	r8
 8006e00:	3001      	adds	r0, #1
 8006e02:	d103      	bne.n	8006e0c <_printf_common+0xbc>
 8006e04:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8006e08:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 8006e0c:	3501      	adds	r5, #1
 8006e0e:	e7c2      	b.n	8006d96 <_printf_common+0x46>
 8006e10:	18e1      	adds	r1, r4, r3
 8006e12:	1c5a      	adds	r2, r3, #1
 8006e14:	2030      	movs	r0, #48	; 0x30
 8006e16:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8006e1a:	4422      	add	r2, r4
 8006e1c:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8006e20:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8006e24:	3302      	adds	r3, #2
 8006e26:	e7c4      	b.n	8006db2 <_printf_common+0x62>
 8006e28:	2301      	movs	r3, #1
 8006e2a:	4622      	mov	r2, r4
 8006e2c:	4639      	mov	r1, r7
 8006e2e:	4630      	mov	r0, r6
 8006e30:	47c0      	blx	r8
 8006e32:	3001      	adds	r0, #1
 8006e34:	d0e6      	beq.n	8006e04 <_printf_common+0xb4>
 8006e36:	f109 0901 	add.w	r9, r9, #1
 8006e3a:	e7d7      	b.n	8006dec <_printf_common+0x9c>

08006e3c <_printf_i>:
 8006e3c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8006e40:	4617      	mov	r7, r2
 8006e42:	7e0a      	ldrb	r2, [r1, #24]
 8006e44:	b085      	sub	sp, #20
 8006e46:	2a6e      	cmp	r2, #110	; 0x6e
 8006e48:	4698      	mov	r8, r3
 8006e4a:	4606      	mov	r6, r0
 8006e4c:	460c      	mov	r4, r1
 8006e4e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8006e50:	f101 0e43 	add.w	lr, r1, #67	; 0x43
 8006e54:	f000 80bc 	beq.w	8006fd0 <_printf_i+0x194>
 8006e58:	d81a      	bhi.n	8006e90 <_printf_i+0x54>
 8006e5a:	2a63      	cmp	r2, #99	; 0x63
 8006e5c:	d02e      	beq.n	8006ebc <_printf_i+0x80>
 8006e5e:	d80a      	bhi.n	8006e76 <_printf_i+0x3a>
 8006e60:	2a00      	cmp	r2, #0
 8006e62:	f000 80c8 	beq.w	8006ff6 <_printf_i+0x1ba>
 8006e66:	2a58      	cmp	r2, #88	; 0x58
 8006e68:	f000 808a 	beq.w	8006f80 <_printf_i+0x144>
 8006e6c:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8006e70:	f884 2042 	strb.w	r2, [r4, #66]	; 0x42
 8006e74:	e02a      	b.n	8006ecc <_printf_i+0x90>
 8006e76:	2a64      	cmp	r2, #100	; 0x64
 8006e78:	d001      	beq.n	8006e7e <_printf_i+0x42>
 8006e7a:	2a69      	cmp	r2, #105	; 0x69
 8006e7c:	d1f6      	bne.n	8006e6c <_printf_i+0x30>
 8006e7e:	6821      	ldr	r1, [r4, #0]
 8006e80:	681a      	ldr	r2, [r3, #0]
 8006e82:	f011 0f80 	tst.w	r1, #128	; 0x80
 8006e86:	d023      	beq.n	8006ed0 <_printf_i+0x94>
 8006e88:	1d11      	adds	r1, r2, #4
 8006e8a:	6019      	str	r1, [r3, #0]
 8006e8c:	6813      	ldr	r3, [r2, #0]
 8006e8e:	e027      	b.n	8006ee0 <_printf_i+0xa4>
 8006e90:	2a73      	cmp	r2, #115	; 0x73
 8006e92:	f000 80b4 	beq.w	8006ffe <_printf_i+0x1c2>
 8006e96:	d808      	bhi.n	8006eaa <_printf_i+0x6e>
 8006e98:	2a6f      	cmp	r2, #111	; 0x6f
 8006e9a:	d02a      	beq.n	8006ef2 <_printf_i+0xb6>
 8006e9c:	2a70      	cmp	r2, #112	; 0x70
 8006e9e:	d1e5      	bne.n	8006e6c <_printf_i+0x30>
 8006ea0:	680a      	ldr	r2, [r1, #0]
 8006ea2:	f042 0220 	orr.w	r2, r2, #32
 8006ea6:	600a      	str	r2, [r1, #0]
 8006ea8:	e003      	b.n	8006eb2 <_printf_i+0x76>
 8006eaa:	2a75      	cmp	r2, #117	; 0x75
 8006eac:	d021      	beq.n	8006ef2 <_printf_i+0xb6>
 8006eae:	2a78      	cmp	r2, #120	; 0x78
 8006eb0:	d1dc      	bne.n	8006e6c <_printf_i+0x30>
 8006eb2:	2278      	movs	r2, #120	; 0x78
 8006eb4:	f884 2045 	strb.w	r2, [r4, #69]	; 0x45
 8006eb8:	496e      	ldr	r1, [pc, #440]	; (8007074 <_printf_i+0x238>)
 8006eba:	e064      	b.n	8006f86 <_printf_i+0x14a>
 8006ebc:	681a      	ldr	r2, [r3, #0]
 8006ebe:	f101 0542 	add.w	r5, r1, #66	; 0x42
 8006ec2:	1d11      	adds	r1, r2, #4
 8006ec4:	6019      	str	r1, [r3, #0]
 8006ec6:	6813      	ldr	r3, [r2, #0]
 8006ec8:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8006ecc:	2301      	movs	r3, #1
 8006ece:	e0a3      	b.n	8007018 <_printf_i+0x1dc>
 8006ed0:	f011 0f40 	tst.w	r1, #64	; 0x40
 8006ed4:	f102 0104 	add.w	r1, r2, #4
 8006ed8:	6019      	str	r1, [r3, #0]
 8006eda:	d0d7      	beq.n	8006e8c <_printf_i+0x50>
 8006edc:	f9b2 3000 	ldrsh.w	r3, [r2]
 8006ee0:	2b00      	cmp	r3, #0
 8006ee2:	da03      	bge.n	8006eec <_printf_i+0xb0>
 8006ee4:	222d      	movs	r2, #45	; 0x2d
 8006ee6:	425b      	negs	r3, r3
 8006ee8:	f884 2043 	strb.w	r2, [r4, #67]	; 0x43
 8006eec:	4962      	ldr	r1, [pc, #392]	; (8007078 <_printf_i+0x23c>)
 8006eee:	220a      	movs	r2, #10
 8006ef0:	e017      	b.n	8006f22 <_printf_i+0xe6>
 8006ef2:	6820      	ldr	r0, [r4, #0]
 8006ef4:	6819      	ldr	r1, [r3, #0]
 8006ef6:	f010 0f80 	tst.w	r0, #128	; 0x80
 8006efa:	d003      	beq.n	8006f04 <_printf_i+0xc8>
 8006efc:	1d08      	adds	r0, r1, #4
 8006efe:	6018      	str	r0, [r3, #0]
 8006f00:	680b      	ldr	r3, [r1, #0]
 8006f02:	e006      	b.n	8006f12 <_printf_i+0xd6>
 8006f04:	f010 0f40 	tst.w	r0, #64	; 0x40
 8006f08:	f101 0004 	add.w	r0, r1, #4
 8006f0c:	6018      	str	r0, [r3, #0]
 8006f0e:	d0f7      	beq.n	8006f00 <_printf_i+0xc4>
 8006f10:	880b      	ldrh	r3, [r1, #0]
 8006f12:	4959      	ldr	r1, [pc, #356]	; (8007078 <_printf_i+0x23c>)
 8006f14:	2a6f      	cmp	r2, #111	; 0x6f
 8006f16:	bf14      	ite	ne
 8006f18:	220a      	movne	r2, #10
 8006f1a:	2208      	moveq	r2, #8
 8006f1c:	2000      	movs	r0, #0
 8006f1e:	f884 0043 	strb.w	r0, [r4, #67]	; 0x43
 8006f22:	6865      	ldr	r5, [r4, #4]
 8006f24:	60a5      	str	r5, [r4, #8]
 8006f26:	2d00      	cmp	r5, #0
 8006f28:	f2c0 809c 	blt.w	8007064 <_printf_i+0x228>
 8006f2c:	6820      	ldr	r0, [r4, #0]
 8006f2e:	f020 0004 	bic.w	r0, r0, #4
 8006f32:	6020      	str	r0, [r4, #0]
 8006f34:	2b00      	cmp	r3, #0
 8006f36:	d13f      	bne.n	8006fb8 <_printf_i+0x17c>
 8006f38:	2d00      	cmp	r5, #0
 8006f3a:	f040 8095 	bne.w	8007068 <_printf_i+0x22c>
 8006f3e:	4675      	mov	r5, lr
 8006f40:	2a08      	cmp	r2, #8
 8006f42:	d10b      	bne.n	8006f5c <_printf_i+0x120>
 8006f44:	6823      	ldr	r3, [r4, #0]
 8006f46:	07da      	lsls	r2, r3, #31
 8006f48:	d508      	bpl.n	8006f5c <_printf_i+0x120>
 8006f4a:	6923      	ldr	r3, [r4, #16]
 8006f4c:	6862      	ldr	r2, [r4, #4]
 8006f4e:	429a      	cmp	r2, r3
 8006f50:	bfde      	ittt	le
 8006f52:	2330      	movle	r3, #48	; 0x30
 8006f54:	f805 3c01 	strble.w	r3, [r5, #-1]
 8006f58:	f105 35ff 	addle.w	r5, r5, #4294967295	; 0xffffffff
 8006f5c:	ebae 0305 	sub.w	r3, lr, r5
 8006f60:	6123      	str	r3, [r4, #16]
 8006f62:	f8cd 8000 	str.w	r8, [sp]
 8006f66:	463b      	mov	r3, r7
 8006f68:	aa03      	add	r2, sp, #12
 8006f6a:	4621      	mov	r1, r4
 8006f6c:	4630      	mov	r0, r6
 8006f6e:	f7ff feef 	bl	8006d50 <_printf_common>
 8006f72:	3001      	adds	r0, #1
 8006f74:	d155      	bne.n	8007022 <_printf_i+0x1e6>
 8006f76:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8006f7a:	b005      	add	sp, #20
 8006f7c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8006f80:	f881 2045 	strb.w	r2, [r1, #69]	; 0x45
 8006f84:	493c      	ldr	r1, [pc, #240]	; (8007078 <_printf_i+0x23c>)
 8006f86:	6822      	ldr	r2, [r4, #0]
 8006f88:	6818      	ldr	r0, [r3, #0]
 8006f8a:	f012 0f80 	tst.w	r2, #128	; 0x80
 8006f8e:	f100 0504 	add.w	r5, r0, #4
 8006f92:	601d      	str	r5, [r3, #0]
 8006f94:	d001      	beq.n	8006f9a <_printf_i+0x15e>
 8006f96:	6803      	ldr	r3, [r0, #0]
 8006f98:	e002      	b.n	8006fa0 <_printf_i+0x164>
 8006f9a:	0655      	lsls	r5, r2, #25
 8006f9c:	d5fb      	bpl.n	8006f96 <_printf_i+0x15a>
 8006f9e:	8803      	ldrh	r3, [r0, #0]
 8006fa0:	07d0      	lsls	r0, r2, #31
 8006fa2:	bf44      	itt	mi
 8006fa4:	f042 0220 	orrmi.w	r2, r2, #32
 8006fa8:	6022      	strmi	r2, [r4, #0]
 8006faa:	b91b      	cbnz	r3, 8006fb4 <_printf_i+0x178>
 8006fac:	6822      	ldr	r2, [r4, #0]
 8006fae:	f022 0220 	bic.w	r2, r2, #32
 8006fb2:	6022      	str	r2, [r4, #0]
 8006fb4:	2210      	movs	r2, #16
 8006fb6:	e7b1      	b.n	8006f1c <_printf_i+0xe0>
 8006fb8:	4675      	mov	r5, lr
 8006fba:	fbb3 f0f2 	udiv	r0, r3, r2
 8006fbe:	fb02 3310 	mls	r3, r2, r0, r3
 8006fc2:	5ccb      	ldrb	r3, [r1, r3]
 8006fc4:	f805 3d01 	strb.w	r3, [r5, #-1]!
 8006fc8:	4603      	mov	r3, r0
 8006fca:	2800      	cmp	r0, #0
 8006fcc:	d1f5      	bne.n	8006fba <_printf_i+0x17e>
 8006fce:	e7b7      	b.n	8006f40 <_printf_i+0x104>
 8006fd0:	6808      	ldr	r0, [r1, #0]
 8006fd2:	681a      	ldr	r2, [r3, #0]
 8006fd4:	6949      	ldr	r1, [r1, #20]
 8006fd6:	f010 0f80 	tst.w	r0, #128	; 0x80
 8006fda:	d004      	beq.n	8006fe6 <_printf_i+0x1aa>
 8006fdc:	1d10      	adds	r0, r2, #4
 8006fde:	6018      	str	r0, [r3, #0]
 8006fe0:	6813      	ldr	r3, [r2, #0]
 8006fe2:	6019      	str	r1, [r3, #0]
 8006fe4:	e007      	b.n	8006ff6 <_printf_i+0x1ba>
 8006fe6:	f010 0f40 	tst.w	r0, #64	; 0x40
 8006fea:	f102 0004 	add.w	r0, r2, #4
 8006fee:	6018      	str	r0, [r3, #0]
 8006ff0:	6813      	ldr	r3, [r2, #0]
 8006ff2:	d0f6      	beq.n	8006fe2 <_printf_i+0x1a6>
 8006ff4:	8019      	strh	r1, [r3, #0]
 8006ff6:	2300      	movs	r3, #0
 8006ff8:	6123      	str	r3, [r4, #16]
 8006ffa:	4675      	mov	r5, lr
 8006ffc:	e7b1      	b.n	8006f62 <_printf_i+0x126>
 8006ffe:	681a      	ldr	r2, [r3, #0]
 8007000:	1d11      	adds	r1, r2, #4
 8007002:	6019      	str	r1, [r3, #0]
 8007004:	6815      	ldr	r5, [r2, #0]
 8007006:	6862      	ldr	r2, [r4, #4]
 8007008:	2100      	movs	r1, #0
 800700a:	4628      	mov	r0, r5
 800700c:	f7ff fd50 	bl	8006ab0 <memchr>
 8007010:	b108      	cbz	r0, 8007016 <_printf_i+0x1da>
 8007012:	1b40      	subs	r0, r0, r5
 8007014:	6060      	str	r0, [r4, #4]
 8007016:	6863      	ldr	r3, [r4, #4]
 8007018:	6123      	str	r3, [r4, #16]
 800701a:	2300      	movs	r3, #0
 800701c:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8007020:	e79f      	b.n	8006f62 <_printf_i+0x126>
 8007022:	6923      	ldr	r3, [r4, #16]
 8007024:	462a      	mov	r2, r5
 8007026:	4639      	mov	r1, r7
 8007028:	4630      	mov	r0, r6
 800702a:	47c0      	blx	r8
 800702c:	3001      	adds	r0, #1
 800702e:	d0a2      	beq.n	8006f76 <_printf_i+0x13a>
 8007030:	6823      	ldr	r3, [r4, #0]
 8007032:	079b      	lsls	r3, r3, #30
 8007034:	d507      	bpl.n	8007046 <_printf_i+0x20a>
 8007036:	2500      	movs	r5, #0
 8007038:	f104 0919 	add.w	r9, r4, #25
 800703c:	68e3      	ldr	r3, [r4, #12]
 800703e:	9a03      	ldr	r2, [sp, #12]
 8007040:	1a9b      	subs	r3, r3, r2
 8007042:	429d      	cmp	r5, r3
 8007044:	db05      	blt.n	8007052 <_printf_i+0x216>
 8007046:	68e0      	ldr	r0, [r4, #12]
 8007048:	9b03      	ldr	r3, [sp, #12]
 800704a:	4298      	cmp	r0, r3
 800704c:	bfb8      	it	lt
 800704e:	4618      	movlt	r0, r3
 8007050:	e793      	b.n	8006f7a <_printf_i+0x13e>
 8007052:	2301      	movs	r3, #1
 8007054:	464a      	mov	r2, r9
 8007056:	4639      	mov	r1, r7
 8007058:	4630      	mov	r0, r6
 800705a:	47c0      	blx	r8
 800705c:	3001      	adds	r0, #1
 800705e:	d08a      	beq.n	8006f76 <_printf_i+0x13a>
 8007060:	3501      	adds	r5, #1
 8007062:	e7eb      	b.n	800703c <_printf_i+0x200>
 8007064:	2b00      	cmp	r3, #0
 8007066:	d1a7      	bne.n	8006fb8 <_printf_i+0x17c>
 8007068:	780b      	ldrb	r3, [r1, #0]
 800706a:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 800706e:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8007072:	e765      	b.n	8006f40 <_printf_i+0x104>
 8007074:	08007ea5 	.word	0x08007ea5
 8007078:	08007e94 	.word	0x08007e94

0800707c <realloc>:
 800707c:	4b02      	ldr	r3, [pc, #8]	; (8007088 <realloc+0xc>)
 800707e:	460a      	mov	r2, r1
 8007080:	4601      	mov	r1, r0
 8007082:	6818      	ldr	r0, [r3, #0]
 8007084:	f7fe bcf0 	b.w	8005a68 <__wrap__realloc_r>
 8007088:	200001c4 	.word	0x200001c4

0800708c <_sbrk_r>:
 800708c:	b538      	push	{r3, r4, r5, lr}
 800708e:	4c06      	ldr	r4, [pc, #24]	; (80070a8 <_sbrk_r+0x1c>)
 8007090:	2300      	movs	r3, #0
 8007092:	4605      	mov	r5, r0
 8007094:	4608      	mov	r0, r1
 8007096:	6023      	str	r3, [r4, #0]
 8007098:	f7fe fdde 	bl	8005c58 <_sbrk>
 800709c:	1c43      	adds	r3, r0, #1
 800709e:	d102      	bne.n	80070a6 <_sbrk_r+0x1a>
 80070a0:	6823      	ldr	r3, [r4, #0]
 80070a2:	b103      	cbz	r3, 80070a6 <_sbrk_r+0x1a>
 80070a4:	602b      	str	r3, [r5, #0]
 80070a6:	bd38      	pop	{r3, r4, r5, pc}
 80070a8:	20003004 	.word	0x20003004

080070ac <__sread>:
 80070ac:	b510      	push	{r4, lr}
 80070ae:	460c      	mov	r4, r1
 80070b0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80070b4:	f000 f9f4 	bl	80074a0 <_read_r>
 80070b8:	2800      	cmp	r0, #0
 80070ba:	bfab      	itete	ge
 80070bc:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 80070be:	89a3      	ldrhlt	r3, [r4, #12]
 80070c0:	181b      	addge	r3, r3, r0
 80070c2:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 80070c6:	bfac      	ite	ge
 80070c8:	6563      	strge	r3, [r4, #84]	; 0x54
 80070ca:	81a3      	strhlt	r3, [r4, #12]
 80070cc:	bd10      	pop	{r4, pc}

080070ce <__swrite>:
 80070ce:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80070d2:	461f      	mov	r7, r3
 80070d4:	898b      	ldrh	r3, [r1, #12]
 80070d6:	05db      	lsls	r3, r3, #23
 80070d8:	4605      	mov	r5, r0
 80070da:	460c      	mov	r4, r1
 80070dc:	4616      	mov	r6, r2
 80070de:	d505      	bpl.n	80070ec <__swrite+0x1e>
 80070e0:	2302      	movs	r3, #2
 80070e2:	2200      	movs	r2, #0
 80070e4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80070e8:	f000 f870 	bl	80071cc <_lseek_r>
 80070ec:	89a3      	ldrh	r3, [r4, #12]
 80070ee:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80070f2:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 80070f6:	81a3      	strh	r3, [r4, #12]
 80070f8:	4632      	mov	r2, r6
 80070fa:	463b      	mov	r3, r7
 80070fc:	4628      	mov	r0, r5
 80070fe:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8007102:	f000 b841 	b.w	8007188 <_write_r>

08007106 <__sseek>:
 8007106:	b510      	push	{r4, lr}
 8007108:	460c      	mov	r4, r1
 800710a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800710e:	f000 f85d 	bl	80071cc <_lseek_r>
 8007112:	1c43      	adds	r3, r0, #1
 8007114:	89a3      	ldrh	r3, [r4, #12]
 8007116:	bf15      	itete	ne
 8007118:	6560      	strne	r0, [r4, #84]	; 0x54
 800711a:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 800711e:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8007122:	81a3      	strheq	r3, [r4, #12]
 8007124:	bf18      	it	ne
 8007126:	81a3      	strhne	r3, [r4, #12]
 8007128:	bd10      	pop	{r4, pc}

0800712a <__sclose>:
 800712a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800712e:	f000 b83d 	b.w	80071ac <_close_r>

08007132 <strlen>:
 8007132:	4603      	mov	r3, r0
 8007134:	f813 2b01 	ldrb.w	r2, [r3], #1
 8007138:	2a00      	cmp	r2, #0
 800713a:	d1fb      	bne.n	8007134 <strlen+0x2>
 800713c:	1a18      	subs	r0, r3, r0
 800713e:	3801      	subs	r0, #1
 8007140:	4770      	bx	lr

08007142 <_vsiprintf_r>:
 8007142:	b510      	push	{r4, lr}
 8007144:	b09a      	sub	sp, #104	; 0x68
 8007146:	f44f 7402 	mov.w	r4, #520	; 0x208
 800714a:	9100      	str	r1, [sp, #0]
 800714c:	9104      	str	r1, [sp, #16]
 800714e:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 8007152:	9102      	str	r1, [sp, #8]
 8007154:	9105      	str	r1, [sp, #20]
 8007156:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800715a:	f8ad 100e 	strh.w	r1, [sp, #14]
 800715e:	4669      	mov	r1, sp
 8007160:	f8ad 400c 	strh.w	r4, [sp, #12]
 8007164:	f000 f8a8 	bl	80072b8 <_svfiprintf_r>
 8007168:	9b00      	ldr	r3, [sp, #0]
 800716a:	2200      	movs	r2, #0
 800716c:	701a      	strb	r2, [r3, #0]
 800716e:	b01a      	add	sp, #104	; 0x68
 8007170:	bd10      	pop	{r4, pc}
	...

08007174 <vsiprintf>:
 8007174:	4613      	mov	r3, r2
 8007176:	460a      	mov	r2, r1
 8007178:	4601      	mov	r1, r0
 800717a:	4802      	ldr	r0, [pc, #8]	; (8007184 <vsiprintf+0x10>)
 800717c:	6800      	ldr	r0, [r0, #0]
 800717e:	f7ff bfe0 	b.w	8007142 <_vsiprintf_r>
 8007182:	bf00      	nop
 8007184:	200001c4 	.word	0x200001c4

08007188 <_write_r>:
 8007188:	b538      	push	{r3, r4, r5, lr}
 800718a:	4c07      	ldr	r4, [pc, #28]	; (80071a8 <_write_r+0x20>)
 800718c:	4605      	mov	r5, r0
 800718e:	4608      	mov	r0, r1
 8007190:	4611      	mov	r1, r2
 8007192:	2200      	movs	r2, #0
 8007194:	6022      	str	r2, [r4, #0]
 8007196:	461a      	mov	r2, r3
 8007198:	f7fe fccc 	bl	8005b34 <_write>
 800719c:	1c43      	adds	r3, r0, #1
 800719e:	d102      	bne.n	80071a6 <_write_r+0x1e>
 80071a0:	6823      	ldr	r3, [r4, #0]
 80071a2:	b103      	cbz	r3, 80071a6 <_write_r+0x1e>
 80071a4:	602b      	str	r3, [r5, #0]
 80071a6:	bd38      	pop	{r3, r4, r5, pc}
 80071a8:	20003004 	.word	0x20003004

080071ac <_close_r>:
 80071ac:	b538      	push	{r3, r4, r5, lr}
 80071ae:	4c06      	ldr	r4, [pc, #24]	; (80071c8 <_close_r+0x1c>)
 80071b0:	2300      	movs	r3, #0
 80071b2:	4605      	mov	r5, r0
 80071b4:	4608      	mov	r0, r1
 80071b6:	6023      	str	r3, [r4, #0]
 80071b8:	f7fe fc9c 	bl	8005af4 <_close>
 80071bc:	1c43      	adds	r3, r0, #1
 80071be:	d102      	bne.n	80071c6 <_close_r+0x1a>
 80071c0:	6823      	ldr	r3, [r4, #0]
 80071c2:	b103      	cbz	r3, 80071c6 <_close_r+0x1a>
 80071c4:	602b      	str	r3, [r5, #0]
 80071c6:	bd38      	pop	{r3, r4, r5, pc}
 80071c8:	20003004 	.word	0x20003004

080071cc <_lseek_r>:
 80071cc:	b538      	push	{r3, r4, r5, lr}
 80071ce:	4c07      	ldr	r4, [pc, #28]	; (80071ec <_lseek_r+0x20>)
 80071d0:	4605      	mov	r5, r0
 80071d2:	4608      	mov	r0, r1
 80071d4:	4611      	mov	r1, r2
 80071d6:	2200      	movs	r2, #0
 80071d8:	6022      	str	r2, [r4, #0]
 80071da:	461a      	mov	r2, r3
 80071dc:	f7fe fd10 	bl	8005c00 <_lseek>
 80071e0:	1c43      	adds	r3, r0, #1
 80071e2:	d102      	bne.n	80071ea <_lseek_r+0x1e>
 80071e4:	6823      	ldr	r3, [r4, #0]
 80071e6:	b103      	cbz	r3, 80071ea <_lseek_r+0x1e>
 80071e8:	602b      	str	r3, [r5, #0]
 80071ea:	bd38      	pop	{r3, r4, r5, pc}
 80071ec:	20003004 	.word	0x20003004

080071f0 <_malloc_usable_size_r>:
 80071f0:	f851 0c04 	ldr.w	r0, [r1, #-4]
 80071f4:	2800      	cmp	r0, #0
 80071f6:	f1a0 0004 	sub.w	r0, r0, #4
 80071fa:	bfbc      	itt	lt
 80071fc:	580b      	ldrlt	r3, [r1, r0]
 80071fe:	18c0      	addlt	r0, r0, r3
 8007200:	4770      	bx	lr

08007202 <__ssputs_r>:
 8007202:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, lr}
 8007206:	688e      	ldr	r6, [r1, #8]
 8007208:	429e      	cmp	r6, r3
 800720a:	4682      	mov	r10, r0
 800720c:	460c      	mov	r4, r1
 800720e:	4691      	mov	r9, r2
 8007210:	4698      	mov	r8, r3
 8007212:	d835      	bhi.n	8007280 <__ssputs_r+0x7e>
 8007214:	898a      	ldrh	r2, [r1, #12]
 8007216:	f412 6f90 	tst.w	r2, #1152	; 0x480
 800721a:	d031      	beq.n	8007280 <__ssputs_r+0x7e>
 800721c:	6825      	ldr	r5, [r4, #0]
 800721e:	6909      	ldr	r1, [r1, #16]
 8007220:	1a6f      	subs	r7, r5, r1
 8007222:	6965      	ldr	r5, [r4, #20]
 8007224:	2302      	movs	r3, #2
 8007226:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 800722a:	fb95 f5f3 	sdiv	r5, r5, r3
 800722e:	f108 0301 	add.w	r3, r8, #1
 8007232:	443b      	add	r3, r7
 8007234:	429d      	cmp	r5, r3
 8007236:	bf38      	it	cc
 8007238:	461d      	movcc	r5, r3
 800723a:	0553      	lsls	r3, r2, #21
 800723c:	d531      	bpl.n	80072a2 <__ssputs_r+0xa0>
 800723e:	4629      	mov	r1, r5
 8007240:	f7fe fc10 	bl	8005a64 <__wrap__malloc_r>
 8007244:	4606      	mov	r6, r0
 8007246:	b950      	cbnz	r0, 800725e <__ssputs_r+0x5c>
 8007248:	230c      	movs	r3, #12
 800724a:	f8ca 3000 	str.w	r3, [r10]
 800724e:	89a3      	ldrh	r3, [r4, #12]
 8007250:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8007254:	81a3      	strh	r3, [r4, #12]
 8007256:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800725a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 800725e:	463a      	mov	r2, r7
 8007260:	6921      	ldr	r1, [r4, #16]
 8007262:	f7ff fc75 	bl	8006b50 <memcpy>
 8007266:	89a3      	ldrh	r3, [r4, #12]
 8007268:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 800726c:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8007270:	81a3      	strh	r3, [r4, #12]
 8007272:	6126      	str	r6, [r4, #16]
 8007274:	6165      	str	r5, [r4, #20]
 8007276:	443e      	add	r6, r7
 8007278:	1bed      	subs	r5, r5, r7
 800727a:	6026      	str	r6, [r4, #0]
 800727c:	60a5      	str	r5, [r4, #8]
 800727e:	4646      	mov	r6, r8
 8007280:	4546      	cmp	r6, r8
 8007282:	bf28      	it	cs
 8007284:	4646      	movcs	r6, r8
 8007286:	4632      	mov	r2, r6
 8007288:	4649      	mov	r1, r9
 800728a:	6820      	ldr	r0, [r4, #0]
 800728c:	f7ff fc6b 	bl	8006b66 <memmove>
 8007290:	68a3      	ldr	r3, [r4, #8]
 8007292:	1b9b      	subs	r3, r3, r6
 8007294:	60a3      	str	r3, [r4, #8]
 8007296:	6823      	ldr	r3, [r4, #0]
 8007298:	441e      	add	r6, r3
 800729a:	6026      	str	r6, [r4, #0]
 800729c:	2000      	movs	r0, #0
 800729e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 80072a2:	462a      	mov	r2, r5
 80072a4:	f7fe fbe0 	bl	8005a68 <__wrap__realloc_r>
 80072a8:	4606      	mov	r6, r0
 80072aa:	2800      	cmp	r0, #0
 80072ac:	d1e1      	bne.n	8007272 <__ssputs_r+0x70>
 80072ae:	6921      	ldr	r1, [r4, #16]
 80072b0:	4650      	mov	r0, r10
 80072b2:	f7fe fbdb 	bl	8005a6c <__wrap__free_r>
 80072b6:	e7c7      	b.n	8007248 <__ssputs_r+0x46>

080072b8 <_svfiprintf_r>:
 80072b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, lr}
 80072bc:	b09d      	sub	sp, #116	; 0x74
 80072be:	4680      	mov	r8, r0
 80072c0:	9303      	str	r3, [sp, #12]
 80072c2:	898b      	ldrh	r3, [r1, #12]
 80072c4:	061c      	lsls	r4, r3, #24
 80072c6:	460d      	mov	r5, r1
 80072c8:	4616      	mov	r6, r2
 80072ca:	d50f      	bpl.n	80072ec <_svfiprintf_r+0x34>
 80072cc:	690b      	ldr	r3, [r1, #16]
 80072ce:	b96b      	cbnz	r3, 80072ec <_svfiprintf_r+0x34>
 80072d0:	2140      	movs	r1, #64	; 0x40
 80072d2:	f7fe fbc7 	bl	8005a64 <__wrap__malloc_r>
 80072d6:	6028      	str	r0, [r5, #0]
 80072d8:	6128      	str	r0, [r5, #16]
 80072da:	b928      	cbnz	r0, 80072e8 <_svfiprintf_r+0x30>
 80072dc:	230c      	movs	r3, #12
 80072de:	f8c8 3000 	str.w	r3, [r8]
 80072e2:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80072e6:	e0c5      	b.n	8007474 <_svfiprintf_r+0x1bc>
 80072e8:	2340      	movs	r3, #64	; 0x40
 80072ea:	616b      	str	r3, [r5, #20]
 80072ec:	2300      	movs	r3, #0
 80072ee:	9309      	str	r3, [sp, #36]	; 0x24
 80072f0:	2320      	movs	r3, #32
 80072f2:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 80072f6:	2330      	movs	r3, #48	; 0x30
 80072f8:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 80072fc:	f04f 0b01 	mov.w	r11, #1
 8007300:	4637      	mov	r7, r6
 8007302:	463c      	mov	r4, r7
 8007304:	f814 3b01 	ldrb.w	r3, [r4], #1
 8007308:	2b00      	cmp	r3, #0
 800730a:	d13c      	bne.n	8007386 <_svfiprintf_r+0xce>
 800730c:	ebb7 0a06 	subs.w	r10, r7, r6
 8007310:	d00b      	beq.n	800732a <_svfiprintf_r+0x72>
 8007312:	4653      	mov	r3, r10
 8007314:	4632      	mov	r2, r6
 8007316:	4629      	mov	r1, r5
 8007318:	4640      	mov	r0, r8
 800731a:	f7ff ff72 	bl	8007202 <__ssputs_r>
 800731e:	3001      	adds	r0, #1
 8007320:	f000 80a3 	beq.w	800746a <_svfiprintf_r+0x1b2>
 8007324:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8007326:	4453      	add	r3, r10
 8007328:	9309      	str	r3, [sp, #36]	; 0x24
 800732a:	783b      	ldrb	r3, [r7, #0]
 800732c:	2b00      	cmp	r3, #0
 800732e:	f000 809c 	beq.w	800746a <_svfiprintf_r+0x1b2>
 8007332:	2300      	movs	r3, #0
 8007334:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8007338:	9304      	str	r3, [sp, #16]
 800733a:	9307      	str	r3, [sp, #28]
 800733c:	9205      	str	r2, [sp, #20]
 800733e:	9306      	str	r3, [sp, #24]
 8007340:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8007344:	931a      	str	r3, [sp, #104]	; 0x68
 8007346:	2205      	movs	r2, #5
 8007348:	7821      	ldrb	r1, [r4, #0]
 800734a:	4850      	ldr	r0, [pc, #320]	; (800748c <_svfiprintf_r+0x1d4>)
 800734c:	f7ff fbb0 	bl	8006ab0 <memchr>
 8007350:	1c67      	adds	r7, r4, #1
 8007352:	9b04      	ldr	r3, [sp, #16]
 8007354:	b9d8      	cbnz	r0, 800738e <_svfiprintf_r+0xd6>
 8007356:	06d9      	lsls	r1, r3, #27
 8007358:	bf44      	itt	mi
 800735a:	2220      	movmi	r2, #32
 800735c:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 8007360:	071a      	lsls	r2, r3, #28
 8007362:	bf44      	itt	mi
 8007364:	222b      	movmi	r2, #43	; 0x2b
 8007366:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 800736a:	7822      	ldrb	r2, [r4, #0]
 800736c:	2a2a      	cmp	r2, #42	; 0x2a
 800736e:	d016      	beq.n	800739e <_svfiprintf_r+0xe6>
 8007370:	9a07      	ldr	r2, [sp, #28]
 8007372:	2100      	movs	r1, #0
 8007374:	200a      	movs	r0, #10
 8007376:	4627      	mov	r7, r4
 8007378:	3401      	adds	r4, #1
 800737a:	783b      	ldrb	r3, [r7, #0]
 800737c:	3b30      	subs	r3, #48	; 0x30
 800737e:	2b09      	cmp	r3, #9
 8007380:	d951      	bls.n	8007426 <_svfiprintf_r+0x16e>
 8007382:	b1c9      	cbz	r1, 80073b8 <_svfiprintf_r+0x100>
 8007384:	e011      	b.n	80073aa <_svfiprintf_r+0xf2>
 8007386:	2b25      	cmp	r3, #37	; 0x25
 8007388:	d0c0      	beq.n	800730c <_svfiprintf_r+0x54>
 800738a:	4627      	mov	r7, r4
 800738c:	e7b9      	b.n	8007302 <_svfiprintf_r+0x4a>
 800738e:	4a3f      	ldr	r2, [pc, #252]	; (800748c <_svfiprintf_r+0x1d4>)
 8007390:	1a80      	subs	r0, r0, r2
 8007392:	fa0b f000 	lsl.w	r0, r11, r0
 8007396:	4318      	orrs	r0, r3
 8007398:	9004      	str	r0, [sp, #16]
 800739a:	463c      	mov	r4, r7
 800739c:	e7d3      	b.n	8007346 <_svfiprintf_r+0x8e>
 800739e:	9a03      	ldr	r2, [sp, #12]
 80073a0:	1d11      	adds	r1, r2, #4
 80073a2:	6812      	ldr	r2, [r2, #0]
 80073a4:	9103      	str	r1, [sp, #12]
 80073a6:	2a00      	cmp	r2, #0
 80073a8:	db01      	blt.n	80073ae <_svfiprintf_r+0xf6>
 80073aa:	9207      	str	r2, [sp, #28]
 80073ac:	e004      	b.n	80073b8 <_svfiprintf_r+0x100>
 80073ae:	4252      	negs	r2, r2
 80073b0:	f043 0302 	orr.w	r3, r3, #2
 80073b4:	9207      	str	r2, [sp, #28]
 80073b6:	9304      	str	r3, [sp, #16]
 80073b8:	783b      	ldrb	r3, [r7, #0]
 80073ba:	2b2e      	cmp	r3, #46	; 0x2e
 80073bc:	d10e      	bne.n	80073dc <_svfiprintf_r+0x124>
 80073be:	787b      	ldrb	r3, [r7, #1]
 80073c0:	2b2a      	cmp	r3, #42	; 0x2a
 80073c2:	f107 0101 	add.w	r1, r7, #1
 80073c6:	d132      	bne.n	800742e <_svfiprintf_r+0x176>
 80073c8:	9b03      	ldr	r3, [sp, #12]
 80073ca:	1d1a      	adds	r2, r3, #4
 80073cc:	681b      	ldr	r3, [r3, #0]
 80073ce:	9203      	str	r2, [sp, #12]
 80073d0:	2b00      	cmp	r3, #0
 80073d2:	bfb8      	it	lt
 80073d4:	f04f 33ff 	movlt.w	r3, #4294967295	; 0xffffffff
 80073d8:	3702      	adds	r7, #2
 80073da:	9305      	str	r3, [sp, #20]
 80073dc:	4c2c      	ldr	r4, [pc, #176]	; (8007490 <_svfiprintf_r+0x1d8>)
 80073de:	7839      	ldrb	r1, [r7, #0]
 80073e0:	2203      	movs	r2, #3
 80073e2:	4620      	mov	r0, r4
 80073e4:	f7ff fb64 	bl	8006ab0 <memchr>
 80073e8:	b138      	cbz	r0, 80073fa <_svfiprintf_r+0x142>
 80073ea:	2340      	movs	r3, #64	; 0x40
 80073ec:	1b00      	subs	r0, r0, r4
 80073ee:	fa03 f000 	lsl.w	r0, r3, r0
 80073f2:	9b04      	ldr	r3, [sp, #16]
 80073f4:	4303      	orrs	r3, r0
 80073f6:	9304      	str	r3, [sp, #16]
 80073f8:	3701      	adds	r7, #1
 80073fa:	7839      	ldrb	r1, [r7, #0]
 80073fc:	4825      	ldr	r0, [pc, #148]	; (8007494 <_svfiprintf_r+0x1dc>)
 80073fe:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8007402:	2206      	movs	r2, #6
 8007404:	1c7e      	adds	r6, r7, #1
 8007406:	f7ff fb53 	bl	8006ab0 <memchr>
 800740a:	2800      	cmp	r0, #0
 800740c:	d035      	beq.n	800747a <_svfiprintf_r+0x1c2>
 800740e:	4b22      	ldr	r3, [pc, #136]	; (8007498 <_svfiprintf_r+0x1e0>)
 8007410:	b9fb      	cbnz	r3, 8007452 <_svfiprintf_r+0x19a>
 8007412:	9b03      	ldr	r3, [sp, #12]
 8007414:	3307      	adds	r3, #7
 8007416:	f023 0307 	bic.w	r3, r3, #7
 800741a:	3308      	adds	r3, #8
 800741c:	9303      	str	r3, [sp, #12]
 800741e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8007420:	444b      	add	r3, r9
 8007422:	9309      	str	r3, [sp, #36]	; 0x24
 8007424:	e76c      	b.n	8007300 <_svfiprintf_r+0x48>
 8007426:	fb00 3202 	mla	r2, r0, r2, r3
 800742a:	2101      	movs	r1, #1
 800742c:	e7a3      	b.n	8007376 <_svfiprintf_r+0xbe>
 800742e:	2300      	movs	r3, #0
 8007430:	9305      	str	r3, [sp, #20]
 8007432:	4618      	mov	r0, r3
 8007434:	240a      	movs	r4, #10
 8007436:	460f      	mov	r7, r1
 8007438:	3101      	adds	r1, #1
 800743a:	783a      	ldrb	r2, [r7, #0]
 800743c:	3a30      	subs	r2, #48	; 0x30
 800743e:	2a09      	cmp	r2, #9
 8007440:	d903      	bls.n	800744a <_svfiprintf_r+0x192>
 8007442:	2b00      	cmp	r3, #0
 8007444:	d0ca      	beq.n	80073dc <_svfiprintf_r+0x124>
 8007446:	9005      	str	r0, [sp, #20]
 8007448:	e7c8      	b.n	80073dc <_svfiprintf_r+0x124>
 800744a:	fb04 2000 	mla	r0, r4, r0, r2
 800744e:	2301      	movs	r3, #1
 8007450:	e7f1      	b.n	8007436 <_svfiprintf_r+0x17e>
 8007452:	ab03      	add	r3, sp, #12
 8007454:	9300      	str	r3, [sp, #0]
 8007456:	462a      	mov	r2, r5
 8007458:	4b10      	ldr	r3, [pc, #64]	; (800749c <_svfiprintf_r+0x1e4>)
 800745a:	a904      	add	r1, sp, #16
 800745c:	4640      	mov	r0, r8
 800745e:	f3af 8000 	nop.w
 8007462:	f1b0 3fff 	cmp.w	r0, #4294967295	; 0xffffffff
 8007466:	4681      	mov	r9, r0
 8007468:	d1d9      	bne.n	800741e <_svfiprintf_r+0x166>
 800746a:	89ab      	ldrh	r3, [r5, #12]
 800746c:	065b      	lsls	r3, r3, #25
 800746e:	f53f af38 	bmi.w	80072e2 <_svfiprintf_r+0x2a>
 8007472:	9809      	ldr	r0, [sp, #36]	; 0x24
 8007474:	b01d      	add	sp, #116	; 0x74
 8007476:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, pc}
 800747a:	ab03      	add	r3, sp, #12
 800747c:	9300      	str	r3, [sp, #0]
 800747e:	462a      	mov	r2, r5
 8007480:	4b06      	ldr	r3, [pc, #24]	; (800749c <_svfiprintf_r+0x1e4>)
 8007482:	a904      	add	r1, sp, #16
 8007484:	4640      	mov	r0, r8
 8007486:	f7ff fcd9 	bl	8006e3c <_printf_i>
 800748a:	e7ea      	b.n	8007462 <_svfiprintf_r+0x1aa>
 800748c:	08007eb6 	.word	0x08007eb6
 8007490:	08007ebc 	.word	0x08007ebc
 8007494:	08007ec0 	.word	0x08007ec0
 8007498:	00000000 	.word	0x00000000
 800749c:	08007203 	.word	0x08007203

080074a0 <_read_r>:
 80074a0:	b538      	push	{r3, r4, r5, lr}
 80074a2:	4c07      	ldr	r4, [pc, #28]	; (80074c0 <_read_r+0x20>)
 80074a4:	4605      	mov	r5, r0
 80074a6:	4608      	mov	r0, r1
 80074a8:	4611      	mov	r1, r2
 80074aa:	2200      	movs	r2, #0
 80074ac:	6022      	str	r2, [r4, #0]
 80074ae:	461a      	mov	r2, r3
 80074b0:	f7fe fb76 	bl	8005ba0 <_read>
 80074b4:	1c43      	adds	r3, r0, #1
 80074b6:	d102      	bne.n	80074be <_read_r+0x1e>
 80074b8:	6823      	ldr	r3, [r4, #0]
 80074ba:	b103      	cbz	r3, 80074be <_read_r+0x1e>
 80074bc:	602b      	str	r3, [r5, #0]
 80074be:	bd38      	pop	{r3, r4, r5, pc}
 80074c0:	20003004 	.word	0x20003004

080074c4 <_init>:
 80074c4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80074c6:	bf00      	nop
 80074c8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80074ca:	bc08      	pop	{r3}
 80074cc:	469e      	mov	lr, r3
 80074ce:	4770      	bx	lr

080074d0 <_fini>:
 80074d0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80074d2:	bf00      	nop
 80074d4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80074d6:	bc08      	pop	{r3}
 80074d8:	469e      	mov	lr, r3
 80074da:	4770      	bx	lr

080074dc <vtable for std_msgs::Time>:
	...
 80074e4:	0205 0800 022d 0800 0269 0800 0271 0800     ....-...i...q...

080074f4 <vtable for rosserial_msgs::TopicInfo>:
	...
 80074fc:	06ad 0800 0787 0800 0279 0800 0281 0800     ........y.......

0800750c <vtable for rosserial_msgs::Log>:
	...
 8007514:	0681 0800 0751 0800 0289 0800 0291 0800     ....Q...........

08007524 <vtable for rosserial_msgs::RequestParamResponse>:
	...
 800752c:	059f 0800 083d 0800 0299 0800 02a1 0800     ....=...........

0800753c <vtable for std_msgs::Empty>:
	...
 8007544:	02a9 0800 02ad 0800 02b1 0800 02b9 0800     ................

08007554 <vtable for std_msgs::Float32>:
	...
 800755c:	02c1 0800 02d5 0800 02dd 0800 02e5 0800     ................

0800756c <vtable for geometry_msgs::Vector3>:
	...
 8007574:	02ed 0800 0353 0800 0371 0800 0379 0800     ....S...q...y...

08007584 <vtable for ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>>:
	...
 800758c:	1185 0800 0edd 0800 0405 0800               ............

08007598 <vtable for ros::Subscriber<std_msgs::Float32, void>>:
	...
 80075a0:	03d9 0800 03f1 0800 03f5 0800 03fd 0800     ................

080075b0 <vtable for ros::Subscriber<std_msgs::Empty, void>>:
	...
 80075b8:	03bd 0800 03c3 0800 03c9 0800 03d1 0800     ................

080075c8 <vtable for ros::Subscriber<geometry_msgs::Vector3, void>>:
	...
 80075d0:	038f 0800 03a7 0800 03ad 0800 03b5 0800     ................

080075e0 <void mbed::Callback<void ()>::generate<void (*)()>(void (* const&)())::ops>:
 80075e0:	0381 0800 0385 0800 038d 0800 6f6d 6f74     ............moto
 80075f0:	5f72 7770 006d 7473 706f 6d5f 746f 726f     r_pwm.stop_motor
 8007600:	7300 7465 615f 676e 656c 6d5f 746f 726f     .set_angle_motor
 8007610:	0031 6573 5f74 6e61 6c67 5f65 6f6d 6f74     1.set_angle_moto
 8007620:	3272 7300 7465 615f 676e 656c 6d5f 746f     r2.set_angle_mot
 8007630:	726f 0033 6970 5f64 7574 696e 676e 0073     or3.pid_tunings.
 8007640:	6f6d 696e 6f74 6972 676e 3400 3861 3234     monitoring.4a842
 8007650:	3662 6635 3134 3033 3438 6364 6232 3031     b65f413084dc2b10
 8007660:	6266 3834 6534 3761 3166 0037 6567 6d6f     fb484ea7f17.geom
 8007670:	7465 7972 6d5f 6773 2f73 6556 7463 726f     etry_msgs/Vector
 8007680:	0033 6639 6530 3839 6462 3661 3935 3138     3.9f0e98bda65981
 8007690:	3839 6436 6664 3335 6661 3761 3461 6530     986ddf53afa7a40e
 80076a0:	3934 3100 6131 6462 3337 6331 3532 3339     49.11abd731c2593
 80076b0:	3233 3136 6463 3136 3338 6462 3231 3664     3261cd6183bd12d6
 80076c0:	3932 0035 6f72 7373 7265 6169 5f6c 736d     295.rosserial_ms
 80076d0:	7367 4c2f 676f 3000 6461 3135 3866 6638     gs/Log.0ad51f88f
 80076e0:	3463 3834 3239 3866 3163 3630 3438 3730     c44892f8c1068407
 80076f0:	3637 3634 3030 0035 6f72 7373 7265 6169     7646005.rosseria
 8007700:	5f6c 736d 7367 542f 706f 6369 6e49 6f66     l_msgs/TopicInfo
	...

08007711 <rosserial_msgs::REQUESTPARAM>:
 8007711:	6f72 7373 7265 6169 5f6c 736d 7367 522f     rosserial_msgs/R
 8007721:	7165 6575 7473 6150 6172 006d 654d 7373     equestParam.Mess
 8007731:	6761 2065 7266 6d6f 6420 7665 6369 2065     age from device 
 8007741:	7264 706f 6570 3a64 6d20 7365 6173 6567     dropped: message
 8007751:	6c20 7261 6567 2072 6874 6e61 6220 6675      larger than buf
 8007761:	6566 2e72 6300 3764 3631 6336 3437 3563     fer..cd7166c74c5
 8007771:	3235 3363 3131 6266 6363 6632 3565 3761     52c311fbcc2fe5a7
 8007781:	6362 3832 0039 7473 5f64 736d 7367 542f     bc289.std_msgs/T
 8007791:	6d69 0065 3464 6431 6338 3964 6638 3030     ime.d41d8cd98f00
 80077a1:	3262 3430 3965 3038 3930 3839 6365 3866     b204e9800998ecf8
 80077b1:	3234 6537 7300 6474 6d5f 6773 2f73 6d45     427e.std_msgs/Em
 80077c1:	7470 0079 3337 6366 6662 3634 3462 3139     pty.73fcbf46b491
 80077d1:	3139 3665 3237 3039 6538 3035 3438 6132     91e672908e50842a
 80077e1:	3338 3464 7300 6474 6d5f 6773 2f73 6c46     83d4.std_msgs/Fl
 80077f1:	616f 3374 0032 7f00                              oat32..

080077f8 <void mbed::Callback<void ()>::generate<mbed::Callback<void ()>::method_context<DcServo, void (DcServo::*)()> >(mbed::Callback<void ()>::method_context<DcServo, void (DcServo::*)()> const&)::ops>:
 80077f8:	127f 0800 1271 0800 127d 0800               ....q...}...

08007804 <void mbed::Callback<void ()>::generate<mbed::Callback<void ()>::method_context<Encoder, void (Encoder::*)()> >(mbed::Callback<void ()>::method_context<Encoder, void (Encoder::*)()> const&)::ops>:
 8007804:	1541 0800 1533 0800 153f 0800               A...3...?...

08007810 <void mbed::Callback<void ()>::generate<mbed::Callback<void ()>::method_context<BufferedSerial, void (BufferedSerial::*)()> >(mbed::Callback<void ()>::method_context<BufferedSerial, void (BufferedSerial::*)()> const&)::ops>:
 8007810:	1beb 0800 1bdd 0800 1be9 0800 682f 6d6f     ............/hom
 8007820:	2f65 6275 6e75 7574 722f 736f 6c2f 6269     e/ubuntu/ros/lib
 8007830:	722f 736f 6c5f 6269 422f 6675 6566 6572     /ros_lib/Buffere
 8007840:	5364 7265 6169 2f6c 7542 6666 7265 6465     dSerial/Buffered
 8007850:	6553 6972 6c61 632e 7070 2500 2073 6425     Serial.cpp.%s %d
 8007860:	6220 6675 6566 2072 766f 7265 7277 7469      buffer overwrit
 8007870:	2065 6d28 7861 625f 6675 735f 7a69 3a65     e (max_buf_size:
 8007880:	2520 2064 7865 6563 6465 6465 203a 6425      %d exceeded: %d
 8007890:	2129 0a0d 0000 0000                         )!......

08007898 <vtable for BufferedSerial>:
	...
 80078a0:	5607 0800 5607 0800 1cc5 0800 1d1d 0800     .V...V..........
 80078b0:	1b9d 0800 1bad 0800 1bb1 0800 1e3d 0800     ............=...
 80078c0:	1e55 0800 1ed1 0800 1e93 0800               U...........

080078cc <us_data>:
 80078cc:	78d4 0800 0e94 2000                         .x..... 

080078d4 <us_interface>:
 80078d4:	3d3d 0800 3d61 0800 3d99 0800 3db1 0800     ==..a=...=...=..
 80078e4:	3d7d 0800 6970 6d6e 7061 6e20 746f 6620     }=..pinmap not f
 80078f4:	756f 646e 6620 726f 6620 6e75 7463 6f69     ound for functio
 8007904:	006e 6970 6d6e 7061 6d20 7369 6d2d 7461     n.pinmap mis-mat
 8007914:	6863 7000 6e69 616d 2070 6f6e 2074 6f66     ch.pinmap not fo
 8007924:	6e75 2064 6f66 2072 6570 6972 6870 7265     und for peripher
 8007934:	6c61 6300 756f 646c 6e20 746f 7020 6e69     al.could not pin
 8007944:	756f 0074                                   out.

08007948 <mp_stk_size>:
 8007948:	0210 0000                                   ....

0800794c <mp_tcb_size>:
 800794c:	03cc                                        ..

0800794e <mp_tmr_size>:
	...

08007950 <os_clockrate>:
 8007950:	03e8 0000 5452 2058 7265 6f72 2072 6f63     ....RTX error co
 8007960:	6564 203a 7830 3025 5838 202c 6174 6b73     de: 0x%08X, task
 8007970:	4920 3a44 3020 2578 3830 0a58 1000                ID: 0x%08X..

0800797d <os_fifo_size>:
 800797d:	0110                                             .

0800797e <os_flags>:
 800797e:	0001                                        ..

08007980 <os_maxtaskrun>:
 8007980:	000f 0000                                   ....

08007984 <os_messageQ_def_osTimerMessageQ>:
 8007984:	0004 0000 0eb8 2000                         ....... 

0800798c <os_mutex_def_env_mutex>:
 800798c:	0ed8 2000                                   ... 

08007990 <os_mutex_def_malloc_mutex>:
 8007990:	0ee8 2000                                   ... 

08007994 <os_mutex_def_singleton_mutex>:
 8007994:	0ef8 2000                                   ... 

08007998 <os_rrobin>:
 8007998:	0005 0001                                   ....

0800799c <os_stackinfo>:
 800799c:	0200 0100                                   ....

080079a0 <os_thread_def_osTimerThread>:
 80079a0:	30d1 0800 0002 0000 0001 0000 0320 0000     .0.......... ...
 80079b0:	27f0 2000                                   .'. 

080079b4 <os_trv>:
 80079b4:	869f 0001                                   ....

080079b8 <os_mutex_def_osThreadMutex>:
 80079b8:	1f0c 2000 6e49 6574 7272 7075 4974 206e     ... InterruptIn 
 80079c8:	7265 6f72 3a72 7020 6e69 6e20 746f 7320     error: pin not s
 80079d8:	7075 6f70 7472 6465 0a2e 5000 6e69 616d     upported...Pinma
 80079e8:	2070 7265 6f72 3a72 7720 6f72 676e 7020     p error: wrong p
 80079f8:	726f 2074 756e 626d 7265 002e 6e55 6e6b     ort number..Unkn
 8007a08:	776f 206e 5750 204d 6e69 7473 6e61 6563     own PWM instance
 8007a18:	4300 6e61 6f6e 2074 6e69 7469 6169 696c     .Cannot initiali
 8007a28:	657a 5020 4d57 000a                         ze PWM..

08007a30 <ll_pin_defines>:
 8007a30:	0001 0000 0002 0000 0004 0000 0008 0000     ................
 8007a40:	0010 0000 0020 0000 0040 0000 0080 0000     .... ...@.......
 8007a50:	0100 0000 0200 0000 0400 0000 0800 0000     ................
 8007a60:	1000 0000 2000 0000 4000 0000 8000 0000     ..... ...@......

08007a70 <pwm_apb_map_table>:
 8007a70:	0000 4000 0000 0000 0400 4000 0000 0000     ...@.......@....
 8007a80:	0800 4000 0000 0000 0c00 4000 0000 0000     ...@.......@....
 8007a90:	0000 4001 0001 0000 4000 4001 0001 0000     ...@.....@.@....
 8007aa0:	4400 4001 0001 0000 4800 4001 0001 0000     .D.@.....H.@....
 8007ab0:	0000 0000 0002 0000 6143 6e6e 746f 6920     ........Cannot i
 8007ac0:	696e 6974 6c61 7a69 2065 4155 5452 000a     nitialize UART..

08007ad0 <pin_lines_desc>:
	...
 8007ad8:	0006 0000 0000 0000 0001 0000 0007 0000     ................
 8007ae8:	0000 0000 0002 0000 0008 0000 0000 0000     ................
 8007af8:	0003 0000 0009 0000 0000 0000 0004 0000     ................
 8007b08:	000a 0000 0000 0000 0005 0000 0017 0000     ................
 8007b18:	0001 0000 0005 0000 0017 0000 0002 0000     ................
 8007b28:	0005 0000 0017 0000 0003 0000 0005 0000     ................
 8007b38:	0017 0000 0004 0000 0005 0000 0017 0000     ................
 8007b48:	0000 0000 0006 0000 0028 0000 0001 0000     ........(.......
 8007b58:	0006 0000 0028 0000 0002 0000 0006 0000     ....(...........
 8007b68:	0028 0000 0003 0000 0006 0000 0028 0000     (...........(...
 8007b78:	0004 0000 0006 0000 0028 0000 0005 0000     ........(.......
 8007b88:	0006 0000 0028 0000                         ....(...

08007b90 <PinMap_PWM>:
 8007b90:	0000 0000 0000 4000 1112 0000 0001 0000     .......@........
 8007ba0:	0000 4000 2112 0000 0005 0000 0000 4000     ...@.!.........@
 8007bb0:	1112 0000 0006 0000 0400 4000 1212 0000     ...........@....
 8007bc0:	0007 0000 0000 4001 1112 0002 0008 0000     .......@........
 8007bd0:	0000 4001 1112 0000 0009 0000 0000 4001     ...@...........@
 8007be0:	2112 0000 000a 0000 0000 4001 3112 0000     .!.........@.1..
 8007bf0:	000b 0000 0000 4001 4112 0000 000f 0000     .......@.A......
 8007c00:	0000 4000 1112 0000 0010 0000 0000 4001     ...@...........@
 8007c10:	2112 0002 0011 0000 0000 4001 3112 0002     .!.........@.1..
 8007c20:	0013 0000 0000 4000 2112 0000 0014 0000     .......@.!......
 8007c30:	0400 4000 1212 0000 0015 0000 0400 4000     ...@...........@
 8007c40:	2212 0000 0016 0000 0800 4000 1212 0000     .".........@....
 8007c50:	0017 0000 0800 4000 2212 0000 0018 0000     .......@."......
 8007c60:	0800 4000 3212 0000 0019 0000 0800 4000     ...@.2.........@
 8007c70:	4212 0000 001a 0000 0000 4000 3112 0000     .B.........@.1..
 8007c80:	001d 0000 0000 4001 1112 0002 001e 0000     .......@........
 8007c90:	0000 4001 2112 0002 001f 0000 0000 4001     ...@.!.........@
 8007ca0:	3112 0002 0026 0000 0400 4000 1212 0000     .1..&......@....
 8007cb0:	0027 0000 0400 4000 2212 0000 0028 0000     '......@."..(...
 8007cc0:	0400 4000 3212 0000 0029 0000 0400 4000     ...@.2..)......@
 8007cd0:	4212 0000 ffff 0000 ffff ffff 0000 0000     .B..............

08007ce0 <PinMap_UART_RX>:
 8007ce0:	0003 0000 4400 4000 0712 0000 000a 0000     .....D.@........
 8007cf0:	1000 4001 0712 0000 000c 0000 1400 4001     ...@...........@
 8007d00:	0812 0000 0013 0000 1000 4001 0712 0000     ...........@....
 8007d10:	0017 0000 1000 4001 0712 0000 0027 0000     .......@....'...
 8007d20:	1400 4001 0812 0000 ffff 0000 ffff ffff     ...@............
 8007d30:	0000 0000                                   ....

08007d34 <PinMap_UART_TX>:
 8007d34:	0002 0000 4400 4000 0712 0000 0009 0000     .....D.@........
 8007d44:	1000 4001 0712 0000 000b 0000 1400 4001     ...@...........@
 8007d54:	0812 0000 000f 0000 1000 4001 0712 0000     ...........@....
 8007d64:	0016 0000 1000 4001 0712 0000 0026 0000     .......@....&...
 8007d74:	1400 4001 0812 0000 ffff 0000 ffff ffff     ...@............
 8007d84:	0000 0000                                   ....

08007d88 <AHBPrescTable>:
	...
 8007d90:	0201 0403 0706 0908                         ........

08007d98 <APBAHBPrescTable>:
 8007d98:	0000 0000 0201 0403 0201 0403 0706 0908     ................

08007da8 <vtable for mbed::Ticker>:
	...
 8007db0:	0531 0800 0563 0800 54e1 0800               1...c....T..

08007dbc <vtable for mbed::RawSerial>:
	...
 8007dc4:	5607 0800 5607 0800 561d 0800 5631 0800     .V...V...V..1V..

08007dd4 <vtable for mbed::InterruptIn>:
	...
 8007ddc:	5655 0800 567d 0800                         UV..}V..

08007de4 <vtable for mbed::SerialBase>:
	...
 8007dec:	5801 0800 5803 0800 1c79 0800 1cb1 0800     .X...X..y.......

08007dfc <vtable for mbed::TimerEvent>:
	...
 8007e0c:	1b79 0800 704f 7265 7461 726f 6e20 7765     y...Operator new
 8007e1c:	5d5b 6f20 7475 6f20 2066 656d 6f6d 7972     [] out of memory
 8007e2c:	0a0d 0000                                   ....

08007e30 <__sf_fake_stderr>:
	...

08007e50 <__sf_fake_stdin>:
	...

08007e70 <__sf_fake_stdout>:
	...

08007e90 <_global_impure_ptr>:
 8007e90:	01c8 2000 3130 3332 3534 3736 3938 4241     ... 0123456789AB
 8007ea0:	4443 4645 3000 3231 3433 3635 3837 6139     CDEF.0123456789a
 8007eb0:	6362 6564 0066 2d23 2b30 0020 6c68 004c     bcdef.#-0+ .hlL.
 8007ec0:	6665 4567 4746 0000                         efgEFG..

08007ec8 <__EH_FRAME_BEGIN__>:
 8007ec8:	0000 0000                                   ....
